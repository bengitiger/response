!function(e,t,n,i){"use strict";var o=n("html"),a=n(e),r=n(t),s=n.fancybox=function(){s.open.apply(this,arguments)},l=navigator.userAgent.match(/msie/i),c=null,d=t.createTouch!==i,p=function(e){return e&&e.hasOwnProperty&&e instanceof n},h=function(e){return e&&"string"===n.type(e)},f=function(e){return h(e)&&e.indexOf("%")>0},u=function(e){return e&&!(e.style.overflow&&"hidden"===e.style.overflow)&&(e.clientWidth&&e.scrollWidth>e.clientWidth||e.clientHeight&&e.scrollHeight>e.clientHeight)},g=function(e,t){var n=parseInt(e,10)||0;return t&&f(e)&&(n=s.getViewport()[t]/100*n),Math.ceil(n)},m=function(e,t){return g(e,t)+"px"};n.extend(s,{version:"2.1.5",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!d,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+(l?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:n.noop,beforeLoad:n.noop,afterLoad:n.noop,beforeShow:n.noop,afterShow:n.noop,beforeChange:n.noop,beforeClose:n.noop,afterClose:n.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(e,t){return e&&(n.isPlainObject(t)||(t={}),!1!==s.close(!0))?(n.isArray(e)||(e=p(e)?n(e).get():[e]),n.each(e,function(o,a){var r,l,c,d,f,u,g,m={};"object"===n.type(a)&&(a.nodeType&&(a=n(a)),p(a)?(m={href:a.data("fancybox-href")||a.attr("href"),title:a.data("fancybox-title")||a.attr("title"),isDom:!0,element:a},n.metadata&&n.extend(!0,m,a.metadata())):m=a),r=t.href||m.href||(h(a)?a:null),l=t.title!==i?t.title:m.title||"",c=t.content||m.content,d=c?"html":t.type||m.type,!d&&m.isDom&&(d=a.data("fancybox-type"),d||(f=a.prop("class").match(/fancybox\.(\w+)/),d=f?f[1]:null)),h(r)&&(d||(s.isImage(r)?d="image":s.isSWF(r)?d="swf":"#"===r.charAt(0)?d="inline":h(a)&&(d="html",c=a)),"ajax"===d&&(u=r.split(/\s+/,2),r=u.shift(),g=u.shift())),c||("inline"===d?r?c=n(h(r)?r.replace(/.*(?=#[^\s]+$)/,""):r):m.isDom&&(c=a):"html"===d?c=r:d||r||!m.isDom||(d="inline",c=a)),n.extend(m,{href:r,type:d,content:c,title:l,selector:g}),e[o]=m}),s.opts=n.extend(!0,{},s.defaults,t),t.keys!==i&&(s.opts.keys=t.keys?n.extend({},s.defaults.keys,t.keys):!1),s.group=e,s._start(s.opts.index)):void 0},cancel:function(){var e=s.coming;e&&!1!==s.trigger("onCancel")&&(s.hideLoading(),s.ajaxLoad&&s.ajaxLoad.abort(),s.ajaxLoad=null,s.imgPreload&&(s.imgPreload.onload=s.imgPreload.onerror=null),e.wrap&&e.wrap.stop(!0,!0).trigger("onReset").remove(),s.coming=null,s.current||s._afterZoomOut(e))},close:function(e){s.cancel(),!1!==s.trigger("beforeClose")&&(s.unbindEvents(),s.isActive&&(s.isOpen&&e!==!0?(s.isOpen=s.isOpened=!1,s.isClosing=!0,n(".fancybox-item, .fancybox-nav").remove(),s.wrap.stop(!0,!0).removeClass("fancybox-opened"),s.transitions[s.current.closeMethod]()):(n(".fancybox-wrap").stop(!0).trigger("onReset").remove(),s._afterZoomOut())))},play:function(e){var t=function(){clearTimeout(s.player.timer)},n=function(){t(),s.current&&s.player.isActive&&(s.player.timer=setTimeout(s.next,s.current.playSpeed))},i=function(){t(),r.unbind(".player"),s.player.isActive=!1,s.trigger("onPlayEnd")},o=function(){s.current&&(s.current.loop||s.current.index<s.group.length-1)&&(s.player.isActive=!0,r.bind({"onCancel.player beforeClose.player":i,"onUpdate.player":n,"beforeLoad.player":t}),n(),s.trigger("onPlayStart"))};e===!0||!s.player.isActive&&e!==!1?o():i()},next:function(e){var t=s.current;t&&(h(e)||(e=t.direction.next),s.jumpto(t.index+1,e,"next"))},prev:function(e){var t=s.current;t&&(h(e)||(e=t.direction.prev),s.jumpto(t.index-1,e,"prev"))},jumpto:function(e,t,n){var o=s.current;o&&(e=g(e),s.direction=t||o.direction[e>=o.index?"next":"prev"],s.router=n||"jumpto",o.loop&&(0>e&&(e=o.group.length+e%o.group.length),e%=o.group.length),o.group[e]!==i&&(s.cancel(),s._start(e)))},reposition:function(e,t){var i,o=s.current,a=o?o.wrap:null;a&&(i=s._getPosition(t),e&&"scroll"===e.type?(delete i.position,a.stop(!0,!0).animate(i,200)):(a.css(i),o.pos=n.extend({},o.dim,i)))},update:function(e){var t=e&&e.type,n=!t||"orientationchange"===t;n&&(clearTimeout(c),c=null),s.isOpen&&!c&&(c=setTimeout(function(){var i=s.current;i&&!s.isClosing&&(s.wrap.removeClass("fancybox-tmp"),(n||"load"===t||"resize"===t&&i.autoResize)&&s._setDimension(),"scroll"===t&&i.canShrink||s.reposition(e),s.trigger("onUpdate"),c=null)},n&&!d?0:300))},toggle:function(e){s.isOpen&&(s.current.fitToView="boolean"===n.type(e)?e:!s.current.fitToView,d&&(s.wrap.removeAttr("style").addClass("fancybox-tmp"),s.trigger("onUpdate")),s.update())},hideLoading:function(){r.unbind(".loading"),n("#fancybox-loading").remove()},showLoading:function(){var e,t;s.hideLoading(),e=n('<div id="fancybox-loading"><div></div></div>').click(s.cancel).appendTo("body"),r.bind("keydown.loading",function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),s.cancel())}),s.defaults.fixed||(t=s.getViewport(),e.css({position:"absolute",top:.5*t.h+t.y,left:.5*t.w+t.x}))},getViewport:function(){var t=s.current&&s.current.locked||!1,n={x:a.scrollLeft(),y:a.scrollTop()};return t?(n.w=t[0].clientWidth,n.h=t[0].clientHeight):(n.w=d&&e.innerWidth?e.innerWidth:a.width(),n.h=d&&e.innerHeight?e.innerHeight:a.height()),n},unbindEvents:function(){s.wrap&&p(s.wrap)&&s.wrap.unbind(".fb"),r.unbind(".fb"),a.unbind(".fb")},bindEvents:function(){var e,t=s.current;t&&(a.bind("orientationchange.fb"+(d?"":" resize.fb")+(t.autoCenter&&!t.locked?" scroll.fb":""),s.update),e=t.keys,e&&r.bind("keydown.fb",function(o){var a=o.which||o.keyCode,r=o.target||o.srcElement;return 27===a&&s.coming?!1:void(o.ctrlKey||o.altKey||o.shiftKey||o.metaKey||r&&(r.type||n(r).is("[contenteditable]"))||n.each(e,function(e,r){return t.group.length>1&&r[a]!==i?(s[e](r[a]),o.preventDefault(),!1):n.inArray(a,r)>-1?(s[e](),o.preventDefault(),!1):void 0}))}),n.fn.mousewheel&&t.mouseWheel&&s.wrap.bind("mousewheel.fb",function(e,i,o,a){for(var r=e.target||null,l=n(r),c=!1;l.length&&!(c||l.is(".fancybox-skin")||l.is(".fancybox-wrap"));)c=u(l[0]),l=n(l).parent();0===i||c||s.group.length>1&&!t.canShrink&&(a>0||o>0?s.prev(a>0?"down":"left"):(0>a||0>o)&&s.next(0>a?"up":"right"),e.preventDefault())}))},trigger:function(e,t){var i,o=t||s.coming||s.current;if(o){if(n.isFunction(o[e])&&(i=o[e].apply(o,Array.prototype.slice.call(arguments,1))),i===!1)return!1;o.helpers&&n.each(o.helpers,function(t,i){i&&s.helpers[t]&&n.isFunction(s.helpers[t][e])&&s.helpers[t][e](n.extend(!0,{},s.helpers[t].defaults,i),o)}),r.trigger(e)}},isImage:function(e){return h(e)&&e.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(e){return h(e)&&e.match(/\.(swf)((\?|#).*)?$/i)},_start:function(e){var t,i,o,a,r,l={};if(e=g(e),t=s.group[e]||null,!t)return!1;if(l=n.extend(!0,{},s.opts,t),a=l.margin,r=l.padding,"number"===n.type(a)&&(l.margin=[a,a,a,a]),"number"===n.type(r)&&(l.padding=[r,r,r,r]),l.modal&&n.extend(!0,l,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),l.autoSize&&(l.autoWidth=l.autoHeight=!0),"auto"===l.width&&(l.autoWidth=!0),"auto"===l.height&&(l.autoHeight=!0),l.group=s.group,l.index=e,s.coming=l,!1===s.trigger("beforeLoad"))return void(s.coming=null);if(o=l.type,i=l.href,!o)return s.coming=null,s.current&&s.router&&"jumpto"!==s.router?(s.current.index=e,s[s.router](s.direction)):!1;if(s.isActive=!0,("image"===o||"swf"===o)&&(l.autoHeight=l.autoWidth=!1,l.scrolling="visible"),"image"===o&&(l.aspectRatio=!0),"iframe"===o&&d&&(l.scrolling="scroll"),l.wrap=n(l.tpl.wrap).addClass("fancybox-"+(d?"mobile":"desktop")+" fancybox-type-"+o+" fancybox-tmp "+l.wrapCSS).appendTo(l.parent||"body"),n.extend(l,{skin:n(".fancybox-skin",l.wrap),outer:n(".fancybox-outer",l.wrap),inner:n(".fancybox-inner",l.wrap)}),n.each(["Top","Right","Bottom","Left"],function(e,t){l.skin.css("padding"+t,m(l.padding[e]))}),s.trigger("onReady"),"inline"===o||"html"===o){if(!l.content||!l.content.length)return s._error("content")}else if(!i)return s._error("href");"image"===o?s._loadImage():"ajax"===o?s._loadAjax():"iframe"===o?s._loadIframe():s._afterLoad()},_error:function(e){n.extend(s.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:e,content:s.coming.tpl.error}),s._afterLoad()},_loadImage:function(){var e=s.imgPreload=new Image;e.onload=function(){this.onload=this.onerror=null,s.coming.width=this.width/s.opts.pixelRatio,s.coming.height=this.height/s.opts.pixelRatio,s._afterLoad()},e.onerror=function(){this.onload=this.onerror=null,s._error("image")},e.src=s.coming.href,e.complete!==!0&&s.showLoading()},_loadAjax:function(){var e=s.coming;s.showLoading(),s.ajaxLoad=n.ajax(n.extend({},e.ajax,{url:e.href,error:function(e,t){s.coming&&"abort"!==t?s._error("ajax",e):s.hideLoading()},success:function(t,n){"success"===n&&(e.content=t,s._afterLoad())}}))},_loadIframe:function(){var e=s.coming,t=n(e.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",d?"auto":e.iframe.scrolling).attr("src",e.href);n(e.wrap).bind("onReset",function(){try{n(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}}),e.iframe.preload&&(s.showLoading(),t.one("load",function(){n(this).data("ready",1),d||n(this).bind("load.fb",s.update),n(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),s._afterLoad()})),e.content=t.appendTo(e.inner),e.iframe.preload||s._afterLoad()},_preloadImages:function(){var e,t,n=s.group,i=s.current,o=n.length,a=i.preload?Math.min(i.preload,o-1):0;for(t=1;a>=t;t+=1)e=n[(i.index+t)%o],"image"===e.type&&e.href&&((new Image).src=e.href)},_afterLoad:function(){var e,t,i,o,a,r,l=s.coming,c=s.current,d="fancybox-placeholder";if(s.hideLoading(),l&&s.isActive!==!1){if(!1===s.trigger("afterLoad",l,c))return l.wrap.stop(!0).trigger("onReset").remove(),void(s.coming=null);switch(c&&(s.trigger("beforeChange",c),c.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()),s.unbindEvents(),e=l,t=l.content,i=l.type,o=l.scrolling,n.extend(s,{wrap:e.wrap,skin:e.skin,outer:e.outer,inner:e.inner,current:e,previous:c}),a=e.href,i){case"inline":case"ajax":case"html":e.selector?t=n("<div>").html(t).find(e.selector):p(t)&&(t.data(d)||t.data(d,n('<div class="'+d+'"></div>').insertAfter(t).hide()),t=t.show().detach(),e.wrap.bind("onReset",function(){n(this).find(t).length&&t.hide().replaceAll(t.data(d)).data(d,!1)}));break;case"image":t=e.tpl.image.replace("{href}",a);break;case"swf":t='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+a+'"></param>',r="",n.each(e.swf,function(e,n){t+='<param name="'+e+'" value="'+n+'"></param>',r+=" "+e+'="'+n+'"'}),t+='<embed src="'+a+'" type="application/x-shockwave-flash" width="100%" height="100%"'+r+"></embed></object>"}p(t)&&t.parent().is(e.inner)||e.inner.append(t),s.trigger("beforeShow"),e.inner.css("overflow","yes"===o?"scroll":"no"===o?"hidden":o),s._setDimension(),s.reposition(),s.isOpen=!1,s.coming=null,s.bindEvents(),s.isOpened?c.prevMethod&&s.transitions[c.prevMethod]():n(".fancybox-wrap").not(e.wrap).stop(!0).trigger("onReset").remove(),s.transitions[s.isOpened?e.nextMethod:e.openMethod](),s._preloadImages()}},_setDimension:function(){var e,t,i,o,a,r,l,c,d,p,h,u,y,x,v,w=s.getViewport(),b=0,k=!1,C=!1,O=s.wrap,W=s.skin,_=s.inner,S=s.current,T=S.width,L=S.height,E=S.minWidth,R=S.minHeight,j=S.maxWidth,P=S.maxHeight,H=S.scrolling,M=S.scrollOutside?S.scrollbarWidth:0,A=S.margin,I=g(A[1]+A[3]),D=g(A[0]+A[2]);if(O.add(W).add(_).width("auto").height("auto").removeClass("fancybox-tmp"),e=g(W.outerWidth(!0)-W.width()),t=g(W.outerHeight(!0)-W.height()),i=I+e,o=D+t,a=f(T)?(w.w-i)*g(T)/100:T,r=f(L)?(w.h-o)*g(L)/100:L,"iframe"===S.type){if(x=S.content,S.autoHeight&&1===x.data("ready"))try{x[0].contentWindow.document.location&&(_.width(a).height(9999),v=x.contents().find("body"),M&&v.css("overflow-x","hidden"),r=v.outerHeight(!0))}catch(z){}}else(S.autoWidth||S.autoHeight)&&(_.addClass("fancybox-tmp"),S.autoWidth||_.width(a),S.autoHeight||_.height(r),S.autoWidth&&(a=_.width()),S.autoHeight&&(r=_.height()),_.removeClass("fancybox-tmp"));if(T=g(a),L=g(r),d=a/r,E=g(f(E)?g(E,"w")-i:E),j=g(f(j)?g(j,"w")-i:j),R=g(f(R)?g(R,"h")-o:R),P=g(f(P)?g(P,"h")-o:P),l=j,c=P,S.fitToView&&(j=Math.min(w.w-i,j),P=Math.min(w.h-o,P)),u=w.w-I,y=w.h-D,S.aspectRatio?(T>j&&(T=j,L=g(T/d)),L>P&&(L=P,T=g(L*d)),E>T&&(T=E,L=g(T/d)),R>L&&(L=R,T=g(L*d))):(T=Math.max(E,Math.min(T,j)),S.autoHeight&&"iframe"!==S.type&&(_.width(T),L=_.height()),L=Math.max(R,Math.min(L,P))),S.fitToView)if(_.width(T).height(L),O.width(T+e),p=O.width(),h=O.height(),S.aspectRatio)for(;(p>u||h>y)&&T>E&&L>R&&!(b++>19);)L=Math.max(R,Math.min(P,L-10)),T=g(L*d),E>T&&(T=E,L=g(T/d)),T>j&&(T=j,L=g(T/d)),_.width(T).height(L),O.width(T+e),p=O.width(),h=O.height();else T=Math.max(E,Math.min(T,T-(p-u))),L=Math.max(R,Math.min(L,L-(h-y)));M&&"auto"===H&&r>L&&u>T+e+M&&(T+=M),_.width(T).height(L),O.width(T+e),p=O.width(),h=O.height(),k=(p>u||h>y)&&T>E&&L>R,C=S.aspectRatio?l>T&&c>L&&a>T&&r>L:(l>T||c>L)&&(a>T||r>L),n.extend(S,{dim:{width:m(p),height:m(h)},origWidth:a,origHeight:r,canShrink:k,canExpand:C,wPadding:e,hPadding:t,wrapSpace:h-W.outerHeight(!0),skinSpace:W.height()-L}),!x&&S.autoHeight&&L>R&&P>L&&!C&&_.height("auto")},_getPosition:function(e){var t=s.current,n=s.getViewport(),i=t.margin,o=s.wrap.width()+i[1]+i[3],a=s.wrap.height()+i[0]+i[2],r={position:"absolute",top:i[0],left:i[3]};return t.autoCenter&&t.fixed&&!e&&a<=n.h&&o<=n.w?r.position="fixed":t.locked||(r.top+=n.y,r.left+=n.x),r.top=m(Math.max(r.top,r.top+(n.h-a)*t.topRatio)),r.left=m(Math.max(r.left,r.left+(n.w-o)*t.leftRatio)),r},_afterZoomIn:function(){var e=s.current;e&&(s.isOpen=s.isOpened=!0,s.wrap.css("overflow","visible").addClass("fancybox-opened"),s.update(),(e.closeClick||e.nextClick&&s.group.length>1)&&s.inner.css("cursor","pointer").bind("click.fb",function(t){n(t.target).is("a")||n(t.target).parent().is("a")||(t.preventDefault(),s[e.closeClick?"close":"next"]())}),e.closeBtn&&n(e.tpl.closeBtn).appendTo(s.skin).bind("click.fb",function(e){e.preventDefault(),s.close()}),e.arrows&&s.group.length>1&&((e.loop||e.index>0)&&n(e.tpl.prev).appendTo(s.outer).bind("click.fb",s.prev),(e.loop||e.index<s.group.length-1)&&n(e.tpl.next).appendTo(s.outer).bind("click.fb",s.next)),s.trigger("afterShow"),e.loop||e.index!==e.group.length-1?s.opts.autoPlay&&!s.player.isActive&&(s.opts.autoPlay=!1,s.play()):s.play(!1))},_afterZoomOut:function(e){e=e||s.current,n(".fancybox-wrap").trigger("onReset").remove(),n.extend(s,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),s.trigger("afterClose",e)}}),s.transitions={getOrigPosition:function(){var e=s.current,t=e.element,n=e.orig,i={},o=50,a=50,r=e.hPadding,l=e.wPadding,c=s.getViewport();return!n&&e.isDom&&t.is(":visible")&&(n=t.find("img:first"),n.length||(n=t)),p(n)?(i=n.offset(),n.is("img")&&(o=n.outerWidth(),a=n.outerHeight())):(i.top=c.y+(c.h-a)*e.topRatio,i.left=c.x+(c.w-o)*e.leftRatio),("fixed"===s.wrap.css("position")||e.locked)&&(i.top-=c.y,i.left-=c.x),i={top:m(i.top-r*e.topRatio),left:m(i.left-l*e.leftRatio),width:m(o+l),height:m(a+r)}},step:function(e,t){var n,i,o,a=t.prop,r=s.current,l=r.wrapSpace,c=r.skinSpace;("width"===a||"height"===a)&&(n=t.end===t.start?1:(e-t.start)/(t.end-t.start),s.isClosing&&(n=1-n),i="width"===a?r.wPadding:r.hPadding,o=e-i,s.skin[a](g("width"===a?o:o-l*n)),s.inner[a](g("width"===a?o:o-l*n-c*n)))},zoomIn:function(){var e=s.current,t=e.pos,i=e.openEffect,o="elastic"===i,a=n.extend({opacity:1},t);delete a.position,o?(t=this.getOrigPosition(),e.openOpacity&&(t.opacity=.1)):"fade"===i&&(t.opacity=.1),s.wrap.css(t).animate(a,{duration:"none"===i?0:e.openSpeed,easing:e.openEasing,step:o?this.step:null,complete:s._afterZoomIn})},zoomOut:function(){var e=s.current,t=e.closeEffect,n="elastic"===t,i={opacity:.1};n&&(i=this.getOrigPosition(),e.closeOpacity&&(i.opacity=.1)),s.wrap.animate(i,{duration:"none"===t?0:e.closeSpeed,easing:e.closeEasing,step:n?this.step:null,complete:s._afterZoomOut})},changeIn:function(){var e,t=s.current,n=t.nextEffect,i=t.pos,o={opacity:1},a=s.direction,r=200;i.opacity=.1,"elastic"===n&&(e="down"===a||"up"===a?"top":"left","down"===a||"right"===a?(i[e]=m(g(i[e])-r),o[e]="+="+r+"px"):(i[e]=m(g(i[e])+r),o[e]="-="+r+"px")),"none"===n?s._afterZoomIn():s.wrap.css(i).animate(o,{duration:t.nextSpeed,easing:t.nextEasing,complete:s._afterZoomIn})},changeOut:function(){var e=s.previous,t=e.prevEffect,i={opacity:.1},o=s.direction,a=200;"elastic"===t&&(i["down"===o||"up"===o?"top":"left"]=("up"===o||"left"===o?"-":"+")+"="+a+"px"),e.wrap.animate(i,{duration:"none"===t?0:e.prevSpeed,easing:e.prevEasing,complete:function(){n(this).trigger("onReset").remove()}})}},s.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!d,fixed:!0},overlay:null,fixed:!1,el:n("html"),create:function(e){e=n.extend({},this.defaults,e),this.overlay&&this.close(),this.overlay=n('<div class="fancybox-overlay"></div>').appendTo(s.coming?s.coming.parent:e.parent),this.fixed=!1,e.fixed&&s.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(e){var t=this;e=n.extend({},this.defaults,e),this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(e),this.fixed||(a.bind("resize.overlay",n.proxy(this.update,this)),this.update()),e.closeClick&&this.overlay.bind("click.overlay",function(e){return n(e.target).hasClass("fancybox-overlay")?(s.isActive?s.close():t.close(),!1):void 0}),this.overlay.css(e.css).show()},close:function(){var e,t;a.unbind("resize.overlay"),this.el.hasClass("fancybox-lock")&&(n(".fancybox-margin").removeClass("fancybox-margin"),e=a.scrollTop(),t=a.scrollLeft(),this.el.removeClass("fancybox-lock"),a.scrollTop(e).scrollLeft(t)),n(".fancybox-overlay").remove().hide(),n.extend(this,{overlay:null,fixed:!1})},update:function(){var e,n="100%";this.overlay.width(n).height("100%"),l?(e=Math.max(t.documentElement.offsetWidth,t.body.offsetWidth),r.width()>e&&(n=r.width())):r.width()>a.width()&&(n=r.width()),this.overlay.width(n).height(r.height())},onReady:function(e,t){var i=this.overlay;n(".fancybox-overlay").stop(!0,!0),i||this.create(e),e.locked&&this.fixed&&t.fixed&&(i||(this.margin=r.height()>a.height()?n("html").css("margin-right").replace("px",""):!1),t.locked=this.overlay.append(t.wrap),t.fixed=!1),e.showEarly===!0&&this.beforeShow.apply(this,arguments)},beforeShow:function(e,t){var i,o;t.locked&&(this.margin!==!1&&(n("*").filter(function(){return"fixed"===n(this).css("position")&&!n(this).hasClass("fancybox-overlay")&&!n(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),i=a.scrollTop(),o=a.scrollLeft(),this.el.addClass("fancybox-lock"),a.scrollTop(i).scrollLeft(o)),this.open(e)},onUpdate:function(){this.fixed||this.update()},afterClose:function(e){this.overlay&&!s.coming&&this.overlay.fadeOut(e.speedOut,n.proxy(this.close,this))}},s.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(e){var t,i,o=s.current,a=o.title,r=e.type;if(n.isFunction(a)&&(a=a.call(o.element,o)),h(a)&&""!==n.trim(a)){switch(t=n('<div class="fancybox-title fancybox-title-'+r+'-wrap">'+a+"</div>"),r){case"inside":i=s.skin;break;case"outside":i=s.wrap;break;case"over":i=s.inner;break;default:i=s.skin,t.appendTo("body"),l&&t.width(t.width()),t.wrapInner('<span class="child"></span>'),s.current.margin[2]+=Math.abs(g(t.css("margin-bottom")))}t["top"===e.position?"prependTo":"appendTo"](i)}}},n.fn.fancybox=function(e){var t,i=n(this),o=this.selector||"",a=function(a){var r,l,c=n(this).blur(),d=t;a.ctrlKey||a.altKey||a.shiftKey||a.metaKey||c.is(".fancybox-wrap")||(r=e.groupAttr||"data-fancybox-group",l=c.attr(r),l||(r="rel",l=c.get(0)[r]),l&&""!==l&&"nofollow"!==l&&(c=o.length?n(o):i,c=c.filter("["+r+'="'+l+'"]'),d=c.index(this)),e.index=d,s.open(c,e)!==!1&&a.preventDefault())};return e=e||{},t=e.index||0,o&&e.live!==!1?r.undelegate(o,"click.fb-start").delegate(o+":not('.fancybox-item, .fancybox-nav')","click.fb-start",a):i.unbind("click.fb-start").bind("click.fb-start",a),this.filter("[data-fancybox-start=1]").trigger("click"),this},r.ready(function(){var t,a;n.scrollbarWidth===i&&(n.scrollbarWidth=function(){var e=n('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),t=e.children(),i=t.innerWidth()-t.height(99).innerWidth();return e.remove(),i}),n.support.fixedPosition===i&&(n.support.fixedPosition=function(){var e=n('<div style="position:fixed;top:20px;"></div>').appendTo("body"),t=20===e[0].offsetTop||15===e[0].offsetTop;return e.remove(),t}()),n.extend(s.defaults,{scrollbarWidth:n.scrollbarWidth(),fixed:n.support.fixedPosition,parent:n("body")}),t=n(e).width(),o.addClass("fancybox-lock-test"),a=n(e).width(),o.removeClass("fancybox-lock-test"),n("<style type='text/css'>.fancybox-margin{margin-right:"+(a-t)+"px;}</style>").appendTo("head")})}(window,document,jQuery);
!function(e,t,n,i){var o=n("html"),a=n(e),r=n(t),s=n.fancybox=function(){s.open.apply(this,arguments)},l=navigator.userAgent.match(/msie/i),c=null,d=t.createTouch!==i,p=function(e){return e&&e.hasOwnProperty&&e instanceof n},h=function(e){return e&&"string"===n.type(e)},f=function(e){return h(e)&&0<e.indexOf("%")},u=function(e,t){var n=parseInt(e,10)||0;return t&&f(e)&&(n*=s.getViewport()[t]/100),Math.ceil(n)},g=function(e,t){return u(e,t)+"px"};n.extend(s,{version:"2.1.5",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!d,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+(l?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:n.noop,beforeLoad:n.noop,afterLoad:n.noop,beforeShow:n.noop,afterShow:n.noop,beforeChange:n.noop,beforeClose:n.noop,afterClose:n.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(e,t){return e&&(n.isPlainObject(t)||(t={}),!1!==s.close(!0))?(n.isArray(e)||(e=p(e)?n(e).get():[e]),n.each(e,function(o,a){var r,l,c,d,f,u={};"object"===n.type(a)&&(a.nodeType&&(a=n(a)),p(a)?(u={href:a.data("fancybox-href")||a.attr("href"),title:a.data("fancybox-title")||a.attr("title"),isDom:!0,element:a},n.metadata&&n.extend(!0,u,a.metadata())):u=a),r=t.href||u.href||(h(a)?a:null),l=t.title!==i?t.title:u.title||"",d=(c=t.content||u.content)?"html":t.type||u.type,!d&&u.isDom&&(d=a.data("fancybox-type"),d||(d=(d=a.prop("class").match(/fancybox\.(\w+)/))?d[1]:null)),h(r)&&(d||(s.isImage(r)?d="image":s.isSWF(r)?d="swf":"#"===r.charAt(0)?d="inline":h(a)&&(d="html",c=a)),"ajax"===d&&(f=r.split(/\s+/,2),r=f.shift(),f=f.shift())),c||("inline"===d?r?c=n(h(r)?r.replace(/.*(?=#[^\s]+$)/,""):r):u.isDom&&(c=a):"html"===d?c=r:!d&&!r&&u.isDom&&(d="inline",c=a)),n.extend(u,{href:r,type:d,content:c,title:l,selector:f}),e[o]=u}),s.opts=n.extend(!0,{},s.defaults,t),t.keys!==i&&(s.opts.keys=t.keys?n.extend({},s.defaults.keys,t.keys):!1),s.group=e,s._start(s.opts.index)):void 0},cancel:function(){var e=s.coming;e&&!1!==s.trigger("onCancel")&&(s.hideLoading(),s.ajaxLoad&&s.ajaxLoad.abort(),s.ajaxLoad=null,s.imgPreload&&(s.imgPreload.onload=s.imgPreload.onerror=null),e.wrap&&e.wrap.stop(!0,!0).trigger("onReset").remove(),s.coming=null,s.current||s._afterZoomOut(e))},close:function(e){s.cancel(),!1!==s.trigger("beforeClose")&&(s.unbindEvents(),s.isActive&&(s.isOpen&&!0!==e?(s.isOpen=s.isOpened=!1,s.isClosing=!0,n(".fancybox-item, .fancybox-nav").remove(),s.wrap.stop(!0,!0).removeClass("fancybox-opened"),s.transitions[s.current.closeMethod]()):(n(".fancybox-wrap").stop(!0).trigger("onReset").remove(),s._afterZoomOut())))},play:function(e){var t=function(){clearTimeout(s.player.timer)},n=function(){t(),s.current&&s.player.isActive&&(s.player.timer=setTimeout(s.next,s.current.playSpeed))},i=function(){t(),r.unbind(".player"),s.player.isActive=!1,s.trigger("onPlayEnd")};!0===e||!s.player.isActive&&!1!==e?s.current&&(s.current.loop||s.current.index<s.group.length-1)&&(s.player.isActive=!0,r.bind({"onCancel.player beforeClose.player":i,"onUpdate.player":n,"beforeLoad.player":t}),n(),s.trigger("onPlayStart")):i()},next:function(e){var t=s.current;t&&(h(e)||(e=t.direction.next),s.jumpto(t.index+1,e,"next"))},prev:function(e){var t=s.current;t&&(h(e)||(e=t.direction.prev),s.jumpto(t.index-1,e,"prev"))},jumpto:function(e,t,n){var o=s.current;o&&(e=u(e),s.direction=t||o.direction[e>=o.index?"next":"prev"],s.router=n||"jumpto",o.loop&&(0>e&&(e=o.group.length+e%o.group.length),e%=o.group.length),o.group[e]!==i&&(s.cancel(),s._start(e)))},reposition:function(e,t){var i,o=s.current,a=o?o.wrap:null;a&&(i=s._getPosition(t),e&&"scroll"===e.type?(delete i.position,a.stop(!0,!0).animate(i,200)):(a.css(i),o.pos=n.extend({},o.dim,i)))},update:function(e){var t=e&&e.type,n=!t||"orientationchange"===t;n&&(clearTimeout(c),c=null),s.isOpen&&!c&&(c=setTimeout(function(){var i=s.current;i&&!s.isClosing&&(s.wrap.removeClass("fancybox-tmp"),(n||"load"===t||"resize"===t&&i.autoResize)&&s._setDimension(),"scroll"===t&&i.canShrink||s.reposition(e),s.trigger("onUpdate"),c=null)},n&&!d?0:300))},toggle:function(e){s.isOpen&&(s.current.fitToView="boolean"===n.type(e)?e:!s.current.fitToView,d&&(s.wrap.removeAttr("style").addClass("fancybox-tmp"),s.trigger("onUpdate")),s.update())},hideLoading:function(){r.unbind(".loading"),n("#fancybox-loading").remove()},showLoading:function(){var e,t;s.hideLoading(),e=n('<div id="fancybox-loading"><div></div></div>').click(s.cancel).appendTo("body"),r.bind("keydown.loading",function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),s.cancel())}),s.defaults.fixed||(t=s.getViewport(),e.css({position:"absolute",top:.5*t.h+t.y,left:.5*t.w+t.x}))},getViewport:function(){var t=s.current&&s.current.locked||!1,n={x:a.scrollLeft(),y:a.scrollTop()};return t?(n.w=t[0].clientWidth,n.h=t[0].clientHeight):(n.w=d&&e.innerWidth?e.innerWidth:a.width(),n.h=d&&e.innerHeight?e.innerHeight:a.height()),n},unbindEvents:function(){s.wrap&&p(s.wrap)&&s.wrap.unbind(".fb"),r.unbind(".fb"),a.unbind(".fb")},bindEvents:function(){var e,t=s.current;t&&(a.bind("orientationchange.fb"+(d?"":" resize.fb")+(t.autoCenter&&!t.locked?" scroll.fb":""),s.update),(e=t.keys)&&r.bind("keydown.fb",function(o){var a=o.which||o.keyCode,r=o.target||o.srcElement;return 27===a&&s.coming?!1:void(!o.ctrlKey&&!o.altKey&&!o.shiftKey&&!o.metaKey&&(!r||!r.type&&!n(r).is("[contenteditable]"))&&n.each(e,function(e,r){return 1<t.group.length&&r[a]!==i?(s[e](r[a]),o.preventDefault(),!1):-1<n.inArray(a,r)?(s[e](),o.preventDefault(),!1):void 0}))}),n.fn.mousewheel&&t.mouseWheel&&s.wrap.bind("mousewheel.fb",function(e,i,o,a){for(var r=n(e.target||null),l=!1;r.length&&!l&&!r.is(".fancybox-skin")&&!r.is(".fancybox-wrap");)l=r[0]&&!(r[0].style.overflow&&"hidden"===r[0].style.overflow)&&(r[0].clientWidth&&r[0].scrollWidth>r[0].clientWidth||r[0].clientHeight&&r[0].scrollHeight>r[0].clientHeight),r=n(r).parent();0!==i&&!l&&1<s.group.length&&!t.canShrink&&(a>0||o>0?s.prev(a>0?"down":"left"):(0>a||0>o)&&s.next(0>a?"up":"right"),e.preventDefault())}))},trigger:function(e,t){var i,o=t||s.coming||s.current;if(o){if(n.isFunction(o[e])&&(i=o[e].apply(o,Array.prototype.slice.call(arguments,1))),!1===i)return!1;o.helpers&&n.each(o.helpers,function(t,i){i&&s.helpers[t]&&n.isFunction(s.helpers[t][e])&&s.helpers[t][e](n.extend(!0,{},s.helpers[t].defaults,i),o)}),r.trigger(e)}},isImage:function(e){return h(e)&&e.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(e){return h(e)&&e.match(/\.(swf)((\?|#).*)?$/i)},_start:function(e){var t,i,o={};if(e=u(e),t=s.group[e]||null,!t)return!1;if(o=n.extend(!0,{},s.opts,t),t=o.margin,i=o.padding,"number"===n.type(t)&&(o.margin=[t,t,t,t]),"number"===n.type(i)&&(o.padding=[i,i,i,i]),o.modal&&n.extend(!0,o,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),o.autoSize&&(o.autoWidth=o.autoHeight=!0),"auto"===o.width&&(o.autoWidth=!0),"auto"===o.height&&(o.autoHeight=!0),o.group=s.group,o.index=e,s.coming=o,!1===s.trigger("beforeLoad"))s.coming=null;else{if(i=o.type,t=o.href,!i)return s.coming=null,s.current&&s.router&&"jumpto"!==s.router?(s.current.index=e,s[s.router](s.direction)):!1;if(s.isActive=!0,("image"===i||"swf"===i)&&(o.autoHeight=o.autoWidth=!1,o.scrolling="visible"),"image"===i&&(o.aspectRatio=!0),"iframe"===i&&d&&(o.scrolling="scroll"),o.wrap=n(o.tpl.wrap).addClass("fancybox-"+(d?"mobile":"desktop")+" fancybox-type-"+i+" fancybox-tmp "+o.wrapCSS).appendTo(o.parent||"body"),n.extend(o,{skin:n(".fancybox-skin",o.wrap),outer:n(".fancybox-outer",o.wrap),inner:n(".fancybox-inner",o.wrap)}),n.each(["Top","Right","Bottom","Left"],function(e,t){o.skin.css("padding"+t,g(o.padding[e]))}),s.trigger("onReady"),"inline"===i||"html"===i){if(!o.content||!o.content.length)return s._error("content")}else if(!t)return s._error("href");"image"===i?s._loadImage():"ajax"===i?s._loadAjax():"iframe"===i?s._loadIframe():s._afterLoad()}},_error:function(e){n.extend(s.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:e,content:s.coming.tpl.error}),s._afterLoad()},_loadImage:function(){var e=s.imgPreload=new Image;e.onload=function(){this.onload=this.onerror=null,s.coming.width=this.width/s.opts.pixelRatio,s.coming.height=this.height/s.opts.pixelRatio,s._afterLoad()},e.onerror=function(){this.onload=this.onerror=null,s._error("image")},e.src=s.coming.href,!0!==e.complete&&s.showLoading()},_loadAjax:function(){var e=s.coming;s.showLoading(),s.ajaxLoad=n.ajax(n.extend({},e.ajax,{url:e.href,error:function(e,t){s.coming&&"abort"!==t?s._error("ajax",e):s.hideLoading()},success:function(t,n){"success"===n&&(e.content=t,s._afterLoad())}}))},_loadIframe:function(){var e=s.coming,t=n(e.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",d?"auto":e.iframe.scrolling).attr("src",e.href);n(e.wrap).bind("onReset",function(){try{n(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}}),e.iframe.preload&&(s.showLoading(),t.one("load",function(){n(this).data("ready",1),d||n(this).bind("load.fb",s.update),n(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),s._afterLoad()})),e.content=t.appendTo(e.inner),e.iframe.preload||s._afterLoad()},_preloadImages:function(){var e,t,n=s.group,i=s.current,o=n.length,a=i.preload?Math.min(i.preload,o-1):0;for(t=1;a>=t;t+=1)e=n[(i.index+t)%o],"image"===e.type&&e.href&&((new Image).src=e.href)},_afterLoad:function(){var e,t,i,o,a,r=s.coming,l=s.current;if(s.hideLoading(),r&&!1!==s.isActive)if(!1===s.trigger("afterLoad",r,l))r.wrap.stop(!0).trigger("onReset").remove(),s.coming=null;else{switch(l&&(s.trigger("beforeChange",l),l.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()),s.unbindEvents(),e=r.content,t=r.type,i=r.scrolling,n.extend(s,{wrap:r.wrap,skin:r.skin,outer:r.outer,inner:r.inner,current:r,previous:l}),o=r.href,t){case"inline":case"ajax":case"html":r.selector?e=n("<div>").html(e).find(r.selector):p(e)&&(e.data("fancybox-placeholder")||e.data("fancybox-placeholder",n('<div class="fancybox-placeholder"></div>').insertAfter(e).hide()),e=e.show().detach(),r.wrap.bind("onReset",function(){n(this).find(e).length&&e.hide().replaceAll(e.data("fancybox-placeholder")).data("fancybox-placeholder",!1)}));break;case"image":e=r.tpl.image.replace("{href}",o);break;case"swf":e='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+o+'"></param>',a="",n.each(r.swf,function(t,n){e+='<param name="'+t+'" value="'+n+'"></param>',a+=" "+t+'="'+n+'"'}),e+='<embed src="'+o+'" type="application/x-shockwave-flash" width="100%" height="100%"'+a+"></embed></object>"}(!p(e)||!e.parent().is(r.inner))&&r.inner.append(e),s.trigger("beforeShow"),r.inner.css("overflow","yes"===i?"scroll":"no"===i?"hidden":i),s._setDimension(),s.reposition(),s.isOpen=!1,s.coming=null,s.bindEvents(),s.isOpened?l.prevMethod&&s.transitions[l.prevMethod]():n(".fancybox-wrap").not(r.wrap).stop(!0).trigger("onReset").remove(),s.transitions[s.isOpened?r.nextMethod:r.openMethod](),s._preloadImages()}},_setDimension:function(){var e,t,i,o,a,r,l,c,d,p=s.getViewport(),h=0,m=!1,y=!1,m=s.wrap,x=s.skin,v=s.inner,w=s.current,y=w.width,b=w.height,k=w.minWidth,C=w.minHeight,O=w.maxWidth,W=w.maxHeight,_=w.scrolling,S=w.scrollOutside?w.scrollbarWidth:0,T=w.margin,L=u(T[1]+T[3]),E=u(T[0]+T[2]);if(m.add(x).add(v).width("auto").height("auto").removeClass("fancybox-tmp"),T=u(x.outerWidth(!0)-x.width()),e=u(x.outerHeight(!0)-x.height()),t=L+T,i=E+e,o=f(y)?(p.w-t)*u(y)/100:y,a=f(b)?(p.h-i)*u(b)/100:b,"iframe"===w.type){if(d=w.content,w.autoHeight&&1===d.data("ready"))try{d[0].contentWindow.document.location&&(v.width(o).height(9999),r=d.contents().find("body"),S&&r.css("overflow-x","hidden"),a=r.outerHeight(!0))}catch(R){}}else(w.autoWidth||w.autoHeight)&&(v.addClass("fancybox-tmp"),w.autoWidth||v.width(o),w.autoHeight||v.height(a),w.autoWidth&&(o=v.width()),w.autoHeight&&(a=v.height()),v.removeClass("fancybox-tmp"));if(y=u(o),b=u(a),c=o/a,k=u(f(k)?u(k,"w")-t:k),O=u(f(O)?u(O,"w")-t:O),C=u(f(C)?u(C,"h")-i:C),W=u(f(W)?u(W,"h")-i:W),r=O,l=W,w.fitToView&&(O=Math.min(p.w-t,O),W=Math.min(p.h-i,W)),t=p.w-L,E=p.h-E,w.aspectRatio?(y>O&&(y=O,b=u(y/c)),b>W&&(b=W,y=u(b*c)),k>y&&(y=k,b=u(y/c)),C>b&&(b=C,y=u(b*c))):(y=Math.max(k,Math.min(y,O)),w.autoHeight&&"iframe"!==w.type&&(v.width(y),b=v.height()),b=Math.max(C,Math.min(b,W))),w.fitToView)if(v.width(y).height(b),m.width(y+T),p=m.width(),L=m.height(),w.aspectRatio)for(;(p>t||L>E)&&y>k&&b>C&&!(19<h++);)b=Math.max(C,Math.min(W,b-10)),y=u(b*c),k>y&&(y=k,b=u(y/c)),y>O&&(y=O,b=u(y/c)),v.width(y).height(b),m.width(y+T),p=m.width(),L=m.height();else y=Math.max(k,Math.min(y,y-(p-t))),b=Math.max(C,Math.min(b,b-(L-E)));S&&"auto"===_&&a>b&&t>y+T+S&&(y+=S),v.width(y).height(b),m.width(y+T),p=m.width(),L=m.height(),m=(p>t||L>E)&&y>k&&b>C,y=w.aspectRatio?r>y&&l>b&&o>y&&a>b:(r>y||l>b)&&(o>y||a>b),n.extend(w,{dim:{width:g(p),height:g(L)},origWidth:o,origHeight:a,canShrink:m,canExpand:y,wPadding:T,hPadding:e,wrapSpace:L-x.outerHeight(!0),skinSpace:x.height()-b}),!d&&w.autoHeight&&b>C&&W>b&&!y&&v.height("auto")},_getPosition:function(e){var t=s.current,n=s.getViewport(),i=t.margin,o=s.wrap.width()+i[1]+i[3],a=s.wrap.height()+i[0]+i[2],i={position:"absolute",top:i[0],left:i[3]};return t.autoCenter&&t.fixed&&!e&&a<=n.h&&o<=n.w?i.position="fixed":t.locked||(i.top+=n.y,i.left+=n.x),i.top=g(Math.max(i.top,i.top+(n.h-a)*t.topRatio)),i.left=g(Math.max(i.left,i.left+(n.w-o)*t.leftRatio)),i},_afterZoomIn:function(){var e=s.current;e&&(s.isOpen=s.isOpened=!0,s.wrap.css("overflow","visible").addClass("fancybox-opened"),s.update(),(e.closeClick||e.nextClick&&1<s.group.length)&&s.inner.css("cursor","pointer").bind("click.fb",function(t){!n(t.target).is("a")&&!n(t.target).parent().is("a")&&(t.preventDefault(),s[e.closeClick?"close":"next"]())}),e.closeBtn&&n(e.tpl.closeBtn).appendTo(s.skin).bind("click.fb",function(e){e.preventDefault(),s.close()}),e.arrows&&1<s.group.length&&((e.loop||0<e.index)&&n(e.tpl.prev).appendTo(s.outer).bind("click.fb",s.prev),(e.loop||e.index<s.group.length-1)&&n(e.tpl.next).appendTo(s.outer).bind("click.fb",s.next)),s.trigger("afterShow"),e.loop||e.index!==e.group.length-1?s.opts.autoPlay&&!s.player.isActive&&(s.opts.autoPlay=!1,s.play()):s.play(!1))},_afterZoomOut:function(e){e=e||s.current,n(".fancybox-wrap").trigger("onReset").remove(),n.extend(s,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),s.trigger("afterClose",e)}}),s.transitions={getOrigPosition:function(){var e=s.current,t=e.element,n=e.orig,i={},o=50,a=50,r=e.hPadding,l=e.wPadding,c=s.getViewport();return!n&&e.isDom&&t.is(":visible")&&(n=t.find("img:first"),n.length||(n=t)),p(n)?(i=n.offset(),n.is("img")&&(o=n.outerWidth(),a=n.outerHeight())):(i.top=c.y+(c.h-a)*e.topRatio,i.left=c.x+(c.w-o)*e.leftRatio),("fixed"===s.wrap.css("position")||e.locked)&&(i.top-=c.y,i.left-=c.x),i={top:g(i.top-r*e.topRatio),left:g(i.left-l*e.leftRatio),width:g(o+l),height:g(a+r)}},step:function(e,t){var n,i,o=t.prop;i=s.current;var a=i.wrapSpace,r=i.skinSpace;("width"===o||"height"===o)&&(n=t.end===t.start?1:(e-t.start)/(t.end-t.start),s.isClosing&&(n=1-n),i="width"===o?i.wPadding:i.hPadding,i=e-i,s.skin[o](u("width"===o?i:i-a*n)),s.inner[o](u("width"===o?i:i-a*n-r*n)))},zoomIn:function(){var e=s.current,t=e.pos,i=e.openEffect,o="elastic"===i,a=n.extend({opacity:1},t);delete a.position,o?(t=this.getOrigPosition(),e.openOpacity&&(t.opacity=.1)):"fade"===i&&(t.opacity=.1),s.wrap.css(t).animate(a,{duration:"none"===i?0:e.openSpeed,easing:e.openEasing,step:o?this.step:null,complete:s._afterZoomIn})},zoomOut:function(){var e=s.current,t=e.closeEffect,n="elastic"===t,i={opacity:.1};n&&(i=this.getOrigPosition(),e.closeOpacity&&(i.opacity=.1)),s.wrap.animate(i,{duration:"none"===t?0:e.closeSpeed,easing:e.closeEasing,step:n?this.step:null,complete:s._afterZoomOut})},changeIn:function(){var e,t=s.current,n=t.nextEffect,i=t.pos,o={opacity:1},a=s.direction;i.opacity=.1,"elastic"===n&&(e="down"===a||"up"===a?"top":"left","down"===a||"right"===a?(i[e]=g(u(i[e])-200),o[e]="+=200px"):(i[e]=g(u(i[e])+200),o[e]="-=200px")),"none"===n?s._afterZoomIn():s.wrap.css(i).animate(o,{duration:t.nextSpeed,easing:t.nextEasing,complete:s._afterZoomIn})},changeOut:function(){var e=s.previous,t=e.prevEffect,i={opacity:.1},o=s.direction;"elastic"===t&&(i["down"===o||"up"===o?"top":"left"]=("up"===o||"left"===o?"-":"+")+"=200px"),e.wrap.animate(i,{duration:"none"===t?0:e.prevSpeed,easing:e.prevEasing,complete:function(){n(this).trigger("onReset").remove()}})}},s.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!d,fixed:!0},overlay:null,fixed:!1,el:n("html"),create:function(e){e=n.extend({},this.defaults,e),this.overlay&&this.close(),this.overlay=n('<div class="fancybox-overlay"></div>').appendTo(s.coming?s.coming.parent:e.parent),this.fixed=!1,e.fixed&&s.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(e){var t=this;e=n.extend({},this.defaults,e),this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(e),this.fixed||(a.bind("resize.overlay",n.proxy(this.update,this)),this.update()),e.closeClick&&this.overlay.bind("click.overlay",function(e){return n(e.target).hasClass("fancybox-overlay")?(s.isActive?s.close():t.close(),!1):void 0}),this.overlay.css(e.css).show()},close:function(){var e,t;a.unbind("resize.overlay"),this.el.hasClass("fancybox-lock")&&(n(".fancybox-margin").removeClass("fancybox-margin"),e=a.scrollTop(),t=a.scrollLeft(),this.el.removeClass("fancybox-lock"),a.scrollTop(e).scrollLeft(t)),n(".fancybox-overlay").remove().hide(),n.extend(this,{overlay:null,fixed:!1})},update:function(){var e,n="100%";this.overlay.width(n).height("100%"),l?(e=Math.max(t.documentElement.offsetWidth,t.body.offsetWidth),r.width()>e&&(n=r.width())):r.width()>a.width()&&(n=r.width()),this.overlay.width(n).height(r.height())},onReady:function(e,t){var i=this.overlay;n(".fancybox-overlay").stop(!0,!0),i||this.create(e),e.locked&&this.fixed&&t.fixed&&(i||(this.margin=r.height()>a.height()?n("html").css("margin-right").replace("px",""):!1),t.locked=this.overlay.append(t.wrap),t.fixed=!1),!0===e.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(e,t){var i,o;t.locked&&(!1!==this.margin&&(n("*").filter(function(){return"fixed"===n(this).css("position")&&!n(this).hasClass("fancybox-overlay")&&!n(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),i=a.scrollTop(),o=a.scrollLeft(),this.el.addClass("fancybox-lock"),a.scrollTop(i).scrollLeft(o)),this.open(e)},onUpdate:function(){this.fixed||this.update()},afterClose:function(e){this.overlay&&!s.coming&&this.overlay.fadeOut(e.speedOut,n.proxy(this.close,this))}},s.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(e){var t=s.current,i=t.title,o=e.type;if(n.isFunction(i)&&(i=i.call(t.element,t)),h(i)&&""!==n.trim(i)){switch(t=n('<div class="fancybox-title fancybox-title-'+o+'-wrap">'+i+"</div>"),o){case"inside":o=s.skin;break;case"outside":o=s.wrap;break;case"over":o=s.inner;break;default:o=s.skin,t.appendTo("body"),l&&t.width(t.width()),t.wrapInner('<span class="child"></span>'),s.current.margin[2]+=Math.abs(u(t.css("margin-bottom")))}t["top"===e.position?"prependTo":"appendTo"](o)}}},n.fn.fancybox=function(e){var t,i=n(this),o=this.selector||"",a=function(a){var r,l,c=n(this).blur(),d=t;!a.ctrlKey&&!a.altKey&&!a.shiftKey&&!a.metaKey&&!c.is(".fancybox-wrap")&&(r=e.groupAttr||"data-fancybox-group",l=c.attr(r),l||(r="rel",l=c.get(0)[r]),l&&""!==l&&"nofollow"!==l&&(c=o.length?n(o):i,c=c.filter("["+r+'="'+l+'"]'),d=c.index(this)),e.index=d,!1!==s.open(c,e)&&a.preventDefault())};return e=e||{},t=e.index||0,o&&!1!==e.live?r.undelegate(o,"click.fb-start").delegate(o+":not('.fancybox-item, .fancybox-nav')","click.fb-start",a):i.unbind("click.fb-start").bind("click.fb-start",a),this.filter("[data-fancybox-start=1]").trigger("click"),this},r.ready(function(){var t,a;if(n.scrollbarWidth===i&&(n.scrollbarWidth=function(){var e=n('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),t=e.children(),t=t.innerWidth()-t.height(99).innerWidth();return e.remove(),t}),n.support.fixedPosition===i){t=n.support,a=n('<div style="position:fixed;top:20px;"></div>').appendTo("body");var r=20===a[0].offsetTop||15===a[0].offsetTop;a.remove(),t.fixedPosition=r}n.extend(s.defaults,{scrollbarWidth:n.scrollbarWidth(),fixed:n.support.fixedPosition,parent:n("body")}),t=n(e).width(),o.addClass("fancybox-lock-test"),a=n(e).width(),o.removeClass("fancybox-lock-test"),n("<style type='text/css'>.fancybox-margin{margin-right:"+(a-t)+"px;}</style>").appendTo("head")})}(window,document,jQuery);
!function(t){var s=t.fancybox;s.helpers.buttons={defaults:{skipSingle:!1,position:"top",tpl:'<div id="fancybox-buttons"><ul><li><a class="btnPrev" title="Previous" href="javascript:;"></a></li><li><a class="btnPlay" title="Start slideshow" href="javascript:;"></a></li><li><a class="btnNext" title="Next" href="javascript:;"></a></li><li><a class="btnToggle" title="Toggle size" href="javascript:;"></a></li><li><a class="btnClose" title="Close" href="javascript:;"></a></li></ul></div>'},list:null,buttons:null,beforeLoad:function(t,s){return t.skipSingle&&s.group.length<2?(s.helpers.buttons=!1,void(s.closeBtn=!0)):void(s.margin["bottom"===t.position?2:0]+=30)},onPlayStart:function(){this.buttons&&this.buttons.play.attr("title","Pause slideshow").addClass("btnPlayOn")},onPlayEnd:function(){this.buttons&&this.buttons.play.attr("title","Start slideshow").removeClass("btnPlayOn")},afterShow:function(l,i){var n=this.buttons;n||(this.list=t(l.tpl).addClass(l.position).appendTo("body"),n={prev:this.list.find(".btnPrev").click(s.prev),next:this.list.find(".btnNext").click(s.next),play:this.list.find(".btnPlay").click(s.play),toggle:this.list.find(".btnToggle").click(s.toggle),close:this.list.find(".btnClose").click(s.close)}),i.index>0||i.loop?n.prev.removeClass("btnDisabled"):n.prev.addClass("btnDisabled"),i.loop||i.index<i.group.length-1?(n.next.removeClass("btnDisabled"),n.play.removeClass("btnDisabled")):(n.next.addClass("btnDisabled"),n.play.addClass("btnDisabled")),this.buttons=n,this.onUpdate(l,i)},onUpdate:function(t,s){var l;this.buttons&&(l=this.buttons.toggle.removeClass("btnDisabled btnToggleOn"),s.canShrink?l.addClass("btnToggleOn"):s.canExpand||l.addClass("btnDisabled"))},beforeClose:function(){this.list&&this.list.remove(),this.list=null,this.buttons=null}}}(jQuery);
!function(e){"use strict";var a=e.fancybox,t=function(a,t,o){return o=o||"","object"===e.type(o)&&(o=e.param(o,!0)),e.each(t,function(e,t){a=a.replace("$"+e,t||"")}),o.length&&(a+=(a.indexOf("?")>0?"&":"?")+o),a};a.helpers.media={defaults:{youtube:{matcher:/(youtube\.com|youtu\.be|youtube-nocookie\.com)\/(watch\?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*)).*/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"opaque",enablejsapi:1},type:"iframe",url:"//www.youtube.com/embed/$3"},vimeo:{matcher:/(?:vimeo(?:pro)?.com)\/(?:[^\d]+)?(\d+)(?:.*)/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},type:"iframe",url:"//player.vimeo.com/video/$1"},metacafe:{matcher:/metacafe.com\/(?:watch|fplayer)\/([\w\-]{1,10})/,params:{autoPlay:"yes"},type:"swf",url:function(a,t,o){return o.swf.flashVars="playerVars="+e.param(t,!0),"//www.metacafe.com/fplayer/"+a[1]+"/.swf"}},dailymotion:{matcher:/dailymotion.com\/video\/(.*)\/?(.*)/,params:{additionalInfos:0,autoStart:1},type:"swf",url:"//www.dailymotion.com/swf/video/$1"},twitvid:{matcher:/twitvid\.com\/([a-zA-Z0-9_\-\?\=]+)/i,params:{autoplay:0},type:"iframe",url:"//www.twitvid.com/embed.php?guid=$1"},twitpic:{matcher:/twitpic\.com\/(?!(?:place|photos|events)\/)([a-zA-Z0-9\?\=\-]+)/i,type:"image",url:"//twitpic.com/show/full/$1/"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},google_maps:{matcher:/maps\.google\.([a-z]{2,3}(\.[a-z]{2})?)\/(\?ll=|maps\?)(.*)/i,type:"iframe",url:function(e){return"//maps.google."+e[1]+"/"+e[3]+e[4]+"&output="+(e[4].indexOf("layer=c")>0?"svembed":"embed")}}},beforeLoad:function(a,o){var i,r,m,l,c=o.href||"",p=!1;for(i in a)if(a.hasOwnProperty(i)&&(r=a[i],m=c.match(r.matcher))){p=r.type,l=e.extend(!0,{},r.params,o[i]||(e.isPlainObject(a[i])?a[i].params:null)),c="function"===e.type(r.url)?r.url.call(this,m,l,o):t(r.url,m,l);break}p&&(o.href=c,o.type=p,o.autoHeight=!1)}}}(jQuery);
!function(t){var i=t.fancybox;i.helpers.thumbs={defaults:{width:50,height:50,position:"bottom",source:function(i){var h;return i.element&&(h=t(i.element).find("img").attr("src")),!h&&"image"===i.type&&i.href&&(h=i.href),h}},wrap:null,list:null,width:0,init:function(i,h){var e,s=this,o=i.width,n=i.height,r=i.source;e="";for(var a=0;a<h.group.length;a++)e+='<li><a style="width:'+o+"px;height:"+n+'px;" href="javascript:jQuery.fancybox.jumpto('+a+');"></a></li>';this.wrap=t('<div id="fancybox-thumbs"></div>').addClass(i.position).appendTo("body"),this.list=t("<ul>"+e+"</ul>").appendTo(this.wrap),t.each(h.group,function(i){var e=r(h.group[i]);e&&t("<img />").load(function(){var h,e,r,a=this.width,l=this.height;s.list&&a&&l&&(h=a/o,e=l/n,r=s.list.children().eq(i).find("a"),h>=1&&e>=1&&(h>e?(a=Math.floor(a/e),l=n):(a=o,l=Math.floor(l/h))),t(this).css({width:a,height:l,top:Math.floor(n/2-l/2),left:Math.floor(o/2-a/2)}),r.width(o).height(n),t(this).hide().appendTo(r).fadeIn(300))}).attr("src",e)}),this.width=this.list.children().eq(0).outerWidth(!0),this.list.width(this.width*(h.group.length+1)).css("left",Math.floor(.5*t(window).width()-(h.index*this.width+.5*this.width)))},beforeLoad:function(t,i){return i.group.length<2?void(i.helpers.thumbs=!1):void(i.margin["top"===t.position?0:2]+=t.height+15)},afterShow:function(t,i){this.list?this.onUpdate(t,i):this.init(t,i),this.list.children().removeClass("active").eq(i.index).addClass("active")},onUpdate:function(i,h){this.list&&this.list.stop(!0).animate({left:Math.floor(.5*t(window).width()-(h.index*this.width+.5*this.width))},150)},beforeClose:function(){this.wrap&&this.wrap.remove(),this.wrap=null,this.list=null,this.width=0}}}(jQuery);
!function(e){function t(t){var n=t||window.event,i=[].slice.call(arguments,1),l=0,s=0,o=0,t=e.event.fix(n);return t.type="mousewheel",n.wheelDelta&&(l=n.wheelDelta/120),n.detail&&(l=-n.detail/3),o=l,void 0!==n.axis&&n.axis===n.HORIZONTAL_AXIS&&(o=0,s=-1*l),void 0!==n.wheelDeltaY&&(o=n.wheelDeltaY/120),void 0!==n.wheelDeltaX&&(s=-1*n.wheelDeltaX/120),i.unshift(t,l,s,o),(e.event.dispatch||e.event.handle).apply(this,i)}var n=["DOMMouseScroll","mousewheel"];if(e.event.fixHooks)for(var i=n.length;i;)e.event.fixHooks[n[--i]]=e.event.mouseHooks;e.event.special.mousewheel={setup:function(){if(this.addEventListener)for(var e=n.length;e;)this.addEventListener(n[--e],t,!1);else this.onmousewheel=t},teardown:function(){if(this.removeEventListener)for(var e=n.length;e;)this.removeEventListener(n[--e],t,!1);else this.onmousewheel=null}},e.fn.extend({mousewheel:function(e){return e?this.bind("mousewheel",e):this.trigger("mousewheel")},unmousewheel:function(e){return this.unbind("mousewheel",e)}})}(jQuery);
!function(n){n.fn.scrollPagination=function(t){var a=n.extend(n.fn.scrollPagination.defaults,t),l=a.scrollTarget;return null==l&&(l=obj),a.scrollTarget=l,this.each(function(){n.fn.scrollPagination.init(n(this),a)})},n.fn.stopScrollPagination=function(){return this.each(function(){n(this).attr("scrollPagination","disabled")})},n.fn.scrollPagination.loadContent=function(t,a){var l=a.scrollTarget,o=n(l).scrollTop()+a.heightOffset>=n(document).height()-n(l).height();o&&(null!=a.beforeLoad&&a.beforeLoad(),n(t).children().attr("rel","loaded"),n.ajax({type:"POST",url:a.contentPage,data:a.contentData,success:function(l){n(t).append(l);var o=n(t).children("[rel!=loaded]");null!=a.afterLoad&&a.afterLoad(o)},dataType:"html"}))},n.fn.scrollPagination.init=function(t,a){var l=a.scrollTarget;n(t).attr("scrollPagination","enabled"),n(l).scroll(function(l){"enabled"==n(t).attr("scrollPagination")?n.fn.scrollPagination.loadContent(t,a):l.stopPropagation()}),n.fn.scrollPagination.loadContent(t,a)},n.fn.scrollPagination.defaults={contentPage:null,contentData:{},beforeLoad:null,afterLoad:null,scrollTarget:null,heightOffset:0}}(jQuery);
jQuery.easing.jswing=jQuery.easing.swing,jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(n,e,t,u,a){return jQuery.easing[jQuery.easing.def](n,e,t,u,a)},easeInQuad:function(n,e,t,u,a){return u*(e/=a)*e+t},easeOutQuad:function(n,e,t,u,a){return-u*(e/=a)*(e-2)+t},easeInOutQuad:function(n,e,t,u,a){return(e/=a/2)<1?u/2*e*e+t:-u/2*(--e*(e-2)-1)+t},easeInCubic:function(n,e,t,u,a){return u*(e/=a)*e*e+t},easeOutCubic:function(n,e,t,u,a){return u*((e=e/a-1)*e*e+1)+t},easeInOutCubic:function(n,e,t,u,a){return(e/=a/2)<1?u/2*e*e*e+t:u/2*((e-=2)*e*e+2)+t},easeInQuart:function(n,e,t,u,a){return u*(e/=a)*e*e*e+t},easeOutQuart:function(n,e,t,u,a){return-u*((e=e/a-1)*e*e*e-1)+t},easeInOutQuart:function(n,e,t,u,a){return(e/=a/2)<1?u/2*e*e*e*e+t:-u/2*((e-=2)*e*e*e-2)+t},easeInQuint:function(n,e,t,u,a){return u*(e/=a)*e*e*e*e+t},easeOutQuint:function(n,e,t,u,a){return u*((e=e/a-1)*e*e*e*e+1)+t},easeInOutQuint:function(n,e,t,u,a){return(e/=a/2)<1?u/2*e*e*e*e*e+t:u/2*((e-=2)*e*e*e*e+2)+t},easeInSine:function(n,e,t,u,a){return-u*Math.cos(e/a*(Math.PI/2))+u+t},easeOutSine:function(n,e,t,u,a){return u*Math.sin(e/a*(Math.PI/2))+t},easeInOutSine:function(n,e,t,u,a){return-u/2*(Math.cos(Math.PI*e/a)-1)+t},easeInExpo:function(n,e,t,u,a){return 0==e?t:u*Math.pow(2,10*(e/a-1))+t},easeOutExpo:function(n,e,t,u,a){return e==a?t+u:u*(-Math.pow(2,-10*e/a)+1)+t},easeInOutExpo:function(n,e,t,u,a){return 0==e?t:e==a?t+u:(e/=a/2)<1?u/2*Math.pow(2,10*(e-1))+t:u/2*(-Math.pow(2,-10*--e)+2)+t},easeInCirc:function(n,e,t,u,a){return-u*(Math.sqrt(1-(e/=a)*e)-1)+t},easeOutCirc:function(n,e,t,u,a){return u*Math.sqrt(1-(e=e/a-1)*e)+t},easeInOutCirc:function(n,e,t,u,a){return(e/=a/2)<1?-u/2*(Math.sqrt(1-e*e)-1)+t:u/2*(Math.sqrt(1-(e-=2)*e)+1)+t},easeInElastic:function(n,e,t,u,a){var r=1.70158,i=0,s=u;if(0==e)return t;if(1==(e/=a))return t+u;if(i||(i=.3*a),s<Math.abs(u)){s=u;var r=i/4}else var r=i/(2*Math.PI)*Math.asin(u/s);return-(s*Math.pow(2,10*(e-=1))*Math.sin((e*a-r)*(2*Math.PI)/i))+t},easeOutElastic:function(n,e,t,u,a){var r=1.70158,i=0,s=u;if(0==e)return t;if(1==(e/=a))return t+u;if(i||(i=.3*a),s<Math.abs(u)){s=u;var r=i/4}else var r=i/(2*Math.PI)*Math.asin(u/s);return s*Math.pow(2,-10*e)*Math.sin((e*a-r)*(2*Math.PI)/i)+u+t},easeInOutElastic:function(n,e,t,u,a){var r=1.70158,i=0,s=u;if(0==e)return t;if(2==(e/=a/2))return t+u;if(i||(i=a*(.3*1.5)),s<Math.abs(u)){s=u;var r=i/4}else var r=i/(2*Math.PI)*Math.asin(u/s);return 1>e?-.5*(s*Math.pow(2,10*(e-=1))*Math.sin((e*a-r)*(2*Math.PI)/i))+t:s*Math.pow(2,-10*(e-=1))*Math.sin((e*a-r)*(2*Math.PI)/i)*.5+u+t},easeInBack:function(n,e,t,u,a,r){return void 0==r&&(r=1.70158),u*(e/=a)*e*((r+1)*e-r)+t},easeOutBack:function(n,e,t,u,a,r){return void 0==r&&(r=1.70158),u*((e=e/a-1)*e*((r+1)*e+r)+1)+t},easeInOutBack:function(n,e,t,u,a,r){return void 0==r&&(r=1.70158),(e/=a/2)<1?u/2*(e*e*(((r*=1.525)+1)*e-r))+t:u/2*((e-=2)*e*(((r*=1.525)+1)*e+r)+2)+t},easeInBounce:function(n,e,t,u,a){return u-jQuery.easing.easeOutBounce(n,a-e,0,u,a)+t},easeOutBounce:function(n,e,t,u,a){return(e/=a)<1/2.75?u*(7.5625*e*e)+t:2/2.75>e?u*(7.5625*(e-=1.5/2.75)*e+.75)+t:2.5/2.75>e?u*(7.5625*(e-=2.25/2.75)*e+.9375)+t:u*(7.5625*(e-=2.625/2.75)*e+.984375)+t},easeInOutBounce:function(n,e,t,u,a){return a/2>e?.5*jQuery.easing.easeInBounce(n,2*e,0,u,a)+t:.5*jQuery.easing.easeOutBounce(n,2*e-a,0,u,a)+.5*u+t}});
!function(l,o,e){"use strict";l.fn.scrollUp=function(o){l.data(e.body,"scrollUp")||(l.data(e.body,"scrollUp",!0),l.fn.scrollUp.init(o))},l.fn.scrollUp.init=function(r){var s,t,c,i,n,a,d,p=l.fn.scrollUp.settings=l.extend({},l.fn.scrollUp.defaults,r),f=!1;switch(d=p.scrollTrigger?l(p.scrollTrigger):l("<a/>",{id:p.scrollName,href:"#top"}),p.scrollTitle&&d.attr("title",p.scrollTitle),d.appendTo("body"),p.scrollImg||p.scrollTrigger||d.html(p.scrollText),d.css({display:"none",position:"fixed",zIndex:p.zIndex}),p.activeOverlay&&l("<div/>",{id:p.scrollName+"-active"}).css({position:"absolute",top:p.scrollDistance+"px",width:"100%",borderTop:"1px dotted"+p.activeOverlay,zIndex:p.zIndex}).appendTo("body"),p.animation){case"fade":s="fadeIn",t="fadeOut",c=p.animationSpeed;break;case"slide":s="slideDown",t="slideUp",c=p.animationSpeed;break;default:s="show",t="hide",c=0}i="top"===p.scrollFrom?p.scrollDistance:l(e).height()-l(o).height()-p.scrollDistance,n=l(o).scroll(function(){l(o).scrollTop()>i?f||(d[s](c),f=!0):f&&(d[t](c),f=!1)}),p.scrollTarget?"number"==typeof p.scrollTarget?a=p.scrollTarget:"string"==typeof p.scrollTarget&&(a=Math.floor(l(p.scrollTarget).offset().top)):a=0,d.click(function(o){o.preventDefault(),l("html, body").animate({scrollTop:a},p.scrollSpeed,p.easingType)})},l.fn.scrollUp.defaults={scrollName:"scrollUp",scrollDistance:300,scrollFrom:"top",scrollSpeed:300,easingType:"linear",animation:"fade",animationSpeed:200,scrollTrigger:!1,scrollTarget:!1,scrollText:"Scroll to top",scrollTitle:!1,scrollImg:!1,activeOverlay:!1,zIndex:2147483647},l.fn.scrollUp.destroy=function(r){l.removeData(e.body,"scrollUp"),l("#"+l.fn.scrollUp.settings.scrollName).remove(),l("#"+l.fn.scrollUp.settings.scrollName+"-active").remove(),l.fn.jquery.split(".")[1]>=7?l(o).off("scroll",r):l(o).unbind("scroll",r)},l.scrollUp=l.fn.scrollUp}(jQuery,window,document);
!function(l,o,e){"use strict";l.fn.scrollUp=function(o){l.data(e.body,"scrollUp")||(l.data(e.body,"scrollUp",!0),l.fn.scrollUp.init(o))},l.fn.scrollUp.init=function(r){var s,t,c,i,n,a,d,p=l.fn.scrollUp.settings=l.extend({},l.fn.scrollUp.defaults,r),f=!1;switch(d=p.scrollTrigger?l(p.scrollTrigger):l("<a/>",{id:p.scrollName,href:"#top"}),p.scrollTitle&&d.attr("title",p.scrollTitle),d.appendTo("body"),p.scrollImg||p.scrollTrigger||d.html(p.scrollText),d.css({display:"none",position:"fixed",zIndex:p.zIndex}),p.activeOverlay&&l("<div/>",{id:p.scrollName+"-active"}).css({position:"absolute",top:p.scrollDistance+"px",width:"100%",borderTop:"1px dotted"+p.activeOverlay,zIndex:p.zIndex}).appendTo("body"),p.animation){case"fade":s="fadeIn",t="fadeOut",c=p.animationSpeed;break;case"slide":s="slideDown",t="slideUp",c=p.animationSpeed;break;default:s="show",t="hide",c=0}i="top"===p.scrollFrom?p.scrollDistance:l(e).height()-l(o).height()-p.scrollDistance,n=l(o).scroll(function(){l(o).scrollTop()>i?f||(d[s](c),f=!0):f&&(d[t](c),f=!1)}),p.scrollTarget?"number"==typeof p.scrollTarget?a=p.scrollTarget:"string"==typeof p.scrollTarget&&(a=Math.floor(l(p.scrollTarget).offset().top)):a=0,d.click(function(o){o.preventDefault(),l("html, body").animate({scrollTop:a},p.scrollSpeed,p.easingType)})},l.fn.scrollUp.defaults={scrollName:"scrollUp",scrollDistance:300,scrollFrom:"top",scrollSpeed:300,easingType:"linear",animation:"fade",animationSpeed:200,scrollTrigger:!1,scrollTarget:!1,scrollText:"Scroll to top",scrollTitle:!1,scrollImg:!1,activeOverlay:!1,zIndex:2147483647},l.fn.scrollUp.destroy=function(r){l.removeData(e.body,"scrollUp"),l("#"+l.fn.scrollUp.settings.scrollName).remove(),l("#"+l.fn.scrollUp.settings.scrollName+"-active").remove(),l.fn.jquery.split(".")[1]>=7?l(o).off("scroll",r):l(o).unbind("scroll",r)},l.scrollUp=l.fn.scrollUp}(jQuery,window,document);
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(t){"use strict";var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1||e[0]>2)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3")}(jQuery),+function(t){"use strict";function e(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in e)if(void 0!==t.style[i])return{end:e[i]};return!1}t.fn.emulateTransitionEnd=function(e){var i=!1,o=this;t(this).one("bsTransitionEnd",function(){i=!0});var n=function(){i||t(o).trigger(t.support.transition.end)};return setTimeout(n,e),this},t(function(){t.support.transition=e(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(e){return t(e.target).is(this)?e.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var i=t(this),n=i.data("bs.alert");n||i.data("bs.alert",n=new o(this)),"string"==typeof e&&n[e].call(i)})}var i='[data-dismiss="alert"]',o=function(e){t(e).on("click",i,this.close)};o.VERSION="3.3.6",o.TRANSITION_DURATION=150,o.prototype.close=function(e){function i(){a.detach().trigger("closed.bs.alert").remove()}var n=t(this),s=n.attr("data-target");s||(s=n.attr("href"),s=s&&s.replace(/.*(?=#[^\s]*$)/,""));var a=t(s);e&&e.preventDefault(),a.length||(a=n.closest(".alert")),a.trigger(e=t.Event("close.bs.alert")),e.isDefaultPrevented()||(a.removeClass("in"),t.support.transition&&a.hasClass("fade")?a.one("bsTransitionEnd",i).emulateTransitionEnd(o.TRANSITION_DURATION):i())};var n=t.fn.alert;t.fn.alert=e,t.fn.alert.Constructor=o,t.fn.alert.noConflict=function(){return t.fn.alert=n,this},t(document).on("click.bs.alert.data-api",i,o.prototype.close)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.button"),s="object"==typeof e&&e;n||o.data("bs.button",n=new i(this,s)),"toggle"==e?n.toggle():e&&n.setState(e)})}var i=function(e,o){this.$element=t(e),this.options=t.extend({},i.DEFAULTS,o),this.isLoading=!1};i.VERSION="3.3.6",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(e){var i="disabled",o=this.$element,n=o.is("input")?"val":"html",s=o.data();e+="Text",null==s.resetText&&o.data("resetText",o[n]()),setTimeout(t.proxy(function(){o[n](null==s[e]?this.options[e]:s[e]),"loadingText"==e?(this.isLoading=!0,o.addClass(i).attr(i,i)):this.isLoading&&(this.isLoading=!1,o.removeClass(i).removeAttr(i))},this),0)},i.prototype.toggle=function(){var t=!0,e=this.$element.closest('[data-toggle="buttons"]');if(e.length){var i=this.$element.find("input");"radio"==i.prop("type")?(i.prop("checked")&&(t=!1),e.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==i.prop("type")&&(i.prop("checked")!==this.$element.hasClass("active")&&(t=!1),this.$element.toggleClass("active")),i.prop("checked",this.$element.hasClass("active")),t&&i.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var o=t.fn.button;t.fn.button=e,t.fn.button.Constructor=i,t.fn.button.noConflict=function(){return t.fn.button=o,this},t(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(i){var o=t(i.target);o.hasClass("btn")||(o=o.closest(".btn")),e.call(o,"toggle"),t(i.target).is('input[type="radio"]')||t(i.target).is('input[type="checkbox"]')||i.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(e){t(e.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(e.type))})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.carousel"),s=t.extend({},i.DEFAULTS,o.data(),"object"==typeof e&&e),a="string"==typeof e?e:s.slide;n||o.data("bs.carousel",n=new i(this,s)),"number"==typeof e?n.to(e):a?n[a]():s.interval&&n.pause().cycle()})}var i=function(e,i){this.$element=t(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=i,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",t.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",t.proxy(this.pause,this)).on("mouseleave.bs.carousel",t.proxy(this.cycle,this))};i.VERSION="3.3.6",i.TRANSITION_DURATION=600,i.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},i.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},i.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(t.proxy(this.next,this),this.options.interval)),this},i.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},i.prototype.getItemForDirection=function(t,e){var i=this.getItemIndex(e),o="prev"==t&&0===i||"next"==t&&i==this.$items.length-1;if(o&&!this.options.wrap)return e;var n="prev"==t?-1:1,s=(i+n)%this.$items.length;return this.$items.eq(s)},i.prototype.to=function(t){var e=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));return t>this.$items.length-1||0>t?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",this.$items.eq(t))},i.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&t.support.transition&&(this.$element.trigger(t.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},i.prototype.next=function(){return this.sliding?void 0:this.slide("next")},i.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},i.prototype.slide=function(e,o){var n=this.$element.find(".item.active"),s=o||this.getItemForDirection(e,n),a=this.interval,r="next"==e?"left":"right",l=this;if(s.hasClass("active"))return this.sliding=!1;var h=s[0],d=t.Event("slide.bs.carousel",{relatedTarget:h,direction:r});if(this.$element.trigger(d),!d.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var p=t(this.$indicators.children()[this.getItemIndex(s)]);p&&p.addClass("active")}var c=t.Event("slid.bs.carousel",{relatedTarget:h,direction:r});return t.support.transition&&this.$element.hasClass("slide")?(s.addClass(e),s[0].offsetWidth,n.addClass(r),s.addClass(r),n.one("bsTransitionEnd",function(){s.removeClass([e,r].join(" ")).addClass("active"),n.removeClass(["active",r].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(c)},0)}).emulateTransitionEnd(i.TRANSITION_DURATION)):(n.removeClass("active"),s.addClass("active"),this.sliding=!1,this.$element.trigger(c)),a&&this.cycle(),this}};var o=t.fn.carousel;t.fn.carousel=e,t.fn.carousel.Constructor=i,t.fn.carousel.noConflict=function(){return t.fn.carousel=o,this};var n=function(i){var o,n=t(this),s=t(n.attr("data-target")||(o=n.attr("href"))&&o.replace(/.*(?=#[^\s]+$)/,""));if(s.hasClass("carousel")){var a=t.extend({},s.data(),n.data()),r=n.attr("data-slide-to");r&&(a.interval=!1),e.call(s,a),r&&s.data("bs.carousel").to(r),i.preventDefault()}};t(document).on("click.bs.carousel.data-api","[data-slide]",n).on("click.bs.carousel.data-api","[data-slide-to]",n),t(window).on("load",function(){t('[data-ride="carousel"]').each(function(){var i=t(this);e.call(i,i.data())})})}(jQuery),+function(t){"use strict";function e(e){var i,o=e.attr("data-target")||(i=e.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,"");return t(o)}function i(e){return this.each(function(){var i=t(this),n=i.data("bs.collapse"),s=t.extend({},o.DEFAULTS,i.data(),"object"==typeof e&&e);!n&&s.toggle&&/show|hide/.test(e)&&(s.toggle=!1),n||i.data("bs.collapse",n=new o(this,s)),"string"==typeof e&&n[e]()})}var o=function(e,i){this.$element=t(e),this.options=t.extend({},o.DEFAULTS,i),this.$trigger=t('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};o.VERSION="3.3.6",o.TRANSITION_DURATION=350,o.DEFAULTS={toggle:!0},o.prototype.dimension=function(){var t=this.$element.hasClass("width");return t?"width":"height"},o.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,n=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(n&&n.length&&(e=n.data("bs.collapse"),e&&e.transitioning))){var s=t.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){n&&n.length&&(i.call(n,"hide"),e||n.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!t.support.transition)return r.call(this);var l=t.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",t.proxy(r,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][l])}}}},o.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=t.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return t.support.transition?void this.$element[i](0).one("bsTransitionEnd",t.proxy(n,this)).emulateTransitionEnd(o.TRANSITION_DURATION):n.call(this)}}},o.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},o.prototype.getParent=function(){return t(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(t.proxy(function(i,o){var n=t(o);this.addAriaAndCollapsedClass(e(n),n)},this)).end()},o.prototype.addAriaAndCollapsedClass=function(t,e){var i=t.hasClass("in");t.attr("aria-expanded",i),e.toggleClass("collapsed",!i).attr("aria-expanded",i)};var n=t.fn.collapse;t.fn.collapse=i,t.fn.collapse.Constructor=o,t.fn.collapse.noConflict=function(){return t.fn.collapse=n,this},t(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(o){var n=t(this);n.attr("data-target")||o.preventDefault();var s=e(n),a=s.data("bs.collapse"),r=a?"toggle":n.data();i.call(s,r)})}(jQuery),+function(t){"use strict";function e(e){var i=e.attr("data-target");i||(i=e.attr("href"),i=i&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var o=i&&t(i);return o&&o.length?o:e.parent()}function i(i){i&&3===i.which||(t(n).remove(),t(s).each(function(){var o=t(this),n=e(o),s={relatedTarget:this};n.hasClass("open")&&(i&&"click"==i.type&&/input|textarea/i.test(i.target.tagName)&&t.contains(n[0],i.target)||(n.trigger(i=t.Event("hide.bs.dropdown",s)),i.isDefaultPrevented()||(o.attr("aria-expanded","false"),n.removeClass("open").trigger(t.Event("hidden.bs.dropdown",s)))))}))}function o(e){return this.each(function(){var i=t(this),o=i.data("bs.dropdown");o||i.data("bs.dropdown",o=new a(this)),"string"==typeof e&&o[e].call(i)})}var n=".dropdown-backdrop",s='[data-toggle="dropdown"]',a=function(e){t(e).on("click.bs.dropdown",this.toggle)};a.VERSION="3.3.6",a.prototype.toggle=function(o){var n=t(this);if(!n.is(".disabled, :disabled")){var s=e(n),a=s.hasClass("open");if(i(),!a){"ontouchstart"in document.documentElement&&!s.closest(".navbar-nav").length&&t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click",i);var r={relatedTarget:this};if(s.trigger(o=t.Event("show.bs.dropdown",r)),o.isDefaultPrevented())return;n.trigger("focus").attr("aria-expanded","true"),s.toggleClass("open").trigger(t.Event("shown.bs.dropdown",r))}return!1}},a.prototype.keydown=function(i){if(/(38|40|27|32)/.test(i.which)&&!/input|textarea/i.test(i.target.tagName)){var o=t(this);if(i.preventDefault(),i.stopPropagation(),!o.is(".disabled, :disabled")){var n=e(o),a=n.hasClass("open");if(!a&&27!=i.which||a&&27==i.which)return 27==i.which&&n.find(s).trigger("focus"),o.trigger("click");var r=" li:not(.disabled):visible a",l=n.find(".dropdown-menu"+r);if(l.length){var h=l.index(i.target);38==i.which&&h>0&&h--,40==i.which&&h<l.length-1&&h++,~h||(h=0),l.eq(h).trigger("focus")}}}};var r=t.fn.dropdown;t.fn.dropdown=o,t.fn.dropdown.Constructor=a,t.fn.dropdown.noConflict=function(){return t.fn.dropdown=r,this},t(document).on("click.bs.dropdown.data-api",i).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",s,a.prototype.toggle).on("keydown.bs.dropdown.data-api",s,a.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",a.prototype.keydown)}(jQuery),+function(t){"use strict";function e(e,o){return this.each(function(){var n=t(this),s=n.data("bs.modal"),a=t.extend({},i.DEFAULTS,n.data(),"object"==typeof e&&e);s||n.data("bs.modal",s=new i(this,a)),"string"==typeof e?s[e](o):a.show&&s.show(o)})}var i=function(e,i){this.options=i,this.$body=t(document.body),this.$element=t(e),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,t.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.3.6",i.TRANSITION_DURATION=300,i.BACKDROP_TRANSITION_DURATION=150,i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},i.prototype.show=function(e){var o=this,n=t.Event("show.bs.modal",{relatedTarget:e});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',t.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){o.$element.one("mouseup.dismiss.bs.modal",function(e){t(e.target).is(o.$element)&&(o.ignoreBackdropClick=!0)})}),this.backdrop(function(){var n=t.support.transition&&o.$element.hasClass("fade");o.$element.parent().length||o.$element.appendTo(o.$body),o.$element.show().scrollTop(0),o.adjustDialog(),n&&o.$element[0].offsetWidth,o.$element.addClass("in"),o.enforceFocus();var s=t.Event("shown.bs.modal",{relatedTarget:e});n?o.$dialog.one("bsTransitionEnd",function(){o.$element.trigger("focus").trigger(s)}).emulateTransitionEnd(i.TRANSITION_DURATION):o.$element.trigger("focus").trigger(s)}))},i.prototype.hide=function(e){e&&e.preventDefault(),e=t.Event("hide.bs.modal"),this.$element.trigger(e),this.isShown&&!e.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),t(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),t.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",t.proxy(this.hideModal,this)).emulateTransitionEnd(i.TRANSITION_DURATION):this.hideModal())},i.prototype.enforceFocus=function(){t(document).off("focusin.bs.modal").on("focusin.bs.modal",t.proxy(function(t){this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",t.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},i.prototype.resize=function(){this.isShown?t(window).on("resize.bs.modal",t.proxy(this.handleUpdate,this)):t(window).off("resize.bs.modal")},i.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(e){var o=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var s=t.support.transition&&n;if(this.$backdrop=t(document.createElement("div")).addClass("modal-backdrop "+n).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",t.proxy(function(t){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),s&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!e)return;s?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):e()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){o.removeBackdrop(),e&&e()};t.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):a()}else e&&e()},i.prototype.handleUpdate=function(){this.adjustDialog()},i.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},i.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},i.prototype.checkScrollbar=function(){var t=window.innerWidth;if(!t){var e=document.documentElement.getBoundingClientRect();t=e.right-Math.abs(e.left)}this.bodyIsOverflowing=document.body.clientWidth<t,this.scrollbarWidth=this.measureScrollbar()},i.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},i.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var o=t.fn.modal;t.fn.modal=e,t.fn.modal.Constructor=i,t.fn.modal.noConflict=function(){return t.fn.modal=o,this},t(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var o=t(this),n=o.attr("href"),s=t(o.attr("data-target")||n&&n.replace(/.*(?=#[^\s]+$)/,"")),a=s.data("bs.modal")?"toggle":t.extend({remote:!/#/.test(n)&&n},s.data(),o.data());o.is("a")&&i.preventDefault(),s.one("show.bs.modal",function(t){t.isDefaultPrevented()||s.one("hidden.bs.modal",function(){o.is(":visible")&&o.trigger("focus")})}),e.call(s,a,this)})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.tooltip"),s="object"==typeof e&&e;(n||!/destroy|hide/.test(e))&&(n||o.data("bs.tooltip",n=new i(this,s)),"string"==typeof e&&n[e]())})}var i=function(t,e){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",t,e)};i.VERSION="3.3.6",i.TRANSITION_DURATION=150,i.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},i.prototype.init=function(e,i,o){if(this.enabled=!0,this.type=e,this.$element=t(i),this.options=this.getOptions(o),this.$viewport=this.options.viewport&&t(t.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var n=this.options.trigger.split(" "),s=n.length;s--;){var a=n[s];if("click"==a)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=a){var r="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(r+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.getOptions=function(e){return e=t.extend({},this.getDefaults(),this.$element.data(),e),e.delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},i.prototype.getDelegateOptions=function(){var e={},i=this.getDefaults();return this._options&&t.each(this._options,function(t,o){i[t]!=o&&(e[t]=o)}),e},i.prototype.enter=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusin"==e.type?"focus":"hover"]=!0),i.tip().hasClass("in")||"in"==i.hoverState?void(i.hoverState="in"):(clearTimeout(i.timeout),i.hoverState="in",i.options.delay&&i.options.delay.show?void(i.timeout=setTimeout(function(){"in"==i.hoverState&&i.show()},i.options.delay.show)):i.show())},i.prototype.isInStateTrue=function(){for(var t in this.inState)if(this.inState[t])return!0;return!1},i.prototype.leave=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusout"==e.type?"focus":"hover"]=!1),i.isInStateTrue()?void 0:(clearTimeout(i.timeout),i.hoverState="out",i.options.delay&&i.options.delay.hide?void(i.timeout=setTimeout(function(){"out"==i.hoverState&&i.hide()},i.options.delay.hide)):i.hide())},i.prototype.show=function(){var e=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(e);var o=t.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(e.isDefaultPrevented()||!o)return;var n=this,s=this.tip(),a=this.getUID(this.type);this.setContent(),s.attr("id",a),this.$element.attr("aria-describedby",a),this.options.animation&&s.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,s[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,h=l.test(r);h&&(r=r.replace(l,"")||"top"),s.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?s.appendTo(this.options.container):s.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var d=this.getPosition(),p=s[0].offsetWidth,c=s[0].offsetHeight;if(h){var f=r,u=this.getPosition(this.$viewport);r="bottom"==r&&d.bottom+c>u.bottom?"top":"top"==r&&d.top-c<u.top?"bottom":"right"==r&&d.right+p>u.width?"left":"left"==r&&d.left-p<u.left?"right":r,s.removeClass(f).addClass(r)}var g=this.getCalculatedOffset(r,d,p,c);this.applyPlacement(g,r);var v=function(){var t=n.hoverState;n.$element.trigger("shown.bs."+n.type),n.hoverState=null,"out"==t&&n.leave(n)};t.support.transition&&this.$tip.hasClass("fade")?s.one("bsTransitionEnd",v).emulateTransitionEnd(i.TRANSITION_DURATION):v()}},i.prototype.applyPlacement=function(e,i){var o=this.tip(),n=o[0].offsetWidth,s=o[0].offsetHeight,a=parseInt(o.css("margin-top"),10),r=parseInt(o.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(r)&&(r=0),e.top+=a,e.left+=r,t.offset.setOffset(o[0],t.extend({using:function(t){o.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),o.addClass("in");var l=o[0].offsetWidth,h=o[0].offsetHeight;"top"==i&&h!=s&&(e.top=e.top+s-h);var d=this.getViewportAdjustedDelta(i,e,l,h);d.left?e.left+=d.left:e.top+=d.top;var p=/top|bottom/.test(i),c=p?2*d.left-n+l:2*d.top-s+h,f=p?"offsetWidth":"offsetHeight";o.offset(e),this.replaceArrow(c,o[0][f],p)},i.prototype.replaceArrow=function(t,e,i){this.arrow().css(i?"left":"top",50*(1-t/e)+"%").css(i?"top":"left","")},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},i.prototype.hide=function(e){function o(){"in"!=n.hoverState&&s.detach(),n.$element.removeAttr("aria-describedby").trigger("hidden.bs."+n.type),e&&e()}var n=this,s=t(this.$tip),a=t.Event("hide.bs."+this.type);return this.$element.trigger(a),a.isDefaultPrevented()?void 0:(s.removeClass("in"),t.support.transition&&s.hasClass("fade")?s.one("bsTransitionEnd",o).emulateTransitionEnd(i.TRANSITION_DURATION):o(),this.hoverState=null,this)},i.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},i.prototype.hasContent=function(){return this.getTitle()},i.prototype.getPosition=function(e){e=e||this.$element;var i=e[0],o="BODY"==i.tagName,n=i.getBoundingClientRect();null==n.width&&(n=t.extend({},n,{width:n.right-n.left,height:n.bottom-n.top}));var s=o?{top:0,left:0}:e.offset(),a={scroll:o?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},r=o?{width:t(window).width(),height:t(window).height()}:null;return t.extend({},n,a,r,s)},i.prototype.getCalculatedOffset=function(t,e,i,o){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-o,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-o/2,left:e.left-i}:{top:e.top+e.height/2-o/2,left:e.left+e.width}},i.prototype.getViewportAdjustedDelta=function(t,e,i,o){var n={top:0,left:0};if(!this.$viewport)return n;var s=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(t)){var r=e.top-s-a.scroll,l=e.top+s-a.scroll+o;r<a.top?n.top=a.top-r:l>a.top+a.height&&(n.top=a.top+a.height-l)}else{var h=e.left-s,d=e.left+s+i;h<a.left?n.left=a.left-h:d>a.right&&(n.left=a.left+a.width-d)}return n},i.prototype.getTitle=function(){var t,e=this.$element,i=this.options;return t=e.attr("data-original-title")||("function"==typeof i.title?i.title.call(e[0]):i.title)},i.prototype.getUID=function(t){do t+=~~(1e6*Math.random());while(document.getElementById(t));return t},i.prototype.tip=function(){if(!this.$tip&&(this.$tip=t(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},i.prototype.enable=function(){this.enabled=!0},i.prototype.disable=function(){this.enabled=!1},i.prototype.toggleEnabled=function(){this.enabled=!this.enabled},i.prototype.toggle=function(e){var i=this;e&&(i=t(e.currentTarget).data("bs."+this.type),i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i))),e?(i.inState.click=!i.inState.click,i.isInStateTrue()?i.enter(i):i.leave(i)):i.tip().hasClass("in")?i.leave(i):i.enter(i)},i.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type),t.$tip&&t.$tip.detach(),t.$tip=null,t.$arrow=null,t.$viewport=null})};var o=t.fn.tooltip;t.fn.tooltip=e,t.fn.tooltip.Constructor=i,t.fn.tooltip.noConflict=function(){return t.fn.tooltip=o,this}}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.popover"),s="object"==typeof e&&e;(n||!/destroy|hide/.test(e))&&(n||o.data("bs.popover",n=new i(this,s)),"string"==typeof e&&n[e]())})}var i=function(t,e){this.init("popover",t,e)};if(!t.fn.tooltip)throw new Error("Popover requires tooltip.js");i.VERSION="3.3.6",i.DEFAULTS=t.extend({},t.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),i.prototype=t.extend({},t.fn.tooltip.Constructor.prototype),i.prototype.constructor=i,i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},i.prototype.hasContent=function(){return this.getTitle()||this.getContent()},i.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var o=t.fn.popover;t.fn.popover=e,t.fn.popover.Constructor=i,t.fn.popover.noConflict=function(){return t.fn.popover=o,this}}(jQuery),+function(t){"use strict";function e(i,o){this.$body=t(document.body),this.$scrollElement=t(t(i).is(document.body)?window:i),this.options=t.extend({},e.DEFAULTS,o),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",t.proxy(this.process,this)),this.refresh(),this.process()}function i(i){return this.each(function(){var o=t(this),n=o.data("bs.scrollspy"),s="object"==typeof i&&i;n||o.data("bs.scrollspy",n=new e(this,s)),"string"==typeof i&&n[i]()})}e.VERSION="3.3.6",e.DEFAULTS={offset:10},e.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},e.prototype.refresh=function(){var e=this,i="offset",o=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),t.isWindow(this.$scrollElement[0])||(i="position",o=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var e=t(this),n=e.data("target")||e.attr("href"),s=/^#./.test(n)&&t(n);return s&&s.length&&s.is(":visible")&&[[s[i]().top+o,n]]||null}).sort(function(t,e){return t[0]-e[0]}).each(function(){e.offsets.push(this[0]),e.targets.push(this[1])})},e.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),o=this.options.offset+i-this.$scrollElement.height(),n=this.offsets,s=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),e>=o)return a!=(t=s[s.length-1])&&this.activate(t);if(a&&e<n[0])return this.activeTarget=null,this.clear();for(t=n.length;t--;)a!=s[t]&&e>=n[t]&&(void 0===n[t+1]||e<n[t+1])&&this.activate(s[t])},e.prototype.activate=function(e){this.activeTarget=e,this.clear();var i=this.selector+'[data-target="'+e+'"],'+this.selector+'[href="'+e+'"]',o=t(i).parents("li").addClass("active");
o.parent(".dropdown-menu").length&&(o=o.closest("li.dropdown").addClass("active")),o.trigger("activate.bs.scrollspy")},e.prototype.clear=function(){t(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var o=t.fn.scrollspy;t.fn.scrollspy=i,t.fn.scrollspy.Constructor=e,t.fn.scrollspy.noConflict=function(){return t.fn.scrollspy=o,this},t(window).on("load.bs.scrollspy.data-api",function(){t('[data-spy="scroll"]').each(function(){var e=t(this);i.call(e,e.data())})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.tab");n||o.data("bs.tab",n=new i(this)),"string"==typeof e&&n[e]()})}var i=function(e){this.element=t(e)};i.VERSION="3.3.6",i.TRANSITION_DURATION=150,i.prototype.show=function(){var e=this.element,i=e.closest("ul:not(.dropdown-menu)"),o=e.data("target");if(o||(o=e.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var n=i.find(".active:last a"),s=t.Event("hide.bs.tab",{relatedTarget:e[0]}),a=t.Event("show.bs.tab",{relatedTarget:n[0]});if(n.trigger(s),e.trigger(a),!a.isDefaultPrevented()&&!s.isDefaultPrevented()){var r=t(o);this.activate(e.closest("li"),i),this.activate(r,r.parent(),function(){n.trigger({type:"hidden.bs.tab",relatedTarget:e[0]}),e.trigger({type:"shown.bs.tab",relatedTarget:n[0]})})}}},i.prototype.activate=function(e,o,n){function s(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),r?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu").length&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),n&&n()}var a=o.find("> .active"),r=n&&t.support.transition&&(a.length&&a.hasClass("fade")||!!o.find("> .fade").length);a.length&&r?a.one("bsTransitionEnd",s).emulateTransitionEnd(i.TRANSITION_DURATION):s(),a.removeClass("in")};var o=t.fn.tab;t.fn.tab=e,t.fn.tab.Constructor=i,t.fn.tab.noConflict=function(){return t.fn.tab=o,this};var n=function(i){i.preventDefault(),e.call(t(this),"show")};t(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',n).on("click.bs.tab.data-api",'[data-toggle="pill"]',n)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.affix"),s="object"==typeof e&&e;n||o.data("bs.affix",n=new i(this,s)),"string"==typeof e&&n[e]()})}var i=function(e,o){this.options=t.extend({},i.DEFAULTS,o),this.$target=t(this.options.target).on("scroll.bs.affix.data-api",t.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",t.proxy(this.checkPositionWithEventLoop,this)),this.$element=t(e),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};i.VERSION="3.3.6",i.RESET="affix affix-top affix-bottom",i.DEFAULTS={offset:0,target:window},i.prototype.getState=function(t,e,i,o){var n=this.$target.scrollTop(),s=this.$element.offset(),a=this.$target.height();if(null!=i&&"top"==this.affixed)return i>n?"top":!1;if("bottom"==this.affixed)return null!=i?n+this.unpin<=s.top?!1:"bottom":t-o>=n+a?!1:"bottom";var r=null==this.affixed,l=r?n:s.top,h=r?a:e;return null!=i&&i>=n?"top":null!=o&&l+h>=t-o?"bottom":!1},i.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(i.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},i.prototype.checkPositionWithEventLoop=function(){setTimeout(t.proxy(this.checkPosition,this),1)},i.prototype.checkPosition=function(){if(this.$element.is(":visible")){var e=this.$element.height(),o=this.options.offset,n=o.top,s=o.bottom,a=Math.max(t(document).height(),t(document.body).height());"object"!=typeof o&&(s=n=o),"function"==typeof n&&(n=o.top(this.$element)),"function"==typeof s&&(s=o.bottom(this.$element));var r=this.getState(a,e,n,s);if(this.affixed!=r){null!=this.unpin&&this.$element.css("top","");var l="affix"+(r?"-"+r:""),h=t.Event(l+".bs.affix");if(this.$element.trigger(h),h.isDefaultPrevented())return;this.affixed=r,this.unpin="bottom"==r?this.getPinnedOffset():null,this.$element.removeClass(i.RESET).addClass(l).trigger(l.replace("affix","affixed")+".bs.affix")}"bottom"==r&&this.$element.offset({top:a-e-s})}};var o=t.fn.affix;t.fn.affix=e,t.fn.affix.Constructor=i,t.fn.affix.noConflict=function(){return t.fn.affix=o,this},t(window).on("load",function(){t('[data-spy="affix"]').each(function(){var i=t(this),o=i.data();o.offset=o.offset||{},null!=o.offsetBottom&&(o.offset.bottom=o.offsetBottom),null!=o.offsetTop&&(o.offset.top=o.offsetTop),e.call(i,o)})})}(jQuery);
window.attachEvent&&!window.addEventListener&&window.attachEvent("onload",function(){var t=document.documentElement,e=t.className;t.className=e+" ie-force-pseudo-refresh",setTimeout(function(){t.className=e},10)}),$(function(){$('[data-toggle="tooltip"]').tooltip()});
$(function(){function t(){var t=$("body").height();$(".site-wrapper-container").each(function(e){$(this).innerHeight()>t&&$(this).closest(".fullscreen").addClass("overflow")})}function e(){var t=$(window).height();$(".background").each(function(e){var a=$(this),n=a.width(),o=a.height(),i=a.attr("data-img-width"),s=a.attr("data-img-height"),l=i/s,r=parseFloat(a.attr("data-diff"));r=r?r:0;var c=0;if(a.hasClass("parallax")){c=t-o}s=o+c+r,i=s*l,n>i&&(i=n,s=i/l),a.data("resized-imgW",i),a.data("resized-imgH",s),a.css("background-size",i+"px "+s+"px")})}function a(){$("#ggrshowtime").html((new Date-n)/1e3+" sec")}$.scrollUp({animation:"fade",scrollText:"Scroll to top",scrollName:"scrollUp",topDistance:"300",topSpeed:300,animationInSpeed:200,animationOutSpeed:200,scrollImg:{active:!0,type:"background",src:"/js/scrollup/demo/img/top.png"}}),$("#owl-example").owlCarousel({items:5,itemsCustom:!1,baseClass:"owl-carousel",theme:"owl-theme",pagination:!0,paginationNumbers:!1}),$.fn.fadeInWithDelay=function(){var t=0;return this.each(function(){$(this).delay(t).animate({opacity:1},200),t+=100})},$("#content").scrollPagination({contentPage:"/js/scrollpage/democontent.html",contentData:{},scrollTarget:$(window),heightOffset:10,beforeLoad:function(){$("#loading").fadeIn()},afterLoad:function(t){$("#loading").fadeOut();$(t).fadeInWithDelay(),$("#content").children().size()>100&&($("#nomoreresults").fadeIn(),$("#content").stopScrollPagination())}}),$("html").hasClass("full")&&($(window).resize(e),$(window).resize(t),$(window).focus(e),t(),e());var n=new Date;window.onstop=a,window.onload=a});
!function(){"use strict";if(navigator.userAgent.match(/IEMobile\/10\.0/)){var e=document.createElement("style");e.appendChild(document.createTextNode("@-ms-viewport{width:auto!important}")),document.querySelector("head").appendChild(e)}}();
!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function n(e){var t=!!e&&"length"in e&&e.length,n=pe.type(e);return"function"===n||pe.isWindow(e)?!1:"array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e}function r(e,t,n){if(pe.isFunction(t))return pe.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return pe.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(Ce.test(t))return pe.filter(t,e,n);t=pe.filter(t,e)}return pe.grep(e,function(e){return pe.inArray(e,t)>-1!==n})}function i(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}function o(e){var t={};return pe.each(e.match(De)||[],function(e,n){t[n]=!0}),t}function a(){re.addEventListener?(re.removeEventListener("DOMContentLoaded",s),e.removeEventListener("load",s)):(re.detachEvent("onreadystatechange",s),e.detachEvent("onload",s))}function s(){(re.addEventListener||"load"===e.event.type||"complete"===re.readyState)&&(a(),pe.ready())}function u(e,t,n){if(void 0===n&&1===e.nodeType){var r="data-"+t.replace(Me,"-$1").toLowerCase();if(n=e.getAttribute(r),"string"==typeof n){try{n="true"===n?!0:"false"===n?!1:"null"===n?null:+n+""===n?+n:qe.test(n)?pe.parseJSON(n):n}catch(i){}pe.data(e,t,n)}else n=void 0}return n}function l(e){var t;for(t in e)if(("data"!==t||!pe.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}function c(e,t,n,r){if(He(e)){var i,o,a=pe.expando,s=e.nodeType,u=s?pe.cache:e,l=s?e[a]:e[a]&&a;if(l&&u[l]&&(r||u[l].data)||void 0!==n||"string"!=typeof t)return l||(l=s?e[a]=ne.pop()||pe.guid++:a),u[l]||(u[l]=s?{}:{toJSON:pe.noop}),("object"==typeof t||"function"==typeof t)&&(r?u[l]=pe.extend(u[l],t):u[l].data=pe.extend(u[l].data,t)),o=u[l],r||(o.data||(o.data={}),o=o.data),void 0!==n&&(o[pe.camelCase(t)]=n),"string"==typeof t?(i=o[t],null==i&&(i=o[pe.camelCase(t)])):i=o,i}}function d(e,t,n){if(He(e)){var r,i,o=e.nodeType,a=o?pe.cache:e,s=o?e[pe.expando]:pe.expando;if(a[s]){if(t&&(r=n?a[s]:a[s].data)){pe.isArray(t)?t=t.concat(pe.map(t,pe.camelCase)):t in r?t=[t]:(t=pe.camelCase(t),t=t in r?[t]:t.split(" ")),i=t.length;for(;i--;)delete r[t[i]];if(n?!l(r):!pe.isEmptyObject(r))return}(n||(delete a[s].data,l(a[s])))&&(o?pe.cleanData([e],!0):de.deleteExpando||a!=a.window?delete a[s]:a[s]=void 0)}}}function f(e,t,n,r){var i,o=1,a=20,s=r?function(){return r.cur()}:function(){return pe.css(e,t,"")},u=s(),l=n&&n[3]||(pe.cssNumber[t]?"":"px"),c=(pe.cssNumber[t]||"px"!==l&&+u)&&Fe.exec(pe.css(e,t));if(c&&c[3]!==l){l=l||c[3],n=n||[],c=+u||1;do o=o||".5",c/=o,pe.style(e,t,c+l);while(o!==(o=s()/u)&&1!==o&&--a)}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}function p(e){var t=ze.split("|"),n=e.createDocumentFragment();if(n.createElement)for(;t.length;)n.createElement(t.pop());return n}function h(e,t){var n,r,i=0,o="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):void 0;if(!o)for(o=[],n=e.childNodes||e;null!=(r=n[i]);i++)!t||pe.nodeName(r,t)?o.push(r):pe.merge(o,h(r,t));return void 0===t||t&&pe.nodeName(e,t)?pe.merge([e],o):o}function m(e,t){for(var n,r=0;null!=(n=e[r]);r++)pe._data(n,"globalEval",!t||pe._data(t[r],"globalEval"))}function g(e){Be.test(e.type)&&(e.defaultChecked=e.checked)}function v(e,t,n,r,i){for(var o,a,s,u,l,c,d,f=e.length,v=p(t),y=[],x=0;f>x;x++)if(a=e[x],a||0===a)if("object"===pe.type(a))pe.merge(y,a.nodeType?[a]:a);else if(Ue.test(a)){for(u=u||v.appendChild(t.createElement("div")),l=(We.exec(a)||["",""])[1].toLowerCase(),d=Xe[l]||Xe._default,u.innerHTML=d[1]+pe.htmlPrefilter(a)+d[2],o=d[0];o--;)u=u.lastChild;if(!de.leadingWhitespace&&$e.test(a)&&y.push(t.createTextNode($e.exec(a)[0])),!de.tbody)for(a="table"!==l||Ve.test(a)?"<table>"!==d[1]||Ve.test(a)?0:u:u.firstChild,o=a&&a.childNodes.length;o--;)pe.nodeName(c=a.childNodes[o],"tbody")&&!c.childNodes.length&&a.removeChild(c);for(pe.merge(y,u.childNodes),u.textContent="";u.firstChild;)u.removeChild(u.firstChild);u=v.lastChild}else y.push(t.createTextNode(a));for(u&&v.removeChild(u),de.appendChecked||pe.grep(h(y,"input"),g),x=0;a=y[x++];)if(r&&pe.inArray(a,r)>-1)i&&i.push(a);else if(s=pe.contains(a.ownerDocument,a),u=h(v.appendChild(a),"script"),s&&m(u),n)for(o=0;a=u[o++];)Ie.test(a.type||"")&&n.push(a);return u=null,v}function y(){return!0}function x(){return!1}function b(){try{return re.activeElement}catch(e){}}function w(e,t,n,r,i,o){var a,s;if("object"==typeof t){"string"!=typeof n&&(r=r||n,n=void 0);for(s in t)w(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),i===!1)i=x;else if(!i)return e;return 1===o&&(a=i,i=function(e){return pe().off(e),a.apply(this,arguments)},i.guid=a.guid||(a.guid=pe.guid++)),e.each(function(){pe.event.add(this,t,i,r,n)})}function T(e,t){return pe.nodeName(e,"table")&&pe.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function C(e){return e.type=(null!==pe.find.attr(e,"type"))+"/"+e.type,e}function E(e){var t=it.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function N(e,t){if(1===t.nodeType&&pe.hasData(e)){var n,r,i,o=pe._data(e),a=pe._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)pe.event.add(t,n,s[n][r])}a.data&&(a.data=pe.extend({},a.data))}}function k(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!de.noCloneEvent&&t[pe.expando]){i=pe._data(t);for(r in i.events)pe.removeEvent(t,r,i.handle);t.removeAttribute(pe.expando)}"script"===n&&t.text!==e.text?(C(t).text=e.text,E(t)):"object"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),de.html5Clone&&e.innerHTML&&!pe.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===n&&Be.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===n?t.defaultSelected=t.selected=e.defaultSelected:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}}function S(e,t,n,r){t=oe.apply([],t);var i,o,a,s,u,l,c=0,d=e.length,f=d-1,p=t[0],m=pe.isFunction(p);if(m||d>1&&"string"==typeof p&&!de.checkClone&&rt.test(p))return e.each(function(i){var o=e.eq(i);m&&(t[0]=p.call(this,i,o.html())),S(o,t,n,r)});if(d&&(l=v(t,e[0].ownerDocument,!1,e,r),i=l.firstChild,1===l.childNodes.length&&(l=i),i||r)){for(s=pe.map(h(l,"script"),C),a=s.length;d>c;c++)o=l,c!==f&&(o=pe.clone(o,!0,!0),a&&pe.merge(s,h(o,"script"))),n.call(e[c],o,c);if(a)for(u=s[s.length-1].ownerDocument,pe.map(s,E),c=0;a>c;c++)o=s[c],Ie.test(o.type||"")&&!pe._data(o,"globalEval")&&pe.contains(u,o)&&(o.src?pe._evalUrl&&pe._evalUrl(o.src):pe.globalEval((o.text||o.textContent||o.innerHTML||"").replace(ot,"")));l=i=null}return e}function A(e,t,n){for(var r,i=t?pe.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||pe.cleanData(h(r)),r.parentNode&&(n&&pe.contains(r.ownerDocument,r)&&m(h(r,"script")),r.parentNode.removeChild(r));return e}function D(e,t){var n=pe(t.createElement(e)).appendTo(t.body),r=pe.css(n[0],"display");return n.detach(),r}function L(e){var t=re,n=lt[e];return n||(n=D(e,t),"none"!==n&&n||(ut=(ut||pe("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=(ut[0].contentWindow||ut[0].contentDocument).document,t.write(),t.close(),n=D(e,t),ut.detach()),lt[e]=n),n}function j(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function H(e){if(e in Et)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=Ct.length;n--;)if(e=Ct[n]+t,e in Et)return e}function q(e,t){for(var n,r,i,o=[],a=0,s=e.length;s>a;a++)r=e[a],r.style&&(o[a]=pe._data(r,"olddisplay"),n=r.style.display,t?(o[a]||"none"!==n||(r.style.display=""),""===r.style.display&&Re(r)&&(o[a]=pe._data(r,"olddisplay",L(r.nodeName)))):(i=Re(r),(n&&"none"!==n||!i)&&pe._data(r,"olddisplay",i?n:pe.css(r,"display"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?o[a]||"":"none"));return e}function M(e,t,n){var r=bt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function _(e,t,n,r,i){for(var o=n===(r?"border":"content")?4:"width"===t?1:0,a=0;4>o;o+=2)"margin"===n&&(a+=pe.css(e,n+Oe[o],!0,i)),r?("content"===n&&(a-=pe.css(e,"padding"+Oe[o],!0,i)),"margin"!==n&&(a-=pe.css(e,"border"+Oe[o]+"Width",!0,i))):(a+=pe.css(e,"padding"+Oe[o],!0,i),"padding"!==n&&(a+=pe.css(e,"border"+Oe[o]+"Width",!0,i)));return a}function F(t,n,r){var i=!0,o="width"===n?t.offsetWidth:t.offsetHeight,a=ht(t),s=de.boxSizing&&"border-box"===pe.css(t,"boxSizing",!1,a);if(re.msFullscreenElement&&e.top!==e&&t.getClientRects().length&&(o=Math.round(100*t.getBoundingClientRect()[n])),0>=o||null==o){if(o=mt(t,n,a),(0>o||null==o)&&(o=t.style[n]),dt.test(o))return o;i=s&&(de.boxSizingReliable()||o===t.style[n]),o=parseFloat(o)||0}return o+_(t,n,r||(s?"border":"content"),i,a)+"px"}function O(e,t,n,r,i){return new O.prototype.init(e,t,n,r,i)}function R(){return e.setTimeout(function(){Nt=void 0}),Nt=pe.now()}function P(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Oe[i],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function B(e,t,n){for(var r,i=($.tweeners[t]||[]).concat($.tweeners["*"]),o=0,a=i.length;a>o;o++)if(r=i[o].call(n,t,e))return r}function W(e,t,n){var r,i,o,a,s,u,l,c,d=this,f={},p=e.style,h=e.nodeType&&Re(e),m=pe._data(e,"fxshow");n.queue||(s=pe._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,u=s.empty.fire,s.empty.fire=function(){s.unqueued||u()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,pe.queue(e,"fx").length||s.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],l=pe.css(e,"display"),c="none"===l?pe._data(e,"olddisplay")||L(e.nodeName):l,"inline"===c&&"none"===pe.css(e,"float")&&(de.inlineBlockNeedsLayout&&"inline"!==L(e.nodeName)?p.zoom=1:p.display="inline-block")),n.overflow&&(p.overflow="hidden",de.shrinkWrapBlocks()||d.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],St.exec(i)){if(delete t[r],o=o||"toggle"===i,i===(h?"hide":"show")){if("show"!==i||!m||void 0===m[r])continue;h=!0}f[r]=m&&m[r]||pe.style(e,r)}else l=void 0;if(pe.isEmptyObject(f))"inline"===("none"===l?L(e.nodeName):l)&&(p.display=l);else{m?"hidden"in m&&(h=m.hidden):m=pe._data(e,"fxshow",{}),o&&(m.hidden=!h),h?pe(e).show():d.done(function(){pe(e).hide()}),d.done(function(){var t;pe._removeData(e,"fxshow");for(t in f)pe.style(e,t,f[t])});for(r in f)a=B(h?m[r]:0,r,d),r in m||(m[r]=a.start,h&&(a.end=a.start,a.start="width"===r||"height"===r?1:0))}}function I(e,t){var n,r,i,o,a;for(n in e)if(r=pe.camelCase(n),i=t[r],o=e[n],pe.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),a=pe.cssHooks[r],a&&"expand"in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}function $(e,t,n){var r,i,o=0,a=$.prefilters.length,s=pe.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;for(var t=Nt||R(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,a=0,u=l.tweens.length;u>a;a++)l.tweens[a].run(o);return s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:pe.extend({},t),opts:pe.extend(!0,{specialEasing:{},easing:pe.easing._default},n),originalProperties:t,originalOptions:n,startTime:Nt||R(),duration:n.duration,tweens:[],createTween:function(t,n){var r=pe.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?(s.notifyWith(e,[l,1,0]),s.resolveWith(e,[l,t])):s.rejectWith(e,[l,t]),this}}),c=l.props;for(I(c,l.opts.specialEasing);a>o;o++)if(r=$.prefilters[o].call(l,e,c,l.opts))return pe.isFunction(r.stop)&&(pe._queueHooks(l.elem,l.opts.queue).stop=pe.proxy(r.stop,r)),r;return pe.map(c,B,l),pe.isFunction(l.opts.start)&&l.opts.start.call(e,l),pe.fx.timer(pe.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function z(e){return pe.attr(e,"class")||""}function X(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i=0,o=t.toLowerCase().match(De)||[];if(pe.isFunction(n))for(;r=o[i++];)"+"===r.charAt(0)?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function U(e,t,n,r){function i(s){var u;return o[s]=!0,pe.each(e[s]||[],function(e,s){var l=s(t,n,r);return"string"!=typeof l||a||o[l]?a?!(u=l):void 0:(t.dataTypes.unshift(l),i(l),!1)}),u}var o={},a=e===Qt;return i(t.dataTypes[0])||!o["*"]&&i("*")}function V(e,t){var n,r,i=pe.ajaxSettings.flatOptions||{};for(r in t)void 0!==t[r]&&((i[r]?e:n||(n={}))[r]=t[r]);return n&&pe.extend(!0,e,n),e}function Y(e,t,n){for(var r,i,o,a,s=e.contents,u=e.dataTypes;"*"===u[0];)u.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(a in s)if(s[a]&&s[a].test(i)){u.unshift(a);break}if(u[0]in n)o=u[0];else{for(a in n){if(!u[0]||e.converters[a+" "+u[0]]){o=a;break}r||(r=a)}o=o||r}return o?(o!==u[0]&&u.unshift(o),n[o]):void 0}function J(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(a=l[u+" "+o]||l["* "+o],!a)for(i in l)if(s=i.split(" "),s[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){a===!0?a=l[i]:l[i]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(d){return{state:"parsererror",error:a?d:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}function G(e){return e.style&&e.style.display||pe.css(e,"display")}function Q(e){for(;e&&1===e.nodeType;){if("none"===G(e)||"hidden"===e.type)return!0;e=e.parentNode}return!1}function K(e,t,n,r){var i;if(pe.isArray(t))pe.each(t,function(t,i){n||nn.test(e)?r(e,i):K(e+"["+("object"==typeof i&&null!=i?t:"")+"]",i,n,r)});else if(n||"object"!==pe.type(t))r(e,t);else for(i in t)K(e+"["+i+"]",t[i],n,r)}function Z(){try{return new e.XMLHttpRequest}catch(t){}}function ee(){try{return new e.ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}function te(e){return pe.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}var ne=[],re=e.document,ie=ne.slice,oe=ne.concat,ae=ne.push,se=ne.indexOf,ue={},le=ue.toString,ce=ue.hasOwnProperty,de={},fe="1.12.0",pe=function(e,t){return new pe.fn.init(e,t)},he=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,me=/^-ms-/,ge=/-([\da-z])/gi,ve=function(e,t){return t.toUpperCase()};pe.fn=pe.prototype={jquery:fe,constructor:pe,selector:"",length:0,toArray:function(){return ie.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:ie.call(this)},pushStack:function(e){var t=pe.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e){return pe.each(this,e)},map:function(e){return this.pushStack(pe.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(ie.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:ae,sort:ne.sort,splice:ne.splice},pe.extend=pe.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||pe.isFunction(a)||(a={}),s===u&&(a=this,s--);u>s;s++)if(null!=(i=arguments[s]))for(r in i)e=a[r],n=i[r],a!==n&&(l&&n&&(pe.isPlainObject(n)||(t=pe.isArray(n)))?(t?(t=!1,o=e&&pe.isArray(e)?e:[]):o=e&&pe.isPlainObject(e)?e:{},a[r]=pe.extend(l,o,n)):void 0!==n&&(a[r]=n));return a},pe.extend({expando:"jQuery"+(fe+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===pe.type(e)},isArray:Array.isArray||function(e){return"array"===pe.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){var t=e&&e.toString();return!pe.isArray(e)&&t-parseFloat(t)+1>=0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},isPlainObject:function(e){var t;if(!e||"object"!==pe.type(e)||e.nodeType||pe.isWindow(e))return!1;try{if(e.constructor&&!ce.call(e,"constructor")&&!ce.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}if(!de.ownFirst)for(t in e)return ce.call(e,t);for(t in e);return void 0===t||ce.call(e,t)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?ue[le.call(e)]||"object":typeof e},globalEval:function(t){t&&pe.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(me,"ms-").replace(ge,ve)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var r,i=0;if(n(e))for(r=e.length;r>i&&t.call(e[i],i,e[i])!==!1;i++);else for(i in e)if(t.call(e[i],i,e[i])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(he,"")},makeArray:function(e,t){var r=t||[];return null!=e&&(n(Object(e))?pe.merge(r,"string"==typeof e?[e]:e):ae.call(r,e)),r},inArray:function(e,t,n){var r;if(t){if(se)return se.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;n>r;)e[i++]=t[r++];if(n!==n)for(;void 0!==t[r];)e[i++]=t[r++];return e.length=i,e},grep:function(e,t,n){for(var r,i=[],o=0,a=e.length,s=!n;a>o;o++)r=!t(e[o],o),r!==s&&i.push(e[o]);return i},map:function(e,t,r){var i,o,a=0,s=[];if(n(e))for(i=e.length;i>a;a++)o=t(e[a],a,r),null!=o&&s.push(o);else for(a in e)o=t(e[a],a,r),null!=o&&s.push(o);return oe.apply([],s)},guid:1,proxy:function(e,t){var n,r,i;return"string"==typeof t&&(i=e[t],t=e,e=i),pe.isFunction(e)?(n=ie.call(arguments,2),r=function(){return e.apply(t||this,n.concat(ie.call(arguments)))},r.guid=e.guid=e.guid||pe.guid++,r):void 0},now:function(){return+new Date},support:de}),"function"==typeof Symbol&&(pe.fn[Symbol.iterator]=ne[Symbol.iterator]),pe.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){ue["[object "+t+"]"]=t.toLowerCase()});var ye=function(e){function t(e,t,n,r){var i,o,a,s,u,l,d,p,h=t&&t.ownerDocument,m=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==m&&9!==m&&11!==m)return n;if(!r&&((t?t.ownerDocument||t:B)!==H&&j(t),t=t||H,M)){if(11!==m&&(l=ve.exec(e)))if(i=l[1]){if(9===m){if(!(a=t.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(h&&(a=h.getElementById(i))&&R(t,a)&&a.id===i)return n.push(a),n}else{if(l[2])return K.apply(n,t.getElementsByTagName(e)),n;if((i=l[3])&&w.getElementsByClassName&&t.getElementsByClassName)return K.apply(n,t.getElementsByClassName(i)),n}if(w.qsa&&!X[e+" "]&&(!_||!_.test(e))){if(1!==m)h=t,p=e;else if("object"!==t.nodeName.toLowerCase()){for((s=t.getAttribute("id"))?s=s.replace(xe,"\\$&"):t.setAttribute("id",s=P),d=N(e),o=d.length,u=fe.test(s)?"#"+s:"[id='"+s+"']";o--;)d[o]=u+" "+f(d[o]);p=d.join(","),h=ye.test(e)&&c(t.parentNode)||t}if(p)try{return K.apply(n,h.querySelectorAll(p)),n}catch(g){}finally{s===P&&t.removeAttribute("id")}}}return S(e.replace(se,"$1"),t,n,r)}function n(){function e(n,r){return t.push(n+" ")>T.cacheLength&&delete e[t.shift()],e[n+" "]=r}var t=[];return e}function r(e){return e[P]=!0,e}function i(e){var t=H.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split("|"),r=n.length;r--;)T.attrHandle[n[r]]=t}function a(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||V)-(~e.sourceIndex||V);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function u(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function l(e){return r(function(t){return t=+t,r(function(n,r){for(var i,o=e([],n.length,t),a=o.length;a--;)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}function c(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function d(){}function f(e){for(var t=0,n=e.length,r="";n>t;t++)r+=e[t].value;return r}function p(e,t,n){var r=t.dir,i=n&&"parentNode"===r,o=I++;return t.first?function(t,n,o){for(;t=t[r];)if(1===t.nodeType||i)return e(t,n,o)}:function(t,n,a){var s,u,l,c=[W,o];if(a){for(;t=t[r];)if((1===t.nodeType||i)&&e(t,n,a))return!0}else for(;t=t[r];)if(1===t.nodeType||i){if(l=t[P]||(t[P]={}),u=l[t.uniqueID]||(l[t.uniqueID]={}),(s=u[r])&&s[0]===W&&s[1]===o)return c[2]=s[2];if(u[r]=c,c[2]=e(t,n,a))return!0}}}function h(e){return e.length>1?function(t,n,r){for(var i=e.length;i--;)if(!e[i](t,n,r))return!1;return!0}:e[0]}function m(e,n,r){for(var i=0,o=n.length;o>i;i++)t(e,n[i],r);return r}function g(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;u>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),l&&t.push(s));return a}function v(e,t,n,i,o,a){return i&&!i[P]&&(i=v(i)),o&&!o[P]&&(o=v(o,a)),r(function(r,a,s,u){var l,c,d,f=[],p=[],h=a.length,v=r||m(t||"*",s.nodeType?[s]:s,[]),y=!e||!r&&t?v:g(v,f,e,s,u),x=n?o||(r?e:h||i)?[]:a:y;if(n&&n(y,x,s,u),i)for(l=g(x,p),i(l,[],s,u),c=l.length;c--;)(d=l[c])&&(x[p[c]]=!(y[p[c]]=d));if(r){if(o||e){if(o){for(l=[],c=x.length;c--;)(d=x[c])&&l.push(y[c]=d);o(null,x=[],l,u)}for(c=x.length;c--;)(d=x[c])&&(l=o?ee(r,d):f[c])>-1&&(r[l]=!(a[l]=d))}}else x=g(x===a?x.splice(h,x.length):x),o?o(null,a,x,u):K.apply(a,x)})}function y(e){for(var t,n,r,i=e.length,o=T.relative[e[0].type],a=o||T.relative[" "],s=o?1:0,u=p(function(e){return e===t},a,!0),l=p(function(e){return ee(t,e)>-1},a,!0),c=[function(e,n,r){var i=!o&&(r||n!==A)||((t=n).nodeType?u(e,n,r):l(e,n,r));return t=null,i}];i>s;s++)if(n=T.relative[e[s].type])c=[p(h(c),n)];else{if(n=T.filter[e[s].type].apply(null,e[s].matches),n[P]){for(r=++s;i>r&&!T.relative[e[r].type];r++);return v(s>1&&h(c),s>1&&f(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(se,"$1"),n,r>s&&y(e.slice(s,r)),i>r&&y(e=e.slice(r)),i>r&&f(e))}c.push(n)}return h(c)}function x(e,n){var i=n.length>0,o=e.length>0,a=function(r,a,s,u,l){var c,d,f,p=0,h="0",m=r&&[],v=[],y=A,x=r||o&&T.find.TAG("*",l),b=W+=null==y?1:Math.random()||.1,w=x.length;for(l&&(A=a===H||a||l);h!==w&&null!=(c=x[h]);h++){if(o&&c){for(d=0,a||c.ownerDocument===H||(j(c),s=!M);f=e[d++];)if(f(c,a||H,s)){u.push(c);break}l&&(W=b)}i&&((c=!f&&c)&&p--,r&&m.push(c))}if(p+=h,i&&h!==p){for(d=0;f=n[d++];)f(m,v,a,s);if(r){if(p>0)for(;h--;)m[h]||v[h]||(v[h]=G.call(u));v=g(v)}K.apply(u,v),l&&!r&&v.length>0&&p+n.length>1&&t.uniqueSort(u)}return l&&(W=b,A=y),m};return i?r(a):a}var b,w,T,C,E,N,k,S,A,D,L,j,H,q,M,_,F,O,R,P="sizzle"+1*new Date,B=e.document,W=0,I=0,$=n(),z=n(),X=n(),U=function(e,t){return e===t&&(L=!0),0},V=1<<31,Y={}.hasOwnProperty,J=[],G=J.pop,Q=J.push,K=J.push,Z=J.slice,ee=function(e,t){for(var n=0,r=e.length;r>n;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",ie="\\["+ne+"*("+re+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+re+"))|)"+ne+"*\\]",oe=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+ie+")*)|.*)\\)|)",ae=new RegExp(ne+"+","g"),se=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),ue=new RegExp("^"+ne+"*,"+ne+"*"),le=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),ce=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),de=new RegExp(oe),fe=new RegExp("^"+re+"$"),pe={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re+"|[*])"),ATTR:new RegExp("^"+ie),PSEUDO:new RegExp("^"+oe),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},he=/^(?:input|select|textarea|button)$/i,me=/^h\d$/i,ge=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,xe=/'|\\/g,be=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),we=function(e,t,n){var r="0x"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},Te=function(){j()};try{K.apply(J=Z.call(B.childNodes),B.childNodes),J[B.childNodes.length].nodeType}catch(Ce){K={apply:J.length?function(e,t){Q.apply(e,Z.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}w=t.support={},E=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},j=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:B;return r!==H&&9===r.nodeType&&r.documentElement?(H=r,q=H.documentElement,M=!E(H),(n=H.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",Te,!1):n.attachEvent&&n.attachEvent("onunload",Te)),w.attributes=i(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=i(function(e){return e.appendChild(H.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=ge.test(H.getElementsByClassName),w.getById=i(function(e){return q.appendChild(e).id=P,!H.getElementsByName||!H.getElementsByName(P).length}),w.getById?(T.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&M){var n=t.getElementById(e);return n?[n]:[]}},T.filter.ID=function(e){var t=e.replace(be,we);return function(e){return e.getAttribute("id")===t}}):(delete T.find.ID,T.filter.ID=function(e){var t=e.replace(be,we);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}}),T.find.TAG=w.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[i++];)1===n.nodeType&&r.push(n);return r}return o},T.find.CLASS=w.getElementsByClassName&&function(e,t){return"undefined"!=typeof t.getElementsByClassName&&M?t.getElementsByClassName(e):void 0},F=[],_=[],(w.qsa=ge.test(H.querySelectorAll))&&(i(function(e){q.appendChild(e).innerHTML="<a id='"+P+"'></a><select id='"+P+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&_.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||_.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+P+"-]").length||_.push("~="),e.querySelectorAll(":checked").length||_.push(":checked"),e.querySelectorAll("a#"+P+"+*").length||_.push(".#.+[+~]")}),i(function(e){var t=H.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&_.push("name"+ne+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||_.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),_.push(",.*:")})),(w.matchesSelector=ge.test(O=q.matches||q.webkitMatchesSelector||q.mozMatchesSelector||q.oMatchesSelector||q.msMatchesSelector))&&i(function(e){w.disconnectedMatch=O.call(e,"div"),O.call(e,"[s!='']:x"),F.push("!=",oe)}),_=_.length&&new RegExp(_.join("|")),F=F.length&&new RegExp(F.join("|")),t=ge.test(q.compareDocumentPosition),R=t||ge.test(q.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},U=t?function(e,t){if(e===t)return L=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!w.sortDetached&&t.compareDocumentPosition(e)===n?e===H||e.ownerDocument===B&&R(B,e)?-1:t===H||t.ownerDocument===B&&R(B,t)?1:D?ee(D,e)-ee(D,t):0:4&n?-1:1)}:function(e,t){if(e===t)return L=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,s=[e],u=[t];if(!i||!o)return e===H?-1:t===H?1:i?-1:o?1:D?ee(D,e)-ee(D,t):0;if(i===o)return a(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)u.unshift(n);for(;s[r]===u[r];)r++;return r?a(s[r],u[r]):s[r]===B?-1:u[r]===B?1:0},H):H},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==H&&j(e),n=n.replace(ce,"='$1']"),w.matchesSelector&&M&&!X[n+" "]&&(!F||!F.test(n))&&(!_||!_.test(n)))try{var r=O.call(e,n);if(r||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(i){}return t(n,H,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==H&&j(e),R(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==H&&j(e);var n=T.attrHandle[t.toLowerCase()],r=n&&Y.call(T.attrHandle,t.toLowerCase())?n(e,t,!M):void 0;return void 0!==r?r:w.attributes||!M?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],r=0,i=0;if(L=!w.detectDuplicates,D=!w.sortStable&&e.slice(0),e.sort(U),L){for(;t=e[i++];)t===e[i]&&(r=n.push(i));for(;r--;)e.splice(n[r],1)}return D=null,e},C=t.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=C(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r++];)n+=C(t);return n},T=t.selectors={cacheLength:50,createPseudo:r,match:pe,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(be,we),e[3]=(e[3]||e[4]||e[5]||"").replace(be,we),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return pe.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&de.test(n)&&(t=N(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(be,we).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=$[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&$(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,r){return function(i){var o=t.attr(i,e);return null==o?"!="===n:n?(o+="","="===n?o===r:"!="===n?o!==r:"^="===n?r&&0===o.indexOf(r):"*="===n?r&&o.indexOf(r)>-1:"$="===n?r&&o.slice(-r.length)===r:"~="===n?(" "+o.replace(ae," ")+" ").indexOf(r)>-1:"|="===n?o===r||o.slice(0,r.length+1)===r+"-":!1):!0}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,d,f,p,h,m=o!==a?"nextSibling":"previousSibling",g=t.parentNode,v=s&&t.nodeName.toLowerCase(),y=!u&&!s,x=!1;if(g){if(o){for(;m;){for(f=t;f=f[m];)if(s?f.nodeName.toLowerCase()===v:1===f.nodeType)return!1;h=m="only"===e&&!h&&"nextSibling"}return!0}if(h=[a?g.firstChild:g.lastChild],a&&y){for(f=g,d=f[P]||(f[P]={}),
c=d[f.uniqueID]||(d[f.uniqueID]={}),l=c[e]||[],p=l[0]===W&&l[1],x=p&&l[2],f=p&&g.childNodes[p];f=++p&&f&&f[m]||(x=p=0)||h.pop();)if(1===f.nodeType&&++x&&f===t){c[e]=[W,p,x];break}}else if(y&&(f=t,d=f[P]||(f[P]={}),c=d[f.uniqueID]||(d[f.uniqueID]={}),l=c[e]||[],p=l[0]===W&&l[1],x=p),x===!1)for(;(f=++p&&f&&f[m]||(x=p=0)||h.pop())&&((s?f.nodeName.toLowerCase()!==v:1!==f.nodeType)||!++x||(y&&(d=f[P]||(f[P]={}),c=d[f.uniqueID]||(d[f.uniqueID]={}),c[e]=[W,x]),f!==t)););return x-=i,x===r||x%r===0&&x/r>=0}}},PSEUDO:function(e,n){var i,o=T.pseudos[e]||T.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[P]?o(n):o.length>1?(i=[e,e,"",n],T.setFilters.hasOwnProperty(e.toLowerCase())?r(function(e,t){for(var r,i=o(e,n),a=i.length;a--;)r=ee(e,i[a]),e[r]=!(t[r]=i[a])}):function(e){return o(e,0,i)}):o}},pseudos:{not:r(function(e){var t=[],n=[],i=k(e.replace(se,"$1"));return i[P]?r(function(e,t,n,r){for(var o,a=i(e,null,r,[]),s=e.length;s--;)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,r,o){return t[0]=e,i(t,null,o,n),t[0]=null,!n.pop()}}),has:r(function(e){return function(n){return t(e,n).length>0}}),contains:r(function(e){return e=e.replace(be,we),function(t){return(t.textContent||t.innerText||C(t)).indexOf(e)>-1}}),lang:r(function(e){return fe.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(be,we).toLowerCase(),function(t){var n;do if(n=M?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===q},focus:function(e){return e===H.activeElement&&(!H.hasFocus||H.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!T.pseudos.empty(e)},header:function(e){return me.test(e.nodeName)},input:function(e){return he.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:l(function(){return[0]}),last:l(function(e,t){return[t-1]}),eq:l(function(e,t,n){return[0>n?n+t:n]}),even:l(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:l(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:l(function(e,t,n){for(var r=0>n?n+t:n;--r>=0;)e.push(r);return e}),gt:l(function(e,t,n){for(var r=0>n?n+t:n;++r<t;)e.push(r);return e})}},T.pseudos.nth=T.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})T.pseudos[b]=s(b);for(b in{submit:!0,reset:!0})T.pseudos[b]=u(b);return d.prototype=T.filters=T.pseudos,T.setFilters=new d,N=t.tokenize=function(e,n){var r,i,o,a,s,u,l,c=z[e+" "];if(c)return n?0:c.slice(0);for(s=e,u=[],l=T.preFilter;s;){(!r||(i=ue.exec(s)))&&(i&&(s=s.slice(i[0].length)||s),u.push(o=[])),r=!1,(i=le.exec(s))&&(r=i.shift(),o.push({value:r,type:i[0].replace(se," ")}),s=s.slice(r.length));for(a in T.filter)!(i=pe[a].exec(s))||l[a]&&!(i=l[a](i))||(r=i.shift(),o.push({value:r,type:a,matches:i}),s=s.slice(r.length));if(!r)break}return n?s.length:s?t.error(e):z(e,u).slice(0)},k=t.compile=function(e,t){var n,r=[],i=[],o=X[e+" "];if(!o){for(t||(t=N(e)),n=t.length;n--;)o=y(t[n]),o[P]?r.push(o):i.push(o);o=X(e,x(i,r)),o.selector=e}return o},S=t.select=function(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,d=!r&&N(e=l.selector||e);if(n=n||[],1===d.length){if(o=d[0]=d[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&w.getById&&9===t.nodeType&&M&&T.relative[o[1].type]){if(t=(T.find.ID(a.matches[0].replace(be,we),t)||[])[0],!t)return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(i=pe.needsContext.test(e)?0:o.length;i--&&(a=o[i],!T.relative[s=a.type]);)if((u=T.find[s])&&(r=u(a.matches[0].replace(be,we),ye.test(o[0].type)&&c(t.parentNode)||t))){if(o.splice(i,1),e=r.length&&f(o),!e)return K.apply(n,r),n;break}}return(l||k(e,d))(r,t,!M,n,!t||ye.test(e)&&c(t.parentNode)||t),n},w.sortStable=P.split("").sort(U).join("")===P,w.detectDuplicates=!!L,j(),w.sortDetached=i(function(e){return 1&e.compareDocumentPosition(H.createElement("div"))}),i(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&i(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),i(function(e){return null==e.getAttribute("disabled")})||o(te,function(e,t,n){var r;return n?void 0:e[t]===!0?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),t}(e);pe.find=ye,pe.expr=ye.selectors,pe.expr[":"]=pe.expr.pseudos,pe.uniqueSort=pe.unique=ye.uniqueSort,pe.text=ye.getText,pe.isXMLDoc=ye.isXML,pe.contains=ye.contains;var xe=function(e,t,n){for(var r=[],i=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&pe(e).is(n))break;r.push(e)}return r},be=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},we=pe.expr.match.needsContext,Te=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Ce=/^.[^:#\[\.,]*$/;pe.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?pe.find.matchesSelector(r,e)?[r]:[]:pe.find.matches(e,pe.grep(t,function(e){return 1===e.nodeType}))},pe.fn.extend({find:function(e){var t,n=[],r=this,i=r.length;if("string"!=typeof e)return this.pushStack(pe(e).filter(function(){for(t=0;i>t;t++)if(pe.contains(r[t],this))return!0}));for(t=0;i>t;t++)pe.find(e,r[t],n);return n=this.pushStack(i>1?pe.unique(n):n),n.selector=this.selector?this.selector+" "+e:e,n},filter:function(e){return this.pushStack(r(this,e||[],!1))},not:function(e){return this.pushStack(r(this,e||[],!0))},is:function(e){return!!r(this,"string"==typeof e&&we.test(e)?pe(e):e||[],!1).length}});var Ee,Ne=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ke=pe.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||Ee,"string"==typeof e){if(r="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:Ne.exec(e),!r||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof pe?t[0]:t,pe.merge(this,pe.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:re,!0)),Te.test(r[1])&&pe.isPlainObject(t))for(r in t)pe.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}if(i=re.getElementById(r[2]),i&&i.parentNode){if(i.id!==r[2])return Ee.find(e);this.length=1,this[0]=i}return this.context=re,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):pe.isFunction(e)?"undefined"!=typeof n.ready?n.ready(e):e(pe):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),pe.makeArray(e,this))};ke.prototype=pe.fn,Ee=pe(re);var Se=/^(?:parents|prev(?:Until|All))/,Ae={children:!0,contents:!0,next:!0,prev:!0};pe.fn.extend({has:function(e){var t,n=pe(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(pe.contains(this,n[t]))return!0})},closest:function(e,t){for(var n,r=0,i=this.length,o=[],a=we.test(e)||"string"!=typeof e?pe(e,t||this.context):0;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&pe.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?pe.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?pe.inArray(this[0],pe(e)):pe.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(pe.uniqueSort(pe.merge(this.get(),pe(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),pe.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return xe(e,"parentNode")},parentsUntil:function(e,t,n){return xe(e,"parentNode",n)},next:function(e){return i(e,"nextSibling")},prev:function(e){return i(e,"previousSibling")},nextAll:function(e){return xe(e,"nextSibling")},prevAll:function(e){return xe(e,"previousSibling")},nextUntil:function(e,t,n){return xe(e,"nextSibling",n)},prevUntil:function(e,t,n){return xe(e,"previousSibling",n)},siblings:function(e){return be((e.parentNode||{}).firstChild,e)},children:function(e){return be(e.firstChild)},contents:function(e){return pe.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:pe.merge([],e.childNodes)}},function(e,t){pe.fn[e]=function(n,r){var i=pe.map(this,t,n);return"Until"!==e.slice(-5)&&(r=n),r&&"string"==typeof r&&(i=pe.filter(r,i)),this.length>1&&(Ae[e]||(i=pe.uniqueSort(i)),Se.test(e)&&(i=i.reverse())),this.pushStack(i)}});var De=/\S+/g;pe.Callbacks=function(e){e="string"==typeof e?o(e):pe.extend({},e);var t,n,r,i,a=[],s=[],u=-1,l=function(){for(i=e.once,r=t=!0;s.length;u=-1)for(n=s.shift();++u<a.length;)a[u].apply(n[0],n[1])===!1&&e.stopOnFalse&&(u=a.length,n=!1);e.memory||(n=!1),t=!1,i&&(a=n?[]:"")},c={add:function(){return a&&(n&&!t&&(u=a.length-1,s.push(n)),function r(t){pe.each(t,function(t,n){pe.isFunction(n)?e.unique&&c.has(n)||a.push(n):n&&n.length&&"string"!==pe.type(n)&&r(n)})}(arguments),n&&!t&&l()),this},remove:function(){return pe.each(arguments,function(e,t){for(var n;(n=pe.inArray(t,a,n))>-1;)a.splice(n,1),u>=n&&u--}),this},has:function(e){return e?pe.inArray(e,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return i=s=[],a=n="",this},disabled:function(){return!a},lock:function(){return i=!0,n||c.disable(),this},locked:function(){return!!i},fireWith:function(e,n){return i||(n=n||[],n=[e,n.slice?n.slice():n],s.push(n),t||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},pe.extend({Deferred:function(e){var t=[["resolve","done",pe.Callbacks("once memory"),"resolved"],["reject","fail",pe.Callbacks("once memory"),"rejected"],["notify","progress",pe.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return pe.Deferred(function(n){pe.each(t,function(t,o){var a=pe.isFunction(e[t])&&e[t];i[o[1]](function(){var e=a&&a.apply(this,arguments);e&&pe.isFunction(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[o[0]+"With"](this===r?n.promise():this,a?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?pe.extend(e,r):r}},i={};return r.pipe=r.then,pe.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+"With"](this===i?r:this,arguments),this},i[o[0]+"With"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t,n,r,i=0,o=ie.call(arguments),a=o.length,s=1!==a||e&&pe.isFunction(e.promise)?a:0,u=1===s?e:pe.Deferred(),l=function(e,n,r){return function(i){n[e]=this,r[e]=arguments.length>1?ie.call(arguments):i,r===t?u.notifyWith(n,r):--s||u.resolveWith(n,r)}};if(a>1)for(t=new Array(a),n=new Array(a),r=new Array(a);a>i;i++)o[i]&&pe.isFunction(o[i].promise)?o[i].promise().progress(l(i,n,t)).done(l(i,r,o)).fail(u.reject):--s;return s||u.resolveWith(r,o),u.promise()}});var Le;pe.fn.ready=function(e){return pe.ready.promise().done(e),this},pe.extend({isReady:!1,readyWait:1,holdReady:function(e){e?pe.readyWait++:pe.ready(!0)},ready:function(e){(e===!0?--pe.readyWait:pe.isReady)||(pe.isReady=!0,e!==!0&&--pe.readyWait>0||(Le.resolveWith(re,[pe]),pe.fn.triggerHandler&&(pe(re).triggerHandler("ready"),pe(re).off("ready"))))}}),pe.ready.promise=function(t){if(!Le)if(Le=pe.Deferred(),"complete"===re.readyState)e.setTimeout(pe.ready);else if(re.addEventListener)re.addEventListener("DOMContentLoaded",s),e.addEventListener("load",s);else{re.attachEvent("onreadystatechange",s),e.attachEvent("onload",s);var n=!1;try{n=null==e.frameElement&&re.documentElement}catch(r){}n&&n.doScroll&&!function i(){if(!pe.isReady){try{n.doScroll("left")}catch(t){return e.setTimeout(i,50)}a(),pe.ready()}}()}return Le.promise(t)},pe.ready.promise();var je;for(je in pe(de))break;de.ownFirst="0"===je,de.inlineBlockNeedsLayout=!1,pe(function(){var e,t,n,r;n=re.getElementsByTagName("body")[0],n&&n.style&&(t=re.createElement("div"),r=re.createElement("div"),r.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",n.appendChild(r).appendChild(t),"undefined"!=typeof t.style.zoom&&(t.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",de.inlineBlockNeedsLayout=e=3===t.offsetWidth,e&&(n.style.zoom=1)),n.removeChild(r))}),function(){var e=re.createElement("div");de.deleteExpando=!0;try{delete e.test}catch(t){de.deleteExpando=!1}e=null}();var He=function(e){var t=pe.noData[(e.nodeName+" ").toLowerCase()],n=+e.nodeType||1;return 1!==n&&9!==n?!1:!t||t!==!0&&e.getAttribute("classid")===t},qe=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Me=/([A-Z])/g;pe.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(e){return e=e.nodeType?pe.cache[e[pe.expando]]:e[pe.expando],!!e&&!l(e)},data:function(e,t,n){return c(e,t,n)},removeData:function(e,t){return d(e,t)},_data:function(e,t,n){return c(e,t,n,!0)},_removeData:function(e,t){return d(e,t,!0)}}),pe.fn.extend({data:function(e,t){var n,r,i,o=this[0],a=o&&o.attributes;if(void 0===e){if(this.length&&(i=pe.data(o),1===o.nodeType&&!pe._data(o,"parsedAttrs"))){for(n=a.length;n--;)a[n]&&(r=a[n].name,0===r.indexOf("data-")&&(r=pe.camelCase(r.slice(5)),u(o,r,i[r])));pe._data(o,"parsedAttrs",!0)}return i}return"object"==typeof e?this.each(function(){pe.data(this,e)}):arguments.length>1?this.each(function(){pe.data(this,e,t)}):o?u(o,e,pe.data(o,e)):void 0},removeData:function(e){return this.each(function(){pe.removeData(this,e)})}}),pe.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=pe._data(e,t),n&&(!r||pe.isArray(n)?r=pe._data(e,t,pe.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=pe.queue(e,t),r=n.length,i=n.shift(),o=pe._queueHooks(e,t),a=function(){pe.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return pe._data(e,n)||pe._data(e,n,{empty:pe.Callbacks("once memory").add(function(){pe._removeData(e,t+"queue"),pe._removeData(e,n)})})}}),pe.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?pe.queue(this[0],e):void 0===t?this:this.each(function(){var n=pe.queue(this,e,t);pe._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&pe.dequeue(this,e)})},dequeue:function(e){return this.each(function(){pe.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=pe.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)n=pe._data(o[a],e+"queueHooks"),n&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}}),function(){var e;de.shrinkWrapBlocks=function(){if(null!=e)return e;e=!1;var t,n,r;return n=re.getElementsByTagName("body")[0],n&&n.style?(t=re.createElement("div"),r=re.createElement("div"),r.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",n.appendChild(r).appendChild(t),"undefined"!=typeof t.style.zoom&&(t.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",t.appendChild(re.createElement("div")).style.width="5px",e=3!==t.offsetWidth),n.removeChild(r),e):void 0}}();var _e=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Fe=new RegExp("^(?:([+-])=|)("+_e+")([a-z%]*)$","i"),Oe=["Top","Right","Bottom","Left"],Re=function(e,t){return e=t||e,"none"===pe.css(e,"display")||!pe.contains(e.ownerDocument,e)},Pe=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===pe.type(n)){i=!0;for(s in n)Pe(e,t,s,n[s],!0,o,a)}else if(void 0!==r&&(i=!0,pe.isFunction(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(pe(e),n)})),t))for(;u>s;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},Be=/^(?:checkbox|radio)$/i,We=/<([\w:-]+)/,Ie=/^$|\/(?:java|ecma)script/i,$e=/^\s+/,ze="abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";!function(){var e=re.createElement("div"),t=re.createDocumentFragment(),n=re.createElement("input");e.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",de.leadingWhitespace=3===e.firstChild.nodeType,de.tbody=!e.getElementsByTagName("tbody").length,de.htmlSerialize=!!e.getElementsByTagName("link").length,de.html5Clone="<:nav></:nav>"!==re.createElement("nav").cloneNode(!0).outerHTML,n.type="checkbox",n.checked=!0,t.appendChild(n),de.appendChecked=n.checked,e.innerHTML="<textarea>x</textarea>",de.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue,t.appendChild(e),n=re.createElement("input"),n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),e.appendChild(n),de.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,de.noCloneEvent=!!e.addEventListener,e[pe.expando]=1,de.attributes=!e.getAttribute(pe.expando)}();var Xe={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:de.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]};Xe.optgroup=Xe.option,Xe.tbody=Xe.tfoot=Xe.colgroup=Xe.caption=Xe.thead,Xe.th=Xe.td;var Ue=/<|&#?\w+;/,Ve=/<tbody/i;!function(){var t,n,r=re.createElement("div");for(t in{submit:!0,change:!0,focusin:!0})n="on"+t,(de[t]=n in e)||(r.setAttribute(n,"t"),de[t]=r.attributes[n].expando===!1);r=null}();var Ye=/^(?:input|select|textarea)$/i,Je=/^key/,Ge=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Qe=/^(?:focusinfocus|focusoutblur)$/,Ke=/^([^.]*)(?:\.(.+)|)/;pe.event={global:{},add:function(e,t,n,r,i){var o,a,s,u,l,c,d,f,p,h,m,g=pe._data(e);if(g){for(n.handler&&(u=n,n=u.handler,i=u.selector),n.guid||(n.guid=pe.guid++),(a=g.events)||(a=g.events={}),(c=g.handle)||(c=g.handle=function(e){return"undefined"==typeof pe||e&&pe.event.triggered===e.type?void 0:pe.event.dispatch.apply(c.elem,arguments)},c.elem=e),t=(t||"").match(De)||[""],s=t.length;s--;)o=Ke.exec(t[s])||[],p=m=o[1],h=(o[2]||"").split(".").sort(),p&&(l=pe.event.special[p]||{},p=(i?l.delegateType:l.bindType)||p,l=pe.event.special[p]||{},d=pe.extend({type:p,origType:m,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&pe.expr.match.needsContext.test(i),namespace:h.join(".")},u),(f=a[p])||(f=a[p]=[],f.delegateCount=0,l.setup&&l.setup.call(e,r,h,c)!==!1||(e.addEventListener?e.addEventListener(p,c,!1):e.attachEvent&&e.attachEvent("on"+p,c))),l.add&&(l.add.call(e,d),d.handler.guid||(d.handler.guid=n.guid)),i?f.splice(f.delegateCount++,0,d):f.push(d),pe.event.global[p]=!0);e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,d,f,p,h,m,g=pe.hasData(e)&&pe._data(e);if(g&&(c=g.events)){for(t=(t||"").match(De)||[""],l=t.length;l--;)if(s=Ke.exec(t[l])||[],p=m=s[1],h=(s[2]||"").split(".").sort(),p){for(d=pe.event.special[p]||{},p=(r?d.delegateType:d.bindType)||p,f=c[p]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),u=o=f.length;o--;)a=f[o],!i&&m!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&("**"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,d.remove&&d.remove.call(e,a));u&&!f.length&&(d.teardown&&d.teardown.call(e,h,g.handle)!==!1||pe.removeEvent(e,p,g.handle),delete c[p])}else for(p in c)pe.event.remove(e,p+t[l],n,r,!0);pe.isEmptyObject(c)&&(delete g.handle,pe._removeData(e,"events"))}},trigger:function(t,n,r,i){var o,a,s,u,l,c,d,f=[r||re],p=ce.call(t,"type")?t.type:t,h=ce.call(t,"namespace")?t.namespace.split("."):[];if(s=c=r=r||re,3!==r.nodeType&&8!==r.nodeType&&!Qe.test(p+pe.event.triggered)&&(p.indexOf(".")>-1&&(h=p.split("."),p=h.shift(),h.sort()),a=p.indexOf(":")<0&&"on"+p,t=t[pe.expando]?t:new pe.Event(p,"object"==typeof t&&t),t.isTrigger=i?2:3,t.namespace=h.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),n=null==n?[t]:pe.makeArray(n,[t]),l=pe.event.special[p]||{},i||!l.trigger||l.trigger.apply(r,n)!==!1)){if(!i&&!l.noBubble&&!pe.isWindow(r)){for(u=l.delegateType||p,Qe.test(u+p)||(s=s.parentNode);s;s=s.parentNode)f.push(s),c=s;c===(r.ownerDocument||re)&&f.push(c.defaultView||c.parentWindow||e)}for(d=0;(s=f[d++])&&!t.isPropagationStopped();)t.type=d>1?u:l.bindType||p,o=(pe._data(s,"events")||{})[t.type]&&pe._data(s,"handle"),o&&o.apply(s,n),o=a&&s[a],o&&o.apply&&He(s)&&(t.result=o.apply(s,n),t.result===!1&&t.preventDefault());if(t.type=p,!i&&!t.isDefaultPrevented()&&(!l._default||l._default.apply(f.pop(),n)===!1)&&He(r)&&a&&r[p]&&!pe.isWindow(r)){c=r[a],c&&(r[a]=null),pe.event.triggered=p;try{r[p]()}catch(m){}pe.event.triggered=void 0,c&&(r[a]=c)}return t.result}},dispatch:function(e){e=pe.event.fix(e);var t,n,r,i,o,a=[],s=ie.call(arguments),u=(pe._data(this,"events")||{})[e.type]||[],l=pe.event.special[e.type]||{};if(s[0]=e,e.delegateTarget=this,!l.preDispatch||l.preDispatch.call(this,e)!==!1){for(a=pe.event.handlers.call(this,e,u),t=0;(i=a[t++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!e.isImmediatePropagationStopped();)(!e.rnamespace||e.rnamespace.test(o.namespace))&&(e.handleObj=o,e.data=o.data,r=((pe.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s),void 0!==r&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,i,o,a=[],s=t.delegateCount,u=e.target;if(s&&u.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;u!=this;u=u.parentNode||this)if(1===u.nodeType&&(u.disabled!==!0||"click"!==e.type)){for(r=[],n=0;s>n;n++)o=t[n],i=o.selector+" ",void 0===r[i]&&(r[i]=o.needsContext?pe(i,this).index(u)>-1:pe.find(i,this,null,[u]).length),r[i]&&r.push(o);r.length&&a.push({elem:u,handlers:r})}return s<t.length&&a.push({elem:this,handlers:t.slice(s)}),a},fix:function(e){if(e[pe.expando])return e;var t,n,r,i=e.type,o=e,a=this.fixHooks[i];for(a||(this.fixHooks[i]=a=Ge.test(i)?this.mouseHooks:Je.test(i)?this.keyHooks:{}),r=a.props?this.props.concat(a.props):this.props,e=new pe.Event(o),t=r.length;t--;)n=r[t],e[n]=o[n];return e.target||(e.target=o.srcElement||re),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,a.filter?a.filter(e,o):e},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,r,i,o=t.button,a=t.fromElement;return null==e.pageX&&null!=t.clientX&&(r=e.target.ownerDocument||re,i=r.documentElement,n=r.body,e.pageX=t.clientX+(i&&i.scrollLeft||n&&n.scrollLeft||0)-(i&&i.clientLeft||n&&n.clientLeft||0),e.pageY=t.clientY+(i&&i.scrollTop||n&&n.scrollTop||0)-(i&&i.clientTop||n&&n.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?t.toElement:a),e.which||void 0===o||(e.which=1&o?1:2&o?3:4&o?2:0),e}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==b()&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){return this===b()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return pe.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(e){return pe.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n){var r=pe.extend(new pe.Event,n,{type:e,isSimulated:!0});pe.event.trigger(r,null,t),r.isDefaultPrevented()&&n.preventDefault()}},pe.removeEvent=re.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)}:function(e,t,n){var r="on"+t;e.detachEvent&&("undefined"==typeof e[r]&&(e[r]=null),e.detachEvent(r,n))},pe.Event=function(e,t){return this instanceof pe.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?y:x):this.type=e,t&&pe.extend(this,t),this.timeStamp=e&&e.timeStamp||pe.now(),void(this[pe.expando]=!0)):new pe.Event(e,t)},pe.Event.prototype={constructor:pe.Event,isDefaultPrevented:x,isPropagationStopped:x,isImmediatePropagationStopped:x,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=y,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=y,e&&!this.isSimulated&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=y,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},pe.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){pe.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return(!i||i!==r&&!pe.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),de.submit||(pe.event.special.submit={setup:function(){return pe.nodeName(this,"form")?!1:void pe.event.add(this,"click._submit keypress._submit",function(e){var t=e.target,n=pe.nodeName(t,"input")||pe.nodeName(t,"button")?pe.prop(t,"form"):void 0;n&&!pe._data(n,"submit")&&(pe.event.add(n,"submit._submit",function(e){e._submitBubble=!0}),pe._data(n,"submit",!0))})},postDispatch:function(e){e._submitBubble&&(delete e._submitBubble,this.parentNode&&!e.isTrigger&&pe.event.simulate("submit",this.parentNode,e))},teardown:function(){return pe.nodeName(this,"form")?!1:void pe.event.remove(this,"._submit")}}),de.change||(pe.event.special.change={setup:function(){return Ye.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(pe.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._justChanged=!0)}),pe.event.add(this,"click._change",function(e){this._justChanged&&!e.isTrigger&&(this._justChanged=!1),pe.event.simulate("change",this,e)})),!1):void pe.event.add(this,"beforeactivate._change",function(e){var t=e.target;Ye.test(t.nodeName)&&!pe._data(t,"change")&&(pe.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||pe.event.simulate("change",this.parentNode,e)}),pe._data(t,"change",!0))})},handle:function(e){var t=e.target;return this!==t||e.isSimulated||e.isTrigger||"radio"!==t.type&&"checkbox"!==t.type?e.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return pe.event.remove(this,"._change"),!Ye.test(this.nodeName)}}),de.focusin||pe.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){pe.event.simulate(t,e.target,pe.event.fix(e))};pe.event.special[t]={setup:function(){var r=this.ownerDocument||this,i=pe._data(r,t);i||r.addEventListener(e,n,!0),pe._data(r,t,(i||0)+1)},teardown:function(){var r=this.ownerDocument||this,i=pe._data(r,t)-1;i?pe._data(r,t,i):(r.removeEventListener(e,n,!0),pe._removeData(r,t))}}}),pe.fn.extend({on:function(e,t,n,r){return w(this,e,t,n,r)},one:function(e,t,n,r){return w(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,pe(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return(t===!1||"function"==typeof t)&&(n=t,t=void 0),n===!1&&(n=x),this.each(function(){pe.event.remove(this,e,n,t)})},trigger:function(e,t){return this.each(function(){pe.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?pe.event.trigger(e,t,n,!0):void 0}});var Ze=/ jQuery\d+="(?:null|\d+)"/g,et=new RegExp("<(?:"+ze+")[\\s/>]","i"),tt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,nt=/<script|<style|<link/i,rt=/checked\s*(?:[^=]|=\s*.checked.)/i,it=/^true\/(.*)/,ot=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,at=p(re),st=at.appendChild(re.createElement("div"));pe.extend({htmlPrefilter:function(e){return e.replace(tt,"<$1></$2>")},clone:function(e,t,n){var r,i,o,a,s,u=pe.contains(e.ownerDocument,e);if(de.html5Clone||pe.isXMLDoc(e)||!et.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(st.innerHTML=e.outerHTML,st.removeChild(o=st.firstChild)),!(de.noCloneEvent&&de.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||pe.isXMLDoc(e)))for(r=h(o),s=h(e),a=0;null!=(i=s[a]);++a)r[a]&&k(i,r[a]);if(t)if(n)for(s=s||h(e),r=r||h(o),a=0;null!=(i=s[a]);a++)N(i,r[a]);else N(e,o);return r=h(o,"script"),r.length>0&&m(r,!u&&h(e,"script")),r=s=i=null,o},cleanData:function(e,t){for(var n,r,i,o,a=0,s=pe.expando,u=pe.cache,l=de.attributes,c=pe.event.special;null!=(n=e[a]);a++)if((t||He(n))&&(i=n[s],o=i&&u[i])){if(o.events)for(r in o.events)c[r]?pe.event.remove(n,r):pe.removeEvent(n,r,o.handle);u[i]&&(delete u[i],l||"undefined"==typeof n.removeAttribute?n[s]=void 0:n.removeAttribute(s),ne.push(i))}}}),pe.fn.extend({domManip:S,detach:function(e){return A(this,e,!0)},remove:function(e){return A(this,e)},text:function(e){return Pe(this,function(e){return void 0===e?pe.text(this):this.empty().append((this[0]&&this[0].ownerDocument||re).createTextNode(e))},null,e,arguments.length)},append:function(){return S(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=T(this,e);t.appendChild(e)}})},prepend:function(){return S(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=T(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return S(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return S(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++){for(1===e.nodeType&&pe.cleanData(h(e,!1));e.firstChild;)e.removeChild(e.firstChild);e.options&&pe.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return pe.clone(this,e,t)})},html:function(e){return Pe(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e)return 1===t.nodeType?t.innerHTML.replace(Ze,""):void 0;if("string"==typeof e&&!nt.test(e)&&(de.htmlSerialize||!et.test(e))&&(de.leadingWhitespace||!$e.test(e))&&!Xe[(We.exec(e)||["",""])[1].toLowerCase()]){e=pe.htmlPrefilter(e);try{for(;r>n;n++)t=this[n]||{},1===t.nodeType&&(pe.cleanData(h(t,!1)),t.innerHTML=e);t=0}catch(i){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return S(this,arguments,function(t){var n=this.parentNode;
pe.inArray(this,e)<0&&(pe.cleanData(h(this)),n&&n.replaceChild(t,this))},e)}}),pe.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){pe.fn[e]=function(e){for(var n,r=0,i=[],o=pe(e),a=o.length-1;a>=r;r++)n=r===a?this:this.clone(!0),pe(o[r])[t](n),ae.apply(i,n.get());return this.pushStack(i)}});var ut,lt={HTML:"block",BODY:"block"},ct=/^margin/,dt=new RegExp("^("+_e+")(?!px)[a-z%]+$","i"),ft=function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i},pt=re.documentElement;!function(){function t(){var t,c,d=re.documentElement;d.appendChild(u),l.style.cssText="-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",n=i=s=!1,r=a=!0,e.getComputedStyle&&(c=e.getComputedStyle(l),n="1%"!==(c||{}).top,s="2px"===(c||{}).marginLeft,i="4px"===(c||{width:"4px"}).width,l.style.marginRight="50%",r="4px"===(c||{marginRight:"4px"}).marginRight,t=l.appendChild(re.createElement("div")),t.style.cssText=l.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",t.style.marginRight=t.style.width="0",l.style.width="1px",a=!parseFloat((e.getComputedStyle(t)||{}).marginRight),l.removeChild(t)),l.style.display="none",o=0===l.getClientRects().length,o&&(l.style.display="",l.innerHTML="<table><tr><td></td><td>t</td></tr></table>",t=l.getElementsByTagName("td"),t[0].style.cssText="margin:0;border:0;padding:0;display:none",o=0===t[0].offsetHeight,o&&(t[0].style.display="",t[1].style.display="none",o=0===t[0].offsetHeight)),d.removeChild(u)}var n,r,i,o,a,s,u=re.createElement("div"),l=re.createElement("div");l.style&&(l.style.cssText="float:left;opacity:.5",de.opacity="0.5"===l.style.opacity,de.cssFloat=!!l.style.cssFloat,l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",de.clearCloneStyle="content-box"===l.style.backgroundClip,u=re.createElement("div"),u.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",l.innerHTML="",u.appendChild(l),de.boxSizing=""===l.style.boxSizing||""===l.style.MozBoxSizing||""===l.style.WebkitBoxSizing,pe.extend(de,{reliableHiddenOffsets:function(){return null==n&&t(),o},boxSizingReliable:function(){return null==n&&t(),i},pixelMarginRight:function(){return null==n&&t(),r},pixelPosition:function(){return null==n&&t(),n},reliableMarginRight:function(){return null==n&&t(),a},reliableMarginLeft:function(){return null==n&&t(),s}}))}();var ht,mt,gt=/^(top|right|bottom|left)$/;e.getComputedStyle?(ht=function(t){var n=t.ownerDocument.defaultView;return n.opener||(n=e),n.getComputedStyle(t)},mt=function(e,t,n){var r,i,o,a,s=e.style;return n=n||ht(e),a=n?n.getPropertyValue(t)||n[t]:void 0,n&&(""!==a||pe.contains(e.ownerDocument,e)||(a=pe.style(e,t)),!de.pixelMarginRight()&&dt.test(a)&&ct.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0===a?a:a+""}):pt.currentStyle&&(ht=function(e){return e.currentStyle},mt=function(e,t,n){var r,i,o,a,s=e.style;return n=n||ht(e),a=n?n[t]:void 0,null==a&&s&&s[t]&&(a=s[t]),dt.test(a)&&!gt.test(t)&&(r=s.left,i=e.runtimeStyle,o=i&&i.left,o&&(i.left=e.currentStyle.left),s.left="fontSize"===t?"1em":a,a=s.pixelLeft+"px",s.left=r,o&&(i.left=o)),void 0===a?a:a+""||"auto"});var vt=/alpha\([^)]*\)/i,yt=/opacity\s*=\s*([^)]*)/i,xt=/^(none|table(?!-c[ea]).+)/,bt=new RegExp("^("+_e+")(.*)$","i"),wt={position:"absolute",visibility:"hidden",display:"block"},Tt={letterSpacing:"0",fontWeight:"400"},Ct=["Webkit","O","Moz","ms"],Et=re.createElement("div").style;pe.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=mt(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":de.cssFloat?"cssFloat":"styleFloat"},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=pe.camelCase(t),u=e.style;if(t=pe.cssProps[s]||(pe.cssProps[s]=H(s)||s),a=pe.cssHooks[t]||pe.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:u[t];if(o=typeof n,"string"===o&&(i=Fe.exec(n))&&i[1]&&(n=f(e,t,i),o="number"),null!=n&&n===n&&("number"===o&&(n+=i&&i[3]||(pe.cssNumber[s]?"":"px")),de.clearCloneStyle||""!==n||0!==t.indexOf("background")||(u[t]="inherit"),!(a&&"set"in a&&void 0===(n=a.set(e,n,r)))))try{u[t]=n}catch(l){}}},css:function(e,t,n,r){var i,o,a,s=pe.camelCase(t);return t=pe.cssProps[s]||(pe.cssProps[s]=H(s)||s),a=pe.cssHooks[t]||pe.cssHooks[s],a&&"get"in a&&(o=a.get(e,!0,n)),void 0===o&&(o=mt(e,t,r)),"normal"===o&&t in Tt&&(o=Tt[t]),""===n||n?(i=parseFloat(o),n===!0||isFinite(i)?i||0:o):o}}),pe.each(["height","width"],function(e,t){pe.cssHooks[t]={get:function(e,n,r){return n?xt.test(pe.css(e,"display"))&&0===e.offsetWidth?ft(e,wt,function(){return F(e,t,r)}):F(e,t,r):void 0},set:function(e,n,r){var i=r&&ht(e);return M(e,n,r?_(e,t,r,de.boxSizing&&"border-box"===pe.css(e,"boxSizing",!1,i),i):0)}}}),de.opacity||(pe.cssHooks.opacity={get:function(e,t){return yt.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=pe.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=r&&r.filter||n.filter||"";n.zoom=1,(t>=1||""===t)&&""===pe.trim(o.replace(vt,""))&&n.removeAttribute&&(n.removeAttribute("filter"),""===t||r&&!r.filter)||(n.filter=vt.test(o)?o.replace(vt,i):o+" "+i)}}),pe.cssHooks.marginRight=j(de.reliableMarginRight,function(e,t){return t?ft(e,{display:"inline-block"},mt,[e,"marginRight"]):void 0}),pe.cssHooks.marginLeft=j(de.reliableMarginLeft,function(e,t){return t?(parseFloat(mt(e,"marginLeft"))||(pe.contains(e.ownerDocument,e)?e.getBoundingClientRect().left-ft(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}):0))+"px":void 0}),pe.each({margin:"",padding:"",border:"Width"},function(e,t){pe.cssHooks[e+t]={expand:function(n){for(var r=0,i={},o="string"==typeof n?n.split(" "):[n];4>r;r++)i[e+Oe[r]+t]=o[r]||o[r-2]||o[0];return i}},ct.test(e)||(pe.cssHooks[e+t].set=M)}),pe.fn.extend({css:function(e,t){return Pe(this,function(e,t,n){var r,i,o={},a=0;if(pe.isArray(t)){for(r=ht(e),i=t.length;i>a;a++)o[t[a]]=pe.css(e,t[a],!1,r);return o}return void 0!==n?pe.style(e,t,n):pe.css(e,t)},e,t,arguments.length>1)},show:function(){return q(this,!0)},hide:function(){return q(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Re(this)?pe(this).show():pe(this).hide()})}}),pe.Tween=O,O.prototype={constructor:O,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||pe.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(pe.cssNumber[n]?"":"px")},cur:function(){var e=O.propHooks[this.prop];return e&&e.get?e.get(this):O.propHooks._default.get(this)},run:function(e){var t,n=O.propHooks[this.prop];return this.options.duration?this.pos=t=pe.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):O.propHooks._default.set(this),this}},O.prototype.init.prototype=O.prototype,O.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=pe.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){pe.fx.step[e.prop]?pe.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[pe.cssProps[e.prop]]&&!pe.cssHooks[e.prop]?e.elem[e.prop]=e.now:pe.style(e.elem,e.prop,e.now+e.unit)}}},O.propHooks.scrollTop=O.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},pe.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},pe.fx=O.prototype.init,pe.fx.step={};var Nt,kt,St=/^(?:toggle|show|hide)$/,At=/queueHooks$/;pe.Animation=pe.extend($,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return f(n.elem,e,Fe.exec(t),n),n}]},tweener:function(e,t){pe.isFunction(e)?(t=e,e=["*"]):e=e.match(De);for(var n,r=0,i=e.length;i>r;r++)n=e[r],$.tweeners[n]=$.tweeners[n]||[],$.tweeners[n].unshift(t)},prefilters:[W],prefilter:function(e,t){t?$.prefilters.unshift(e):$.prefilters.push(e)}}),pe.speed=function(e,t,n){var r=e&&"object"==typeof e?pe.extend({},e):{complete:n||!n&&t||pe.isFunction(e)&&e,duration:e,easing:n&&t||t&&!pe.isFunction(t)&&t};return r.duration=pe.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in pe.fx.speeds?pe.fx.speeds[r.duration]:pe.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){pe.isFunction(r.old)&&r.old.call(this),r.queue&&pe.dequeue(this,r.queue)},r},pe.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Re).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=pe.isEmptyObject(e),o=pe.speed(t,n,r),a=function(){var t=$(this,pe.extend({},e),o);(i||pe._data(this,"finish"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,t,n){var r=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,i=null!=e&&e+"queueHooks",o=pe.timers,a=pe._data(this);if(i)a[i]&&a[i].stop&&r(a[i]);else for(i in a)a[i]&&a[i].stop&&At.test(i)&&r(a[i]);for(i=o.length;i--;)o[i].elem!==this||null!=e&&o[i].queue!==e||(o[i].anim.stop(n),t=!1,o.splice(i,1));(t||!n)&&pe.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=pe._data(this),r=n[e+"queue"],i=n[e+"queueHooks"],o=pe.timers,a=r?r.length:0;for(n.finish=!0,pe.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}}),pe.each(["toggle","show","hide"],function(e,t){var n=pe.fn[t];pe.fn[t]=function(e,r,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(P(t,!0),e,r,i)}}),pe.each({slideDown:P("show"),slideUp:P("hide"),slideToggle:P("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){pe.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),pe.timers=[],pe.fx.tick=function(){var e,t=pe.timers,n=0;for(Nt=pe.now();n<t.length;n++)e=t[n],e()||t[n]!==e||t.splice(n--,1);t.length||pe.fx.stop(),Nt=void 0},pe.fx.timer=function(e){pe.timers.push(e),e()?pe.fx.start():pe.timers.pop()},pe.fx.interval=13,pe.fx.start=function(){kt||(kt=e.setInterval(pe.fx.tick,pe.fx.interval))},pe.fx.stop=function(){e.clearInterval(kt),kt=null},pe.fx.speeds={slow:600,fast:200,_default:400},pe.fn.delay=function(t,n){return t=pe.fx?pe.fx.speeds[t]||t:t,n=n||"fx",this.queue(n,function(n,r){var i=e.setTimeout(n,t);r.stop=function(){e.clearTimeout(i)}})},function(){var e,t=re.createElement("input"),n=re.createElement("div"),r=re.createElement("select"),i=r.appendChild(re.createElement("option"));n=re.createElement("div"),n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",e=n.getElementsByTagName("a")[0],t.setAttribute("type","checkbox"),n.appendChild(t),e=n.getElementsByTagName("a")[0],e.style.cssText="top:1px",de.getSetAttribute="t"!==n.className,de.style=/top/.test(e.getAttribute("style")),de.hrefNormalized="/a"===e.getAttribute("href"),de.checkOn=!!t.value,de.optSelected=i.selected,de.enctype=!!re.createElement("form").enctype,r.disabled=!0,de.optDisabled=!i.disabled,t=re.createElement("input"),t.setAttribute("value",""),de.input=""===t.getAttribute("value"),t.value="t",t.setAttribute("type","radio"),de.radioValue="t"===t.value}();var Dt=/\r/g;pe.fn.extend({val:function(e){var t,n,r,i=this[0];{if(arguments.length)return r=pe.isFunction(e),this.each(function(n){var i;1===this.nodeType&&(i=r?e.call(this,n,pe(this).val()):e,null==i?i="":"number"==typeof i?i+="":pe.isArray(i)&&(i=pe.map(i,function(e){return null==e?"":e+""})),t=pe.valHooks[this.type]||pe.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,i,"value")||(this.value=i))});if(i)return t=pe.valHooks[i.type]||pe.valHooks[i.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(i,"value"))?n:(n=i.value,"string"==typeof n?n.replace(Dt,""):null==n?"":n)}}}),pe.extend({valHooks:{option:{get:function(e){var t=pe.find.attr(e,"value");return null!=t?t:pe.trim(pe.text(e))}},select:{get:function(e){for(var t,n,r=e.options,i=e.selectedIndex,o="select-one"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,u=0>i?s:o?i:0;s>u;u++)if(n=r[u],(n.selected||u===i)&&(de.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!pe.nodeName(n.parentNode,"optgroup"))){if(t=pe(n).val(),o)return t;a.push(t)}return a},set:function(e,t){for(var n,r,i=e.options,o=pe.makeArray(t),a=i.length;a--;)if(r=i[a],pe.inArray(pe.valHooks.option.get(r),o)>=0)try{r.selected=n=!0}catch(s){r.scrollHeight}else r.selected=!1;return n||(e.selectedIndex=-1),i}}}}),pe.each(["radio","checkbox"],function(){pe.valHooks[this]={set:function(e,t){return pe.isArray(t)?e.checked=pe.inArray(pe(e).val(),t)>-1:void 0}},de.checkOn||(pe.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Lt,jt,Ht=pe.expr.attrHandle,qt=/^(?:checked|selected)$/i,Mt=de.getSetAttribute,_t=de.input;pe.fn.extend({attr:function(e,t){return Pe(this,pe.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){pe.removeAttr(this,e)})}}),pe.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?pe.prop(e,t,n):(1===o&&pe.isXMLDoc(e)||(t=t.toLowerCase(),i=pe.attrHooks[t]||(pe.expr.match.bool.test(t)?jt:Lt)),void 0!==n?null===n?void pe.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:(r=pe.find.attr(e,t),null==r?void 0:r))},attrHooks:{type:{set:function(e,t){if(!de.radioValue&&"radio"===t&&pe.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(De);if(o&&1===e.nodeType)for(;n=o[i++];)r=pe.propFix[n]||n,pe.expr.match.bool.test(n)?_t&&Mt||!qt.test(n)?e[r]=!1:e[pe.camelCase("default-"+n)]=e[r]=!1:pe.attr(e,n,""),e.removeAttribute(Mt?n:r)}}),jt={set:function(e,t,n){return t===!1?pe.removeAttr(e,n):_t&&Mt||!qt.test(n)?e.setAttribute(!Mt&&pe.propFix[n]||n,n):e[pe.camelCase("default-"+n)]=e[n]=!0,n}},pe.each(pe.expr.match.bool.source.match(/\w+/g),function(e,t){var n=Ht[t]||pe.find.attr;_t&&Mt||!qt.test(t)?Ht[t]=function(e,t,r){var i,o;return r||(o=Ht[t],Ht[t]=i,i=null!=n(e,t,r)?t.toLowerCase():null,Ht[t]=o),i}:Ht[t]=function(e,t,n){return n?void 0:e[pe.camelCase("default-"+t)]?t.toLowerCase():null}}),_t&&Mt||(pe.attrHooks.value={set:function(e,t,n){return pe.nodeName(e,"input")?void(e.defaultValue=t):Lt&&Lt.set(e,t,n)}}),Mt||(Lt={set:function(e,t,n){var r=e.getAttributeNode(n);return r||e.setAttributeNode(r=e.ownerDocument.createAttribute(n)),r.value=t+="","value"===n||t===e.getAttribute(n)?t:void 0}},Ht.id=Ht.name=Ht.coords=function(e,t,n){var r;return n?void 0:(r=e.getAttributeNode(t))&&""!==r.value?r.value:null},pe.valHooks.button={get:function(e,t){var n=e.getAttributeNode(t);return n&&n.specified?n.value:void 0},set:Lt.set},pe.attrHooks.contenteditable={set:function(e,t,n){Lt.set(e,""===t?!1:t,n)}},pe.each(["width","height"],function(e,t){pe.attrHooks[t]={set:function(e,n){return""===n?(e.setAttribute(t,"auto"),n):void 0}}})),de.style||(pe.attrHooks.style={get:function(e){return e.style.cssText||void 0},set:function(e,t){return e.style.cssText=t+""}});var Ft=/^(?:input|select|textarea|button|object)$/i,Ot=/^(?:a|area)$/i;pe.fn.extend({prop:function(e,t){return Pe(this,pe.prop,e,t,arguments.length>1)},removeProp:function(e){return e=pe.propFix[e]||e,this.each(function(){try{this[e]=void 0,delete this[e]}catch(t){}})}}),pe.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&pe.isXMLDoc(e)||(t=pe.propFix[t]||t,i=pe.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=pe.find.attr(e,"tabindex");return t?parseInt(t,10):Ft.test(e.nodeName)||Ot.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),de.hrefNormalized||pe.each(["href","src"],function(e,t){pe.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}}),de.optSelected||(pe.propHooks.selected={get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}}),pe.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){pe.propFix[this.toLowerCase()]=this}),de.enctype||(pe.propFix.enctype="encoding");var Rt=/[\t\r\n\f]/g;pe.fn.extend({addClass:function(e){var t,n,r,i,o,a,s,u=0;if(pe.isFunction(e))return this.each(function(t){pe(this).addClass(e.call(this,t,z(this)))});if("string"==typeof e&&e)for(t=e.match(De)||[];n=this[u++];)if(i=z(n),r=1===n.nodeType&&(" "+i+" ").replace(Rt," ")){for(a=0;o=t[a++];)r.indexOf(" "+o+" ")<0&&(r+=o+" ");s=pe.trim(r),i!==s&&pe.attr(n,"class",s)}return this},removeClass:function(e){var t,n,r,i,o,a,s,u=0;if(pe.isFunction(e))return this.each(function(t){pe(this).removeClass(e.call(this,t,z(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(De)||[];n=this[u++];)if(i=z(n),r=1===n.nodeType&&(" "+i+" ").replace(Rt," ")){for(a=0;o=t[a++];)for(;r.indexOf(" "+o+" ")>-1;)r=r.replace(" "+o+" "," ");s=pe.trim(r),i!==s&&pe.attr(n,"class",s)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):pe.isFunction(e)?this.each(function(n){pe(this).toggleClass(e.call(this,n,z(this),t),t)}):this.each(function(){var t,r,i,o;if("string"===n)for(r=0,i=pe(this),o=e.match(De)||[];t=o[r++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else(void 0===e||"boolean"===n)&&(t=z(this),t&&pe._data(this,"__className__",t),pe.attr(this,"class",t||e===!1?"":pe._data(this,"__className__")||""))})},hasClass:function(e){var t,n,r=0;for(t=" "+e+" ";n=this[r++];)if(1===n.nodeType&&(" "+z(n)+" ").replace(Rt," ").indexOf(t)>-1)return!0;return!1}}),pe.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){pe.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),pe.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}});var Pt=e.location,Bt=pe.now(),Wt=/\?/,It=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;pe.parseJSON=function(t){if(e.JSON&&e.JSON.parse)return e.JSON.parse(t+"");var n,r=null,i=pe.trim(t+"");return i&&!pe.trim(i.replace(It,function(e,t,i,o){return n&&t&&(r=0),0===r?e:(n=i||t,r+=!o-!i,"")}))?Function("return "+i)():pe.error("Invalid JSON: "+t)},pe.parseXML=function(t){var n,r;if(!t||"string"!=typeof t)return null;try{e.DOMParser?(r=new e.DOMParser,n=r.parseFromString(t,"text/xml")):(n=new e.ActiveXObject("Microsoft.XMLDOM"),n.async="false",n.loadXML(t))}catch(i){n=void 0}return n&&n.documentElement&&!n.getElementsByTagName("parsererror").length||pe.error("Invalid XML: "+t),n};var $t=/#.*$/,zt=/([?&])_=[^&]*/,Xt=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Ut=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Vt=/^(?:GET|HEAD)$/,Yt=/^\/\//,Jt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Gt={},Qt={},Kt="*/".concat("*"),Zt=Pt.href,en=Jt.exec(Zt.toLowerCase())||[];pe.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Zt,type:"GET",isLocal:Ut.test(en[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Kt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":pe.parseJSON,"text xml":pe.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?V(V(e,pe.ajaxSettings),t):V(pe.ajaxSettings,e)},ajaxPrefilter:X(Gt),ajaxTransport:X(Qt),ajax:function(t,n){function r(t,n,r,i){var o,d,y,x,w,C=n;2!==b&&(b=2,u&&e.clearTimeout(u),c=void 0,s=i||"",T.readyState=t>0?4:0,o=t>=200&&300>t||304===t,r&&(x=Y(f,T,r)),x=J(f,x,T,o),o?(f.ifModified&&(w=T.getResponseHeader("Last-Modified"),w&&(pe.lastModified[a]=w),w=T.getResponseHeader("etag"),w&&(pe.etag[a]=w)),204===t||"HEAD"===f.type?C="nocontent":304===t?C="notmodified":(C=x.state,d=x.data,y=x.error,o=!y)):(y=C,(t||!C)&&(C="error",0>t&&(t=0))),T.status=t,T.statusText=(n||C)+"",o?m.resolveWith(p,[d,C,T]):m.rejectWith(p,[T,C,y]),T.statusCode(v),v=void 0,l&&h.trigger(o?"ajaxSuccess":"ajaxError",[T,f,o?d:y]),g.fireWith(p,[T,C]),l&&(h.trigger("ajaxComplete",[T,f]),--pe.active||pe.event.trigger("ajaxStop")))}"object"==typeof t&&(n=t,t=void 0),n=n||{};var i,o,a,s,u,l,c,d,f=pe.ajaxSetup({},n),p=f.context||f,h=f.context&&(p.nodeType||p.jquery)?pe(p):pe.event,m=pe.Deferred(),g=pe.Callbacks("once memory"),v=f.statusCode||{},y={},x={},b=0,w="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!d)for(d={};t=Xt.exec(s);)d[t[1].toLowerCase()]=t[2];t=d[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?s:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=x[n]=x[n]||e,y[e]=t),this},overrideMimeType:function(e){return b||(f.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)v[t]=[v[t],e[t]];else T.always(e[T.status]);return this},abort:function(e){var t=e||w;return c&&c.abort(t),r(0,t),this}};if(m.promise(T).complete=g.add,T.success=T.done,T.error=T.fail,f.url=((t||f.url||Zt)+"").replace($t,"").replace(Yt,en[1]+"//"),f.type=n.method||n.type||f.method||f.type,f.dataTypes=pe.trim(f.dataType||"*").toLowerCase().match(De)||[""],null==f.crossDomain&&(i=Jt.exec(f.url.toLowerCase()),f.crossDomain=!(!i||i[1]===en[1]&&i[2]===en[2]&&(i[3]||("http:"===i[1]?"80":"443"))===(en[3]||("http:"===en[1]?"80":"443")))),f.data&&f.processData&&"string"!=typeof f.data&&(f.data=pe.param(f.data,f.traditional)),U(Gt,f,n,T),2===b)return T;l=pe.event&&f.global,l&&0===pe.active++&&pe.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Vt.test(f.type),a=f.url,f.hasContent||(f.data&&(a=f.url+=(Wt.test(a)?"&":"?")+f.data,delete f.data),f.cache===!1&&(f.url=zt.test(a)?a.replace(zt,"$1_="+Bt++):a+(Wt.test(a)?"&":"?")+"_="+Bt++)),f.ifModified&&(pe.lastModified[a]&&T.setRequestHeader("If-Modified-Since",pe.lastModified[a]),pe.etag[a]&&T.setRequestHeader("If-None-Match",pe.etag[a])),(f.data&&f.hasContent&&f.contentType!==!1||n.contentType)&&T.setRequestHeader("Content-Type",f.contentType),T.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Kt+"; q=0.01":""):f.accepts["*"]);for(o in f.headers)T.setRequestHeader(o,f.headers[o]);if(f.beforeSend&&(f.beforeSend.call(p,T,f)===!1||2===b))return T.abort();w="abort";for(o in{success:1,error:1,complete:1})T[o](f[o]);if(c=U(Qt,f,n,T)){if(T.readyState=1,l&&h.trigger("ajaxSend",[T,f]),2===b)return T;f.async&&f.timeout>0&&(u=e.setTimeout(function(){T.abort("timeout")},f.timeout));try{b=1,c.send(y,r)}catch(C){if(!(2>b))throw C;r(-1,C)}}else r(-1,"No Transport");return T},getJSON:function(e,t,n){return pe.get(e,t,n,"json")},getScript:function(e,t){return pe.get(e,void 0,t,"script")}}),pe.each(["get","post"],function(e,t){pe[t]=function(e,n,r,i){return pe.isFunction(n)&&(i=i||r,r=n,n=void 0),pe.ajax(pe.extend({url:e,type:t,dataType:i,data:n,success:r},pe.isPlainObject(e)&&e))}}),pe._evalUrl=function(e){return pe.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},pe.fn.extend({wrapAll:function(e){if(pe.isFunction(e))return this.each(function(t){pe(this).wrapAll(e.call(this,t))});if(this[0]){var t=pe(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstChild&&1===e.firstChild.nodeType;)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return pe.isFunction(e)?this.each(function(t){pe(this).wrapInner(e.call(this,t))}):this.each(function(){var t=pe(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=pe.isFunction(e);return this.each(function(n){pe(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){pe.nodeName(this,"body")||pe(this).replaceWith(this.childNodes)}).end()}}),pe.expr.filters.hidden=function(e){return de.reliableHiddenOffsets()?e.offsetWidth<=0&&e.offsetHeight<=0&&!e.getClientRects().length:Q(e)},pe.expr.filters.visible=function(e){return!pe.expr.filters.hidden(e)};var tn=/%20/g,nn=/\[\]$/,rn=/\r?\n/g,on=/^(?:submit|button|image|reset|file)$/i,an=/^(?:input|select|textarea|keygen)/i;pe.param=function(e,t){var n,r=[],i=function(e,t){t=pe.isFunction(t)?t():null==t?"":t,r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=pe.ajaxSettings&&pe.ajaxSettings.traditional),pe.isArray(e)||e.jquery&&!pe.isPlainObject(e))pe.each(e,function(){i(this.name,this.value)});else for(n in e)K(n,e[n],t,i);return r.join("&").replace(tn,"+")},pe.fn.extend({serialize:function(){return pe.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=pe.prop(this,"elements");return e?pe.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!pe(this).is(":disabled")&&an.test(this.nodeName)&&!on.test(e)&&(this.checked||!Be.test(e))}).map(function(e,t){var n=pe(this).val();return null==n?null:pe.isArray(n)?pe.map(n,function(e){return{name:t.name,value:e.replace(rn,"\r\n")}}):{name:t.name,value:n.replace(rn,"\r\n")}}).get()}}),pe.ajaxSettings.xhr=void 0!==e.ActiveXObject?function(){return this.isLocal?ee():re.documentMode>8?Z():/^(get|post|head|put|delete|options)$/i.test(this.type)&&Z()||ee()}:Z;var sn=0,un={},ln=pe.ajaxSettings.xhr();e.attachEvent&&e.attachEvent("onunload",function(){for(var e in un)un[e](void 0,!0)}),de.cors=!!ln&&"withCredentials"in ln,ln=de.ajax=!!ln,ln&&pe.ajaxTransport(function(t){if(!t.crossDomain||de.cors){var n;return{send:function(r,i){var o,a=t.xhr(),s=++sn;if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(o in t.xhrFields)a[o]=t.xhrFields[o];t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(o in r)void 0!==r[o]&&a.setRequestHeader(o,r[o]+"");a.send(t.hasContent&&t.data||null),n=function(e,r){var o,u,l;if(n&&(r||4===a.readyState))if(delete un[s],n=void 0,a.onreadystatechange=pe.noop,r)4!==a.readyState&&a.abort();else{l={},o=a.status,"string"==typeof a.responseText&&(l.text=a.responseText);try{u=a.statusText}catch(c){u=""}o||!t.isLocal||t.crossDomain?1223===o&&(o=204):o=l.text?200:404}l&&i(o,u,l,a.getAllResponseHeaders())},t.async?4===a.readyState?e.setTimeout(n):a.onreadystatechange=un[s]=n:n()},abort:function(){n&&n(void 0,!0)}}}}),pe.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),pe.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return pe.globalEval(e),e}}}),pe.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),pe.ajaxTransport("script",function(e){if(e.crossDomain){var t,n=re.head||pe("head")[0]||re.documentElement;return{send:function(r,i){t=re.createElement("script"),t.async=!0,e.scriptCharset&&(t.charset=e.scriptCharset),t.src=e.url,t.onload=t.onreadystatechange=function(e,n){(n||!t.readyState||/loaded|complete/.test(t.readyState))&&(t.onload=t.onreadystatechange=null,t.parentNode&&t.parentNode.removeChild(t),t=null,n||i(200,"success"))},n.insertBefore(t,n.firstChild)},abort:function(){t&&t.onload(void 0,!0)}}}});var cn=[],dn=/(=)\?(?=&|$)|\?\?/;pe.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=cn.pop()||pe.expando+"_"+Bt++;return this[e]=!0,e}}),pe.ajaxPrefilter("json jsonp",function(t,n,r){var i,o,a,s=t.jsonp!==!1&&(dn.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&dn.test(t.data)&&"data");return s||"jsonp"===t.dataTypes[0]?(i=t.jsonpCallback=pe.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(dn,"$1"+i):t.jsonp!==!1&&(t.url+=(Wt.test(t.url)?"&":"?")+t.jsonp+"="+i),t.converters["script json"]=function(){return a||pe.error(i+" was not called"),a[0]},t.dataTypes[0]="json",o=e[i],e[i]=function(){a=arguments},r.always(function(){void 0===o?pe(e).removeProp(i):e[i]=o,t[i]&&(t.jsonpCallback=n.jsonpCallback,cn.push(i)),a&&pe.isFunction(o)&&o(a[0]),a=o=void 0}),"script"):void 0}),de.createHTMLDocument=function(){if(!re.implementation.createHTMLDocument)return!1;var e=re.implementation.createHTMLDocument("");return e.body.innerHTML="<form></form><form></form>",2===e.body.childNodes.length}(),pe.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||(de.createHTMLDocument?re.implementation.createHTMLDocument(""):re);var r=Te.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=v([e],t,i),i&&i.length&&pe(i).remove(),pe.merge([],r.childNodes))};var fn=pe.fn.load;pe.fn.load=function(e,t,n){if("string"!=typeof e&&fn)return fn.apply(this,arguments);var r,i,o,a=this,s=e.indexOf(" ");return s>-1&&(r=pe.trim(e.slice(s,e.length)),e=e.slice(0,s)),pe.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),a.length>0&&pe.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?pe("<div>").append(pe.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(a,o||[e.responseText,t,e])})}),this},pe.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){pe.fn[t]=function(e){return this.on(t,e)}}),pe.expr.filters.animated=function(e){return pe.grep(pe.timers,function(t){return e===t.elem}).length},pe.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l,c=pe.css(e,"position"),d=pe(e),f={};"static"===c&&(e.style.position="relative"),s=d.offset(),o=pe.css(e,"top"),u=pe.css(e,"left"),l=("absolute"===c||"fixed"===c)&&pe.inArray("auto",[o,u])>-1,l?(r=d.position(),a=r.top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),pe.isFunction(t)&&(t=t.call(e,n,pe.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):d.css(f)}},pe.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){pe.offset.setOffset(this,e,t)});var t,n,r={top:0,left:0},i=this[0],o=i&&i.ownerDocument;if(o)return t=o.documentElement,pe.contains(t,i)?("undefined"!=typeof i.getBoundingClientRect&&(r=i.getBoundingClientRect()),n=te(o),{top:r.top+(n.pageYOffset||t.scrollTop)-(t.clientTop||0),left:r.left+(n.pageXOffset||t.scrollLeft)-(t.clientLeft||0)}):r},position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return"fixed"===pe.css(r,"position")?t=r.getBoundingClientRect():(e=this.offsetParent(),
t=this.offset(),pe.nodeName(e[0],"html")||(n=e.offset()),n.top+=pe.css(e[0],"borderTopWidth",!0)-e.scrollTop(),n.left+=pe.css(e[0],"borderLeftWidth",!0)-e.scrollLeft()),{top:t.top-n.top-pe.css(r,"marginTop",!0),left:t.left-n.left-pe.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&!pe.nodeName(e,"html")&&"static"===pe.css(e,"position");)e=e.offsetParent;return e||pt})}}),pe.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n=/Y/.test(t);pe.fn[e]=function(r){return Pe(this,function(e,r,i){var o=te(e);return void 0===i?o?t in o?o[t]:o.document.documentElement[r]:e[r]:void(o?o.scrollTo(n?pe(o).scrollLeft():i,n?i:pe(o).scrollTop()):e[r]=i)},e,r,arguments.length,null)}}),pe.each(["top","left"],function(e,t){pe.cssHooks[t]=j(de.pixelPosition,function(e,n){return n?(n=mt(e,t),dt.test(n)?pe(e).position()[t]+"px":n):void 0})}),pe.each({Height:"height",Width:"width"},function(e,t){pe.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,r){pe.fn[r]=function(r,i){var o=arguments.length&&(n||"boolean"!=typeof r),a=n||(r===!0||i===!0?"margin":"border");return Pe(this,function(t,n,r){var i;return pe.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+e],i["scroll"+e],t.body["offset"+e],i["offset"+e],i["client"+e])):void 0===r?pe.css(t,n,a):pe.style(t,n,r,a)},t,o?r:void 0,o,null)}})}),pe.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),pe.fn.size=function(){return this.length},pe.fn.andSelf=pe.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return pe});var pn=e.jQuery,hn=e.$;return pe.noConflict=function(t){return e.$===pe&&(e.$=hn),t&&e.jQuery===pe&&(e.jQuery=pn),pe},t||(e.jQuery=e.$=pe),pe});
!function(e,t,n){function r(n){var r=t.console;o[n]||(o[n]=!0,e.migrateWarnings.push(n),r&&r.warn&&!e.migrateMute&&(r.warn("JQMIGRATE: "+n),e.migrateTrace&&r.trace&&r.trace()))}function a(t,n,a,o){if(Object.defineProperty)try{return void Object.defineProperty(t,n,{configurable:!0,enumerable:!0,get:function(){return r(o),a},set:function(e){r(o),a=e}})}catch(i){}e._definePropertyBroken=!0,t[n]=a}var o={};e.migrateWarnings=[],!e.migrateMute&&t.console&&t.console.log&&t.console.log("JQMIGRATE: Logging is active"),e.migrateTrace===n&&(e.migrateTrace=!0),e.migrateReset=function(){o={},e.migrateWarnings.length=0},"BackCompat"===document.compatMode&&r("jQuery is not compatible with Quirks Mode");var i=e("<input/>",{size:1}).attr("size")&&e.attrFn,s=e.attr,u=e.attrHooks.value&&e.attrHooks.value.get||function(){return null},c=e.attrHooks.value&&e.attrHooks.value.set||function(){return n},d=/^(?:input|button)$/i,l=/^[238]$/,p=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,f=/^(?:checked|selected)$/i;a(e,"attrFn",i||{},"jQuery.attrFn is deprecated"),e.attr=function(t,a,o,u){var c=a.toLowerCase(),g=t&&t.nodeType;return u&&(s.length<4&&r("jQuery.fn.attr( props, pass ) is deprecated"),t&&!l.test(g)&&(i?a in i:e.isFunction(e.fn[a])))?e(t)[a](o):("type"===a&&o!==n&&d.test(t.nodeName)&&t.parentNode&&r("Can't change the 'type' of an input or button in IE 6/7/8"),!e.attrHooks[c]&&p.test(c)&&(e.attrHooks[c]={get:function(t,r){var a,o=e.prop(t,r);return o===!0||"boolean"!=typeof o&&(a=t.getAttributeNode(r))&&a.nodeValue!==!1?r.toLowerCase():n},set:function(t,n,r){var a;return n===!1?e.removeAttr(t,r):(a=e.propFix[r]||r,a in t&&(t[a]=!0),t.setAttribute(r,r.toLowerCase())),r}},f.test(c)&&r("jQuery.fn.attr('"+c+"') may use property instead of attribute")),s.call(e,t,a,o))},e.attrHooks.value={get:function(e,t){var n=(e.nodeName||"").toLowerCase();return"button"===n?u.apply(this,arguments):("input"!==n&&"option"!==n&&r("jQuery.fn.attr('value') no longer gets properties"),t in e?e.value:null)},set:function(e,t){var n=(e.nodeName||"").toLowerCase();return"button"===n?c.apply(this,arguments):("input"!==n&&"option"!==n&&r("jQuery.fn.attr('value', val) no longer sets properties"),void(e.value=t))}};var g,h,v=e.fn.init,m=e.parseJSON,y=/^([^<]*)(<[\w\W]+>)([^>]*)$/;e.fn.init=function(t,n,a){var o;return t&&"string"==typeof t&&!e.isPlainObject(n)&&(o=y.exec(e.trim(t)))&&o[0]&&("<"!==t.charAt(0)&&r("$(html) HTML strings must start with '<' character"),o[3]&&r("$(html) HTML text after last tag is ignored"),"#"===o[0].charAt(0)&&(r("HTML string cannot start with a '#' character"),e.error("JQMIGRATE: Invalid selector string (XSS)")),n&&n.context&&(n=n.context),e.parseHTML)?v.call(this,e.parseHTML(o[2],n,!0),n,a):v.apply(this,arguments)},e.fn.init.prototype=e.fn,e.parseJSON=function(e){return e||null===e?m.apply(this,arguments):(r("jQuery.parseJSON requires a valid JSON string"),null)},e.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},e.browser||(g=e.uaMatch(navigator.userAgent),h={},g.browser&&(h[g.browser]=!0,h.version=g.version),h.chrome?h.webkit=!0:h.webkit&&(h.safari=!0),e.browser=h),a(e,"browser",e.browser,"jQuery.browser is deprecated"),e.sub=function(){function t(e,n){return new t.fn.init(e,n)}e.extend(!0,t,this),t.superclass=this,t.fn=t.prototype=this(),t.fn.constructor=t,t.sub=this.sub,t.fn.init=function(r,a){return a&&a instanceof e&&!(a instanceof t)&&(a=t(a)),e.fn.init.call(this,r,a,n)},t.fn.init.prototype=t.fn;var n=t(document);return r("jQuery.sub() is deprecated"),t},e.ajaxSetup({converters:{"text json":e.parseJSON}});var b=e.fn.data;e.fn.data=function(t){var a,o,i=this[0];return!i||"events"!==t||1!==arguments.length||(a=e.data(i,t),o=e._data(i,t),a!==n&&a!==o||o===n)?b.apply(this,arguments):(r("Use of jQuery.fn.data('events') is deprecated"),o)};var w=/\/(java|ecma)script/i,j=e.fn.andSelf||e.fn.addBack;e.fn.andSelf=function(){return r("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"),j.apply(this,arguments)},e.clean||(e.clean=function(t,n,a,o){n=n||document,n=!n.nodeType&&n[0]||n,n=n.ownerDocument||n,r("jQuery.clean() is deprecated");var i,s,u,c,d=[];if(e.merge(d,e.buildFragment(t,n).childNodes),a)for(u=function(e){return!e.type||w.test(e.type)?o?o.push(e.parentNode?e.parentNode.removeChild(e):e):a.appendChild(e):void 0},i=0;null!=(s=d[i]);i++)e.nodeName(s,"script")&&u(s)||(a.appendChild(s),"undefined"!=typeof s.getElementsByTagName&&(c=e.grep(e.merge([],s.getElementsByTagName("script")),u),d.splice.apply(d,[i+1,0].concat(c)),i+=c.length));return d});var x=e.event.add,Q=e.event.remove,k=e.event.trigger,N=e.fn.toggle,T=e.fn.live,S=e.fn.die,C="ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess",M=new RegExp("\\b(?:"+C+")\\b"),H=/(?:^|\s)hover(\.\S+|)\b/,A=function(t){return"string"!=typeof t||e.event.special.hover?t:(H.test(t)&&r("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"),t&&t.replace(H,"mouseenter$1 mouseleave$1"))};e.event.props&&"attrChange"!==e.event.props[0]&&e.event.props.unshift("attrChange","attrName","relatedNode","srcElement"),e.event.dispatch&&a(e.event,"handle",e.event.dispatch,"jQuery.event.handle is undocumented and deprecated"),e.event.add=function(e,t,n,a,o){e!==document&&M.test(t)&&r("AJAX events should be attached to document: "+t),x.call(this,e,A(t||""),n,a,o)},e.event.remove=function(e,t,n,r,a){Q.call(this,e,A(t)||"",n,r,a)},e.fn.error=function(){var e=Array.prototype.slice.call(arguments,0);return r("jQuery.fn.error() is deprecated"),e.splice(0,0,"error"),arguments.length?this.bind.apply(this,e):(this.triggerHandler.apply(this,e),this)},e.fn.toggle=function(t,n){if(!e.isFunction(t)||!e.isFunction(n))return N.apply(this,arguments);r("jQuery.fn.toggle(handler, handler...) is deprecated");var a=arguments,o=t.guid||e.guid++,i=0,s=function(n){var r=(e._data(this,"lastToggle"+t.guid)||0)%i;return e._data(this,"lastToggle"+t.guid,r+1),n.preventDefault(),a[r].apply(this,arguments)||!1};for(s.guid=o;i<a.length;)a[i++].guid=o;return this.click(s)},e.fn.live=function(t,n,a){return r("jQuery.fn.live() is deprecated"),T?T.apply(this,arguments):(e(this.context).on(t,this.selector,n,a),this)},e.fn.die=function(t,n){return r("jQuery.fn.die() is deprecated"),S?S.apply(this,arguments):(e(this.context).off(t,this.selector||"**",n),this)},e.event.trigger=function(e,t,n,a){return n||M.test(e)||r("Global events are undocumented and deprecated"),k.call(this,e,t,n||document,a)},e.each(C.split("|"),function(t,n){e.event.special[n]={setup:function(){var t=this;return t!==document&&(e.event.add(document,n+"."+e.guid,function(){e.event.trigger(n,null,t,!0)}),e._data(this,n,e.guid++)),!1},teardown:function(){return this!==document&&e.event.remove(document,n+"."+e._data(this,n)),!1}}})}(jQuery,window);
"function"!=typeof Object.create&&(Object.create=function(t){function i(){}return i.prototype=t,new i}),function(t,i,s){var e={init:function(i,s){this.$elem=t(s),this.options=t.extend({},t.fn.owlCarousel.options,this.$elem.data(),i),this.userOptions=i,this.loadContent()},loadContent:function(){function i(t){var i,s="";if("function"==typeof e.options.jsonSuccess)e.options.jsonSuccess.apply(this,[t]);else{for(i in t.owl)t.owl.hasOwnProperty(i)&&(s+=t.owl[i].item);e.$elem.html(s)}e.logIn()}var s,e=this;"function"==typeof e.options.beforeInit&&e.options.beforeInit.apply(this,[e.$elem]),"string"==typeof e.options.jsonPath?(s=e.options.jsonPath,t.getJSON(s,i)):e.logIn()},logIn:function(){this.$elem.data("owl-originalStyles",this.$elem.attr("style")),this.$elem.data("owl-originalClasses",this.$elem.attr("class")),this.$elem.css({opacity:0}),this.orignalItems=this.options.items,this.checkBrowser(),this.wrapperWidth=0,this.checkVisible=null,this.setVars()},setVars:function(){return 0===this.$elem.children().length?!1:(this.baseClass(),this.eventTypes(),this.$userItems=this.$elem.children(),this.itemsAmount=this.$userItems.length,this.wrapItems(),this.$owlItems=this.$elem.find(".owl-item"),this.$owlWrapper=this.$elem.find(".owl-wrapper"),this.playDirection="next",this.prevItem=0,this.prevArr=[0],this.currentItem=0,this.customEvents(),void this.onStartup())},onStartup:function(){this.updateItems(),this.calculateAll(),this.buildControls(),this.updateControls(),this.response(),this.moveEvents(),this.stopOnHover(),this.owlStatus(),!1!==this.options.transitionStyle&&this.transitionTypes(this.options.transitionStyle),!0===this.options.autoPlay&&(this.options.autoPlay=5e3),this.play(),this.$elem.find(".owl-wrapper").css("display","block"),this.$elem.is(":visible")?this.$elem.css("opacity",1):this.watchVisibility(),this.onstartup=!1,this.eachMoveUpdate(),"function"==typeof this.options.afterInit&&this.options.afterInit.apply(this,[this.$elem])},eachMoveUpdate:function(){!0===this.options.lazyLoad&&this.lazyLoad(),!0===this.options.autoHeight&&this.autoHeight(),this.onVisibleItems(),"function"==typeof this.options.afterAction&&this.options.afterAction.apply(this,[this.$elem])},updateVars:function(){"function"==typeof this.options.beforeUpdate&&this.options.beforeUpdate.apply(this,[this.$elem]),this.watchVisibility(),this.updateItems(),this.calculateAll(),this.updatePosition(),this.updateControls(),this.eachMoveUpdate(),"function"==typeof this.options.afterUpdate&&this.options.afterUpdate.apply(this,[this.$elem])},reload:function(){var t=this;i.setTimeout(function(){t.updateVars()},0)},watchVisibility:function(){var t=this;return!1!==t.$elem.is(":visible")?!1:(t.$elem.css({opacity:0}),i.clearInterval(t.autoPlayInterval),i.clearInterval(t.checkVisible),void(t.checkVisible=i.setInterval(function(){t.$elem.is(":visible")&&(t.reload(),t.$elem.animate({opacity:1},200),i.clearInterval(t.checkVisible))},500)))},wrapItems:function(){this.$userItems.wrapAll('<div class="owl-wrapper">').wrap('<div class="owl-item"></div>'),this.$elem.find(".owl-wrapper").wrap('<div class="owl-wrapper-outer">'),this.wrapperOuter=this.$elem.find(".owl-wrapper-outer"),this.$elem.css("display","block")},baseClass:function(){var t=this.$elem.hasClass(this.options.baseClass),i=this.$elem.hasClass(this.options.theme);t||this.$elem.addClass(this.options.baseClass),i||this.$elem.addClass(this.options.theme)},updateItems:function(){var i,s;if(!1===this.options.responsive)return!1;if(!0===this.options.singleItem)return this.options.items=this.orignalItems=1,this.options.itemsCustom=!1,this.options.itemsDesktop=!1,this.options.itemsDesktopSmall=!1,this.options.itemsTablet=!1,this.options.itemsTabletSmall=!1,this.options.itemsMobile=!1;if(i=t(this.options.responsiveBaseWidth).width(),i>(this.options.itemsDesktop[0]||this.orignalItems)&&(this.options.items=this.orignalItems),!1!==this.options.itemsCustom)for(this.options.itemsCustom.sort(function(t,i){return t[0]-i[0]}),s=0;s<this.options.itemsCustom.length;s+=1)this.options.itemsCustom[s][0]<=i&&(this.options.items=this.options.itemsCustom[s][1]);else i<=this.options.itemsDesktop[0]&&!1!==this.options.itemsDesktop&&(this.options.items=this.options.itemsDesktop[1]),i<=this.options.itemsDesktopSmall[0]&&!1!==this.options.itemsDesktopSmall&&(this.options.items=this.options.itemsDesktopSmall[1]),i<=this.options.itemsTablet[0]&&!1!==this.options.itemsTablet&&(this.options.items=this.options.itemsTablet[1]),i<=this.options.itemsTabletSmall[0]&&!1!==this.options.itemsTabletSmall&&(this.options.items=this.options.itemsTabletSmall[1]),i<=this.options.itemsMobile[0]&&!1!==this.options.itemsMobile&&(this.options.items=this.options.itemsMobile[1]);this.options.items>this.itemsAmount&&!0===this.options.itemsScaleUp&&(this.options.items=this.itemsAmount)},response:function(){var s,e,o=this;return!0!==o.options.responsive?!1:(e=t(i).width(),o.resizer=function(){t(i).width()!==e&&(!1!==o.options.autoPlay&&i.clearInterval(o.autoPlayInterval),i.clearTimeout(s),s=i.setTimeout(function(){e=t(i).width(),o.updateVars()},o.options.responsiveRefreshRate))},void t(i).resize(o.resizer))},updatePosition:function(){this.jumpTo(this.currentItem),!1!==this.options.autoPlay&&this.checkAp()},appendItemsSizes:function(){var i=this,s=0,e=i.itemsAmount-i.options.items;i.$owlItems.each(function(o){var n=t(this);n.css({width:i.itemWidth}).data("owl-item",Number(o)),(0===o%i.options.items||o===e)&&(o>e||(s+=1)),n.data("owl-roundPages",s)})},appendWrapperSizes:function(){this.$owlWrapper.css({width:this.$owlItems.length*this.itemWidth*2,left:0}),this.appendItemsSizes()},calculateAll:function(){this.calculateWidth(),this.appendWrapperSizes(),this.loops(),this.max()},calculateWidth:function(){this.itemWidth=Math.round(this.$elem.width()/this.options.items)},max:function(){var t=-1*(this.itemsAmount*this.itemWidth-this.options.items*this.itemWidth);return this.options.items>this.itemsAmount?this.maximumPixels=t=this.maximumItem=0:(this.maximumItem=this.itemsAmount-this.options.items,this.maximumPixels=t),t},min:function(){return 0},loops:function(){var i,s,e=0,o=0;for(this.positionsInArray=[0],this.pagesInArray=[],i=0;i<this.itemsAmount;i+=1)o+=this.itemWidth,this.positionsInArray.push(-o),!0===this.options.scrollPerPage&&(s=t(this.$owlItems[i]),s=s.data("owl-roundPages"),s!==e&&(this.pagesInArray[e]=this.positionsInArray[i],e=s))},buildControls:function(){(!0===this.options.navigation||!0===this.options.pagination)&&(this.owlControls=t('<div class="owl-controls"/>').toggleClass("clickable",!this.browser.isTouch).appendTo(this.$elem)),!0===this.options.pagination&&this.buildPagination(),!0===this.options.navigation&&this.buildButtons()},buildButtons:function(){var i=this,s=t('<div class="owl-buttons"/>');i.owlControls.append(s),i.buttonPrev=t("<div/>",{"class":"owl-prev",html:i.options.navigationText[0]||""}),i.buttonNext=t("<div/>",{"class":"owl-next",html:i.options.navigationText[1]||""}),s.append(i.buttonPrev).append(i.buttonNext),s.on("touchstart.owlControls mousedown.owlControls",'div[class^="owl"]',function(t){t.preventDefault()}),s.on("touchend.owlControls mouseup.owlControls",'div[class^="owl"]',function(s){s.preventDefault(),t(this).hasClass("owl-next")?i.next():i.prev()})},buildPagination:function(){var i=this;i.paginationWrapper=t('<div class="owl-pagination"/>'),i.owlControls.append(i.paginationWrapper),i.paginationWrapper.on("touchend.owlControls mouseup.owlControls",".owl-page",function(s){s.preventDefault(),Number(t(this).data("owl-page"))!==i.currentItem&&i.goTo(Number(t(this).data("owl-page")),!0)})},updatePagination:function(){var i,s,e,o,n,a;if(!1===this.options.pagination)return!1;for(this.paginationWrapper.html(""),i=0,s=this.itemsAmount-this.itemsAmount%this.options.items,o=0;o<this.itemsAmount;o+=1)0===o%this.options.items&&(i+=1,s===o&&(e=this.itemsAmount-this.options.items),n=t("<div/>",{"class":"owl-page"}),a=t("<span></span>",{text:!0===this.options.paginationNumbers?i:"","class":!0===this.options.paginationNumbers?"owl-numbers":""}),n.append(a),n.data("owl-page",s===o?e:o),n.data("owl-roundPages",i),this.paginationWrapper.append(n));this.checkPagination()},checkPagination:function(){var i=this;return!1===i.options.pagination?!1:void i.paginationWrapper.find(".owl-page").each(function(){t(this).data("owl-roundPages")===t(i.$owlItems[i.currentItem]).data("owl-roundPages")&&(i.paginationWrapper.find(".owl-page").removeClass("active"),t(this).addClass("active"))})},checkNavigation:function(){return!1===this.options.navigation?!1:void(!1===this.options.rewindNav&&(0===this.currentItem&&0===this.maximumItem?(this.buttonPrev.addClass("disabled"),this.buttonNext.addClass("disabled")):0===this.currentItem&&0!==this.maximumItem?(this.buttonPrev.addClass("disabled"),this.buttonNext.removeClass("disabled")):this.currentItem===this.maximumItem?(this.buttonPrev.removeClass("disabled"),this.buttonNext.addClass("disabled")):0!==this.currentItem&&this.currentItem!==this.maximumItem&&(this.buttonPrev.removeClass("disabled"),this.buttonNext.removeClass("disabled"))))},updateControls:function(){this.updatePagination(),this.checkNavigation(),this.owlControls&&(this.options.items>=this.itemsAmount?this.owlControls.hide():this.owlControls.show())},destroyControls:function(){this.owlControls&&this.owlControls.remove()},next:function(t){if(this.isTransition)return!1;if(this.currentItem+=!0===this.options.scrollPerPage?this.options.items:1,this.currentItem>this.maximumItem+(!0===this.options.scrollPerPage?this.options.items-1:0)){if(!0!==this.options.rewindNav)return this.currentItem=this.maximumItem,!1;this.currentItem=0,t="rewind"}this.goTo(this.currentItem,t)},prev:function(t){if(this.isTransition)return!1;if(this.currentItem=!0===this.options.scrollPerPage&&0<this.currentItem&&this.currentItem<this.options.items?0:this.currentItem-(!0===this.options.scrollPerPage?this.options.items:1),0>this.currentItem){if(!0!==this.options.rewindNav)return this.currentItem=0,!1;this.currentItem=this.maximumItem,t="rewind"}this.goTo(this.currentItem,t)},goTo:function(t,s,e){var o=this;return o.isTransition?!1:("function"==typeof o.options.beforeMove&&o.options.beforeMove.apply(this,[o.$elem]),t>=o.maximumItem?t=o.maximumItem:0>=t&&(t=0),o.currentItem=o.owl.currentItem=t,!1!==o.options.transitionStyle&&"drag"!==e&&1===o.options.items&&!0===o.browser.support3d?(o.swapSpeed(0),!0===o.browser.support3d?o.transition3d(o.positionsInArray[t]):o.css2slide(o.positionsInArray[t],1),o.afterGo(),o.singleItemTransition(),!1):(t=o.positionsInArray[t],!0===o.browser.support3d?(o.isCss3Finish=!1,!0===s?(o.swapSpeed("paginationSpeed"),i.setTimeout(function(){o.isCss3Finish=!0},o.options.paginationSpeed)):"rewind"===s?(o.swapSpeed(o.options.rewindSpeed),i.setTimeout(function(){o.isCss3Finish=!0},o.options.rewindSpeed)):(o.swapSpeed("slideSpeed"),i.setTimeout(function(){o.isCss3Finish=!0},o.options.slideSpeed)),o.transition3d(t)):!0===s?o.css2slide(t,o.options.paginationSpeed):"rewind"===s?o.css2slide(t,o.options.rewindSpeed):o.css2slide(t,o.options.slideSpeed),void o.afterGo()))},jumpTo:function(t){"function"==typeof this.options.beforeMove&&this.options.beforeMove.apply(this,[this.$elem]),t>=this.maximumItem||-1===t?t=this.maximumItem:0>=t&&(t=0),this.swapSpeed(0),!0===this.browser.support3d?this.transition3d(this.positionsInArray[t]):this.css2slide(this.positionsInArray[t],1),this.currentItem=this.owl.currentItem=t,this.afterGo()},afterGo:function(){this.prevArr.push(this.currentItem),this.prevItem=this.owl.prevItem=this.prevArr[this.prevArr.length-2],this.prevArr.shift(0),this.prevItem!==this.currentItem&&(this.checkPagination(),this.checkNavigation(),this.eachMoveUpdate(),!1!==this.options.autoPlay&&this.checkAp()),"function"==typeof this.options.afterMove&&this.prevItem!==this.currentItem&&this.options.afterMove.apply(this,[this.$elem])},stop:function(){this.apStatus="stop",i.clearInterval(this.autoPlayInterval)},checkAp:function(){"stop"!==this.apStatus&&this.play()},play:function(){var t=this;return t.apStatus="play",!1===t.options.autoPlay?!1:(i.clearInterval(t.autoPlayInterval),void(t.autoPlayInterval=i.setInterval(function(){t.next(!0)},t.options.autoPlay)))},swapSpeed:function(t){"slideSpeed"===t?this.$owlWrapper.css(this.addCssSpeed(this.options.slideSpeed)):"paginationSpeed"===t?this.$owlWrapper.css(this.addCssSpeed(this.options.paginationSpeed)):"string"!=typeof t&&this.$owlWrapper.css(this.addCssSpeed(t))},addCssSpeed:function(t){return{"-webkit-transition":"all "+t+"ms ease","-moz-transition":"all "+t+"ms ease","-o-transition":"all "+t+"ms ease",transition:"all "+t+"ms ease"}},removeTransition:function(){return{"-webkit-transition":"","-moz-transition":"","-o-transition":"",transition:""}},doTranslate:function(t){return{"-webkit-transform":"translate3d("+t+"px, 0px, 0px)","-moz-transform":"translate3d("+t+"px, 0px, 0px)","-o-transform":"translate3d("+t+"px, 0px, 0px)","-ms-transform":"translate3d("+t+"px, 0px, 0px)",transform:"translate3d("+t+"px, 0px,0px)"}},transition3d:function(t){this.$owlWrapper.css(this.doTranslate(t))},css2move:function(t){this.$owlWrapper.css({left:t})},css2slide:function(t,i){var s=this;s.isCssFinish=!1,s.$owlWrapper.stop(!0,!0).animate({left:t},{duration:i||s.options.slideSpeed,complete:function(){s.isCssFinish=!0}})},checkBrowser:function(){var t=s.createElement("div");t.style.cssText="  -moz-transform:translate3d(0px, 0px, 0px); -ms-transform:translate3d(0px, 0px, 0px); -o-transform:translate3d(0px, 0px, 0px); -webkit-transform:translate3d(0px, 0px, 0px); transform:translate3d(0px, 0px, 0px)",t=t.style.cssText.match(/translate3d\(0px, 0px, 0px\)/g),this.browser={support3d:null!==t&&1===t.length,isTouch:"ontouchstart"in i||i.navigator.msMaxTouchPoints}},moveEvents:function(){(!1!==this.options.mouseDrag||!1!==this.options.touchDrag)&&(this.gestures(),this.disabledEvents())},eventTypes:function(){var t=["s","e","x"];this.ev_types={},!0===this.options.mouseDrag&&!0===this.options.touchDrag?t=["touchstart.owl mousedown.owl","touchmove.owl mousemove.owl","touchend.owl touchcancel.owl mouseup.owl"]:!1===this.options.mouseDrag&&!0===this.options.touchDrag?t=["touchstart.owl","touchmove.owl","touchend.owl touchcancel.owl"]:!0===this.options.mouseDrag&&!1===this.options.touchDrag&&(t=["mousedown.owl","mousemove.owl","mouseup.owl"]),this.ev_types.start=t[0],this.ev_types.move=t[1],this.ev_types.end=t[2]},disabledEvents:function(){this.$elem.on("dragstart.owl",function(t){t.preventDefault()}),this.$elem.on("mousedown.disableTextSelect",function(i){return t(i.target).is("input, textarea, select, option")})},gestures:function(){function e(t){if(void 0!==t.touches)return{x:t.touches[0].pageX,y:t.touches[0].pageY};if(void 0===t.touches){if(void 0!==t.pageX)return{x:t.pageX,y:t.pageY};if(void 0===t.pageX)return{x:t.clientX,y:t.clientY}}}function o(i){"on"===i?(t(s).on(r.ev_types.move,n),t(s).on(r.ev_types.end,a)):"off"===i&&(t(s).off(r.ev_types.move),t(s).off(r.ev_types.end))}function n(o){o=o.originalEvent||o||i.event,r.newPosX=e(o).x-l.offsetX,r.newPosY=e(o).y-l.offsetY,r.newRelativeX=r.newPosX-l.relativePos,"function"==typeof r.options.startDragging&&!0!==l.dragging&&0!==r.newRelativeX&&(l.dragging=!0,r.options.startDragging.apply(r,[r.$elem])),(8<r.newRelativeX||-8>r.newRelativeX)&&!0===r.browser.isTouch&&(void 0!==o.preventDefault?o.preventDefault():o.returnValue=!1,l.sliding=!0),(10<r.newPosY||-10>r.newPosY)&&!1===l.sliding&&t(s).off("touchmove.owl"),r.newPosX=Math.max(Math.min(r.newPosX,r.newRelativeX/5),r.maximumPixels+r.newRelativeX/5),!0===r.browser.support3d?r.transition3d(r.newPosX):r.css2move(r.newPosX)}function a(s){s=s.originalEvent||s||i.event;var e;s.target=s.target||s.srcElement,l.dragging=!1,!0!==r.browser.isTouch&&r.$owlWrapper.removeClass("grabbing"),r.dragDirection=0>r.newRelativeX?r.owl.dragDirection="left":r.owl.dragDirection="right",0!==r.newRelativeX&&(e=r.getNewPosition(),r.goTo(e,!1,"drag"),l.targetElement===s.target&&!0!==r.browser.isTouch&&(t(s.target).on("click.disable",function(i){i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault(),t(i.target).off("click.disable")}),s=t._data(s.target,"events").click,e=s.pop(),s.splice(0,0,e))),o("off")}var r=this,l={offsetX:0,offsetY:0,baseElWidth:0,relativePos:0,position:null,minSwipe:null,maxSwipe:null,sliding:null,dargging:null,targetElement:null};r.isCssFinish=!0,r.$elem.on(r.ev_types.start,".owl-wrapper",function(s){s=s.originalEvent||s||i.event;var n;if(3===s.which)return!1;if(!(r.itemsAmount<=r.options.items)){if(!1===r.isCssFinish&&!r.options.dragBeforeAnimFinish||!1===r.isCss3Finish&&!r.options.dragBeforeAnimFinish)return!1;!1!==r.options.autoPlay&&i.clearInterval(r.autoPlayInterval),!0===r.browser.isTouch||r.$owlWrapper.hasClass("grabbing")||r.$owlWrapper.addClass("grabbing"),r.newPosX=0,r.newRelativeX=0,t(this).css(r.removeTransition()),n=t(this).position(),l.relativePos=n.left,l.offsetX=e(s).x-n.left,l.offsetY=e(s).y-n.top,o("on"),l.sliding=!1,l.targetElement=s.target||s.srcElement}})},getNewPosition:function(){var t=this.closestItem();return t>this.maximumItem?t=this.currentItem=this.maximumItem:0<=this.newPosX&&(this.currentItem=t=0),t},closestItem:function(){var i=this,s=!0===i.options.scrollPerPage?i.pagesInArray:i.positionsInArray,e=i.newPosX,o=null;return t.each(s,function(n,a){e-i.itemWidth/20>s[n+1]&&e-i.itemWidth/20<a&&"left"===i.moveDirection()?(o=a,i.currentItem=!0===i.options.scrollPerPage?t.inArray(o,i.positionsInArray):n):e+i.itemWidth/20<a&&e+i.itemWidth/20>(s[n+1]||s[n]-i.itemWidth)&&"right"===i.moveDirection()&&(!0===i.options.scrollPerPage?(o=s[n+1]||s[s.length-1],i.currentItem=t.inArray(o,i.positionsInArray)):(o=s[n+1],i.currentItem=n+1))}),i.currentItem},moveDirection:function(){var t;return 0>this.newRelativeX?(t="right",this.playDirection="next"):(t="left",this.playDirection="prev"),t},customEvents:function(){var t=this;t.$elem.on("owl.next",function(){t.next()}),t.$elem.on("owl.prev",function(){t.prev()}),t.$elem.on("owl.play",function(i,s){t.options.autoPlay=s,t.play(),t.hoverStatus="play"}),t.$elem.on("owl.stop",function(){t.stop(),t.hoverStatus="stop"}),t.$elem.on("owl.goTo",function(i,s){t.goTo(s)}),t.$elem.on("owl.jumpTo",function(i,s){t.jumpTo(s)})},stopOnHover:function(){var t=this;!0===t.options.stopOnHover&&!0!==t.browser.isTouch&&!1!==t.options.autoPlay&&(t.$elem.on("mouseover",function(){t.stop()}),t.$elem.on("mouseout",function(){"stop"!==t.hoverStatus&&t.play()}))},lazyLoad:function(){var i,s,e,o,n;if(!1===this.options.lazyLoad)return!1;for(i=0;i<this.itemsAmount;i+=1)s=t(this.$owlItems[i]),"loaded"!==s.data("owl-loaded")&&(e=s.data("owl-item"),o=s.find(".lazyOwl"),"string"!=typeof o.data("src")?s.data("owl-loaded","loaded"):(void 0===s.data("owl-loaded")&&(o.hide(),s.addClass("loading").data("owl-loaded","checked")),(n=!0===this.options.lazyFollow?e>=this.currentItem:!0)&&e<this.currentItem+this.options.items&&o.length&&this.lazyPreload(s,o)))},lazyPreload:function(t,s){function e(){t.data("owl-loaded","loaded").removeClass("loading"),s.removeAttr("data-src"),"fade"===a.options.lazyEffect?s.fadeIn(400):s.show(),"function"==typeof a.options.afterLazyLoad&&a.options.afterLazyLoad.apply(this,[a.$elem])}function o(){r+=1,a.completeImg(s.get(0))||!0===n?e():100>=r?i.setTimeout(o,100):e()}var n,a=this,r=0;"DIV"===s.prop("tagName")?(s.css("background-image","url("+s.data("src")+")"),n=!0):s[0].src=s.data("src"),o()},autoHeight:function(){function s(){var s=t(n.$owlItems[n.currentItem]).height();n.wrapperOuter.css("height",s+"px"),n.wrapperOuter.hasClass("autoHeight")||i.setTimeout(function(){n.wrapperOuter.addClass("autoHeight")},0)}function e(){o+=1,n.completeImg(a.get(0))?s():100>=o?i.setTimeout(e,100):n.wrapperOuter.css("height","")}var o,n=this,a=t(n.$owlItems[n.currentItem]).find("img");void 0!==a.get(0)?(o=0,e()):s()},completeImg:function(t){return!t.complete||"undefined"!=typeof t.naturalWidth&&0===t.naturalWidth?!1:!0},onVisibleItems:function(){var i;for(!0===this.options.addClassActive&&this.$owlItems.removeClass("active"),this.visibleItems=[],i=this.currentItem;i<this.currentItem+this.options.items;i+=1)this.visibleItems.push(i),!0===this.options.addClassActive&&t(this.$owlItems[i]).addClass("active");this.owl.visibleItems=this.visibleItems},transitionTypes:function(t){this.outClass="owl-"+t+"-out",this.inClass="owl-"+t+"-in"},singleItemTransition:function(){var t=this,i=t.outClass,s=t.inClass,e=t.$owlItems.eq(t.currentItem),o=t.$owlItems.eq(t.prevItem),n=Math.abs(t.positionsInArray[t.currentItem])+t.positionsInArray[t.prevItem],a=Math.abs(t.positionsInArray[t.currentItem])+t.itemWidth/2;t.isTransition=!0,t.$owlWrapper.addClass("owl-origin").css({"-webkit-transform-origin":a+"px","-moz-perspective-origin":a+"px","perspective-origin":a+"px"}),o.css({position:"relative",left:n+"px"}).addClass(i).on("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend",function(){t.endPrev=!0,o.off("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend"),t.clearTransStyle(o,i)}),e.addClass(s).on("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend",function(){t.endCurrent=!0,e.off("webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend"),t.clearTransStyle(e,s)})},clearTransStyle:function(t,i){t.css({position:"",left:""}).removeClass(i),this.endPrev&&this.endCurrent&&(this.$owlWrapper.removeClass("owl-origin"),this.isTransition=this.endCurrent=this.endPrev=!1)},owlStatus:function(){this.owl={userOptions:this.userOptions,baseElement:this.$elem,userItems:this.$userItems,owlItems:this.$owlItems,currentItem:this.currentItem,prevItem:this.prevItem,visibleItems:this.visibleItems,isTouch:this.browser.isTouch,browser:this.browser,dragDirection:this.dragDirection}},clearEvents:function(){this.$elem.off(".owl owl mousedown.disableTextSelect"),t(s).off(".owl owl"),t(i).off("resize",this.resizer)},unWrap:function(){0!==this.$elem.children().length&&(this.$owlWrapper.unwrap(),this.$userItems.unwrap().unwrap(),this.owlControls&&this.owlControls.remove()),this.clearEvents(),this.$elem.attr("style",this.$elem.data("owl-originalStyles")||"").attr("class",this.$elem.data("owl-originalClasses"))},destroy:function(){this.stop(),i.clearInterval(this.checkVisible),this.unWrap(),this.$elem.removeData()},reinit:function(i){i=t.extend({},this.userOptions,i),this.unWrap(),this.init(i,this.$elem)},addItem:function(t,i){var s;return t?0===this.$elem.children().length?(this.$elem.append(t),this.setVars(),!1):(this.unWrap(),s=void 0===i||-1===i?-1:i,s>=this.$userItems.length||-1===s?this.$userItems.eq(-1).after(t):this.$userItems.eq(s).before(t),void this.setVars()):!1},removeItem:function(t){return 0===this.$elem.children().length?!1:(t=void 0===t||-1===t?-1:t,this.unWrap(),this.$userItems.eq(t).remove(),void this.setVars())}};t.fn.owlCarousel=function(i){return this.each(function(){if(!0===t(this).data("owl-init"))return!1;t(this).data("owl-init",!0);var s=Object.create(e);s.init(i,this),t.data(this,"owlCarousel",s)})},t.fn.owlCarousel.options={items:5,itemsCustom:!1,itemsDesktop:[1199,4],itemsDesktopSmall:[979,3],itemsTablet:[768,2],itemsTabletSmall:!1,itemsMobile:[479,1],singleItem:!1,itemsScaleUp:!1,slideSpeed:200,paginationSpeed:800,rewindSpeed:1e3,autoPlay:!1,stopOnHover:!1,navigation:!1,navigationText:["prev","next"],rewindNav:!0,scrollPerPage:!1,pagination:!0,paginationNumbers:!1,responsive:!0,responsiveRefreshRate:200,responsiveBaseWidth:i,baseClass:"owl-carousel",theme:"owl-theme",lazyLoad:!1,lazyFollow:!0,lazyEffect:"fade",autoHeight:!1,jsonPath:!1,jsonSuccess:!1,dragBeforeAnimFinish:!0,mouseDrag:!0,touchDrag:!0,addClassActive:!1,transitionStyle:!1,beforeUpdate:!1,afterUpdate:!1,beforeInit:!1,afterInit:!1,beforeMove:!1,afterMove:!1,afterAction:!1,startDragging:!1,afterLazyLoad:!1}}(jQuery,window,document);
if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(t){"use strict";var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1||e[0]>2)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3")}(jQuery),+function(t){"use strict";function e(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in e)if(void 0!==t.style[i])return{end:e[i]};return!1}t.fn.emulateTransitionEnd=function(e){var i=!1,o=this;t(this).one("bsTransitionEnd",function(){i=!0});var n=function(){i||t(o).trigger(t.support.transition.end)};return setTimeout(n,e),this},t(function(){t.support.transition=e(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(e){return t(e.target).is(this)?e.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var i=t(this),n=i.data("bs.alert");n||i.data("bs.alert",n=new o(this)),"string"==typeof e&&n[e].call(i)})}var i='[data-dismiss="alert"]',o=function(e){t(e).on("click",i,this.close)};o.VERSION="3.3.6",o.TRANSITION_DURATION=150,o.prototype.close=function(e){function i(){a.detach().trigger("closed.bs.alert").remove()}var n=t(this),s=n.attr("data-target");s||(s=n.attr("href"),s=s&&s.replace(/.*(?=#[^\s]*$)/,""));var a=t(s);e&&e.preventDefault(),a.length||(a=n.closest(".alert")),a.trigger(e=t.Event("close.bs.alert")),e.isDefaultPrevented()||(a.removeClass("in"),t.support.transition&&a.hasClass("fade")?a.one("bsTransitionEnd",i).emulateTransitionEnd(o.TRANSITION_DURATION):i())};var n=t.fn.alert;t.fn.alert=e,t.fn.alert.Constructor=o,t.fn.alert.noConflict=function(){return t.fn.alert=n,this},t(document).on("click.bs.alert.data-api",i,o.prototype.close)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.button"),s="object"==typeof e&&e;n||o.data("bs.button",n=new i(this,s)),"toggle"==e?n.toggle():e&&n.setState(e)})}var i=function(e,o){this.$element=t(e),this.options=t.extend({},i.DEFAULTS,o),this.isLoading=!1};i.VERSION="3.3.6",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(e){var i="disabled",o=this.$element,n=o.is("input")?"val":"html",s=o.data();e+="Text",null==s.resetText&&o.data("resetText",o[n]()),setTimeout(t.proxy(function(){o[n](null==s[e]?this.options[e]:s[e]),"loadingText"==e?(this.isLoading=!0,o.addClass(i).attr(i,i)):this.isLoading&&(this.isLoading=!1,o.removeClass(i).removeAttr(i))},this),0)},i.prototype.toggle=function(){var t=!0,e=this.$element.closest('[data-toggle="buttons"]');if(e.length){var i=this.$element.find("input");"radio"==i.prop("type")?(i.prop("checked")&&(t=!1),e.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==i.prop("type")&&(i.prop("checked")!==this.$element.hasClass("active")&&(t=!1),this.$element.toggleClass("active")),i.prop("checked",this.$element.hasClass("active")),t&&i.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var o=t.fn.button;t.fn.button=e,t.fn.button.Constructor=i,t.fn.button.noConflict=function(){return t.fn.button=o,this},t(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(i){var o=t(i.target);o.hasClass("btn")||(o=o.closest(".btn")),e.call(o,"toggle"),t(i.target).is('input[type="radio"]')||t(i.target).is('input[type="checkbox"]')||i.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(e){t(e.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(e.type))})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.carousel"),s=t.extend({},i.DEFAULTS,o.data(),"object"==typeof e&&e),a="string"==typeof e?e:s.slide;n||o.data("bs.carousel",n=new i(this,s)),"number"==typeof e?n.to(e):a?n[a]():s.interval&&n.pause().cycle()})}var i=function(e,i){this.$element=t(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=i,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",t.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",t.proxy(this.pause,this)).on("mouseleave.bs.carousel",t.proxy(this.cycle,this))};i.VERSION="3.3.6",i.TRANSITION_DURATION=600,i.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},i.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},i.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(t.proxy(this.next,this),this.options.interval)),this},i.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},i.prototype.getItemForDirection=function(t,e){var i=this.getItemIndex(e),o="prev"==t&&0===i||"next"==t&&i==this.$items.length-1;if(o&&!this.options.wrap)return e;var n="prev"==t?-1:1,s=(i+n)%this.$items.length;return this.$items.eq(s)},i.prototype.to=function(t){var e=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));return t>this.$items.length-1||0>t?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",this.$items.eq(t))},i.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&t.support.transition&&(this.$element.trigger(t.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},i.prototype.next=function(){return this.sliding?void 0:this.slide("next")},i.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},i.prototype.slide=function(e,o){var n=this.$element.find(".item.active"),s=o||this.getItemForDirection(e,n),a=this.interval,r="next"==e?"left":"right",l=this;if(s.hasClass("active"))return this.sliding=!1;var h=s[0],d=t.Event("slide.bs.carousel",{relatedTarget:h,direction:r});if(this.$element.trigger(d),!d.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var p=t(this.$indicators.children()[this.getItemIndex(s)]);p&&p.addClass("active")}var c=t.Event("slid.bs.carousel",{relatedTarget:h,direction:r});return t.support.transition&&this.$element.hasClass("slide")?(s.addClass(e),s[0].offsetWidth,n.addClass(r),s.addClass(r),n.one("bsTransitionEnd",function(){s.removeClass([e,r].join(" ")).addClass("active"),n.removeClass(["active",r].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(c)},0)}).emulateTransitionEnd(i.TRANSITION_DURATION)):(n.removeClass("active"),s.addClass("active"),this.sliding=!1,this.$element.trigger(c)),a&&this.cycle(),this}};var o=t.fn.carousel;t.fn.carousel=e,t.fn.carousel.Constructor=i,t.fn.carousel.noConflict=function(){return t.fn.carousel=o,this};var n=function(i){var o,n=t(this),s=t(n.attr("data-target")||(o=n.attr("href"))&&o.replace(/.*(?=#[^\s]+$)/,""));if(s.hasClass("carousel")){var a=t.extend({},s.data(),n.data()),r=n.attr("data-slide-to");r&&(a.interval=!1),e.call(s,a),r&&s.data("bs.carousel").to(r),i.preventDefault()}};t(document).on("click.bs.carousel.data-api","[data-slide]",n).on("click.bs.carousel.data-api","[data-slide-to]",n),t(window).on("load",function(){t('[data-ride="carousel"]').each(function(){var i=t(this);e.call(i,i.data())})})}(jQuery),+function(t){"use strict";function e(e){var i,o=e.attr("data-target")||(i=e.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,"");return t(o)}function i(e){return this.each(function(){var i=t(this),n=i.data("bs.collapse"),s=t.extend({},o.DEFAULTS,i.data(),"object"==typeof e&&e);!n&&s.toggle&&/show|hide/.test(e)&&(s.toggle=!1),n||i.data("bs.collapse",n=new o(this,s)),"string"==typeof e&&n[e]()})}var o=function(e,i){this.$element=t(e),this.options=t.extend({},o.DEFAULTS,i),this.$trigger=t('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};o.VERSION="3.3.6",o.TRANSITION_DURATION=350,o.DEFAULTS={toggle:!0},o.prototype.dimension=function(){var t=this.$element.hasClass("width");return t?"width":"height"},o.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,n=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(n&&n.length&&(e=n.data("bs.collapse"),e&&e.transitioning))){var s=t.Event("show.bs.collapse");if(this.$element.trigger(s),!s.isDefaultPrevented()){n&&n.length&&(i.call(n,"hide"),e||n.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!t.support.transition)return r.call(this);var l=t.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",t.proxy(r,this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][l])}}}},o.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=t.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return t.support.transition?void this.$element[i](0).one("bsTransitionEnd",t.proxy(n,this)).emulateTransitionEnd(o.TRANSITION_DURATION):n.call(this)}}},o.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},o.prototype.getParent=function(){return t(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(t.proxy(function(i,o){var n=t(o);this.addAriaAndCollapsedClass(e(n),n)},this)).end()},o.prototype.addAriaAndCollapsedClass=function(t,e){var i=t.hasClass("in");t.attr("aria-expanded",i),e.toggleClass("collapsed",!i).attr("aria-expanded",i)};var n=t.fn.collapse;t.fn.collapse=i,t.fn.collapse.Constructor=o,t.fn.collapse.noConflict=function(){return t.fn.collapse=n,this},t(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(o){var n=t(this);n.attr("data-target")||o.preventDefault();var s=e(n),a=s.data("bs.collapse"),r=a?"toggle":n.data();i.call(s,r)})}(jQuery),+function(t){"use strict";function e(e){var i=e.attr("data-target");i||(i=e.attr("href"),i=i&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var o=i&&t(i);return o&&o.length?o:e.parent()}function i(i){i&&3===i.which||(t(n).remove(),t(s).each(function(){var o=t(this),n=e(o),s={relatedTarget:this};n.hasClass("open")&&(i&&"click"==i.type&&/input|textarea/i.test(i.target.tagName)&&t.contains(n[0],i.target)||(n.trigger(i=t.Event("hide.bs.dropdown",s)),i.isDefaultPrevented()||(o.attr("aria-expanded","false"),n.removeClass("open").trigger(t.Event("hidden.bs.dropdown",s)))))}))}function o(e){return this.each(function(){var i=t(this),o=i.data("bs.dropdown");o||i.data("bs.dropdown",o=new a(this)),"string"==typeof e&&o[e].call(i)})}var n=".dropdown-backdrop",s='[data-toggle="dropdown"]',a=function(e){t(e).on("click.bs.dropdown",this.toggle)};a.VERSION="3.3.6",a.prototype.toggle=function(o){var n=t(this);if(!n.is(".disabled, :disabled")){var s=e(n),a=s.hasClass("open");if(i(),!a){"ontouchstart"in document.documentElement&&!s.closest(".navbar-nav").length&&t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click",i);var r={relatedTarget:this};if(s.trigger(o=t.Event("show.bs.dropdown",r)),o.isDefaultPrevented())return;n.trigger("focus").attr("aria-expanded","true"),s.toggleClass("open").trigger(t.Event("shown.bs.dropdown",r))}return!1}},a.prototype.keydown=function(i){if(/(38|40|27|32)/.test(i.which)&&!/input|textarea/i.test(i.target.tagName)){var o=t(this);if(i.preventDefault(),i.stopPropagation(),!o.is(".disabled, :disabled")){var n=e(o),a=n.hasClass("open");if(!a&&27!=i.which||a&&27==i.which)return 27==i.which&&n.find(s).trigger("focus"),o.trigger("click");var r=" li:not(.disabled):visible a",l=n.find(".dropdown-menu"+r);if(l.length){var h=l.index(i.target);38==i.which&&h>0&&h--,40==i.which&&h<l.length-1&&h++,~h||(h=0),l.eq(h).trigger("focus")}}}};var r=t.fn.dropdown;t.fn.dropdown=o,t.fn.dropdown.Constructor=a,t.fn.dropdown.noConflict=function(){return t.fn.dropdown=r,this},t(document).on("click.bs.dropdown.data-api",i).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",s,a.prototype.toggle).on("keydown.bs.dropdown.data-api",s,a.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",a.prototype.keydown)}(jQuery),+function(t){"use strict";function e(e,o){return this.each(function(){var n=t(this),s=n.data("bs.modal"),a=t.extend({},i.DEFAULTS,n.data(),"object"==typeof e&&e);s||n.data("bs.modal",s=new i(this,a)),"string"==typeof e?s[e](o):a.show&&s.show(o)})}var i=function(e,i){this.options=i,this.$body=t(document.body),this.$element=t(e),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,t.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.3.6",i.TRANSITION_DURATION=300,i.BACKDROP_TRANSITION_DURATION=150,i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},i.prototype.show=function(e){var o=this,n=t.Event("show.bs.modal",{relatedTarget:e});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',t.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){o.$element.one("mouseup.dismiss.bs.modal",function(e){t(e.target).is(o.$element)&&(o.ignoreBackdropClick=!0)})}),this.backdrop(function(){var n=t.support.transition&&o.$element.hasClass("fade");o.$element.parent().length||o.$element.appendTo(o.$body),o.$element.show().scrollTop(0),o.adjustDialog(),n&&o.$element[0].offsetWidth,o.$element.addClass("in"),o.enforceFocus();var s=t.Event("shown.bs.modal",{relatedTarget:e});n?o.$dialog.one("bsTransitionEnd",function(){o.$element.trigger("focus").trigger(s)}).emulateTransitionEnd(i.TRANSITION_DURATION):o.$element.trigger("focus").trigger(s)}))},i.prototype.hide=function(e){e&&e.preventDefault(),e=t.Event("hide.bs.modal"),this.$element.trigger(e),this.isShown&&!e.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),t(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),t.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",t.proxy(this.hideModal,this)).emulateTransitionEnd(i.TRANSITION_DURATION):this.hideModal())},i.prototype.enforceFocus=function(){t(document).off("focusin.bs.modal").on("focusin.bs.modal",t.proxy(function(t){this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",t.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},i.prototype.resize=function(){this.isShown?t(window).on("resize.bs.modal",t.proxy(this.handleUpdate,this)):t(window).off("resize.bs.modal")},i.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(e){var o=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var s=t.support.transition&&n;if(this.$backdrop=t(document.createElement("div")).addClass("modal-backdrop "+n).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",t.proxy(function(t){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),s&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!e)return;s?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):e()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){o.removeBackdrop(),e&&e()};t.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):a()}else e&&e()},i.prototype.handleUpdate=function(){this.adjustDialog()},i.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},i.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},i.prototype.checkScrollbar=function(){var t=window.innerWidth;if(!t){var e=document.documentElement.getBoundingClientRect();t=e.right-Math.abs(e.left)}this.bodyIsOverflowing=document.body.clientWidth<t,this.scrollbarWidth=this.measureScrollbar()},i.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},i.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var o=t.fn.modal;t.fn.modal=e,t.fn.modal.Constructor=i,t.fn.modal.noConflict=function(){return t.fn.modal=o,this},t(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var o=t(this),n=o.attr("href"),s=t(o.attr("data-target")||n&&n.replace(/.*(?=#[^\s]+$)/,"")),a=s.data("bs.modal")?"toggle":t.extend({remote:!/#/.test(n)&&n},s.data(),o.data());o.is("a")&&i.preventDefault(),s.one("show.bs.modal",function(t){t.isDefaultPrevented()||s.one("hidden.bs.modal",function(){o.is(":visible")&&o.trigger("focus")})}),e.call(s,a,this)})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.tooltip"),s="object"==typeof e&&e;(n||!/destroy|hide/.test(e))&&(n||o.data("bs.tooltip",n=new i(this,s)),"string"==typeof e&&n[e]())})}var i=function(t,e){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",t,e)};i.VERSION="3.3.6",i.TRANSITION_DURATION=150,i.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},i.prototype.init=function(e,i,o){if(this.enabled=!0,this.type=e,this.$element=t(i),this.options=this.getOptions(o),this.$viewport=this.options.viewport&&t(t.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var n=this.options.trigger.split(" "),s=n.length;s--;){var a=n[s];if("click"==a)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=a){var r="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(r+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.getOptions=function(e){return e=t.extend({},this.getDefaults(),this.$element.data(),e),e.delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},i.prototype.getDelegateOptions=function(){var e={},i=this.getDefaults();return this._options&&t.each(this._options,function(t,o){i[t]!=o&&(e[t]=o)}),e},i.prototype.enter=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusin"==e.type?"focus":"hover"]=!0),i.tip().hasClass("in")||"in"==i.hoverState?void(i.hoverState="in"):(clearTimeout(i.timeout),i.hoverState="in",i.options.delay&&i.options.delay.show?void(i.timeout=setTimeout(function(){"in"==i.hoverState&&i.show()},i.options.delay.show)):i.show())},i.prototype.isInStateTrue=function(){for(var t in this.inState)if(this.inState[t])return!0;return!1},i.prototype.leave=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),e instanceof t.Event&&(i.inState["focusout"==e.type?"focus":"hover"]=!1),i.isInStateTrue()?void 0:(clearTimeout(i.timeout),i.hoverState="out",i.options.delay&&i.options.delay.hide?void(i.timeout=setTimeout(function(){"out"==i.hoverState&&i.hide()},i.options.delay.hide)):i.hide())},i.prototype.show=function(){var e=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(e);var o=t.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(e.isDefaultPrevented()||!o)return;var n=this,s=this.tip(),a=this.getUID(this.type);this.setContent(),s.attr("id",a),this.$element.attr("aria-describedby",a),this.options.animation&&s.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,s[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,h=l.test(r);h&&(r=r.replace(l,"")||"top"),s.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?s.appendTo(this.options.container):s.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var d=this.getPosition(),p=s[0].offsetWidth,c=s[0].offsetHeight;if(h){var f=r,u=this.getPosition(this.$viewport);r="bottom"==r&&d.bottom+c>u.bottom?"top":"top"==r&&d.top-c<u.top?"bottom":"right"==r&&d.right+p>u.width?"left":"left"==r&&d.left-p<u.left?"right":r,s.removeClass(f).addClass(r)}var g=this.getCalculatedOffset(r,d,p,c);this.applyPlacement(g,r);var v=function(){var t=n.hoverState;n.$element.trigger("shown.bs."+n.type),n.hoverState=null,"out"==t&&n.leave(n)};t.support.transition&&this.$tip.hasClass("fade")?s.one("bsTransitionEnd",v).emulateTransitionEnd(i.TRANSITION_DURATION):v()}},i.prototype.applyPlacement=function(e,i){var o=this.tip(),n=o[0].offsetWidth,s=o[0].offsetHeight,a=parseInt(o.css("margin-top"),10),r=parseInt(o.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(r)&&(r=0),e.top+=a,e.left+=r,t.offset.setOffset(o[0],t.extend({using:function(t){o.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),o.addClass("in");var l=o[0].offsetWidth,h=o[0].offsetHeight;"top"==i&&h!=s&&(e.top=e.top+s-h);var d=this.getViewportAdjustedDelta(i,e,l,h);d.left?e.left+=d.left:e.top+=d.top;var p=/top|bottom/.test(i),c=p?2*d.left-n+l:2*d.top-s+h,f=p?"offsetWidth":"offsetHeight";o.offset(e),this.replaceArrow(c,o[0][f],p)},i.prototype.replaceArrow=function(t,e,i){this.arrow().css(i?"left":"top",50*(1-t/e)+"%").css(i?"top":"left","")},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},i.prototype.hide=function(e){function o(){"in"!=n.hoverState&&s.detach(),n.$element.removeAttr("aria-describedby").trigger("hidden.bs."+n.type),e&&e()}var n=this,s=t(this.$tip),a=t.Event("hide.bs."+this.type);return this.$element.trigger(a),a.isDefaultPrevented()?void 0:(s.removeClass("in"),t.support.transition&&s.hasClass("fade")?s.one("bsTransitionEnd",o).emulateTransitionEnd(i.TRANSITION_DURATION):o(),this.hoverState=null,this)},i.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},i.prototype.hasContent=function(){return this.getTitle()},i.prototype.getPosition=function(e){e=e||this.$element;var i=e[0],o="BODY"==i.tagName,n=i.getBoundingClientRect();null==n.width&&(n=t.extend({},n,{width:n.right-n.left,height:n.bottom-n.top}));var s=o?{top:0,left:0}:e.offset(),a={scroll:o?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},r=o?{width:t(window).width(),height:t(window).height()}:null;return t.extend({},n,a,r,s)},i.prototype.getCalculatedOffset=function(t,e,i,o){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-o,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-o/2,left:e.left-i}:{top:e.top+e.height/2-o/2,left:e.left+e.width}},i.prototype.getViewportAdjustedDelta=function(t,e,i,o){var n={top:0,left:0};if(!this.$viewport)return n;var s=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(t)){var r=e.top-s-a.scroll,l=e.top+s-a.scroll+o;r<a.top?n.top=a.top-r:l>a.top+a.height&&(n.top=a.top+a.height-l)}else{var h=e.left-s,d=e.left+s+i;h<a.left?n.left=a.left-h:d>a.right&&(n.left=a.left+a.width-d)}return n},i.prototype.getTitle=function(){var t,e=this.$element,i=this.options;return t=e.attr("data-original-title")||("function"==typeof i.title?i.title.call(e[0]):i.title)},i.prototype.getUID=function(t){do t+=~~(1e6*Math.random());while(document.getElementById(t));return t},i.prototype.tip=function(){if(!this.$tip&&(this.$tip=t(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},i.prototype.enable=function(){this.enabled=!0},i.prototype.disable=function(){this.enabled=!1},i.prototype.toggleEnabled=function(){this.enabled=!this.enabled},i.prototype.toggle=function(e){var i=this;e&&(i=t(e.currentTarget).data("bs."+this.type),i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i))),e?(i.inState.click=!i.inState.click,i.isInStateTrue()?i.enter(i):i.leave(i)):i.tip().hasClass("in")?i.leave(i):i.enter(i)},i.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type),t.$tip&&t.$tip.detach(),t.$tip=null,t.$arrow=null,t.$viewport=null})};var o=t.fn.tooltip;t.fn.tooltip=e,t.fn.tooltip.Constructor=i,t.fn.tooltip.noConflict=function(){return t.fn.tooltip=o,this}}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.popover"),s="object"==typeof e&&e;(n||!/destroy|hide/.test(e))&&(n||o.data("bs.popover",n=new i(this,s)),"string"==typeof e&&n[e]())})}var i=function(t,e){this.init("popover",t,e)};if(!t.fn.tooltip)throw new Error("Popover requires tooltip.js");i.VERSION="3.3.6",i.DEFAULTS=t.extend({},t.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),i.prototype=t.extend({},t.fn.tooltip.Constructor.prototype),i.prototype.constructor=i,i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},i.prototype.hasContent=function(){return this.getTitle()||this.getContent()},i.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var o=t.fn.popover;t.fn.popover=e,t.fn.popover.Constructor=i,t.fn.popover.noConflict=function(){return t.fn.popover=o,this}}(jQuery),+function(t){"use strict";function e(i,o){this.$body=t(document.body),this.$scrollElement=t(t(i).is(document.body)?window:i),this.options=t.extend({},e.DEFAULTS,o),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",t.proxy(this.process,this)),this.refresh(),this.process()}function i(i){return this.each(function(){var o=t(this),n=o.data("bs.scrollspy"),s="object"==typeof i&&i;n||o.data("bs.scrollspy",n=new e(this,s)),"string"==typeof i&&n[i]()})}e.VERSION="3.3.6",e.DEFAULTS={offset:10},e.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},e.prototype.refresh=function(){var e=this,i="offset",o=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),t.isWindow(this.$scrollElement[0])||(i="position",o=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var e=t(this),n=e.data("target")||e.attr("href"),s=/^#./.test(n)&&t(n);return s&&s.length&&s.is(":visible")&&[[s[i]().top+o,n]]||null}).sort(function(t,e){return t[0]-e[0]}).each(function(){e.offsets.push(this[0]),e.targets.push(this[1])})},e.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),o=this.options.offset+i-this.$scrollElement.height(),n=this.offsets,s=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),e>=o)return a!=(t=s[s.length-1])&&this.activate(t);if(a&&e<n[0])return this.activeTarget=null,this.clear();for(t=n.length;t--;)a!=s[t]&&e>=n[t]&&(void 0===n[t+1]||e<n[t+1])&&this.activate(s[t])},e.prototype.activate=function(e){this.activeTarget=e,this.clear();var i=this.selector+'[data-target="'+e+'"],'+this.selector+'[href="'+e+'"]',o=t(i).parents("li").addClass("active");
o.parent(".dropdown-menu").length&&(o=o.closest("li.dropdown").addClass("active")),o.trigger("activate.bs.scrollspy")},e.prototype.clear=function(){t(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var o=t.fn.scrollspy;t.fn.scrollspy=i,t.fn.scrollspy.Constructor=e,t.fn.scrollspy.noConflict=function(){return t.fn.scrollspy=o,this},t(window).on("load.bs.scrollspy.data-api",function(){t('[data-spy="scroll"]').each(function(){var e=t(this);i.call(e,e.data())})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.tab");n||o.data("bs.tab",n=new i(this)),"string"==typeof e&&n[e]()})}var i=function(e){this.element=t(e)};i.VERSION="3.3.6",i.TRANSITION_DURATION=150,i.prototype.show=function(){var e=this.element,i=e.closest("ul:not(.dropdown-menu)"),o=e.data("target");if(o||(o=e.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var n=i.find(".active:last a"),s=t.Event("hide.bs.tab",{relatedTarget:e[0]}),a=t.Event("show.bs.tab",{relatedTarget:n[0]});if(n.trigger(s),e.trigger(a),!a.isDefaultPrevented()&&!s.isDefaultPrevented()){var r=t(o);this.activate(e.closest("li"),i),this.activate(r,r.parent(),function(){n.trigger({type:"hidden.bs.tab",relatedTarget:e[0]}),e.trigger({type:"shown.bs.tab",relatedTarget:n[0]})})}}},i.prototype.activate=function(e,o,n){function s(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),r?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu").length&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),n&&n()}var a=o.find("> .active"),r=n&&t.support.transition&&(a.length&&a.hasClass("fade")||!!o.find("> .fade").length);a.length&&r?a.one("bsTransitionEnd",s).emulateTransitionEnd(i.TRANSITION_DURATION):s(),a.removeClass("in")};var o=t.fn.tab;t.fn.tab=e,t.fn.tab.Constructor=i,t.fn.tab.noConflict=function(){return t.fn.tab=o,this};var n=function(i){i.preventDefault(),e.call(t(this),"show")};t(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',n).on("click.bs.tab.data-api",'[data-toggle="pill"]',n)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var o=t(this),n=o.data("bs.affix"),s="object"==typeof e&&e;n||o.data("bs.affix",n=new i(this,s)),"string"==typeof e&&n[e]()})}var i=function(e,o){this.options=t.extend({},i.DEFAULTS,o),this.$target=t(this.options.target).on("scroll.bs.affix.data-api",t.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",t.proxy(this.checkPositionWithEventLoop,this)),this.$element=t(e),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};i.VERSION="3.3.6",i.RESET="affix affix-top affix-bottom",i.DEFAULTS={offset:0,target:window},i.prototype.getState=function(t,e,i,o){var n=this.$target.scrollTop(),s=this.$element.offset(),a=this.$target.height();if(null!=i&&"top"==this.affixed)return i>n?"top":!1;if("bottom"==this.affixed)return null!=i?n+this.unpin<=s.top?!1:"bottom":t-o>=n+a?!1:"bottom";var r=null==this.affixed,l=r?n:s.top,h=r?a:e;return null!=i&&i>=n?"top":null!=o&&l+h>=t-o?"bottom":!1},i.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(i.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},i.prototype.checkPositionWithEventLoop=function(){setTimeout(t.proxy(this.checkPosition,this),1)},i.prototype.checkPosition=function(){if(this.$element.is(":visible")){var e=this.$element.height(),o=this.options.offset,n=o.top,s=o.bottom,a=Math.max(t(document).height(),t(document.body).height());"object"!=typeof o&&(s=n=o),"function"==typeof n&&(n=o.top(this.$element)),"function"==typeof s&&(s=o.bottom(this.$element));var r=this.getState(a,e,n,s);if(this.affixed!=r){null!=this.unpin&&this.$element.css("top","");var l="affix"+(r?"-"+r:""),h=t.Event(l+".bs.affix");if(this.$element.trigger(h),h.isDefaultPrevented())return;this.affixed=r,this.unpin="bottom"==r?this.getPinnedOffset():null,this.$element.removeClass(i.RESET).addClass(l).trigger(l.replace("affix","affixed")+".bs.affix")}"bottom"==r&&this.$element.offset({top:a-e-s})}};var o=t.fn.affix;t.fn.affix=e,t.fn.affix.Constructor=i,t.fn.affix.noConflict=function(){return t.fn.affix=o,this},t(window).on("load",function(){t('[data-spy="affix"]').each(function(){var i=t(this),o=i.data();o.offset=o.offset||{},null!=o.offsetBottom&&(o.offset.bottom=o.offsetBottom),null!=o.offsetTop&&(o.offset.top=o.offsetTop),e.call(i,o)})})}(jQuery);
require("../../js/transition.js"),require("../../js/alert.js"),require("../../js/button.js"),require("../../js/carousel.js"),require("../../js/collapse.js"),require("../../js/dropdown.js"),require("../../js/modal.js"),require("../../js/tooltip.js"),require("../../js/popover.js"),require("../../js/scrollspy.js"),require("../../js/tab.js"),require("../../js/affix.js");
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5mYW5jeWJveC5qcyIsImpxdWVyeS5mYW5jeWJveC5wYWNrLmpzIiwiaGVscGVycy9qcXVlcnkuZmFuY3lib3gtYnV0dG9ucy5qcyIsImhlbHBlcnMvanF1ZXJ5LmZhbmN5Ym94LW1lZGlhLmpzIiwiaGVscGVycy9qcXVlcnkuZmFuY3lib3gtdGh1bWJzLmpzIiwianF1ZXJ5Lm1vdXNld2hlZWwtMy4wLjYucGFjay5qcyIsInNjcmlwdHMvc2Nyb2xscGFnaW5hdGlvbi5qcyIsImRpc3QvanF1ZXJ5LmVhc2luZy5qcyIsImRpc3QvanF1ZXJ5LnNjcm9sbFVwLmpzIiwic3JjL2pxdWVyeS5zY3JvbGxVcC5qcyIsImJvb3RzdHJhcC5taW4uanMiLCJhY3Rpb24vYmVuZ2lfcndkX2xpYi5qcyIsImFjdGlvbi9kZWZhdWx0LmpzIiwiaWUxMC9pZTEwLXZpZXdwb3J0LWJ1Zy13b3JrYXJvdW5kLmpzIiwianF1ZXJ5L2pxdWVyeS0xLjEyLjAuanMiLCJqcXVlcnkvanF1ZXJ5LW1pZ3JhdGUtMS4yLjEuanMiLCJvd2wtY2Fyb3VzZWwvb3dsLmNhcm91c2VsLm1pbi5qcyIsImJvb3RzdHJhcC9qcy9ib290c3RyYXAuanMiLCJib290c3RyYXAvanMvbnBtLmpzIl0sIm5hbWVzIjpbIndpbmRvdyIsImRvY3VtZW50IiwiJCIsInVuZGVmaW5lZCIsIkgiLCJXIiwiRCIsIkYiLCJmYW5jeWJveCIsIm9wZW4iLCJhcHBseSIsInRoaXMiLCJhcmd1bWVudHMiLCJJRSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm1hdGNoIiwiZGlkVXBkYXRlIiwiaXNUb3VjaCIsImNyZWF0ZVRvdWNoIiwiaXNRdWVyeSIsIm9iaiIsImhhc093blByb3BlcnR5IiwiaXNTdHJpbmciLCJzdHIiLCJ0eXBlIiwiaXNQZXJjZW50YWdlIiwiaW5kZXhPZiIsImlzU2Nyb2xsYWJsZSIsImVsIiwic3R5bGUiLCJvdmVyZmxvdyIsImNsaWVudFdpZHRoIiwic2Nyb2xsV2lkdGgiLCJjbGllbnRIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJnZXRTY2FsYXIiLCJvcmlnIiwiZGltIiwidmFsdWUiLCJwYXJzZUludCIsImdldFZpZXdwb3J0IiwiTWF0aCIsImNlaWwiLCJnZXRWYWx1ZSIsImV4dGVuZCIsInZlcnNpb24iLCJkZWZhdWx0cyIsInBhZGRpbmciLCJtYXJnaW4iLCJ3aWR0aCIsImhlaWdodCIsIm1pbldpZHRoIiwibWluSGVpZ2h0IiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJwaXhlbFJhdGlvIiwiYXV0b1NpemUiLCJhdXRvSGVpZ2h0IiwiYXV0b1dpZHRoIiwiYXV0b1Jlc2l6ZSIsImF1dG9DZW50ZXIiLCJmaXRUb1ZpZXciLCJhc3BlY3RSYXRpbyIsInRvcFJhdGlvIiwibGVmdFJhdGlvIiwic2Nyb2xsaW5nIiwid3JhcENTUyIsImFycm93cyIsImNsb3NlQnRuIiwiY2xvc2VDbGljayIsIm5leHRDbGljayIsIm1vdXNlV2hlZWwiLCJhdXRvUGxheSIsInBsYXlTcGVlZCIsInByZWxvYWQiLCJtb2RhbCIsImxvb3AiLCJhamF4IiwiZGF0YVR5cGUiLCJoZWFkZXJzIiwiWC1mYW5jeUJveCIsImlmcmFtZSIsInN3ZiIsIndtb2RlIiwiYWxsb3dmdWxsc2NyZWVuIiwiYWxsb3dzY3JpcHRhY2Nlc3MiLCJrZXlzIiwibmV4dCIsMTMsMzQsMzksNDAsInByZXYiLDgsMzMsMzcsMzgsImNsb3NlIiwicGxheSIsInRvZ2dsZSIsImRpcmVjdGlvbiIsInNjcm9sbE91dHNpZGUiLCJpbmRleCIsImhyZWYiLCJjb250ZW50IiwidGl0bGUiLCJ0cGwiLCJ3cmFwIiwiaW1hZ2UiLCJlcnJvciIsIm9wZW5FZmZlY3QiLCJvcGVuU3BlZWQiLCJvcGVuRWFzaW5nIiwib3Blbk9wYWNpdHkiLCJvcGVuTWV0aG9kIiwiY2xvc2VFZmZlY3QiLCJjbG9zZVNwZWVkIiwiY2xvc2VFYXNpbmciLCJjbG9zZU9wYWNpdHkiLCJjbG9zZU1ldGhvZCIsIm5leHRFZmZlY3QiLCJuZXh0U3BlZWQiLCJuZXh0RWFzaW5nIiwibmV4dE1ldGhvZCIsInByZXZFZmZlY3QiLCJwcmV2U3BlZWQiLCJwcmV2RWFzaW5nIiwicHJldk1ldGhvZCIsImhlbHBlcnMiLCJvdmVybGF5Iiwib25DYW5jZWwiLCJub29wIiwiYmVmb3JlTG9hZCIsImFmdGVyTG9hZCIsImJlZm9yZVNob3ciLCJhZnRlclNob3ciLCJiZWZvcmVDaGFuZ2UiLCJiZWZvcmVDbG9zZSIsImFmdGVyQ2xvc2UiLCJncm91cCIsIm9wdHMiLCJwcmV2aW91cyIsImNvbWluZyIsImN1cnJlbnQiLCJpc0FjdGl2ZSIsImlzT3BlbiIsImlzT3BlbmVkIiwic2tpbiIsIm91dGVyIiwiaW5uZXIiLCJwbGF5ZXIiLCJ0aW1lciIsImFqYXhMb2FkIiwiaW1nUHJlbG9hZCIsInRyYW5zaXRpb25zIiwiaXNQbGFpbk9iamVjdCIsImlzQXJyYXkiLCJnZXQiLCJlYWNoIiwiaSIsImVsZW1lbnQiLCJyZXoiLCJocmVmUGFydHMiLCJzZWxlY3RvciIsIm5vZGVUeXBlIiwiZGF0YSIsImF0dHIiLCJpc0RvbSIsIm1ldGFkYXRhIiwicHJvcCIsImlzSW1hZ2UiLCJpc1NXRiIsImNoYXJBdCIsInNwbGl0Iiwic2hpZnQiLCJyZXBsYWNlIiwiX3N0YXJ0IiwiY2FuY2VsIiwidHJpZ2dlciIsImhpZGVMb2FkaW5nIiwiYWJvcnQiLCJvbmxvYWQiLCJvbmVycm9yIiwic3RvcCIsInJlbW92ZSIsIl9hZnRlclpvb21PdXQiLCJldmVudCIsInVuYmluZEV2ZW50cyIsImlzQ2xvc2luZyIsInJlbW92ZUNsYXNzIiwiYWN0aW9uIiwiY2xlYXIiLCJjbGVhclRpbWVvdXQiLCJzZXQiLCJzZXRUaW1lb3V0IiwidW5iaW5kIiwic3RhcnQiLCJsZW5ndGgiLCJiaW5kIiwib25DYW5jZWwucGxheWVyIGJlZm9yZUNsb3NlLnBsYXllciIsIm9uVXBkYXRlLnBsYXllciIsImJlZm9yZUxvYWQucGxheWVyIiwianVtcHRvIiwicm91dGVyIiwicmVwb3NpdGlvbiIsImUiLCJvbmx5QWJzb2x1dGUiLCJwb3MiLCJfZ2V0UG9zaXRpb24iLCJwb3NpdGlvbiIsImFuaW1hdGUiLCJjc3MiLCJ1cGRhdGUiLCJhbnl3YXkiLCJfc2V0RGltZW5zaW9uIiwiY2FuU2hyaW5rIiwicmVtb3ZlQXR0ciIsImFkZENsYXNzIiwic2hvd0xvYWRpbmciLCJ2aWV3cG9ydCIsImNsaWNrIiwiYXBwZW5kVG8iLCJ3aGljaCIsImtleUNvZGUiLCJwcmV2ZW50RGVmYXVsdCIsImZpeGVkIiwidG9wIiwiaCIsInkiLCJsZWZ0IiwidyIsIngiLCJsb2NrZWQiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwiYmluZEV2ZW50cyIsImNvZGUiLCJ0YXJnZXQiLCJzcmNFbGVtZW50IiwiY3RybEtleSIsImFsdEtleSIsInNoaWZ0S2V5IiwibWV0YUtleSIsImlzIiwidmFsIiwiaW5BcnJheSIsImZuIiwibW91c2V3aGVlbCIsImRlbHRhIiwiZGVsdGFYIiwiZGVsdGFZIiwicGFyZW50IiwiY2FuU2Nyb2xsIiwibyIsInJldCIsImlzRnVuY3Rpb24iLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImhlbHBlciIsInYiLCJfZXJyb3IiLCJfbG9hZEltYWdlIiwiX2xvYWRBamF4IiwiX2xvYWRJZnJhbWUiLCJfYWZ0ZXJMb2FkIiwiaGFzRXJyb3IiLCJpbWciLCJJbWFnZSIsInNyYyIsImNvbXBsZXRlIiwidXJsIiwianFYSFIiLCJ0ZXh0U3RhdHVzIiwic3VjY2VzcyIsIkRhdGUiLCJnZXRUaW1lIiwiZmluZCIsImhpZGUiLCJlbmQiLCJlbXB0eSIsIm9uZSIsInBhcmVudHMiLCJzaG93IiwiX3ByZWxvYWRJbWFnZXMiLCJpdGVtIiwibGVuIiwiY250IiwibWluIiwiZW1iZWQiLCJwbGFjZWhvbGRlciIsImh0bWwiLCJpbnNlcnRBZnRlciIsImRldGFjaCIsInJlcGxhY2VBbGwiLCJuYW1lIiwiYXBwZW5kIiwibm90Iiwid1BhZGRpbmciLCJoUGFkZGluZyIsIndTcGFjZSIsImhTcGFjZSIsIm9yaWdXaWR0aCIsIm9yaWdIZWlnaHQiLCJvcmlnTWF4V2lkdGgiLCJvcmlnTWF4SGVpZ2h0IiwicmF0aW8iLCJ3aWR0aF8iLCJoZWlnaHRfIiwibWF4V2lkdGhfIiwibWF4SGVpZ2h0XyIsImJvZHkiLCJzdGVwcyIsImNhbkV4cGFuZCIsInNjcm9sbE91dCIsInNjcm9sbGJhcldpZHRoIiwid01hcmdpbiIsImhNYXJnaW4iLCJhZGQiLCJvdXRlcldpZHRoIiwib3V0ZXJIZWlnaHQiLCJjb250ZW50V2luZG93IiwibG9jYXRpb24iLCJjb250ZW50cyIsIm1heCIsIndyYXBTcGFjZSIsInNraW5TcGFjZSIsIl9hZnRlclpvb21JbiIsImdldE9yaWdQb3NpdGlvbiIsIm9mZnNldCIsInN0ZXAiLCJub3ciLCJmeCIsInpvb21JbiIsInN0YXJ0UG9zIiwiZWZmZWN0IiwiZWxhc3RpYyIsImVuZFBvcyIsIm9wYWNpdHkiLCJkdXJhdGlvbiIsImVhc2luZyIsInpvb21PdXQiLCJjaGFuZ2VJbiIsImZpZWxkIiwiZGlzdGFuY2UiLCJjaGFuZ2VPdXQiLCJzcGVlZE91dCIsInNob3dFYXJseSIsImNyZWF0ZSIsInRoYXQiLCJwcm94eSIsImhhc0NsYXNzIiwic2Nyb2xsViIsInNjcm9sbEgiLCJvZmZzZXRXaWR0aCIsImRvY3VtZW50RWxlbWVudCIsIm9uUmVhZHkiLCJmaWx0ZXIiLCJvblVwZGF0ZSIsImZhZGVPdXQiLCJ0ZXh0IiwidHJpbSIsIndyYXBJbm5lciIsImFicyIsIm9wdGlvbnMiLCJydW4iLCJyZWxUeXBlIiwicmVsVmFsIiwid2hhdCIsImJsdXIiLCJpZHgiLCJncm91cEF0dHIiLCJsaXZlIiwidW5kZWxlZ2F0ZSIsImRlbGVnYXRlIiwicmVhZHkiLCJ3MSIsIncyIiwiY2hpbGQiLCJjaGlsZHJlbiIsInN1cHBvcnQiLCJmaXhlZFBvc2l0aW9uIiwiZWxlbSIsIm9mZnNldFRvcCIsImpRdWVyeSIsInIiLCJHIiwiZiIsIkoiLCJuIiwicCIsImIiLCJJIiwiQiIsInMiLCJ0IiwiYSIsInEiLCJFIiwibCIsImQiLCJjIiwiZyIsImoiLCJtIiwiayIsInoiLCJDIiwiQSIsInUiLCJidXR0b25zIiwic2tpcFNpbmdsZSIsImxpc3QiLCJvblBsYXlTdGFydCIsIm9uUGxheUVuZCIsImZvcm1hdCIsInBhcmFtcyIsInBhcmFtIiwia2V5IiwibWVkaWEiLCJ5b3V0dWJlIiwibWF0Y2hlciIsImF1dG9wbGF5IiwiYXV0b2hpZGUiLCJmcyIsInJlbCIsImhkIiwiZW5hYmxlanNhcGkiLCJ2aW1lbyIsInNob3dfdGl0bGUiLCJzaG93X2J5bGluZSIsInNob3dfcG9ydHJhaXQiLCJmdWxsc2NyZWVuIiwibWV0YWNhZmUiLCJmbGFzaFZhcnMiLCJkYWlseW1vdGlvbiIsImFkZGl0aW9uYWxJbmZvcyIsImF1dG9TdGFydCIsInR3aXR2aWQiLCJ0d2l0cGljIiwiaW5zdGFncmFtIiwiZ29vZ2xlX21hcHMiLCJ0aHVtYnMiLCJzb3VyY2UiLCJpbml0IiwidGh1bWJXaWR0aCIsInRodW1iSGVpZ2h0IiwidGh1bWJTb3VyY2UiLCJsb2FkIiwid2lkdGhSYXRpbyIsImhlaWdodFJhdGlvIiwiZXEiLCJmbG9vciIsImZhZGVJbiIsImZpeCIsIndoZWVsRGVsdGEiLCJkZXRhaWwiLCJheGlzIiwiSE9SSVpPTlRBTF9BWElTIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhWCIsInVuc2hpZnQiLCJkaXNwYXRjaCIsImhhbmRsZSIsImZpeEhvb2tzIiwibW91c2VIb29rcyIsInNwZWNpYWwiLCJzZXR1cCIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbm1vdXNld2hlZWwiLCJ0ZWFyZG93biIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ1bm1vdXNld2hlZWwiLCJzY3JvbGxQYWdpbmF0aW9uIiwic2Nyb2xsVGFyZ2V0Iiwic3RvcFNjcm9sbFBhZ2luYXRpb24iLCJsb2FkQ29udGVudCIsIm1heUxvYWRDb250ZW50IiwiaGVpZ2h0T2Zmc2V0IiwiY29udGVudFBhZ2UiLCJjb250ZW50RGF0YSIsIm9iamVjdHNSZW5kZXJlZCIsInNjcm9sbCIsInN0b3BQcm9wYWdhdGlvbiIsImRlZiIsInN3aW5nIiwiZWFzZUluUXVhZCIsImVhc2VPdXRRdWFkIiwiZWFzZUluT3V0UXVhZCIsImVhc2VJbkN1YmljIiwiZWFzZU91dEN1YmljIiwiZWFzZUluT3V0Q3ViaWMiLCJlYXNlSW5RdWFydCIsImVhc2VPdXRRdWFydCIsImVhc2VJbk91dFF1YXJ0IiwiZWFzZUluUXVpbnQiLCJlYXNlT3V0UXVpbnQiLCJlYXNlSW5PdXRRdWludCIsImVhc2VJblNpbmUiLCJjb3MiLCJQSSIsImVhc2VPdXRTaW5lIiwic2luIiwiZWFzZUluT3V0U2luZSIsImVhc2VJbkV4cG8iLCJwb3ciLCJlYXNlT3V0RXhwbyIsImVhc2VJbk91dEV4cG8iLCJlYXNlSW5DaXJjIiwic3FydCIsImVhc2VPdXRDaXJjIiwiZWFzZUluT3V0Q2lyYyIsImVhc2VJbkVsYXN0aWMiLCJhc2luIiwiZWFzZU91dEVsYXN0aWMiLCJlYXNlSW5PdXRFbGFzdGljIiwiZWFzZUluQmFjayIsImVhc2VPdXRCYWNrIiwiZWFzZUluT3V0QmFjayIsImVhc2VJbkJvdW5jZSIsImVhc2VPdXRCb3VuY2UiLCJlYXNlSW5PdXRCb3VuY2UiLCJzY3JvbGxVcCIsImFuaW1JbiIsImFuaW1PdXQiLCJhbmltU3BlZWQiLCJzY3JvbGxEaXMiLCJzY3JvbGxFdmVudCIsIiRzZWxmIiwic2V0dGluZ3MiLCJ0cmlnZ2VyVmlzaWJsZSIsInNjcm9sbFRyaWdnZXIiLCJpZCIsInNjcm9sbE5hbWUiLCJzY3JvbGxUaXRsZSIsInNjcm9sbEltZyIsInNjcm9sbFRleHQiLCJkaXNwbGF5IiwiekluZGV4IiwiYWN0aXZlT3ZlcmxheSIsInNjcm9sbERpc3RhbmNlIiwiYm9yZGVyVG9wIiwiYW5pbWF0aW9uIiwiYW5pbWF0aW9uU3BlZWQiLCJzY3JvbGxGcm9tIiwic2Nyb2xsU3BlZWQiLCJlYXNpbmdUeXBlIiwiZGVzdHJveSIsInJlbW92ZURhdGEiLCJqcXVlcnkiLCJvZmYiLCJFcnJvciIsImNyZWF0ZUVsZW1lbnQiLCJXZWJraXRUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvbiIsIk9UcmFuc2l0aW9uIiwidHJhbnNpdGlvbiIsImVtdWxhdGVUcmFuc2l0aW9uRW5kIiwiYnNUcmFuc2l0aW9uRW5kIiwiYmluZFR5cGUiLCJkZWxlZ2F0ZVR5cGUiLCJoYW5kbGVPYmoiLCJoYW5kbGVyIiwib24iLCJWRVJTSU9OIiwiVFJBTlNJVElPTl9EVVJBVElPTiIsImNsb3Nlc3QiLCJFdmVudCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImFsZXJ0IiwiQ29uc3RydWN0b3IiLCJub0NvbmZsaWN0Iiwic2V0U3RhdGUiLCIkZWxlbWVudCIsIkRFRkFVTFRTIiwiaXNMb2FkaW5nIiwibG9hZGluZ1RleHQiLCJyZXNldFRleHQiLCJ0b2dnbGVDbGFzcyIsImJ1dHRvbiIsInRlc3QiLCJzbGlkZSIsInRvIiwiaW50ZXJ2YWwiLCJwYXVzZSIsImN5Y2xlIiwiJGluZGljYXRvcnMiLCJwYXVzZWQiLCJzbGlkaW5nIiwiJGFjdGl2ZSIsIiRpdGVtcyIsImtleWJvYXJkIiwia2V5ZG93biIsInRhZ05hbWUiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJnZXRJdGVtSW5kZXgiLCJnZXRJdGVtRm9yRGlyZWN0aW9uIiwicmVsYXRlZFRhcmdldCIsImpvaW4iLCJjYXJvdXNlbCIsIiR0cmlnZ2VyIiwidHJhbnNpdGlvbmluZyIsIiRwYXJlbnQiLCJnZXRQYXJlbnQiLCJhZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MiLCJkaW1lbnNpb24iLCJjYW1lbENhc2UiLCJvZmZzZXRIZWlnaHQiLCJjb2xsYXBzZSIsImNvbnRhaW5zIiwiZHJvcGRvd24iLCIkYm9keSIsIiRkaWFsb2ciLCIkYmFja2Ryb3AiLCJpc1Nob3duIiwib3JpZ2luYWxCb2R5UGFkIiwiaWdub3JlQmFja2Ryb3BDbGljayIsInJlbW90ZSIsIkJBQ0tEUk9QX1RSQU5TSVRJT05fRFVSQVRJT04iLCJiYWNrZHJvcCIsImNoZWNrU2Nyb2xsYmFyIiwic2V0U2Nyb2xsYmFyIiwiZXNjYXBlIiwicmVzaXplIiwiYWRqdXN0RGlhbG9nIiwiZW5mb3JjZUZvY3VzIiwiaGlkZU1vZGFsIiwiaGFzIiwiaGFuZGxlVXBkYXRlIiwicmVzZXRBZGp1c3RtZW50cyIsInJlc2V0U2Nyb2xsYmFyIiwicmVtb3ZlQmFja2Ryb3AiLCJjdXJyZW50VGFyZ2V0IiwiZm9jdXMiLCJwYWRkaW5nTGVmdCIsImJvZHlJc092ZXJmbG93aW5nIiwicGFkZGluZ1JpZ2h0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicmlnaHQiLCJtZWFzdXJlU2Nyb2xsYmFyIiwiY2xhc3NOYW1lIiwicmVtb3ZlQ2hpbGQiLCJlbmFibGVkIiwidGltZW91dCIsImhvdmVyU3RhdGUiLCJpblN0YXRlIiwicGxhY2VtZW50IiwidGVtcGxhdGUiLCJkZWxheSIsImNvbnRhaW5lciIsImdldE9wdGlvbnMiLCIkdmlld3BvcnQiLCJob3ZlciIsImNvbnN0cnVjdG9yIiwiZW50ZXIiLCJsZWF2ZSIsIl9vcHRpb25zIiwiZml4VGl0bGUiLCJnZXREZWZhdWx0cyIsImdldERlbGVnYXRlT3B0aW9ucyIsInRpcCIsImlzSW5TdGF0ZVRydWUiLCJoYXNDb250ZW50Iiwib3duZXJEb2N1bWVudCIsImdldFVJRCIsInNldENvbnRlbnQiLCJnZXRQb3NpdGlvbiIsImJvdHRvbSIsImdldENhbGN1bGF0ZWRPZmZzZXQiLCJhcHBseVBsYWNlbWVudCIsIiR0aXAiLCJpc05hTiIsInNldE9mZnNldCIsInVzaW5nIiwicm91bmQiLCJnZXRWaWV3cG9ydEFkanVzdGVkRGVsdGEiLCJyZXBsYWNlQXJyb3ciLCJhcnJvdyIsImdldFRpdGxlIiwicmFuZG9tIiwiZ2V0RWxlbWVudEJ5SWQiLCIkYXJyb3ciLCJlbmFibGUiLCJkaXNhYmxlIiwidG9nZ2xlRW5hYmxlZCIsInRvb2x0aXAiLCJnZXRDb250ZW50IiwicG9wb3ZlciIsIiRzY3JvbGxFbGVtZW50Iiwib2Zmc2V0cyIsInRhcmdldHMiLCJhY3RpdmVUYXJnZXQiLCJwcm9jZXNzIiwicmVmcmVzaCIsImdldFNjcm9sbEhlaWdodCIsImlzV2luZG93IiwibWFwIiwic29ydCIsInB1c2giLCJhY3RpdmF0ZSIsInBhcmVudHNVbnRpbCIsInNjcm9sbHNweSIsInRhYiIsIiR0YXJnZXQiLCJjaGVja1Bvc2l0aW9uIiwiY2hlY2tQb3NpdGlvbldpdGhFdmVudExvb3AiLCJhZmZpeGVkIiwidW5waW4iLCJwaW5uZWRPZmZzZXQiLCJSRVNFVCIsImdldFN0YXRlIiwiZ2V0UGlubmVkT2Zmc2V0IiwiYWZmaXgiLCJvZmZzZXRCb3R0b20iLCJhdHRhY2hFdmVudCIsImNsc3MiLCJmdWxsc2NyZWVuRml4IiwiYmFja2dyb3VuZFJlc2l6ZSIsIndpbmRvd0giLCJwYXRoIiwiY29udFciLCJjb250SCIsImltZ1ciLCJpbWdIIiwiZGlmZiIsInBhcnNlRmxvYXQiLCJyZW1haW5pbmdIIiwiZ2dyX3Nob3d0aW1lIiwiZ2dyX3N0aW1lIiwidG9wRGlzdGFuY2UiLCJ0b3BTcGVlZCIsImFuaW1hdGlvbkluU3BlZWQiLCJhbmltYXRpb25PdXRTcGVlZCIsImFjdGl2ZSIsIm93bENhcm91c2VsIiwiaXRlbXMiLCJpdGVtc0N1c3RvbSIsImJhc2VDbGFzcyIsInRoZW1lIiwicGFnaW5hdGlvbiIsInBhZ2luYXRpb25OdW1iZXJzIiwiZmFkZUluV2l0aERlbGF5IiwiZWxlbWVudHNMb2FkZWQiLCJzaXplIiwib25zdG9wIiwibXNWaWV3cG9ydFN0eWxlIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsInF1ZXJ5U2VsZWN0b3IiLCJnbG9iYWwiLCJmYWN0b3J5IiwibW9kdWxlIiwiZXhwb3J0cyIsIm5vR2xvYmFsIiwiaXNBcnJheUxpa2UiLCJ3aW5ub3ciLCJlbGVtZW50cyIsInF1YWxpZmllciIsImdyZXAiLCJyaXNTaW1wbGUiLCJzaWJsaW5nIiwiY3VyIiwiZGlyIiwiY3JlYXRlT3B0aW9ucyIsIm9iamVjdCIsInJub3R3aGl0ZSIsIl8iLCJmbGFnIiwiY29tcGxldGVkIiwiZGV0YWNoRXZlbnQiLCJyZWFkeVN0YXRlIiwiZGF0YUF0dHIiLCJybXVsdGlEYXNoIiwidG9Mb3dlckNhc2UiLCJnZXRBdHRyaWJ1dGUiLCJyYnJhY2UiLCJwYXJzZUpTT04iLCJpc0VtcHR5RGF0YU9iamVjdCIsImlzRW1wdHlPYmplY3QiLCJpbnRlcm5hbERhdGEiLCJwdnQiLCJhY2NlcHREYXRhIiwidGhpc0NhY2hlIiwiaW50ZXJuYWxLZXkiLCJleHBhbmRvIiwiaXNOb2RlIiwiY2FjaGUiLCJkZWxldGVkSWRzIiwicG9wIiwiZ3VpZCIsInRvSlNPTiIsImludGVybmFsUmVtb3ZlRGF0YSIsImNvbmNhdCIsImNsZWFuRGF0YSIsImRlbGV0ZUV4cGFuZG8iLCJhZGp1c3RDU1MiLCJ2YWx1ZVBhcnRzIiwidHdlZW4iLCJhZGp1c3RlZCIsInNjYWxlIiwibWF4SXRlcmF0aW9ucyIsImN1cnJlbnRWYWx1ZSIsImluaXRpYWwiLCJ1bml0IiwiY3NzTnVtYmVyIiwiaW5pdGlhbEluVW5pdCIsInJjc3NOdW0iLCJleGVjIiwiY3JlYXRlU2FmZUZyYWdtZW50Iiwibm9kZU5hbWVzIiwic2FmZUZyYWciLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZ2V0QWxsIiwiY29udGV4dCIsInRhZyIsImVsZW1zIiwiZm91bmQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjaGlsZE5vZGVzIiwibm9kZU5hbWUiLCJtZXJnZSIsInNldEdsb2JhbEV2YWwiLCJyZWZFbGVtZW50cyIsIl9kYXRhIiwiZml4RGVmYXVsdENoZWNrZWQiLCJyY2hlY2thYmxlVHlwZSIsImRlZmF1bHRDaGVja2VkIiwiY2hlY2tlZCIsImJ1aWxkRnJhZ21lbnQiLCJzY3JpcHRzIiwic2VsZWN0aW9uIiwiaWdub3JlZCIsInRtcCIsInRib2R5Iiwic2FmZSIsIm5vZGVzIiwicmh0bWwiLCJydGFnTmFtZSIsIndyYXBNYXAiLCJfZGVmYXVsdCIsImlubmVySFRNTCIsImh0bWxQcmVmaWx0ZXIiLCJsYXN0Q2hpbGQiLCJsZWFkaW5nV2hpdGVzcGFjZSIsInJsZWFkaW5nV2hpdGVzcGFjZSIsInJ0Ym9keSIsImZpcnN0Q2hpbGQiLCJ0ZXh0Q29udGVudCIsImFwcGVuZENoZWNrZWQiLCJyc2NyaXB0VHlwZSIsInJldHVyblRydWUiLCJyZXR1cm5GYWxzZSIsInNhZmVBY3RpdmVFbGVtZW50IiwiYWN0aXZlRWxlbWVudCIsImVyciIsInR5cGVzIiwib3JpZ0ZuIiwibWFuaXB1bGF0aW9uVGFyZ2V0IiwiZGlzYWJsZVNjcmlwdCIsInJlc3RvcmVTY3JpcHQiLCJyc2NyaXB0VHlwZU1hc2tlZCIsInJlbW92ZUF0dHJpYnV0ZSIsImNsb25lQ29weUV2ZW50IiwiZGVzdCIsImhhc0RhdGEiLCJvbGREYXRhIiwiY3VyRGF0YSIsImV2ZW50cyIsImZpeENsb25lTm9kZUlzc3VlcyIsIm5vQ2xvbmVFdmVudCIsInJlbW92ZUV2ZW50IiwicGFyZW50Tm9kZSIsIm91dGVySFRNTCIsImh0bWw1Q2xvbmUiLCJkZWZhdWx0U2VsZWN0ZWQiLCJzZWxlY3RlZCIsImRlZmF1bHRWYWx1ZSIsImRvbU1hbmlwIiwiY29sbGVjdGlvbiIsImFyZ3MiLCJjYWxsYmFjayIsImZpcnN0Iiwibm9kZSIsImhhc1NjcmlwdHMiLCJkb2MiLCJmcmFnbWVudCIsImlOb0Nsb25lIiwiY2hlY2tDbG9uZSIsInJjaGVja2VkIiwic2VsZiIsImNsb25lIiwiX2V2YWxVcmwiLCJnbG9iYWxFdmFsIiwicmNsZWFuU2NyaXB0Iiwia2VlcERhdGEiLCJhY3R1YWxEaXNwbGF5IiwiZGVmYXVsdERpc3BsYXkiLCJlbGVtZGlzcGxheSIsImNvbnRlbnREb2N1bWVudCIsIndyaXRlIiwiYWRkR2V0SG9va0lmIiwiY29uZGl0aW9uRm4iLCJob29rRm4iLCJ2ZW5kb3JQcm9wTmFtZSIsImVtcHR5U3R5bGUiLCJjYXBOYW1lIiwidG9VcHBlckNhc2UiLCJjc3NQcmVmaXhlcyIsInNob3dIaWRlIiwiaGlkZGVuIiwidmFsdWVzIiwiaXNIaWRkZW4iLCJzZXRQb3NpdGl2ZU51bWJlciIsInN1YnRyYWN0IiwibWF0Y2hlcyIsInJudW1zcGxpdCIsImF1Z21lbnRXaWR0aE9ySGVpZ2h0IiwiZXh0cmEiLCJpc0JvcmRlckJveCIsInN0eWxlcyIsImNzc0V4cGFuZCIsImdldFdpZHRoT3JIZWlnaHQiLCJ2YWx1ZUlzQm9yZGVyQm94IiwiZ2V0U3R5bGVzIiwiYm94U2l6aW5nIiwibXNGdWxsc2NyZWVuRWxlbWVudCIsImdldENsaWVudFJlY3RzIiwiY3VyQ1NTIiwicm51bW5vbnB4IiwiYm94U2l6aW5nUmVsaWFibGUiLCJUd2VlbiIsImNyZWF0ZUZ4Tm93IiwiZnhOb3ciLCJnZW5GeCIsImluY2x1ZGVXaWR0aCIsImF0dHJzIiwiY3JlYXRlVHdlZW4iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsImRlZmF1bHRQcmVmaWx0ZXIiLCJwcm9wcyIsImhvb2tzIiwib2xkZmlyZSIsImNoZWNrRGlzcGxheSIsImFuaW0iLCJkYXRhU2hvdyIsInF1ZXVlIiwiX3F1ZXVlSG9va3MiLCJ1bnF1ZXVlZCIsImZpcmUiLCJhbHdheXMiLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJpbmxpbmVCbG9ja05lZWRzTGF5b3V0Iiwiem9vbSIsInNocmlua1dyYXBCbG9ja3MiLCJyZnh0eXBlcyIsImRvbmUiLCJfcmVtb3ZlRGF0YSIsInByb3BGaWx0ZXIiLCJzcGVjaWFsRWFzaW5nIiwiY3NzSG9va3MiLCJleHBhbmQiLCJwcm9wZXJ0aWVzIiwicmVzdWx0Iiwic3RvcHBlZCIsInByZWZpbHRlcnMiLCJkZWZlcnJlZCIsIkRlZmVycmVkIiwidGljayIsImN1cnJlbnRUaW1lIiwicmVtYWluaW5nIiwic3RhcnRUaW1lIiwidGVtcCIsInBlcmNlbnQiLCJ0d2VlbnMiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9taXNlIiwib3JpZ2luYWxQcm9wZXJ0aWVzIiwib3JpZ2luYWxPcHRpb25zIiwiZ290b0VuZCIsInJlamVjdFdpdGgiLCJwcm9ncmVzcyIsImZhaWwiLCJnZXRDbGFzcyIsImFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyIsInN0cnVjdHVyZSIsImRhdGFUeXBlRXhwcmVzc2lvbiIsImZ1bmMiLCJkYXRhVHlwZXMiLCJpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyIsImluc3BlY3QiLCJpbnNwZWN0ZWQiLCJwcmVmaWx0ZXJPckZhY3RvcnkiLCJkYXRhVHlwZU9yVHJhbnNwb3J0Iiwic2Vla2luZ1RyYW5zcG9ydCIsInRyYW5zcG9ydHMiLCJhamF4RXh0ZW5kIiwiZGVlcCIsImZsYXRPcHRpb25zIiwiYWpheFNldHRpbmdzIiwiYWpheEhhbmRsZVJlc3BvbnNlcyIsInJlc3BvbnNlcyIsImZpcnN0RGF0YVR5cGUiLCJjdCIsImZpbmFsRGF0YVR5cGUiLCJtaW1lVHlwZSIsImdldFJlc3BvbnNlSGVhZGVyIiwiY29udmVydGVycyIsImFqYXhDb252ZXJ0IiwicmVzcG9uc2UiLCJpc1N1Y2Nlc3MiLCJjb252MiIsImNvbnYiLCJyZXNwb25zZUZpZWxkcyIsImRhdGFGaWx0ZXIiLCJzdGF0ZSIsImdldERpc3BsYXkiLCJmaWx0ZXJIaWRkZW4iLCJidWlsZFBhcmFtcyIsInByZWZpeCIsInRyYWRpdGlvbmFsIiwicmJyYWNrZXQiLCJjcmVhdGVTdGFuZGFyZFhIUiIsIlhNTEh0dHBSZXF1ZXN0IiwiY3JlYXRlQWN0aXZlWEhSIiwiQWN0aXZlWE9iamVjdCIsImdldFdpbmRvdyIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiY2xhc3MydHlwZSIsInRvU3RyaW5nIiwiaGFzT3duIiwicnRyaW0iLCJybXNQcmVmaXgiLCJyZGFzaEFscGhhIiwiZmNhbWVsQ2FzZSIsImFsbCIsImxldHRlciIsInRvQXJyYXkiLCJudW0iLCJwdXNoU3RhY2siLCJwcmV2T2JqZWN0IiwibGFzdCIsInNwbGljZSIsImNvcHlJc0FycmF5IiwiY29weSIsImlzUmVhZHkiLCJtc2ciLCJpc051bWVyaWMiLCJyZWFsU3RyaW5nT2JqIiwib3duRmlyc3QiLCJleGVjU2NyaXB0Iiwic3RyaW5nIiwibWFrZUFycmF5IiwiYXJyIiwicmVzdWx0cyIsIk9iamVjdCIsInNlY29uZCIsImludmVydCIsImNhbGxiYWNrSW52ZXJzZSIsImNhbGxiYWNrRXhwZWN0IiwiYXJnIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJTaXp6bGUiLCJzZWVkIiwibmlkIiwibmlkc2VsZWN0IiwiZ3JvdXBzIiwibmV3U2VsZWN0b3IiLCJuZXdDb250ZXh0IiwicHJlZmVycmVkRG9jIiwic2V0RG9jdW1lbnQiLCJkb2N1bWVudElzSFRNTCIsInJxdWlja0V4cHIiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicXNhIiwiY29tcGlsZXJDYWNoZSIsInJidWdneVFTQSIsInJlc2NhcGUiLCJzZXRBdHRyaWJ1dGUiLCJ0b2tlbml6ZSIsInJpZGVudGlmaWVyIiwidG9TZWxlY3RvciIsInJzaWJsaW5nIiwidGVzdENvbnRleHQiLCJxc2FFcnJvciIsInNlbGVjdCIsImNyZWF0ZUNhY2hlIiwiRXhwciIsImNhY2hlTGVuZ3RoIiwibWFya0Z1bmN0aW9uIiwiYXNzZXJ0IiwiZGl2IiwiYWRkSGFuZGxlIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsInNvdXJjZUluZGV4IiwiTUFYX05FR0FUSVZFIiwibmV4dFNpYmxpbmciLCJjcmVhdGVJbnB1dFBzZXVkbyIsImNyZWF0ZUJ1dHRvblBzZXVkbyIsImNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8iLCJhcmd1bWVudCIsIm1hdGNoSW5kZXhlcyIsInNldEZpbHRlcnMiLCJ0b2tlbnMiLCJhZGRDb21iaW5hdG9yIiwiY29tYmluYXRvciIsImJhc2UiLCJjaGVja05vbkVsZW1lbnRzIiwiZG9uZU5hbWUiLCJ4bWwiLCJvbGRDYWNoZSIsInVuaXF1ZUNhY2hlIiwib3V0ZXJDYWNoZSIsIm5ld0NhY2hlIiwiZGlycnVucyIsInVuaXF1ZUlEIiwiZWxlbWVudE1hdGNoZXIiLCJtYXRjaGVycyIsIm11bHRpcGxlQ29udGV4dHMiLCJjb250ZXh0cyIsImNvbmRlbnNlIiwidW5tYXRjaGVkIiwibmV3VW5tYXRjaGVkIiwibWFwcGVkIiwic2V0TWF0Y2hlciIsInByZUZpbHRlciIsInBvc3RGaWx0ZXIiLCJwb3N0RmluZGVyIiwicG9zdFNlbGVjdG9yIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwicmVsYXRpdmUiLCJpbXBsaWNpdFJlbGF0aXZlIiwibWF0Y2hDb250ZXh0IiwibWF0Y2hBbnlDb250ZXh0Iiwib3V0ZXJtb3N0Q29udGV4dCIsIm1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyIsImVsZW1lbnRNYXRjaGVycyIsInNldE1hdGNoZXJzIiwiYnlTZXQiLCJieUVsZW1lbnQiLCJzdXBlck1hdGNoZXIiLCJvdXRlcm1vc3QiLCJtYXRjaGVkQ291bnQiLCJzZXRNYXRjaGVkIiwiY29udGV4dEJhY2t1cCIsImRpcnJ1bnNVbmlxdWUiLCJ1bmlxdWVTb3J0IiwiZ2V0VGV4dCIsImlzWE1MIiwiY29tcGlsZSIsInNvcnRJbnB1dCIsImhhc0R1cGxpY2F0ZSIsImRvY0VsZW0iLCJyYnVnZ3lNYXRjaGVzIiwiY2xhc3NDYWNoZSIsInRva2VuQ2FjaGUiLCJzb3J0T3JkZXIiLCJwdXNoX25hdGl2ZSIsImJvb2xlYW5zIiwid2hpdGVzcGFjZSIsImlkZW50aWZpZXIiLCJhdHRyaWJ1dGVzIiwicHNldWRvcyIsInJ3aGl0ZXNwYWNlIiwiUmVnRXhwIiwicmNvbW1hIiwicmNvbWJpbmF0b3JzIiwicmF0dHJpYnV0ZVF1b3RlcyIsInJwc2V1ZG8iLCJtYXRjaEV4cHIiLCJJRCIsIkNMQVNTIiwiVEFHIiwiQVRUUiIsIlBTRVVETyIsIkNISUxEIiwiYm9vbCIsIm5lZWRzQ29udGV4dCIsInJpbnB1dHMiLCJyaGVhZGVyIiwicm5hdGl2ZSIsInJ1bmVzY2FwZSIsImZ1bmVzY2FwZSIsImVzY2FwZWQiLCJlc2NhcGVkV2hpdGVzcGFjZSIsImhpZ2giLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJ1bmxvYWRIYW5kbGVyIiwiZWxzIiwiaGFzQ29tcGFyZSIsImNyZWF0ZUNvbW1lbnQiLCJnZXRCeUlkIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJhdHRySWQiLCJnZXRBdHRyaWJ1dGVOb2RlIiwiaW5wdXQiLCJtYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJvTWF0Y2hlc1NlbGVjdG9yIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJkaXNjb25uZWN0ZWRNYXRjaCIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiYWRvd24iLCJidXAiLCJjb21wYXJlIiwic29ydERldGFjaGVkIiwiYXVwIiwiYXAiLCJicCIsImV4cHIiLCJzcGVjaWZpZWQiLCJkdXBsaWNhdGVzIiwiZGV0ZWN0RHVwbGljYXRlcyIsInNvcnRTdGFibGUiLCJub2RlVmFsdWUiLCJzZWxlY3RvcnMiLCJjcmVhdGVQc2V1ZG8iLCI+IiwiICIsIisiLCJ+IiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwiY2hlY2siLCJzaW1wbGUiLCJmb3J3YXJkIiwib2ZUeXBlIiwibm9kZUluZGV4IiwidXNlQ2FjaGUiLCJwc2V1ZG8iLCJtYXRjaGVkIiwiaW5uZXJUZXh0IiwibGFuZyIsImVsZW1MYW5nIiwiaGFzaCIsInJvb3QiLCJoYXNGb2N1cyIsInRhYkluZGV4IiwiZGlzYWJsZWQiLCJzZWxlY3RlZEluZGV4IiwiaGVhZGVyIiwiZXZlbiIsIm9kZCIsImx0IiwiZ3QiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwic3VibWl0IiwicmVzZXQiLCJmaWx0ZXJzIiwicGFyc2VPbmx5Iiwic29GYXIiLCJwcmVGaWx0ZXJzIiwiY2FjaGVkIiwidG9rZW4iLCJjb21waWxlZCIsImRpdjEiLCJ1bmlxdWUiLCJpc1hNTERvYyIsInVudGlsIiwidHJ1bmNhdGUiLCJzaWJsaW5ncyIsInJuZWVkc0NvbnRleHQiLCJyc2luZ2xlVGFnIiwicm9vdGpRdWVyeSIsInBhcnNlSFRNTCIsInJwYXJlbnRzcHJldiIsImd1YXJhbnRlZWRVbmlxdWUiLCJwcmV2QWxsIiwiYWRkQmFjayIsIm5leHRBbGwiLCJuZXh0VW50aWwiLCJwcmV2VW50aWwiLCJyZXZlcnNlIiwiQ2FsbGJhY2tzIiwiZmlyaW5nIiwibWVtb3J5IiwiZmlyZWQiLCJmaXJpbmdJbmRleCIsIm9uY2UiLCJzdG9wT25GYWxzZSIsImxvY2siLCJmaXJlV2l0aCIsInR1cGxlcyIsInRoZW4iLCJmbnMiLCJuZXdEZWZlciIsInR1cGxlIiwicmV0dXJuZWQiLCJub3RpZnkiLCJyZXNvbHZlIiwicmVqZWN0IiwicGlwZSIsInN0YXRlU3RyaW5nIiwid2hlbiIsInN1Ym9yZGluYXRlIiwicHJvZ3Jlc3NWYWx1ZXMiLCJwcm9ncmVzc0NvbnRleHRzIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsInVwZGF0ZUZ1bmMiLCJyZWFkeUxpc3QiLCJyZWFkeVdhaXQiLCJob2xkUmVhZHkiLCJob2xkIiwid2FpdCIsInRyaWdnZXJIYW5kbGVyIiwiZnJhbWVFbGVtZW50IiwiZG9TY3JvbGwiLCJkb1Njcm9sbENoZWNrIiwiY3NzVGV4dCIsIm5vRGF0YSIsImFwcGxldCAiLCJlbWJlZCAiLCJvYmplY3QgIiwiZGVxdWV1ZSIsInN0YXJ0TGVuZ3RoIiwic2V0dGVyIiwiY2xlYXJRdWV1ZSIsImNvdW50IiwiZGVmZXIiLCJzaHJpbmtXcmFwQmxvY2tzVmFsIiwicG51bSIsImFjY2VzcyIsImNoYWluYWJsZSIsImVtcHR5R2V0IiwicmF3IiwiYnVsayIsImh0bWxTZXJpYWxpemUiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsIm9wdGlvbiIsImxlZ2VuZCIsImFyZWEiLCJ0aGVhZCIsInRyIiwiY29sIiwidGQiLCJvcHRncm91cCIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJldmVudE5hbWUiLCJjaGFuZ2UiLCJmb2N1c2luIiwicmZvcm1FbGVtcyIsInJrZXlFdmVudCIsInJtb3VzZUV2ZW50IiwicmZvY3VzTW9ycGgiLCJydHlwZW5hbWVzcGFjZSIsImhhbmRsZU9iakluIiwiZXZlbnRIYW5kbGUiLCJoYW5kbGVycyIsIm5hbWVzcGFjZXMiLCJvcmlnVHlwZSIsImVsZW1EYXRhIiwidHJpZ2dlcmVkIiwibmFtZXNwYWNlIiwiZGVsZWdhdGVDb3VudCIsIm1hcHBlZFR5cGVzIiwib3JpZ0NvdW50Iiwib25seUhhbmRsZXJzIiwib250eXBlIiwiYnViYmxlVHlwZSIsImV2ZW50UGF0aCIsImlzVHJpZ2dlciIsInJuYW1lc3BhY2UiLCJub0J1YmJsZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaGFuZGxlclF1ZXVlIiwiZGVsZWdhdGVUYXJnZXQiLCJwcmVEaXNwYXRjaCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwicG9zdERpc3BhdGNoIiwic2VsIiwib3JpZ2luYWxFdmVudCIsImZpeEhvb2siLCJrZXlIb29rcyIsIm9yaWdpbmFsIiwiY2hhckNvZGUiLCJldmVudERvYyIsImZyb21FbGVtZW50IiwicGFnZVgiLCJjbGllbnRYIiwiY2xpZW50TGVmdCIsInBhZ2VZIiwiY2xpZW50WSIsImNsaWVudFRvcCIsInRvRWxlbWVudCIsImJlZm9yZXVubG9hZCIsInJldHVyblZhbHVlIiwic2ltdWxhdGUiLCJpc1NpbXVsYXRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJ0aW1lU3RhbXAiLCJjYW5jZWxCdWJibGUiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsInJlbGF0ZWQiLCJmb3JtIiwiX3N1Ym1pdEJ1YmJsZSIsInByb3BlcnR5TmFtZSIsIl9qdXN0Q2hhbmdlZCIsImF0dGFjaGVzIiwicmlubGluZWpRdWVyeSIsInJub3NoaW1jYWNoZSIsInJ4aHRtbFRhZyIsInJub0lubmVyaHRtbCIsInNhZmVGcmFnbWVudCIsImZyYWdtZW50RGl2IiwiZGF0YUFuZEV2ZW50cyIsImRlZXBEYXRhQW5kRXZlbnRzIiwiZGVzdEVsZW1lbnRzIiwic3JjRWxlbWVudHMiLCJpblBhZ2UiLCJmb3JjZUFjY2VwdERhdGEiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsInByZXBlbmRUbyIsImluc2VydCIsIkhUTUwiLCJCT0RZIiwicm1hcmdpbiIsInN3YXAiLCJvbGQiLCJjb21wdXRlU3R5bGVUZXN0cyIsImRpdlN0eWxlIiwicGl4ZWxQb3NpdGlvblZhbCIsImJveFNpemluZ1JlbGlhYmxlVmFsIiwicmVsaWFibGVNYXJnaW5MZWZ0VmFsIiwicGl4ZWxNYXJnaW5SaWdodFZhbCIsInJlbGlhYmxlTWFyZ2luUmlnaHRWYWwiLCJnZXRDb21wdXRlZFN0eWxlIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwicmVsaWFibGVIaWRkZW5PZmZzZXRzVmFsIiwiY3NzRmxvYXQiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsIk1vekJveFNpemluZyIsIldlYmtpdEJveFNpemluZyIsInJlbGlhYmxlSGlkZGVuT2Zmc2V0cyIsInBpeGVsTWFyZ2luUmlnaHQiLCJwaXhlbFBvc2l0aW9uIiwicmVsaWFibGVNYXJnaW5SaWdodCIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInJwb3NpdGlvbiIsInZpZXciLCJvcGVuZXIiLCJjb21wdXRlZCIsImdldFByb3BlcnR5VmFsdWUiLCJjdXJyZW50U3R5bGUiLCJycyIsInJzTGVmdCIsInJ1bnRpbWVTdHlsZSIsInBpeGVsTGVmdCIsInJhbHBoYSIsInJvcGFjaXR5IiwicmRpc3BsYXlzd2FwIiwiY3NzU2hvdyIsInZpc2liaWxpdHkiLCJjc3NOb3JtYWxUcmFuc2Zvcm0iLCJsZXR0ZXJTcGFjaW5nIiwiZm9udFdlaWdodCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiY29sdW1uQ291bnQiLCJmaWxsT3BhY2l0eSIsImZsZXhHcm93IiwiZmxleFNocmluayIsImxpbmVIZWlnaHQiLCJvcmRlciIsIm9ycGhhbnMiLCJ3aWRvd3MiLCJjc3NQcm9wcyIsImZsb2F0Iiwib3JpZ05hbWUiLCJpc0Zpbml0ZSIsIiQxIiwiYm9yZGVyIiwic3VmZml4IiwiZXhwYW5kZWQiLCJwYXJ0cyIsInByb3BIb29rcyIsImVhc2VkIiwibGluZWFyIiwidGltZXJJZCIsInJydW4iLCIqIiwidHdlZW5lciIsInByZWZpbHRlciIsInNwZWVkIiwib3B0Iiwic3BlZWRzIiwiZmFkZVRvIiwib3B0YWxsIiwiZG9BbmltYXRpb24iLCJmaW5pc2giLCJzdG9wUXVldWUiLCJ0aW1lcnMiLCJjc3NGbiIsInNsaWRlRG93biIsInNsaWRlVXAiLCJzbGlkZVRvZ2dsZSIsImZhZGVUb2dnbGUiLCJzbG93IiwiZmFzdCIsInRpbWUiLCJnZXRTZXRBdHRyaWJ1dGUiLCJocmVmTm9ybWFsaXplZCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsImVuY3R5cGUiLCJvcHREaXNhYmxlZCIsInJhZGlvVmFsdWUiLCJycmV0dXJuIiwidmFsSG9va3MiLCJvcHRpb25TZXQiLCJub2RlSG9vayIsImJvb2xIb29rIiwicnVzZURlZmF1bHQiLCJnZXRTZXRJbnB1dCIsIm5UeXBlIiwiYXR0ckhvb2tzIiwicHJvcE5hbWUiLCJhdHRyTmFtZXMiLCJwcm9wRml4IiwiZ2V0dGVyIiwic2V0QXR0cmlidXRlTm9kZSIsImNyZWF0ZUF0dHJpYnV0ZSIsImNvb3JkcyIsImNvbnRlbnRlZGl0YWJsZSIsInJmb2N1c2FibGUiLCJyY2xpY2thYmxlIiwicmVtb3ZlUHJvcCIsInRhYmluZGV4IiwiZm9yIiwiY2xhc3MiLCJyY2xhc3MiLCJjbGFzc2VzIiwiY3VyVmFsdWUiLCJjbGF6eiIsImZpbmFsVmFsdWUiLCJzdGF0ZVZhbCIsImNsYXNzTmFtZXMiLCJmbk92ZXIiLCJmbk91dCIsIm5vbmNlIiwicnF1ZXJ5IiwicnZhbGlkdG9rZW5zIiwiSlNPTiIsInBhcnNlIiwicmVxdWlyZU5vbkNvbW1hIiwiZGVwdGgiLCJjb21tYSIsIkZ1bmN0aW9uIiwicGFyc2VYTUwiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJhc3luYyIsImxvYWRYTUwiLCJyaGFzaCIsInJ0cyIsInJoZWFkZXJzIiwicmxvY2FsUHJvdG9jb2wiLCJybm9Db250ZW50IiwicnByb3RvY29sIiwicnVybCIsImFsbFR5cGVzIiwiYWpheExvY2F0aW9uIiwiYWpheExvY1BhcnRzIiwibGFzdE1vZGlmaWVkIiwiZXRhZyIsImlzTG9jYWwiLCJwcm9jZXNzRGF0YSIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsImpzb24iLCIqIHRleHQiLCJ0ZXh0IGh0bWwiLCJ0ZXh0IGpzb24iLCJ0ZXh0IHhtbCIsImFqYXhTZXR1cCIsImFqYXhQcmVmaWx0ZXIiLCJhamF4VHJhbnNwb3J0Iiwic3RhdHVzIiwibmF0aXZlU3RhdHVzVGV4dCIsIm1vZGlmaWVkIiwic3RhdHVzVGV4dCIsInRpbWVvdXRUaW1lciIsInRyYW5zcG9ydCIsInJlc3BvbnNlSGVhZGVyc1N0cmluZyIsImlmTW9kaWZpZWQiLCJjYWNoZVVSTCIsImNhbGxiYWNrQ29udGV4dCIsInN0YXR1c0NvZGUiLCJmaXJlR2xvYmFscyIsImdsb2JhbEV2ZW50Q29udGV4dCIsImNvbXBsZXRlRGVmZXJyZWQiLCJyZXNwb25zZUhlYWRlcnMiLCJyZXF1ZXN0SGVhZGVycyIsInJlcXVlc3RIZWFkZXJzTmFtZXMiLCJzdHJBYm9ydCIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsInNldFJlcXVlc3RIZWFkZXIiLCJsbmFtZSIsIm92ZXJyaWRlTWltZVR5cGUiLCJmaW5hbFRleHQiLCJtZXRob2QiLCJjcm9zc0RvbWFpbiIsImJlZm9yZVNlbmQiLCJzZW5kIiwiZ2V0SlNPTiIsImdldFNjcmlwdCIsInRocm93cyIsIndyYXBBbGwiLCJ1bndyYXAiLCJ2aXNpYmxlIiwicjIwIiwickNSTEYiLCJyc3VibWl0dGVyVHlwZXMiLCJyc3VibWl0dGFibGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsInhociIsImRvY3VtZW50TW9kZSIsInhocklkIiwieGhyQ2FsbGJhY2tzIiwieGhyU3VwcG9ydGVkIiwiY29ycyIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwiaXNBYm9ydCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlc3BvbnNlVGV4dCIsInNjcmlwdCIsInRleHQgc2NyaXB0IiwiaGVhZCIsInNjcmlwdENoYXJzZXQiLCJjaGFyc2V0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJfbG9hZCIsImFuaW1hdGVkIiwiY3VyUG9zaXRpb24iLCJjdXJMZWZ0IiwiY3VyQ1NTVG9wIiwiY3VyVG9wIiwiY3VyT2Zmc2V0IiwiY3VyQ1NTTGVmdCIsImNhbGN1bGF0ZVBvc2l0aW9uIiwiY3VyRWxlbSIsIndpbiIsImJveCIsInBhZ2VZT2Zmc2V0IiwicGFnZVhPZmZzZXQiLCJvZmZzZXRQYXJlbnQiLCJwYXJlbnRPZmZzZXQiLCJzY3JvbGxUbyIsIkhlaWdodCIsIldpZHRoIiwiIiwiZGVmYXVsdEV4dHJhIiwiZnVuY05hbWUiLCJhbmRTZWxmIiwiZGVmaW5lIiwiYW1kIiwiX2pRdWVyeSIsIl8kIiwibWlncmF0ZVdhcm4iLCJjb25zb2xlIiwid2FybmVkQWJvdXQiLCJtaWdyYXRlV2FybmluZ3MiLCJ3YXJuIiwibWlncmF0ZU11dGUiLCJtaWdyYXRlVHJhY2UiLCJ0cmFjZSIsIm1pZ3JhdGVXYXJuUHJvcCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsIm5ld1ZhbHVlIiwiX2RlZmluZVByb3BlcnR5QnJva2VuIiwibG9nIiwibWlncmF0ZVJlc2V0IiwiY29tcGF0TW9kZSIsImF0dHJGbiIsIm9sZEF0dHIiLCJ2YWx1ZUF0dHJHZXQiLCJ2YWx1ZUF0dHJTZXQiLCJybm9UeXBlIiwicm5vQXR0ck5vZGVUeXBlIiwicmJvb2xlYW4iLCJwYXNzIiwibG93ZXJOYW1lIiwiYXR0ck5vZGUiLCJwcm9wZXJ0eSIsImJyb3dzZXIiLCJvbGRJbml0Iiwib2xkUGFyc2VKU09OIiwidWFNYXRjaCIsInVhIiwiY2hyb21lIiwid2Via2l0Iiwic2FmYXJpIiwic3ViIiwialF1ZXJ5U3ViIiwic3VwZXJjbGFzcyIsInJvb3RqUXVlcnlTdWIiLCJvbGRGbkRhdGEiLCJldnQiLCJvbGRTZWxmIiwiY2xlYW4iLCJoYW5kbGVTY3JpcHQiLCJqc1RhZ3MiLCJldmVudEFkZCIsImV2ZW50UmVtb3ZlIiwiZXZlbnRUcmlnZ2VyIiwib2xkVG9nZ2xlIiwib2xkTGl2ZSIsIm9sZERpZSIsImRpZSIsImFqYXhFdmVudHMiLCJyYWpheEV2ZW50IiwicmhvdmVySGFjayIsImhvdmVySGFjayIsImZuMiIsInRvZ2dsZXIiLCJsYXN0VG9nZ2xlIiwiJGVsZW0iLCJ1c2VyT3B0aW9ucyIsImpzb25TdWNjZXNzIiwib3dsIiwibG9nSW4iLCJiZWZvcmVJbml0IiwianNvblBhdGgiLCJvcmlnbmFsSXRlbXMiLCJjaGVja0Jyb3dzZXIiLCJ3cmFwcGVyV2lkdGgiLCJjaGVja1Zpc2libGUiLCJzZXRWYXJzIiwiZXZlbnRUeXBlcyIsIiR1c2VySXRlbXMiLCJpdGVtc0Ftb3VudCIsIndyYXBJdGVtcyIsIiRvd2xJdGVtcyIsIiRvd2xXcmFwcGVyIiwicGxheURpcmVjdGlvbiIsInByZXZJdGVtIiwicHJldkFyciIsImN1cnJlbnRJdGVtIiwiY3VzdG9tRXZlbnRzIiwib25TdGFydHVwIiwidXBkYXRlSXRlbXMiLCJjYWxjdWxhdGVBbGwiLCJidWlsZENvbnRyb2xzIiwidXBkYXRlQ29udHJvbHMiLCJtb3ZlRXZlbnRzIiwic3RvcE9uSG92ZXIiLCJvd2xTdGF0dXMiLCJ0cmFuc2l0aW9uU3R5bGUiLCJ0cmFuc2l0aW9uVHlwZXMiLCJ3YXRjaFZpc2liaWxpdHkiLCJvbnN0YXJ0dXAiLCJlYWNoTW92ZVVwZGF0ZSIsImFmdGVySW5pdCIsImxhenlMb2FkIiwib25WaXNpYmxlSXRlbXMiLCJhZnRlckFjdGlvbiIsInVwZGF0ZVZhcnMiLCJiZWZvcmVVcGRhdGUiLCJ1cGRhdGVQb3NpdGlvbiIsImFmdGVyVXBkYXRlIiwicmVsb2FkIiwiYXV0b1BsYXlJbnRlcnZhbCIsIndyYXBwZXJPdXRlciIsInJlc3BvbnNpdmUiLCJzaW5nbGVJdGVtIiwiaXRlbXNEZXNrdG9wIiwiaXRlbXNEZXNrdG9wU21hbGwiLCJpdGVtc1RhYmxldCIsIml0ZW1zVGFibGV0U21hbGwiLCJpdGVtc01vYmlsZSIsInJlc3BvbnNpdmVCYXNlV2lkdGgiLCJpdGVtc1NjYWxlVXAiLCJyZXNpemVyIiwicmVzcG9uc2l2ZVJlZnJlc2hSYXRlIiwianVtcFRvIiwiY2hlY2tBcCIsImFwcGVuZEl0ZW1zU2l6ZXMiLCJpdGVtV2lkdGgiLCJOdW1iZXIiLCJhcHBlbmRXcmFwcGVyU2l6ZXMiLCJjYWxjdWxhdGVXaWR0aCIsImxvb3BzIiwibWF4aW11bVBpeGVscyIsIm1heGltdW1JdGVtIiwicG9zaXRpb25zSW5BcnJheSIsInBhZ2VzSW5BcnJheSIsInNjcm9sbFBlclBhZ2UiLCJuYXZpZ2F0aW9uIiwib3dsQ29udHJvbHMiLCJidWlsZFBhZ2luYXRpb24iLCJidWlsZEJ1dHRvbnMiLCJidXR0b25QcmV2IiwibmF2aWdhdGlvblRleHQiLCJidXR0b25OZXh0IiwicGFnaW5hdGlvbldyYXBwZXIiLCJnb1RvIiwidXBkYXRlUGFnaW5hdGlvbiIsImNoZWNrUGFnaW5hdGlvbiIsImNoZWNrTmF2aWdhdGlvbiIsInJld2luZE5hdiIsImRlc3Ryb3lDb250cm9scyIsImlzVHJhbnNpdGlvbiIsImJlZm9yZU1vdmUiLCJzdXBwb3J0M2QiLCJzd2FwU3BlZWQiLCJ0cmFuc2l0aW9uM2QiLCJjc3Myc2xpZGUiLCJhZnRlckdvIiwic2luZ2xlSXRlbVRyYW5zaXRpb24iLCJpc0NzczNGaW5pc2giLCJwYWdpbmF0aW9uU3BlZWQiLCJyZXdpbmRTcGVlZCIsInNsaWRlU3BlZWQiLCJhZnRlck1vdmUiLCJhcFN0YXR1cyIsImFkZENzc1NwZWVkIiwiLXdlYmtpdC10cmFuc2l0aW9uIiwiLW1vei10cmFuc2l0aW9uIiwiLW8tdHJhbnNpdGlvbiIsInJlbW92ZVRyYW5zaXRpb24iLCJkb1RyYW5zbGF0ZSIsIi13ZWJraXQtdHJhbnNmb3JtIiwiLW1vei10cmFuc2Zvcm0iLCItby10cmFuc2Zvcm0iLCItbXMtdHJhbnNmb3JtIiwidHJhbnNmb3JtIiwiY3NzMm1vdmUiLCJpc0Nzc0ZpbmlzaCIsIm1zTWF4VG91Y2hQb2ludHMiLCJtb3VzZURyYWciLCJ0b3VjaERyYWciLCJnZXN0dXJlcyIsImRpc2FibGVkRXZlbnRzIiwiZXZfdHlwZXMiLCJtb3ZlIiwidG91Y2hlcyIsIm5ld1Bvc1giLCJvZmZzZXRYIiwibmV3UG9zWSIsIm9mZnNldFkiLCJuZXdSZWxhdGl2ZVgiLCJyZWxhdGl2ZVBvcyIsInN0YXJ0RHJhZ2dpbmciLCJkcmFnZ2luZyIsImRyYWdEaXJlY3Rpb24iLCJnZXROZXdQb3NpdGlvbiIsInRhcmdldEVsZW1lbnQiLCJiYXNlRWxXaWR0aCIsIm1pblN3aXBlIiwibWF4U3dpcGUiLCJkYXJnZ2luZyIsImRyYWdCZWZvcmVBbmltRmluaXNoIiwiY2xvc2VzdEl0ZW0iLCJtb3ZlRGlyZWN0aW9uIiwiaG92ZXJTdGF0dXMiLCJsYXp5Rm9sbG93IiwibGF6eVByZWxvYWQiLCJsYXp5RWZmZWN0IiwiYWZ0ZXJMYXp5TG9hZCIsImNvbXBsZXRlSW1nIiwibmF0dXJhbFdpZHRoIiwiYWRkQ2xhc3NBY3RpdmUiLCJ2aXNpYmxlSXRlbXMiLCJvdXRDbGFzcyIsImluQ2xhc3MiLCItd2Via2l0LXRyYW5zZm9ybS1vcmlnaW4iLCItbW96LXBlcnNwZWN0aXZlLW9yaWdpbiIsInBlcnNwZWN0aXZlLW9yaWdpbiIsImVuZFByZXYiLCJjbGVhclRyYW5zU3R5bGUiLCJlbmRDdXJyZW50IiwiYmFzZUVsZW1lbnQiLCJ1c2VySXRlbXMiLCJvd2xJdGVtcyIsImNsZWFyRXZlbnRzIiwidW5XcmFwIiwicmVpbml0IiwiYWRkSXRlbSIsInJlbW92ZUl0ZW0iLCJ0cmFuc2l0aW9uRW5kIiwidHJhbnNFbmRFdmVudE5hbWVzIiwiY2FsbGVkIiwiJGVsIiwiUGx1Z2luIiwiJHRoaXMiLCJBbGVydCIsImRpc21pc3MiLCJyZW1vdmVFbGVtZW50IiwiQnV0dG9uIiwiY2hhbmdlZCIsIiRpbnB1dCIsIiRidG4iLCJDYXJvdXNlbCIsImFjdGl2ZUluZGV4Iiwid2lsbFdyYXAiLCJpdGVtSW5kZXgiLCIkbmV4dCIsImlzQ3ljbGluZyIsInNsaWRlRXZlbnQiLCIkbmV4dEluZGljYXRvciIsInNsaWRFdmVudCIsImNsaWNrSGFuZGxlciIsInNsaWRlSW5kZXgiLCIkY2Fyb3VzZWwiLCJnZXRUYXJnZXRGcm9tVHJpZ2dlciIsIkNvbGxhcHNlIiwiaGFzV2lkdGgiLCJhY3RpdmVzRGF0YSIsImFjdGl2ZXMiLCJzdGFydEV2ZW50Iiwic2Nyb2xsU2l6ZSIsImNsZWFyTWVudXMiLCJEcm9wZG93biIsImRlc2MiLCJfcmVsYXRlZFRhcmdldCIsIk1vZGFsIiwiZG9BbmltYXRlIiwiY2FsbGJhY2tSZW1vdmUiLCJtb2RhbElzT3ZlcmZsb3dpbmciLCJmdWxsV2luZG93V2lkdGgiLCJkb2N1bWVudEVsZW1lbnRSZWN0IiwiYm9keVBhZCIsInNjcm9sbERpdiIsInNob3dFdmVudCIsIlRvb2x0aXAiLCJ0cmlnZ2VycyIsImV2ZW50SW4iLCJldmVudE91dCIsImluRG9tIiwidGlwSWQiLCJhdXRvVG9rZW4iLCJhdXRvUGxhY2UiLCJhY3R1YWxXaWR0aCIsImFjdHVhbEhlaWdodCIsIm9yZ1BsYWNlbWVudCIsInZpZXdwb3J0RGltIiwiY2FsY3VsYXRlZE9mZnNldCIsInByZXZIb3ZlclN0YXRlIiwibWFyZ2luVG9wIiwiaXNWZXJ0aWNhbCIsImFycm93RGVsdGEiLCJhcnJvd09mZnNldFBvc2l0aW9uIiwiJGUiLCJpc0JvZHkiLCJlbFJlY3QiLCJlbE9mZnNldCIsIm91dGVyRGltcyIsInZpZXdwb3J0UGFkZGluZyIsInZpZXdwb3J0RGltZW5zaW9ucyIsInRvcEVkZ2VPZmZzZXQiLCJib3R0b21FZGdlT2Zmc2V0IiwibGVmdEVkZ2VPZmZzZXQiLCJyaWdodEVkZ2VPZmZzZXQiLCJQb3BvdmVyIiwiU2Nyb2xsU3B5Iiwib2Zmc2V0TWV0aG9kIiwib2Zmc2V0QmFzZSIsIiRocmVmIiwibWF4U2Nyb2xsIiwiJHNweSIsIlRhYiIsIiR1bCIsIiRwcmV2aW91cyIsImhpZGVFdmVudCIsIkFmZml4IiwidGFyZ2V0SGVpZ2h0IiwiaW5pdGlhbGl6aW5nIiwiY29sbGlkZXJUb3AiLCJjb2xsaWRlckhlaWdodCIsImFmZml4VHlwZSIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiJDQVlDLFNBQVVBLEVBQVFDLEVBQVVDLEVBQUdDLEdBQy9CLFlBRUEsSUFBSUMsR0FBSUYsRUFBRSxRQUNURyxFQUFJSCxFQUFFRixHQUNOTSxFQUFJSixFQUFFRCxHQUNOTSxFQUFJTCxFQUFFTSxTQUFXLFdBQ2hCRCxFQUFFRSxLQUFLQyxNQUFPQyxLQUFNQyxZQUVyQkMsRUFBTUMsVUFBVUMsVUFBVUMsTUFBTSxTQUNoQ0MsRUFBWSxLQUNaQyxFQUFXakIsRUFBU2tCLGNBQWdCaEIsRUFFcENpQixFQUFVLFNBQVNDLEdBQ2xCLE1BQU9BLElBQU9BLEVBQUlDLGdCQUFrQkQsWUFBZW5CLElBRXBEcUIsRUFBVyxTQUFTQyxHQUNuQixNQUFPQSxJQUF1QixXQUFoQnRCLEVBQUV1QixLQUFLRCxJQUV0QkUsRUFBZSxTQUFTRixHQUN2QixNQUFPRCxHQUFTQyxJQUFRQSxFQUFJRyxRQUFRLEtBQU8sR0FFNUNDLEVBQWUsU0FBU0MsR0FDdkIsTUFBUUEsTUFBUUEsRUFBR0MsTUFBTUMsVUFBa0MsV0FBdEJGLEVBQUdDLE1BQU1DLFlBQTRCRixFQUFHRyxhQUFlSCxF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dWVyeSBQbHVnaW5cbiAqIHZlcnNpb246IDIuMS41IChGcmksIDE0IEp1biAyMDEzKVxuICogQHJlcXVpcmVzIGpRdWVyeSB2MS42IG9yIGxhdGVyXG4gKlxuICogRXhhbXBsZXMgYXQgaHR0cDovL2ZhbmN5YXBwcy5jb20vZmFuY3lib3gvXG4gKiBMaWNlbnNlOiB3d3cuZmFuY3lhcHBzLmNvbS9mYW5jeWJveC8jbGljZW5zZVxuICpcbiAqIENvcHlyaWdodCAyMDEyIEphbmlzIFNrYXJuZWxpcyAtIGphbmlzQGZhbmN5YXBwcy5jb21cbiAqXG4gKi9cblxuKGZ1bmN0aW9uICh3aW5kb3csIGRvY3VtZW50LCAkLCB1bmRlZmluZWQpIHtcblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0dmFyIEggPSAkKFwiaHRtbFwiKSxcblx0XHRXID0gJCh3aW5kb3cpLFxuXHRcdEQgPSAkKGRvY3VtZW50KSxcblx0XHRGID0gJC5mYW5jeWJveCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdEYub3Blbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fSxcblx0XHRJRSA9ICBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9tc2llL2kpLFxuXHRcdGRpZFVwZGF0ZVx0PSBudWxsLFxuXHRcdGlzVG91Y2hcdFx0PSBkb2N1bWVudC5jcmVhdGVUb3VjaCAhPT0gdW5kZWZpbmVkLFxuXG5cdFx0aXNRdWVyeVx0PSBmdW5jdGlvbihvYmopIHtcblx0XHRcdHJldHVybiBvYmogJiYgb2JqLmhhc093blByb3BlcnR5ICYmIG9iaiBpbnN0YW5jZW9mICQ7XG5cdFx0fSxcblx0XHRpc1N0cmluZyA9IGZ1bmN0aW9uKHN0cikge1xuXHRcdFx0cmV0dXJuIHN0ciAmJiAkLnR5cGUoc3RyKSA9PT0gXCJzdHJpbmdcIjtcblx0XHR9LFxuXHRcdGlzUGVyY2VudGFnZSA9IGZ1bmN0aW9uKHN0cikge1xuXHRcdFx0cmV0dXJuIGlzU3RyaW5nKHN0cikgJiYgc3RyLmluZGV4T2YoJyUnKSA+IDA7XG5cdFx0fSxcblx0XHRpc1Njcm9sbGFibGUgPSBmdW5jdGlvbihlbCkge1xuXHRcdFx0cmV0dXJuIChlbCAmJiAhKGVsLnN0eWxlLm92ZXJmbG93ICYmIGVsLnN0eWxlLm92ZXJmbG93ID09PSAnaGlkZGVuJykgJiYgKChlbC5jbGllbnRXaWR0aCAmJiBlbC5zY3JvbGxXaWR0aCA+IGVsLmNsaWVudFdpZHRoKSB8fCAoZWwuY2xpZW50SGVpZ2h0ICYmIGVsLnNjcm9sbEhlaWdodCA+IGVsLmNsaWVudEhlaWdodCkpKTtcblx0XHR9LFxuXHRcdGdldFNjYWxhciA9IGZ1bmN0aW9uKG9yaWcsIGRpbSkge1xuXHRcdFx0dmFyIHZhbHVlID0gcGFyc2VJbnQob3JpZywgMTApIHx8IDA7XG5cblx0XHRcdGlmIChkaW0gJiYgaXNQZXJjZW50YWdlKG9yaWcpKSB7XG5cdFx0XHRcdHZhbHVlID0gRi5nZXRWaWV3cG9ydCgpWyBkaW0gXSAvIDEwMCAqIHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gTWF0aC5jZWlsKHZhbHVlKTtcblx0XHR9LFxuXHRcdGdldFZhbHVlID0gZnVuY3Rpb24odmFsdWUsIGRpbSkge1xuXHRcdFx0cmV0dXJuIGdldFNjYWxhcih2YWx1ZSwgZGltKSArICdweCc7XG5cdFx0fTtcblxuXHQkLmV4dGVuZChGLCB7XG5cdFx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBmYW5jeUJveFxuXHRcdHZlcnNpb246ICcyLjEuNScsXG5cblx0XHRkZWZhdWx0czoge1xuXHRcdFx0cGFkZGluZyA6IDE1LFxuXHRcdFx0bWFyZ2luICA6IDIwLFxuXG5cdFx0XHR3aWR0aCAgICAgOiA4MDAsXG5cdFx0XHRoZWlnaHQgICAgOiA2MDAsXG5cdFx0XHRtaW5XaWR0aCAgOiAxMDAsXG5cdFx0XHRtaW5IZWlnaHQgOiAxMDAsXG5cdFx0XHRtYXhXaWR0aCAgOiA5OTk5LFxuXHRcdFx0bWF4SGVpZ2h0IDogOTk5OSxcblx0XHRcdHBpeGVsUmF0aW86IDEsIC8vIFNldCB0byAyIGZvciByZXRpbmEgZGlzcGxheSBzdXBwb3J0XG5cblx0XHRcdGF1dG9TaXplICAgOiB0cnVlLFxuXHRcdFx0YXV0b0hlaWdodCA6IGZhbHNlLFxuXHRcdFx0YXV0b1dpZHRoICA6IGZhbHNlLFxuXG5cdFx0XHRhdXRvUmVzaXplICA6IHRydWUsXG5cdFx0XHRhdXRvQ2VudGVyICA6ICFpc1RvdWNoLFxuXHRcdFx0Zml0VG9WaWV3ICAgOiB0cnVlLFxuXHRcdFx0YXNwZWN0UmF0aW8gOiBmYWxzZSxcblx0XHRcdHRvcFJhdGlvICAgIDogMC41LFxuXHRcdFx0bGVmdFJhdGlvICAgOiAwLjUsXG5cblx0XHRcdHNjcm9sbGluZyA6ICdhdXRvJywgLy8gJ2F1dG8nLCAneWVzJyBvciAnbm8nXG5cdFx0XHR3cmFwQ1NTICAgOiAnJyxcblxuXHRcdFx0YXJyb3dzICAgICA6IHRydWUsXG5cdFx0XHRjbG9zZUJ0biAgIDogdHJ1ZSxcblx0XHRcdGNsb3NlQ2xpY2sgOiBmYWxzZSxcblx0XHRcdG5leHRDbGljayAgOiBmYWxzZSxcblx0XHRcdG1vdXNlV2hlZWwgOiB0cnVlLFxuXHRcdFx0YXV0b1BsYXkgICA6IGZhbHNlLFxuXHRcdFx0cGxheVNwZWVkICA6IDMwMDAsXG5cdFx0XHRwcmVsb2FkICAgIDogMyxcblx0XHRcdG1vZGFsICAgICAgOiBmYWxzZSxcblx0XHRcdGxvb3AgICAgICAgOiB0cnVlLFxuXG5cdFx0XHRhamF4ICA6IHtcblx0XHRcdFx0ZGF0YVR5cGUgOiAnaHRtbCcsXG5cdFx0XHRcdGhlYWRlcnMgIDogeyAnWC1mYW5jeUJveCc6IHRydWUgfVxuXHRcdFx0fSxcblx0XHRcdGlmcmFtZSA6IHtcblx0XHRcdFx0c2Nyb2xsaW5nIDogJ2F1dG8nLFxuXHRcdFx0XHRwcmVsb2FkICAgOiB0cnVlXG5cdFx0XHR9LFxuXHRcdFx0c3dmIDoge1xuXHRcdFx0XHR3bW9kZTogJ3RyYW5zcGFyZW50Jyxcblx0XHRcdFx0YWxsb3dmdWxsc2NyZWVuICAgOiAndHJ1ZScsXG5cdFx0XHRcdGFsbG93c2NyaXB0YWNjZXNzIDogJ2Fsd2F5cydcblx0XHRcdH0sXG5cblx0XHRcdGtleXMgIDoge1xuXHRcdFx0XHRuZXh0IDoge1xuXHRcdFx0XHRcdDEzIDogJ2xlZnQnLCAvLyBlbnRlclxuXHRcdFx0XHRcdDM0IDogJ3VwJywgICAvLyBwYWdlIGRvd25cblx0XHRcdFx0XHQzOSA6ICdsZWZ0JywgLy8gcmlnaHQgYXJyb3dcblx0XHRcdFx0XHQ0MCA6ICd1cCcgICAgLy8gZG93biBhcnJvd1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRwcmV2IDoge1xuXHRcdFx0XHRcdDggIDogJ3JpZ2h0JywgIC8vIGJhY2tzcGFjZVxuXHRcdFx0XHRcdDMzIDogJ2Rvd24nLCAgIC8vIHBhZ2UgdXBcblx0XHRcdFx0XHQzNyA6ICdyaWdodCcsICAvLyBsZWZ0IGFycm93XG5cdFx0XHRcdFx0MzggOiAnZG93bicgICAgLy8gdXAgYXJyb3dcblx0XHRcdFx0fSxcblx0XHRcdFx0Y2xvc2UgIDogWzI3XSwgLy8gZXNjYXBlIGtleVxuXHRcdFx0XHRwbGF5ICAgOiBbMzJdLCAvLyBzcGFjZSAtIHN0YXJ0L3N0b3Agc2xpZGVzaG93XG5cdFx0XHRcdHRvZ2dsZSA6IFs3MF0gIC8vIGxldHRlciBcImZcIiAtIHRvZ2dsZSBmdWxsc2NyZWVuXG5cdFx0XHR9LFxuXG5cdFx0XHRkaXJlY3Rpb24gOiB7XG5cdFx0XHRcdG5leHQgOiAnbGVmdCcsXG5cdFx0XHRcdHByZXYgOiAncmlnaHQnXG5cdFx0XHR9LFxuXG5cdFx0XHRzY3JvbGxPdXRzaWRlICA6IHRydWUsXG5cblx0XHRcdC8vIE92ZXJyaWRlIHNvbWUgcHJvcGVydGllc1xuXHRcdFx0aW5kZXggICA6IDAsXG5cdFx0XHR0eXBlICAgIDogbnVsbCxcblx0XHRcdGhyZWYgICAgOiBudWxsLFxuXHRcdFx0Y29udGVudCA6IG51bGwsXG5cdFx0XHR0aXRsZSAgIDogbnVsbCxcblxuXHRcdFx0Ly8gSFRNTCB0ZW1wbGF0ZXNcblx0XHRcdHRwbDoge1xuXHRcdFx0XHR3cmFwICAgICA6ICc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtd3JhcFwiIHRhYkluZGV4PVwiLTFcIj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtc2tpblwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1vdXRlclwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PicsXG5cdFx0XHRcdGltYWdlICAgIDogJzxpbWcgY2xhc3M9XCJmYW5jeWJveC1pbWFnZVwiIHNyYz1cIntocmVmfVwiIGFsdD1cIlwiIC8+Jyxcblx0XHRcdFx0aWZyYW1lICAgOiAnPGlmcmFtZSBpZD1cImZhbmN5Ym94LWZyYW1le3JuZH1cIiBuYW1lPVwiZmFuY3lib3gtZnJhbWV7cm5kfVwiIGNsYXNzPVwiZmFuY3lib3gtaWZyYW1lXCIgZnJhbWVib3JkZXI9XCIwXCIgdnNwYWNlPVwiMFwiIGhzcGFjZT1cIjBcIiB3ZWJraXRBbGxvd0Z1bGxTY3JlZW4gbW96YWxsb3dmdWxsc2NyZWVuIGFsbG93RnVsbFNjcmVlbicgKyAoSUUgPyAnIGFsbG93dHJhbnNwYXJlbmN5PVwidHJ1ZVwiJyA6ICcnKSArICc+PC9pZnJhbWU+Jyxcblx0XHRcdFx0ZXJyb3IgICAgOiAnPHAgY2xhc3M9XCJmYW5jeWJveC1lcnJvclwiPlRoZSByZXF1ZXN0ZWQgY29udGVudCBjYW5ub3QgYmUgbG9hZGVkLjxici8+UGxlYXNlIHRyeSBhZ2FpbiBsYXRlci48L3A+Jyxcblx0XHRcdFx0Y2xvc2VCdG4gOiAnPGEgdGl0bGU9XCJDbG9zZVwiIGNsYXNzPVwiZmFuY3lib3gtaXRlbSBmYW5jeWJveC1jbG9zZVwiIGhyZWY9XCJqYXZhc2NyaXB0OjtcIj48L2E+Jyxcblx0XHRcdFx0bmV4dCAgICAgOiAnPGEgdGl0bGU9XCJOZXh0XCIgY2xhc3M9XCJmYW5jeWJveC1uYXYgZmFuY3lib3gtbmV4dFwiIGhyZWY9XCJqYXZhc2NyaXB0OjtcIj48c3Bhbj48L3NwYW4+PC9hPicsXG5cdFx0XHRcdHByZXYgICAgIDogJzxhIHRpdGxlPVwiUHJldmlvdXNcIiBjbGFzcz1cImZhbmN5Ym94LW5hdiBmYW5jeWJveC1wcmV2XCIgaHJlZj1cImphdmFzY3JpcHQ6O1wiPjxzcGFuPjwvc3Bhbj48L2E+J1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUHJvcGVydGllcyBmb3IgZWFjaCBhbmltYXRpb24gdHlwZVxuXHRcdFx0Ly8gT3BlbmluZyBmYW5jeUJveFxuXHRcdFx0b3BlbkVmZmVjdCAgOiAnZmFkZScsIC8vICdlbGFzdGljJywgJ2ZhZGUnIG9yICdub25lJ1xuXHRcdFx0b3BlblNwZWVkICAgOiAyNTAsXG5cdFx0XHRvcGVuRWFzaW5nICA6ICdzd2luZycsXG5cdFx0XHRvcGVuT3BhY2l0eSA6IHRydWUsXG5cdFx0XHRvcGVuTWV0aG9kICA6ICd6b29tSW4nLFxuXG5cdFx0XHQvLyBDbG9zaW5nIGZhbmN5Qm94XG5cdFx0XHRjbG9zZUVmZmVjdCAgOiAnZmFkZScsIC8vICdlbGFzdGljJywgJ2ZhZGUnIG9yICdub25lJ1xuXHRcdFx0Y2xvc2VTcGVlZCAgIDogMjUwLFxuXHRcdFx0Y2xvc2VFYXNpbmcgIDogJ3N3aW5nJyxcblx0XHRcdGNsb3NlT3BhY2l0eSA6IHRydWUsXG5cdFx0XHRjbG9zZU1ldGhvZCAgOiAnem9vbU91dCcsXG5cblx0XHRcdC8vIENoYW5naW5nIG5leHQgZ2FsbGVyeSBpdGVtXG5cdFx0XHRuZXh0RWZmZWN0IDogJ2VsYXN0aWMnLCAvLyAnZWxhc3RpYycsICdmYWRlJyBvciAnbm9uZSdcblx0XHRcdG5leHRTcGVlZCAgOiAyNTAsXG5cdFx0XHRuZXh0RWFzaW5nIDogJ3N3aW5nJyxcblx0XHRcdG5leHRNZXRob2QgOiAnY2hhbmdlSW4nLFxuXG5cdFx0XHQvLyBDaGFuZ2luZyBwcmV2aW91cyBnYWxsZXJ5IGl0ZW1cblx0XHRcdHByZXZFZmZlY3QgOiAnZWxhc3RpYycsIC8vICdlbGFzdGljJywgJ2ZhZGUnIG9yICdub25lJ1xuXHRcdFx0cHJldlNwZWVkICA6IDI1MCxcblx0XHRcdHByZXZFYXNpbmcgOiAnc3dpbmcnLFxuXHRcdFx0cHJldk1ldGhvZCA6ICdjaGFuZ2VPdXQnLFxuXG5cdFx0XHQvLyBFbmFibGUgZGVmYXVsdCBoZWxwZXJzXG5cdFx0XHRoZWxwZXJzIDoge1xuXHRcdFx0XHRvdmVybGF5IDogdHJ1ZSxcblx0XHRcdFx0dGl0bGUgICA6IHRydWVcblx0XHRcdH0sXG5cblx0XHRcdC8vIENhbGxiYWNrc1xuXHRcdFx0b25DYW5jZWwgICAgIDogJC5ub29wLCAvLyBJZiBjYW5jZWxpbmdcblx0XHRcdGJlZm9yZUxvYWQgICA6ICQubm9vcCwgLy8gQmVmb3JlIGxvYWRpbmdcblx0XHRcdGFmdGVyTG9hZCAgICA6ICQubm9vcCwgLy8gQWZ0ZXIgbG9hZGluZ1xuXHRcdFx0YmVmb3JlU2hvdyAgIDogJC5ub29wLCAvLyBCZWZvcmUgY2hhbmdpbmcgaW4gY3VycmVudCBpdGVtXG5cdFx0XHRhZnRlclNob3cgICAgOiAkLm5vb3AsIC8vIEFmdGVyIG9wZW5pbmdcblx0XHRcdGJlZm9yZUNoYW5nZSA6ICQubm9vcCwgLy8gQmVmb3JlIGNoYW5naW5nIGdhbGxlcnkgaXRlbVxuXHRcdFx0YmVmb3JlQ2xvc2UgIDogJC5ub29wLCAvLyBCZWZvcmUgY2xvc2luZ1xuXHRcdFx0YWZ0ZXJDbG9zZSAgIDogJC5ub29wICAvLyBBZnRlciBjbG9zaW5nXG5cdFx0fSxcblxuXHRcdC8vQ3VycmVudCBzdGF0ZVxuXHRcdGdyb3VwICAgIDoge30sIC8vIFNlbGVjdGVkIGdyb3VwXG5cdFx0b3B0cyAgICAgOiB7fSwgLy8gR3JvdXAgb3B0aW9uc1xuXHRcdHByZXZpb3VzIDogbnVsbCwgIC8vIFByZXZpb3VzIGVsZW1lbnRcblx0XHRjb21pbmcgICA6IG51bGwsICAvLyBFbGVtZW50IGJlaW5nIGxvYWRlZFxuXHRcdGN1cnJlbnQgIDogbnVsbCwgIC8vIEN1cnJlbnRseSBsb2FkZWQgZWxlbWVudFxuXHRcdGlzQWN0aXZlIDogZmFsc2UsIC8vIElzIGFjdGl2YXRlZFxuXHRcdGlzT3BlbiAgIDogZmFsc2UsIC8vIElzIGN1cnJlbnRseSBvcGVuXG5cdFx0aXNPcGVuZWQgOiBmYWxzZSwgLy8gSGF2ZSBiZWVuIGZ1bGx5IG9wZW5lZCBhdCBsZWFzdCBvbmNlXG5cblx0XHR3cmFwICA6IG51bGwsXG5cdFx0c2tpbiAgOiBudWxsLFxuXHRcdG91dGVyIDogbnVsbCxcblx0XHRpbm5lciA6IG51bGwsXG5cblx0XHRwbGF5ZXIgOiB7XG5cdFx0XHR0aW1lciAgICA6IG51bGwsXG5cdFx0XHRpc0FjdGl2ZSA6IGZhbHNlXG5cdFx0fSxcblxuXHRcdC8vIExvYWRlcnNcblx0XHRhamF4TG9hZCAgIDogbnVsbCxcblx0XHRpbWdQcmVsb2FkIDogbnVsbCxcblxuXHRcdC8vIFNvbWUgY29sbGVjdGlvbnNcblx0XHR0cmFuc2l0aW9ucyA6IHt9LFxuXHRcdGhlbHBlcnMgICAgIDoge30sXG5cblx0XHQvKlxuXHRcdCAqXHRTdGF0aWMgbWV0aG9kc1xuXHRcdCAqL1xuXG5cdFx0b3BlbjogZnVuY3Rpb24gKGdyb3VwLCBvcHRzKSB7XG5cdFx0XHRpZiAoIWdyb3VwKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCEkLmlzUGxhaW5PYmplY3Qob3B0cykpIHtcblx0XHRcdFx0b3B0cyA9IHt9O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDbG9zZSBpZiBhbHJlYWR5IGFjdGl2ZVxuXHRcdFx0aWYgKGZhbHNlID09PSBGLmNsb3NlKHRydWUpKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTm9ybWFsaXplIGdyb3VwXG5cdFx0XHRpZiAoISQuaXNBcnJheShncm91cCkpIHtcblx0XHRcdFx0Z3JvdXAgPSBpc1F1ZXJ5KGdyb3VwKSA/ICQoZ3JvdXApLmdldCgpIDogW2dyb3VwXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVjaGVjayBpZiB0aGUgdHlwZSBvZiBlYWNoIGVsZW1lbnQgaXMgYG9iamVjdGAgYW5kIHNldCBjb250ZW50IHR5cGUgKGltYWdlLCBhamF4LCBldGMpXG5cdFx0XHQkLmVhY2goZ3JvdXAsIGZ1bmN0aW9uKGksIGVsZW1lbnQpIHtcblx0XHRcdFx0dmFyIG9iaiA9IHt9LFxuXHRcdFx0XHRcdGhyZWYsXG5cdFx0XHRcdFx0dGl0bGUsXG5cdFx0XHRcdFx0Y29udGVudCxcblx0XHRcdFx0XHR0eXBlLFxuXHRcdFx0XHRcdHJleixcblx0XHRcdFx0XHRocmVmUGFydHMsXG5cdFx0XHRcdFx0c2VsZWN0b3I7XG5cblx0XHRcdFx0aWYgKCQudHlwZShlbGVtZW50KSA9PT0gXCJvYmplY3RcIikge1xuXHRcdFx0XHRcdC8vIENoZWNrIGlmIGlzIERPTSBlbGVtZW50XG5cdFx0XHRcdFx0aWYgKGVsZW1lbnQubm9kZVR5cGUpIHtcblx0XHRcdFx0XHRcdGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmIChpc1F1ZXJ5KGVsZW1lbnQpKSB7XG5cdFx0XHRcdFx0XHRvYmogPSB7XG5cdFx0XHRcdFx0XHRcdGhyZWYgICAgOiBlbGVtZW50LmRhdGEoJ2ZhbmN5Ym94LWhyZWYnKSB8fCBlbGVtZW50LmF0dHIoJ2hyZWYnKSxcblx0XHRcdFx0XHRcdFx0dGl0bGUgICA6IGVsZW1lbnQuZGF0YSgnZmFuY3lib3gtdGl0bGUnKSB8fCBlbGVtZW50LmF0dHIoJ3RpdGxlJyksXG5cdFx0XHRcdFx0XHRcdGlzRG9tICAgOiB0cnVlLFxuXHRcdFx0XHRcdFx0XHRlbGVtZW50IDogZWxlbWVudFxuXHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0aWYgKCQubWV0YWRhdGEpIHtcblx0XHRcdFx0XHRcdFx0JC5leHRlbmQodHJ1ZSwgb2JqLCBlbGVtZW50Lm1ldGFkYXRhKCkpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdG9iaiA9IGVsZW1lbnQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aHJlZiAgPSBvcHRzLmhyZWYgIHx8IG9iai5ocmVmIHx8IChpc1N0cmluZyhlbGVtZW50KSA/IGVsZW1lbnQgOiBudWxsKTtcblx0XHRcdFx0dGl0bGUgPSBvcHRzLnRpdGxlICE9PSB1bmRlZmluZWQgPyBvcHRzLnRpdGxlIDogb2JqLnRpdGxlIHx8ICcnO1xuXG5cdFx0XHRcdGNvbnRlbnQgPSBvcHRzLmNvbnRlbnQgfHwgb2JqLmNvbnRlbnQ7XG5cdFx0XHRcdHR5cGUgICAgPSBjb250ZW50ID8gJ2h0bWwnIDogKG9wdHMudHlwZSAgfHwgb2JqLnR5cGUpO1xuXG5cdFx0XHRcdGlmICghdHlwZSAmJiBvYmouaXNEb20pIHtcblx0XHRcdFx0XHR0eXBlID0gZWxlbWVudC5kYXRhKCdmYW5jeWJveC10eXBlJyk7XG5cblx0XHRcdFx0XHRpZiAoIXR5cGUpIHtcblx0XHRcdFx0XHRcdHJleiAgPSBlbGVtZW50LnByb3AoJ2NsYXNzJykubWF0Y2goL2ZhbmN5Ym94XFwuKFxcdyspLyk7XG5cdFx0XHRcdFx0XHR0eXBlID0gcmV6ID8gcmV6WzFdIDogbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoaXNTdHJpbmcoaHJlZikpIHtcblx0XHRcdFx0XHQvLyBUcnkgdG8gZ3Vlc3MgdGhlIGNvbnRlbnQgdHlwZVxuXHRcdFx0XHRcdGlmICghdHlwZSkge1xuXHRcdFx0XHRcdFx0aWYgKEYuaXNJbWFnZShocmVmKSkge1xuXHRcdFx0XHRcdFx0XHR0eXBlID0gJ2ltYWdlJztcblxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChGLmlzU1dGKGhyZWYpKSB7XG5cdFx0XHRcdFx0XHRcdHR5cGUgPSAnc3dmJztcblxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChocmVmLmNoYXJBdCgwKSA9PT0gJyMnKSB7XG5cdFx0XHRcdFx0XHRcdHR5cGUgPSAnaW5saW5lJztcblxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChpc1N0cmluZyhlbGVtZW50KSkge1xuXHRcdFx0XHRcdFx0XHR0eXBlICAgID0gJ2h0bWwnO1xuXHRcdFx0XHRcdFx0XHRjb250ZW50ID0gZWxlbWVudDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBTcGxpdCB1cmwgaW50byB0d28gcGllY2VzIHdpdGggc291cmNlIHVybCBhbmQgY29udGVudCBzZWxlY3RvciwgZS5nLFxuXHRcdFx0XHRcdC8vIFwiL215cGFnZS5odG1sICNteV9pZFwiIHdpbGwgbG9hZCBcIi9teXBhZ2UuaHRtbFwiIGFuZCBkaXNwbGF5IGVsZW1lbnQgaGF2aW5nIGlkIFwibXlfaWRcIlxuXHRcdFx0XHRcdGlmICh0eXBlID09PSAnYWpheCcpIHtcblx0XHRcdFx0XHRcdGhyZWZQYXJ0cyA9IGhyZWYuc3BsaXQoL1xccysvLCAyKTtcblx0XHRcdFx0XHRcdGhyZWYgICAgICA9IGhyZWZQYXJ0cy5zaGlmdCgpO1xuXHRcdFx0XHRcdFx0c2VsZWN0b3IgID0gaHJlZlBhcnRzLnNoaWZ0KCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCFjb250ZW50KSB7XG5cdFx0XHRcdFx0aWYgKHR5cGUgPT09ICdpbmxpbmUnKSB7XG5cdFx0XHRcdFx0XHRpZiAoaHJlZikge1xuXHRcdFx0XHRcdFx0XHRjb250ZW50ID0gJCggaXNTdHJpbmcoaHJlZikgPyBocmVmLnJlcGxhY2UoLy4qKD89I1teXFxzXSskKS8sICcnKSA6IGhyZWYgKTsgLy9zdHJpcCBmb3IgaWU3XG5cblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAob2JqLmlzRG9tKSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRlbnQgPSBlbGVtZW50O1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0fSBlbHNlIGlmICh0eXBlID09PSAnaHRtbCcpIHtcblx0XHRcdFx0XHRcdGNvbnRlbnQgPSBocmVmO1xuXG5cdFx0XHRcdFx0fSBlbHNlIGlmICghdHlwZSAmJiAhaHJlZiAmJiBvYmouaXNEb20pIHtcblx0XHRcdFx0XHRcdHR5cGUgICAgPSAnaW5saW5lJztcblx0XHRcdFx0XHRcdGNvbnRlbnQgPSBlbGVtZW50O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdCQuZXh0ZW5kKG9iaiwge1xuXHRcdFx0XHRcdGhyZWYgICAgIDogaHJlZixcblx0XHRcdFx0XHR0eXBlICAgICA6IHR5cGUsXG5cdFx0XHRcdFx0Y29udGVudCAgOiBjb250ZW50LFxuXHRcdFx0XHRcdHRpdGxlICAgIDogdGl0bGUsXG5cdFx0XHRcdFx0c2VsZWN0b3IgOiBzZWxlY3RvclxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRncm91cFsgaSBdID0gb2JqO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8vIEV4dGVuZCB0aGUgZGVmYXVsdHNcblx0XHRcdEYub3B0cyA9ICQuZXh0ZW5kKHRydWUsIHt9LCBGLmRlZmF1bHRzLCBvcHRzKTtcblxuXHRcdFx0Ly8gQWxsIG9wdGlvbnMgYXJlIG1lcmdlZCByZWN1cnNpdmUgZXhjZXB0IGtleXNcblx0XHRcdGlmIChvcHRzLmtleXMgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRGLm9wdHMua2V5cyA9IG9wdHMua2V5cyA/ICQuZXh0ZW5kKHt9LCBGLmRlZmF1bHRzLmtleXMsIG9wdHMua2V5cykgOiBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0Ri5ncm91cCA9IGdyb3VwO1xuXG5cdFx0XHRyZXR1cm4gRi5fc3RhcnQoRi5vcHRzLmluZGV4KTtcblx0XHR9LFxuXG5cdFx0Ly8gQ2FuY2VsIGltYWdlIGxvYWRpbmcgb3IgYWJvcnQgYWpheCByZXF1ZXN0XG5cdFx0Y2FuY2VsOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgY29taW5nID0gRi5jb21pbmc7XG5cblx0XHRcdGlmICghY29taW5nIHx8IGZhbHNlID09PSBGLnRyaWdnZXIoJ29uQ2FuY2VsJykpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRGLmhpZGVMb2FkaW5nKCk7XG5cblx0XHRcdGlmIChGLmFqYXhMb2FkKSB7XG5cdFx0XHRcdEYuYWpheExvYWQuYWJvcnQoKTtcblx0XHRcdH1cblxuXHRcdFx0Ri5hamF4TG9hZCA9IG51bGw7XG5cblx0XHRcdGlmIChGLmltZ1ByZWxvYWQpIHtcblx0XHRcdFx0Ri5pbWdQcmVsb2FkLm9ubG9hZCA9IEYuaW1nUHJlbG9hZC5vbmVycm9yID0gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGNvbWluZy53cmFwKSB7XG5cdFx0XHRcdGNvbWluZy53cmFwLnN0b3AodHJ1ZSwgdHJ1ZSkudHJpZ2dlcignb25SZXNldCcpLnJlbW92ZSgpO1xuXHRcdFx0fVxuXG5cdFx0XHRGLmNvbWluZyA9IG51bGw7XG5cblx0XHRcdC8vIElmIHRoZSBmaXJzdCBpdGVtIGhhcyBiZWVuIGNhbmNlbGVkLCB0aGVuIGNsZWFyIGV2ZXJ5dGhpbmdcblx0XHRcdGlmICghRi5jdXJyZW50KSB7XG5cdFx0XHRcdEYuX2FmdGVyWm9vbU91dCggY29taW5nICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIFN0YXJ0IGNsb3NpbmcgYW5pbWF0aW9uIGlmIGlzIG9wZW47IHJlbW92ZSBpbW1lZGlhdGVseSBpZiBvcGVuaW5nL2Nsb3Npbmdcblx0XHRjbG9zZTogZnVuY3Rpb24gKGV2ZW50KSB7XG5cdFx0XHRGLmNhbmNlbCgpO1xuXG5cdFx0XHRpZiAoZmFsc2UgPT09IEYudHJpZ2dlcignYmVmb3JlQ2xvc2UnKSkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdEYudW5iaW5kRXZlbnRzKCk7XG5cblx0XHRcdGlmICghRi5pc0FjdGl2ZSkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICghRi5pc09wZW4gfHwgZXZlbnQgPT09IHRydWUpIHtcblx0XHRcdFx0JCgnLmZhbmN5Ym94LXdyYXAnKS5zdG9wKHRydWUpLnRyaWdnZXIoJ29uUmVzZXQnKS5yZW1vdmUoKTtcblxuXHRcdFx0XHRGLl9hZnRlclpvb21PdXQoKTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Ri5pc09wZW4gPSBGLmlzT3BlbmVkID0gZmFsc2U7XG5cdFx0XHRcdEYuaXNDbG9zaW5nID0gdHJ1ZTtcblxuXHRcdFx0XHQkKCcuZmFuY3lib3gtaXRlbSwgLmZhbmN5Ym94LW5hdicpLnJlbW92ZSgpO1xuXG5cdFx0XHRcdEYud3JhcC5zdG9wKHRydWUsIHRydWUpLnJlbW92ZUNsYXNzKCdmYW5jeWJveC1vcGVuZWQnKTtcblxuXHRcdFx0XHRGLnRyYW5zaXRpb25zWyBGLmN1cnJlbnQuY2xvc2VNZXRob2QgXSgpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvLyBNYW5hZ2Ugc2xpZGVzaG93OlxuXHRcdC8vICAgJC5mYW5jeWJveC5wbGF5KCk7IC0gdG9nZ2xlIHNsaWRlc2hvd1xuXHRcdC8vICAgJC5mYW5jeWJveC5wbGF5KCB0cnVlICk7IC0gc3RhcnRcblx0XHQvLyAgICQuZmFuY3lib3gucGxheSggZmFsc2UgKTsgLSBzdG9wXG5cdFx0cGxheTogZnVuY3Rpb24gKCBhY3Rpb24gKSB7XG5cdFx0XHR2YXIgY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0Y2xlYXJUaW1lb3V0KEYucGxheWVyLnRpbWVyKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0c2V0ID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdGNsZWFyKCk7XG5cblx0XHRcdFx0XHRpZiAoRi5jdXJyZW50ICYmIEYucGxheWVyLmlzQWN0aXZlKSB7XG5cdFx0XHRcdFx0XHRGLnBsYXllci50aW1lciA9IHNldFRpbWVvdXQoRi5uZXh0LCBGLmN1cnJlbnQucGxheVNwZWVkKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHN0b3AgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0Y2xlYXIoKTtcblxuXHRcdFx0XHRcdEQudW5iaW5kKCcucGxheWVyJyk7XG5cblx0XHRcdFx0XHRGLnBsYXllci5pc0FjdGl2ZSA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0Ri50cmlnZ2VyKCdvblBsYXlFbmQnKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0c3RhcnQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0aWYgKEYuY3VycmVudCAmJiAoRi5jdXJyZW50Lmxvb3AgfHwgRi5jdXJyZW50LmluZGV4IDwgRi5ncm91cC5sZW5ndGggLSAxKSkge1xuXHRcdFx0XHRcdFx0Ri5wbGF5ZXIuaXNBY3RpdmUgPSB0cnVlO1xuXG5cdFx0XHRcdFx0XHRELmJpbmQoe1xuXHRcdFx0XHRcdFx0XHQnb25DYW5jZWwucGxheWVyIGJlZm9yZUNsb3NlLnBsYXllcicgOiBzdG9wLFxuXHRcdFx0XHRcdFx0XHQnb25VcGRhdGUucGxheWVyJyAgIDogc2V0LFxuXHRcdFx0XHRcdFx0XHQnYmVmb3JlTG9hZC5wbGF5ZXInIDogY2xlYXJcblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRzZXQoKTtcblxuXHRcdFx0XHRcdFx0Ri50cmlnZ2VyKCdvblBsYXlTdGFydCcpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblxuXHRcdFx0aWYgKGFjdGlvbiA9PT0gdHJ1ZSB8fCAoIUYucGxheWVyLmlzQWN0aXZlICYmIGFjdGlvbiAhPT0gZmFsc2UpKSB7XG5cdFx0XHRcdHN0YXJ0KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzdG9wKCk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIE5hdmlnYXRlIHRvIG5leHQgZ2FsbGVyeSBpdGVtXG5cdFx0bmV4dDogZnVuY3Rpb24gKCBkaXJlY3Rpb24gKSB7XG5cdFx0XHR2YXIgY3VycmVudCA9IEYuY3VycmVudDtcblxuXHRcdFx0aWYgKGN1cnJlbnQpIHtcblx0XHRcdFx0aWYgKCFpc1N0cmluZyhkaXJlY3Rpb24pKSB7XG5cdFx0XHRcdFx0ZGlyZWN0aW9uID0gY3VycmVudC5kaXJlY3Rpb24ubmV4dDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdEYuanVtcHRvKGN1cnJlbnQuaW5kZXggKyAxLCBkaXJlY3Rpb24sICduZXh0Jyk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIE5hdmlnYXRlIHRvIHByZXZpb3VzIGdhbGxlcnkgaXRlbVxuXHRcdHByZXY6IGZ1bmN0aW9uICggZGlyZWN0aW9uICkge1xuXHRcdFx0dmFyIGN1cnJlbnQgPSBGLmN1cnJlbnQ7XG5cblx0XHRcdGlmIChjdXJyZW50KSB7XG5cdFx0XHRcdGlmICghaXNTdHJpbmcoZGlyZWN0aW9uKSkge1xuXHRcdFx0XHRcdGRpcmVjdGlvbiA9IGN1cnJlbnQuZGlyZWN0aW9uLnByZXY7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRGLmp1bXB0byhjdXJyZW50LmluZGV4IC0gMSwgZGlyZWN0aW9uLCAncHJldicpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvLyBOYXZpZ2F0ZSB0byBnYWxsZXJ5IGl0ZW0gYnkgaW5kZXhcblx0XHRqdW1wdG86IGZ1bmN0aW9uICggaW5kZXgsIGRpcmVjdGlvbiwgcm91dGVyICkge1xuXHRcdFx0dmFyIGN1cnJlbnQgPSBGLmN1cnJlbnQ7XG5cblx0XHRcdGlmICghY3VycmVudCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGluZGV4ID0gZ2V0U2NhbGFyKGluZGV4KTtcblxuXHRcdFx0Ri5kaXJlY3Rpb24gPSBkaXJlY3Rpb24gfHwgY3VycmVudC5kaXJlY3Rpb25bIChpbmRleCA+PSBjdXJyZW50LmluZGV4ID8gJ25leHQnIDogJ3ByZXYnKSBdO1xuXHRcdFx0Ri5yb3V0ZXIgICAgPSByb3V0ZXIgfHwgJ2p1bXB0byc7XG5cblx0XHRcdGlmIChjdXJyZW50Lmxvb3ApIHtcblx0XHRcdFx0aWYgKGluZGV4IDwgMCkge1xuXHRcdFx0XHRcdGluZGV4ID0gY3VycmVudC5ncm91cC5sZW5ndGggKyAoaW5kZXggJSBjdXJyZW50Lmdyb3VwLmxlbmd0aCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpbmRleCA9IGluZGV4ICUgY3VycmVudC5ncm91cC5sZW5ndGg7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChjdXJyZW50Lmdyb3VwWyBpbmRleCBdICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0Ri5jYW5jZWwoKTtcblxuXHRcdFx0XHRGLl9zdGFydChpbmRleCk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIENlbnRlciBpbnNpZGUgdmlld3BvcnQgYW5kIHRvZ2dsZSBwb3NpdGlvbiB0eXBlIHRvIGZpeGVkIG9yIGFic29sdXRlIGlmIG5lZWRlZFxuXHRcdHJlcG9zaXRpb246IGZ1bmN0aW9uIChlLCBvbmx5QWJzb2x1dGUpIHtcblx0XHRcdHZhciBjdXJyZW50ID0gRi5jdXJyZW50LFxuXHRcdFx0XHR3cmFwICAgID0gY3VycmVudCA/IGN1cnJlbnQud3JhcCA6IG51bGwsXG5cdFx0XHRcdHBvcztcblxuXHRcdFx0aWYgKHdyYXApIHtcblx0XHRcdFx0cG9zID0gRi5fZ2V0UG9zaXRpb24ob25seUFic29sdXRlKTtcblxuXHRcdFx0XHRpZiAoZSAmJiBlLnR5cGUgPT09ICdzY3JvbGwnKSB7XG5cdFx0XHRcdFx0ZGVsZXRlIHBvcy5wb3NpdGlvbjtcblxuXHRcdFx0XHRcdHdyYXAuc3RvcCh0cnVlLCB0cnVlKS5hbmltYXRlKHBvcywgMjAwKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHdyYXAuY3NzKHBvcyk7XG5cblx0XHRcdFx0XHRjdXJyZW50LnBvcyA9ICQuZXh0ZW5kKHt9LCBjdXJyZW50LmRpbSwgcG9zKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHR1cGRhdGU6IGZ1bmN0aW9uIChlKSB7XG5cdFx0XHR2YXIgdHlwZSA9IChlICYmIGUudHlwZSksXG5cdFx0XHRcdGFueXdheSA9ICF0eXBlIHx8IHR5cGUgPT09ICdvcmllbnRhdGlvbmNoYW5nZSc7XG5cblx0XHRcdGlmIChhbnl3YXkpIHtcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KGRpZFVwZGF0ZSk7XG5cblx0XHRcdFx0ZGlkVXBkYXRlID0gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCFGLmlzT3BlbiB8fCBkaWRVcGRhdGUpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRkaWRVcGRhdGUgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgY3VycmVudCA9IEYuY3VycmVudDtcblxuXHRcdFx0XHRpZiAoIWN1cnJlbnQgfHwgRi5pc0Nsb3NpbmcpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRGLndyYXAucmVtb3ZlQ2xhc3MoJ2ZhbmN5Ym94LXRtcCcpO1xuXG5cdFx0XHRcdGlmIChhbnl3YXkgfHwgdHlwZSA9PT0gJ2xvYWQnIHx8ICh0eXBlID09PSAncmVzaXplJyAmJiBjdXJyZW50LmF1dG9SZXNpemUpKSB7XG5cdFx0XHRcdFx0Ri5fc2V0RGltZW5zaW9uKCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoISh0eXBlID09PSAnc2Nyb2xsJyAmJiBjdXJyZW50LmNhblNocmluaykpIHtcblx0XHRcdFx0XHRGLnJlcG9zaXRpb24oZSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRGLnRyaWdnZXIoJ29uVXBkYXRlJyk7XG5cblx0XHRcdFx0ZGlkVXBkYXRlID0gbnVsbDtcblxuXHRcdFx0fSwgKGFueXdheSAmJiAhaXNUb3VjaCA/IDAgOiAzMDApKTtcblx0XHR9LFxuXG5cdFx0Ly8gU2hyaW5rIGNvbnRlbnQgdG8gZml0IGluc2lkZSB2aWV3cG9ydCBvciByZXN0b3JlIGlmIHJlc2l6ZWRcblx0XHR0b2dnbGU6IGZ1bmN0aW9uICggYWN0aW9uICkge1xuXHRcdFx0aWYgKEYuaXNPcGVuKSB7XG5cdFx0XHRcdEYuY3VycmVudC5maXRUb1ZpZXcgPSAkLnR5cGUoYWN0aW9uKSA9PT0gXCJib29sZWFuXCIgPyBhY3Rpb24gOiAhRi5jdXJyZW50LmZpdFRvVmlldztcblxuXHRcdFx0XHQvLyBIZWxwIGJyb3dzZXIgdG8gcmVzdG9yZSBkb2N1bWVudCBkaW1lbnNpb25zXG5cdFx0XHRcdGlmIChpc1RvdWNoKSB7XG5cdFx0XHRcdFx0Ri53cmFwLnJlbW92ZUF0dHIoJ3N0eWxlJykuYWRkQ2xhc3MoJ2ZhbmN5Ym94LXRtcCcpO1xuXG5cdFx0XHRcdFx0Ri50cmlnZ2VyKCdvblVwZGF0ZScpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ri51cGRhdGUoKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0aGlkZUxvYWRpbmc6IGZ1bmN0aW9uICgpIHtcblx0XHRcdEQudW5iaW5kKCcubG9hZGluZycpO1xuXG5cdFx0XHQkKCcjZmFuY3lib3gtbG9hZGluZycpLnJlbW92ZSgpO1xuXHRcdH0sXG5cblx0XHRzaG93TG9hZGluZzogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGVsLCB2aWV3cG9ydDtcblxuXHRcdFx0Ri5oaWRlTG9hZGluZygpO1xuXG5cdFx0XHRlbCA9ICQoJzxkaXYgaWQ9XCJmYW5jeWJveC1sb2FkaW5nXCI+PGRpdj48L2Rpdj48L2Rpdj4nKS5jbGljayhGLmNhbmNlbCkuYXBwZW5kVG8oJ2JvZHknKTtcblxuXHRcdFx0Ly8gSWYgdXNlciB3aWxsIHByZXNzIHRoZSBlc2NhcGUtYnV0dG9uLCB0aGUgcmVxdWVzdCB3aWxsIGJlIGNhbmNlbGVkXG5cdFx0XHRELmJpbmQoJ2tleWRvd24ubG9hZGluZycsIGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0aWYgKChlLndoaWNoIHx8IGUua2V5Q29kZSkgPT09IDI3KSB7XG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0XHRcdFx0Ri5jYW5jZWwoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdGlmICghRi5kZWZhdWx0cy5maXhlZCkge1xuXHRcdFx0XHR2aWV3cG9ydCA9IEYuZ2V0Vmlld3BvcnQoKTtcblxuXHRcdFx0XHRlbC5jc3Moe1xuXHRcdFx0XHRcdHBvc2l0aW9uIDogJ2Fic29sdXRlJyxcblx0XHRcdFx0XHR0b3AgIDogKHZpZXdwb3J0LmggKiAwLjUpICsgdmlld3BvcnQueSxcblx0XHRcdFx0XHRsZWZ0IDogKHZpZXdwb3J0LncgKiAwLjUpICsgdmlld3BvcnQueFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Z2V0Vmlld3BvcnQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBsb2NrZWQgPSAoRi5jdXJyZW50ICYmIEYuY3VycmVudC5sb2NrZWQpIHx8IGZhbHNlLFxuXHRcdFx0XHRyZXogICAgPSB7XG5cdFx0XHRcdFx0eDogVy5zY3JvbGxMZWZ0KCksXG5cdFx0XHRcdFx0eTogVy5zY3JvbGxUb3AoKVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRpZiAobG9ja2VkKSB7XG5cdFx0XHRcdHJlei53ID0gbG9ja2VkWzBdLmNsaWVudFdpZHRoO1xuXHRcdFx0XHRyZXouaCA9IGxvY2tlZFswXS5jbGllbnRIZWlnaHQ7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIFNlZSBodHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC82NzI0XG5cdFx0XHRcdHJlei53ID0gaXNUb3VjaCAmJiB3aW5kb3cuaW5uZXJXaWR0aCAgPyB3aW5kb3cuaW5uZXJXaWR0aCAgOiBXLndpZHRoKCk7XG5cdFx0XHRcdHJlei5oID0gaXNUb3VjaCAmJiB3aW5kb3cuaW5uZXJIZWlnaHQgPyB3aW5kb3cuaW5uZXJIZWlnaHQgOiBXLmhlaWdodCgpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gcmV6O1xuXHRcdH0sXG5cblx0XHQvLyBVbmJpbmQgdGhlIGtleWJvYXJkIC8gY2xpY2tpbmcgYWN0aW9uc1xuXHRcdHVuYmluZEV2ZW50czogZnVuY3Rpb24gKCkge1xuXHRcdFx0aWYgKEYud3JhcCAmJiBpc1F1ZXJ5KEYud3JhcCkpIHtcblx0XHRcdFx0Ri53cmFwLnVuYmluZCgnLmZiJyk7XG5cdFx0XHR9XG5cblx0XHRcdEQudW5iaW5kKCcuZmInKTtcblx0XHRcdFcudW5iaW5kKCcuZmInKTtcblx0XHR9LFxuXG5cdFx0YmluZEV2ZW50czogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGN1cnJlbnQgPSBGLmN1cnJlbnQsXG5cdFx0XHRcdGtleXM7XG5cblx0XHRcdGlmICghY3VycmVudCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIENoYW5naW5nIGRvY3VtZW50IGhlaWdodCBvbiBpT1MgZGV2aWNlcyB0cmlnZ2VycyBhICdyZXNpemUnIGV2ZW50LFxuXHRcdFx0Ly8gdGhhdCBjYW4gY2hhbmdlIGRvY3VtZW50IGhlaWdodC4uLiByZXBlYXRpbmcgaW5maW5pdGVseVxuXHRcdFx0Vy5iaW5kKCdvcmllbnRhdGlvbmNoYW5nZS5mYicgKyAoaXNUb3VjaCA/ICcnIDogJyByZXNpemUuZmInKSArIChjdXJyZW50LmF1dG9DZW50ZXIgJiYgIWN1cnJlbnQubG9ja2VkID8gJyBzY3JvbGwuZmInIDogJycpLCBGLnVwZGF0ZSk7XG5cblx0XHRcdGtleXMgPSBjdXJyZW50LmtleXM7XG5cblx0XHRcdGlmIChrZXlzKSB7XG5cdFx0XHRcdEQuYmluZCgna2V5ZG93bi5mYicsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRcdFx0dmFyIGNvZGUgICA9IGUud2hpY2ggfHwgZS5rZXlDb2RlLFxuXHRcdFx0XHRcdFx0dGFyZ2V0ID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50O1xuXG5cdFx0XHRcdFx0Ly8gU2tpcCBlc2Mga2V5IGlmIGxvYWRpbmcsIGJlY2F1c2Ugc2hvd0xvYWRpbmcgd2lsbCBjYW5jZWwgcHJlbG9hZGluZ1xuXHRcdFx0XHRcdGlmIChjb2RlID09PSAyNyAmJiBGLmNvbWluZykge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIElnbm9yZSBrZXkgY29tYmluYXRpb25zIGFuZCBrZXkgZXZlbnRzIHdpdGhpbiBmb3JtIGVsZW1lbnRzXG5cdFx0XHRcdFx0aWYgKCFlLmN0cmxLZXkgJiYgIWUuYWx0S2V5ICYmICFlLnNoaWZ0S2V5ICYmICFlLm1ldGFLZXkgJiYgISh0YXJnZXQgJiYgKHRhcmdldC50eXBlIHx8ICQodGFyZ2V0KS5pcygnW2NvbnRlbnRlZGl0YWJsZV0nKSkpKSB7XG5cdFx0XHRcdFx0XHQkLmVhY2goa2V5cywgZnVuY3Rpb24oaSwgdmFsKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChjdXJyZW50Lmdyb3VwLmxlbmd0aCA+IDEgJiYgdmFsWyBjb2RlIF0gIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdFx0XHRcdEZbIGkgXSggdmFsWyBjb2RlIF0gKTtcblxuXHRcdFx0XHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRpZiAoJC5pbkFycmF5KGNvZGUsIHZhbCkgPiAtMSkge1xuXHRcdFx0XHRcdFx0XHRcdEZbIGkgXSAoKTtcblxuXHRcdFx0XHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICgkLmZuLm1vdXNld2hlZWwgJiYgY3VycmVudC5tb3VzZVdoZWVsKSB7XG5cdFx0XHRcdEYud3JhcC5iaW5kKCdtb3VzZXdoZWVsLmZiJywgZnVuY3Rpb24gKGUsIGRlbHRhLCBkZWx0YVgsIGRlbHRhWSkge1xuXHRcdFx0XHRcdHZhciB0YXJnZXQgPSBlLnRhcmdldCB8fCBudWxsLFxuXHRcdFx0XHRcdFx0cGFyZW50ID0gJCh0YXJnZXQpLFxuXHRcdFx0XHRcdFx0Y2FuU2Nyb2xsID0gZmFsc2U7XG5cblx0XHRcdFx0XHR3aGlsZSAocGFyZW50Lmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0aWYgKGNhblNjcm9sbCB8fCBwYXJlbnQuaXMoJy5mYW5jeWJveC1za2luJykgfHwgcGFyZW50LmlzKCcuZmFuY3lib3gtd3JhcCcpKSB7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRjYW5TY3JvbGwgPSBpc1Njcm9sbGFibGUoIHBhcmVudFswXSApO1xuXHRcdFx0XHRcdFx0cGFyZW50ICAgID0gJChwYXJlbnQpLnBhcmVudCgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmIChkZWx0YSAhPT0gMCAmJiAhY2FuU2Nyb2xsKSB7XG5cdFx0XHRcdFx0XHRpZiAoRi5ncm91cC5sZW5ndGggPiAxICYmICFjdXJyZW50LmNhblNocmluaykge1xuXHRcdFx0XHRcdFx0XHRpZiAoZGVsdGFZID4gMCB8fCBkZWx0YVggPiAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ri5wcmV2KCBkZWx0YVkgPiAwID8gJ2Rvd24nIDogJ2xlZnQnICk7XG5cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChkZWx0YVkgPCAwIHx8IGRlbHRhWCA8IDApIHtcblx0XHRcdFx0XHRcdFx0XHRGLm5leHQoIGRlbHRhWSA8IDAgPyAndXAnIDogJ3JpZ2h0JyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHRyaWdnZXI6IGZ1bmN0aW9uIChldmVudCwgbykge1xuXHRcdFx0dmFyIHJldCwgb2JqID0gbyB8fCBGLmNvbWluZyB8fCBGLmN1cnJlbnQ7XG5cblx0XHRcdGlmICghb2JqKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCQuaXNGdW5jdGlvbiggb2JqW2V2ZW50XSApKSB7XG5cdFx0XHRcdHJldCA9IG9ialtldmVudF0uYXBwbHkob2JqLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKHJldCA9PT0gZmFsc2UpIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAob2JqLmhlbHBlcnMpIHtcblx0XHRcdFx0JC5lYWNoKG9iai5oZWxwZXJzLCBmdW5jdGlvbiAoaGVscGVyLCBvcHRzKSB7XG5cdFx0XHRcdFx0aWYgKG9wdHMgJiYgRi5oZWxwZXJzW2hlbHBlcl0gJiYgJC5pc0Z1bmN0aW9uKEYuaGVscGVyc1toZWxwZXJdW2V2ZW50XSkpIHtcblx0XHRcdFx0XHRcdEYuaGVscGVyc1toZWxwZXJdW2V2ZW50XSgkLmV4dGVuZCh0cnVlLCB7fSwgRi5oZWxwZXJzW2hlbHBlcl0uZGVmYXVsdHMsIG9wdHMpLCBvYmopO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cblx0XHRcdEQudHJpZ2dlcihldmVudCk7XG5cdFx0fSxcblxuXHRcdGlzSW1hZ2U6IGZ1bmN0aW9uIChzdHIpIHtcblx0XHRcdHJldHVybiBpc1N0cmluZyhzdHIpICYmIHN0ci5tYXRjaCgvKF5kYXRhOmltYWdlXFwvLiosKXwoXFwuKGpwKGV8Z3xlZyl8Z2lmfHBuZ3xibXB8d2VicHxzdmcpKChcXD98IykuKik/JCkvaSk7XG5cdFx0fSxcblxuXHRcdGlzU1dGOiBmdW5jdGlvbiAoc3RyKSB7XG5cdFx0XHRyZXR1cm4gaXNTdHJpbmcoc3RyKSAmJiBzdHIubWF0Y2goL1xcLihzd2YpKChcXD98IykuKik/JC9pKTtcblx0XHR9LFxuXG5cdFx0X3N0YXJ0OiBmdW5jdGlvbiAoaW5kZXgpIHtcblx0XHRcdHZhciBjb21pbmcgPSB7fSxcblx0XHRcdFx0b2JqLFxuXHRcdFx0XHRocmVmLFxuXHRcdFx0XHR0eXBlLFxuXHRcdFx0XHRtYXJnaW4sXG5cdFx0XHRcdHBhZGRpbmc7XG5cblx0XHRcdGluZGV4ID0gZ2V0U2NhbGFyKCBpbmRleCApO1xuXHRcdFx0b2JqICAgPSBGLmdyb3VwWyBpbmRleCBdIHx8IG51bGw7XG5cblx0XHRcdGlmICghb2JqKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0Y29taW5nID0gJC5leHRlbmQodHJ1ZSwge30sIEYub3B0cywgb2JqKTtcblxuXHRcdFx0Ly8gQ29udmVydCBtYXJnaW4gYW5kIHBhZGRpbmcgcHJvcGVydGllcyB0byBhcnJheSAtIHRvcCwgcmlnaHQsIGJvdHRvbSwgbGVmdFxuXHRcdFx0bWFyZ2luICA9IGNvbWluZy5tYXJnaW47XG5cdFx0XHRwYWRkaW5nID0gY29taW5nLnBhZGRpbmc7XG5cblx0XHRcdGlmICgkLnR5cGUobWFyZ2luKSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y29taW5nLm1hcmdpbiA9IFttYXJnaW4sIG1hcmdpbiwgbWFyZ2luLCBtYXJnaW5dO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoJC50eXBlKHBhZGRpbmcpID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjb21pbmcucGFkZGluZyA9IFtwYWRkaW5nLCBwYWRkaW5nLCBwYWRkaW5nLCBwYWRkaW5nXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gJ21vZGFsJyBwcm9wZXJ5IGlzIGp1c3QgYSBzaG9ydGN1dFxuXHRcdFx0aWYgKGNvbWluZy5tb2RhbCkge1xuXHRcdFx0XHQkLmV4dGVuZCh0cnVlLCBjb21pbmcsIHtcblx0XHRcdFx0XHRjbG9zZUJ0biAgIDogZmFsc2UsXG5cdFx0XHRcdFx0Y2xvc2VDbGljayA6IGZhbHNlLFxuXHRcdFx0XHRcdG5leHRDbGljayAgOiBmYWxzZSxcblx0XHRcdFx0XHRhcnJvd3MgICAgIDogZmFsc2UsXG5cdFx0XHRcdFx0bW91c2VXaGVlbCA6IGZhbHNlLFxuXHRcdFx0XHRcdGtleXMgICAgICAgOiBudWxsLFxuXHRcdFx0XHRcdGhlbHBlcnM6IHtcblx0XHRcdFx0XHRcdG92ZXJsYXkgOiB7XG5cdFx0XHRcdFx0XHRcdGNsb3NlQ2xpY2sgOiBmYWxzZVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cblx0XHRcdC8vICdhdXRvU2l6ZScgcHJvcGVydHkgaXMgYSBzaG9ydGN1dCwgdG9vXG5cdFx0XHRpZiAoY29taW5nLmF1dG9TaXplKSB7XG5cdFx0XHRcdGNvbWluZy5hdXRvV2lkdGggPSBjb21pbmcuYXV0b0hlaWdodCA9IHRydWU7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChjb21pbmcud2lkdGggPT09ICdhdXRvJykge1xuXHRcdFx0XHRjb21pbmcuYXV0b1dpZHRoID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGNvbWluZy5oZWlnaHQgPT09ICdhdXRvJykge1xuXHRcdFx0XHRjb21pbmcuYXV0b0hlaWdodCA9IHRydWU7XG5cdFx0XHR9XG5cblx0XHRcdC8qXG5cdFx0XHQgKiBBZGQgcmVmZXJlbmNlIHRvIHRoZSBncm91cCwgc28gaXRgcyBwb3NzaWJsZSB0byBhY2Nlc3MgZnJvbSBjYWxsYmFja3MsIGV4YW1wbGU6XG5cdFx0XHQgKiBhZnRlckxvYWQgOiBmdW5jdGlvbigpIHtcblx0XHRcdCAqICAgICB0aGlzLnRpdGxlID0gJ0ltYWdlICcgKyAodGhpcy5pbmRleCArIDEpICsgJyBvZiAnICsgdGhpcy5ncm91cC5sZW5ndGggKyAodGhpcy50aXRsZSA/ICcgLSAnICsgdGhpcy50aXRsZSA6ICcnKTtcblx0XHRcdCAqIH1cblx0XHRcdCAqL1xuXG5cdFx0XHRjb21pbmcuZ3JvdXAgID0gRi5ncm91cDtcblx0XHRcdGNvbWluZy5pbmRleCAgPSBpbmRleDtcblxuXHRcdFx0Ly8gR2l2ZSBhIGNoYW5jZSBmb3IgY2FsbGJhY2sgb3IgaGVscGVycyB0byB1cGRhdGUgY29taW5nIGl0ZW0gKHR5cGUsIHRpdGxlLCBldGMpXG5cdFx0XHRGLmNvbWluZyA9IGNvbWluZztcblxuXHRcdFx0aWYgKGZhbHNlID09PSBGLnRyaWdnZXIoJ2JlZm9yZUxvYWQnKSkge1xuXHRcdFx0XHRGLmNvbWluZyA9IG51bGw7XG5cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR0eXBlID0gY29taW5nLnR5cGU7XG5cdFx0XHRocmVmID0gY29taW5nLmhyZWY7XG5cblx0XHRcdGlmICghdHlwZSkge1xuXHRcdFx0XHRGLmNvbWluZyA9IG51bGw7XG5cblx0XHRcdFx0Ly9JZiB3ZSBjYW4gbm90IGRldGVybWluZSBjb250ZW50IHR5cGUgdGhlbiBkcm9wIHNpbGVudGx5IG9yIGRpc3BsYXkgbmV4dC9wcmV2IGl0ZW0gaWYgbG9vcGluZyB0aHJvdWdoIGdhbGxlcnlcblx0XHRcdFx0aWYgKEYuY3VycmVudCAmJiBGLnJvdXRlciAmJiBGLnJvdXRlciAhPT0gJ2p1bXB0bycpIHtcblx0XHRcdFx0XHRGLmN1cnJlbnQuaW5kZXggPSBpbmRleDtcblxuXHRcdFx0XHRcdHJldHVybiBGWyBGLnJvdXRlciBdKCBGLmRpcmVjdGlvbiApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXG5cdFx0XHRGLmlzQWN0aXZlID0gdHJ1ZTtcblxuXHRcdFx0aWYgKHR5cGUgPT09ICdpbWFnZScgfHwgdHlwZSA9PT0gJ3N3ZicpIHtcblx0XHRcdFx0Y29taW5nLmF1dG9IZWlnaHQgPSBjb21pbmcuYXV0b1dpZHRoID0gZmFsc2U7XG5cdFx0XHRcdGNvbWluZy5zY3JvbGxpbmcgID0gJ3Zpc2libGUnO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodHlwZSA9PT0gJ2ltYWdlJykge1xuXHRcdFx0XHRjb21pbmcuYXNwZWN0UmF0aW8gPSB0cnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodHlwZSA9PT0gJ2lmcmFtZScgJiYgaXNUb3VjaCkge1xuXHRcdFx0XHRjb21pbmcuc2Nyb2xsaW5nID0gJ3Njcm9sbCc7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEJ1aWxkIHRoZSBuZWNjZXNzYXJ5IG1hcmt1cFxuXHRcdFx0Y29taW5nLndyYXAgPSAkKGNvbWluZy50cGwud3JhcCkuYWRkQ2xhc3MoJ2ZhbmN5Ym94LScgKyAoaXNUb3VjaCA/ICdtb2JpbGUnIDogJ2Rlc2t0b3AnKSArICcgZmFuY3lib3gtdHlwZS0nICsgdHlwZSArICcgZmFuY3lib3gtdG1wICcgKyBjb21pbmcud3JhcENTUykuYXBwZW5kVG8oIGNvbWluZy5wYXJlbnQgfHwgJ2JvZHknICk7XG5cblx0XHRcdCQuZXh0ZW5kKGNvbWluZywge1xuXHRcdFx0XHRza2luICA6ICQoJy5mYW5jeWJveC1za2luJywgIGNvbWluZy53cmFwKSxcblx0XHRcdFx0b3V0ZXIgOiAkKCcuZmFuY3lib3gtb3V0ZXInLCBjb21pbmcud3JhcCksXG5cdFx0XHRcdGlubmVyIDogJCgnLmZhbmN5Ym94LWlubmVyJywgY29taW5nLndyYXApXG5cdFx0XHR9KTtcblxuXHRcdFx0JC5lYWNoKFtcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiXSwgZnVuY3Rpb24oaSwgdikge1xuXHRcdFx0XHRjb21pbmcuc2tpbi5jc3MoJ3BhZGRpbmcnICsgdiwgZ2V0VmFsdWUoY29taW5nLnBhZGRpbmdbIGkgXSkpO1xuXHRcdFx0fSk7XG5cblx0XHRcdEYudHJpZ2dlcignb25SZWFkeScpO1xuXG5cdFx0XHQvLyBDaGVjayBiZWZvcmUgdHJ5IHRvIGxvYWQ7ICdpbmxpbmUnIGFuZCAnaHRtbCcgdHlwZXMgbmVlZCBjb250ZW50LCBvdGhlcnMgLSBocmVmXG5cdFx0XHRpZiAodHlwZSA9PT0gJ2lubGluZScgfHwgdHlwZSA9PT0gJ2h0bWwnKSB7XG5cdFx0XHRcdGlmICghY29taW5nLmNvbnRlbnQgfHwgIWNvbWluZy5jb250ZW50Lmxlbmd0aCkge1xuXHRcdFx0XHRcdHJldHVybiBGLl9lcnJvciggJ2NvbnRlbnQnICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0fSBlbHNlIGlmICghaHJlZikge1xuXHRcdFx0XHRyZXR1cm4gRi5fZXJyb3IoICdocmVmJyApO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodHlwZSA9PT0gJ2ltYWdlJykge1xuXHRcdFx0XHRGLl9sb2FkSW1hZ2UoKTtcblxuXHRcdFx0fSBlbHNlIGlmICh0eXBlID09PSAnYWpheCcpIHtcblx0XHRcdFx0Ri5fbG9hZEFqYXgoKTtcblxuXHRcdFx0fSBlbHNlIGlmICh0eXBlID09PSAnaWZyYW1lJykge1xuXHRcdFx0XHRGLl9sb2FkSWZyYW1lKCk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdEYuX2FmdGVyTG9hZCgpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRfZXJyb3I6IGZ1bmN0aW9uICggdHlwZSApIHtcblx0XHRcdCQuZXh0ZW5kKEYuY29taW5nLCB7XG5cdFx0XHRcdHR5cGUgICAgICAgOiAnaHRtbCcsXG5cdFx0XHRcdGF1dG9XaWR0aCAgOiB0cnVlLFxuXHRcdFx0XHRhdXRvSGVpZ2h0IDogdHJ1ZSxcblx0XHRcdFx0bWluV2lkdGggICA6IDAsXG5cdFx0XHRcdG1pbkhlaWdodCAgOiAwLFxuXHRcdFx0XHRzY3JvbGxpbmcgIDogJ25vJyxcblx0XHRcdFx0aGFzRXJyb3IgICA6IHR5cGUsXG5cdFx0XHRcdGNvbnRlbnQgICAgOiBGLmNvbWluZy50cGwuZXJyb3Jcblx0XHRcdH0pO1xuXG5cdFx0XHRGLl9hZnRlckxvYWQoKTtcblx0XHR9LFxuXG5cdFx0X2xvYWRJbWFnZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0Ly8gUmVzZXQgcHJlbG9hZCBpbWFnZSBzbyBpdCBpcyBsYXRlciBwb3NzaWJsZSB0byBjaGVjayBcImNvbXBsZXRlXCIgcHJvcGVydHlcblx0XHRcdHZhciBpbWcgPSBGLmltZ1ByZWxvYWQgPSBuZXcgSW1hZ2UoKTtcblxuXHRcdFx0aW1nLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0dGhpcy5vbmxvYWQgPSB0aGlzLm9uZXJyb3IgPSBudWxsO1xuXG5cdFx0XHRcdEYuY29taW5nLndpZHRoICA9IHRoaXMud2lkdGggLyBGLm9wdHMucGl4ZWxSYXRpbztcblx0XHRcdFx0Ri5jb21pbmcuaGVpZ2h0ID0gdGhpcy5oZWlnaHQgLyBGLm9wdHMucGl4ZWxSYXRpbztcblxuXHRcdFx0XHRGLl9hZnRlckxvYWQoKTtcblx0XHRcdH07XG5cblx0XHRcdGltZy5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR0aGlzLm9ubG9hZCA9IHRoaXMub25lcnJvciA9IG51bGw7XG5cblx0XHRcdFx0Ri5fZXJyb3IoICdpbWFnZScgKTtcblx0XHRcdH07XG5cblx0XHRcdGltZy5zcmMgPSBGLmNvbWluZy5ocmVmO1xuXG5cdFx0XHRpZiAoaW1nLmNvbXBsZXRlICE9PSB0cnVlKSB7XG5cdFx0XHRcdEYuc2hvd0xvYWRpbmcoKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0X2xvYWRBamF4OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgY29taW5nID0gRi5jb21pbmc7XG5cblx0XHRcdEYuc2hvd0xvYWRpbmcoKTtcblxuXHRcdFx0Ri5hamF4TG9hZCA9ICQuYWpheCgkLmV4dGVuZCh7fSwgY29taW5nLmFqYXgsIHtcblx0XHRcdFx0dXJsOiBjb21pbmcuaHJlZixcblx0XHRcdFx0ZXJyb3I6IGZ1bmN0aW9uIChqcVhIUiwgdGV4dFN0YXR1cykge1xuXHRcdFx0XHRcdGlmIChGLmNvbWluZyAmJiB0ZXh0U3RhdHVzICE9PSAnYWJvcnQnKSB7XG5cdFx0XHRcdFx0XHRGLl9lcnJvciggJ2FqYXgnLCBqcVhIUiApO1xuXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdEYuaGlkZUxvYWRpbmcoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhLCB0ZXh0U3RhdHVzKSB7XG5cdFx0XHRcdFx0aWYgKHRleHRTdGF0dXMgPT09ICdzdWNjZXNzJykge1xuXHRcdFx0XHRcdFx0Y29taW5nLmNvbnRlbnQgPSBkYXRhO1xuXG5cdFx0XHRcdFx0XHRGLl9hZnRlckxvYWQoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pKTtcblx0XHR9LFxuXG5cdFx0X2xvYWRJZnJhbWU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGNvbWluZyA9IEYuY29taW5nLFxuXHRcdFx0XHRpZnJhbWUgPSAkKGNvbWluZy50cGwuaWZyYW1lLnJlcGxhY2UoL1xce3JuZFxcfS9nLCBuZXcgRGF0ZSgpLmdldFRpbWUoKSkpXG5cdFx0XHRcdFx0LmF0dHIoJ3Njcm9sbGluZycsIGlzVG91Y2ggPyAnYXV0bycgOiBjb21pbmcuaWZyYW1lLnNjcm9sbGluZylcblx0XHRcdFx0XHQuYXR0cignc3JjJywgY29taW5nLmhyZWYpO1xuXG5cdFx0XHQvLyBUaGlzIGhlbHBzIElFXG5cdFx0XHQkKGNvbWluZy53cmFwKS5iaW5kKCdvblJlc2V0JywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdCQodGhpcykuZmluZCgnaWZyYW1lJykuaGlkZSgpLmF0dHIoJ3NyYycsICcvL2Fib3V0OmJsYW5rJykuZW5kKCkuZW1wdHkoKTtcblx0XHRcdFx0fSBjYXRjaCAoZSkge31cblx0XHRcdH0pO1xuXG5cdFx0XHRpZiAoY29taW5nLmlmcmFtZS5wcmVsb2FkKSB7XG5cdFx0XHRcdEYuc2hvd0xvYWRpbmcoKTtcblxuXHRcdFx0XHRpZnJhbWUub25lKCdsb2FkJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0JCh0aGlzKS5kYXRhKCdyZWFkeScsIDEpO1xuXG5cdFx0XHRcdFx0Ly8gaU9TIHdpbGwgbG9zZSBzY3JvbGxpbmcgaWYgd2UgcmVzaXplXG5cdFx0XHRcdFx0aWYgKCFpc1RvdWNoKSB7XG5cdFx0XHRcdFx0XHQkKHRoaXMpLmJpbmQoJ2xvYWQuZmInLCBGLnVwZGF0ZSk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gV2l0aG91dCB0aGlzIHRyaWNrOlxuXHRcdFx0XHRcdC8vICAgLSBpZnJhbWUgd29uJ3Qgc2Nyb2xsIG9uIGlPUyBkZXZpY2VzXG5cdFx0XHRcdFx0Ly8gICAtIElFNyBzb21ldGltZXMgZGlzcGxheXMgZW1wdHkgaWZyYW1lXG5cdFx0XHRcdFx0JCh0aGlzKS5wYXJlbnRzKCcuZmFuY3lib3gtd3JhcCcpLndpZHRoKCcxMDAlJykucmVtb3ZlQ2xhc3MoJ2ZhbmN5Ym94LXRtcCcpLnNob3coKTtcblxuXHRcdFx0XHRcdEYuX2FmdGVyTG9hZCgpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0Y29taW5nLmNvbnRlbnQgPSBpZnJhbWUuYXBwZW5kVG8oIGNvbWluZy5pbm5lciApO1xuXG5cdFx0XHRpZiAoIWNvbWluZy5pZnJhbWUucHJlbG9hZCkge1xuXHRcdFx0XHRGLl9hZnRlckxvYWQoKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0X3ByZWxvYWRJbWFnZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGdyb3VwICAgPSBGLmdyb3VwLFxuXHRcdFx0XHRjdXJyZW50ID0gRi5jdXJyZW50LFxuXHRcdFx0XHRsZW4gICAgID0gZ3JvdXAubGVuZ3RoLFxuXHRcdFx0XHRjbnQgICAgID0gY3VycmVudC5wcmVsb2FkID8gTWF0aC5taW4oY3VycmVudC5wcmVsb2FkLCBsZW4gLSAxKSA6IDAsXG5cdFx0XHRcdGl0ZW0sXG5cdFx0XHRcdGk7XG5cblx0XHRcdGZvciAoaSA9IDE7IGkgPD0gY250OyBpICs9IDEpIHtcblx0XHRcdFx0aXRlbSA9IGdyb3VwWyAoY3VycmVudC5pbmRleCArIGkgKSAlIGxlbiBdO1xuXG5cdFx0XHRcdGlmIChpdGVtLnR5cGUgPT09ICdpbWFnZScgJiYgaXRlbS5ocmVmKSB7XG5cdFx0XHRcdFx0bmV3IEltYWdlKCkuc3JjID0gaXRlbS5ocmVmO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdF9hZnRlckxvYWQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBjb21pbmcgICA9IEYuY29taW5nLFxuXHRcdFx0XHRwcmV2aW91cyA9IEYuY3VycmVudCxcblx0XHRcdFx0cGxhY2Vob2xkZXIgPSAnZmFuY3lib3gtcGxhY2Vob2xkZXInLFxuXHRcdFx0XHRjdXJyZW50LFxuXHRcdFx0XHRjb250ZW50LFxuXHRcdFx0XHR0eXBlLFxuXHRcdFx0XHRzY3JvbGxpbmcsXG5cdFx0XHRcdGhyZWYsXG5cdFx0XHRcdGVtYmVkO1xuXG5cdFx0XHRGLmhpZGVMb2FkaW5nKCk7XG5cblx0XHRcdGlmICghY29taW5nIHx8IEYuaXNBY3RpdmUgPT09IGZhbHNlKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGZhbHNlID09PSBGLnRyaWdnZXIoJ2FmdGVyTG9hZCcsIGNvbWluZywgcHJldmlvdXMpKSB7XG5cdFx0XHRcdGNvbWluZy53cmFwLnN0b3AodHJ1ZSkudHJpZ2dlcignb25SZXNldCcpLnJlbW92ZSgpO1xuXG5cdFx0XHRcdEYuY29taW5nID0gbnVsbDtcblxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmIChwcmV2aW91cykge1xuXHRcdFx0XHRGLnRyaWdnZXIoJ2JlZm9yZUNoYW5nZScsIHByZXZpb3VzKTtcblxuXHRcdFx0XHRwcmV2aW91cy53cmFwLnN0b3AodHJ1ZSkucmVtb3ZlQ2xhc3MoJ2ZhbmN5Ym94LW9wZW5lZCcpXG5cdFx0XHRcdFx0LmZpbmQoJy5mYW5jeWJveC1pdGVtLCAuZmFuY3lib3gtbmF2Jylcblx0XHRcdFx0XHQucmVtb3ZlKCk7XG5cdFx0XHR9XG5cblx0XHRcdEYudW5iaW5kRXZlbnRzKCk7XG5cblx0XHRcdGN1cnJlbnQgICA9IGNvbWluZztcblx0XHRcdGNvbnRlbnQgICA9IGNvbWluZy5jb250ZW50O1xuXHRcdFx0dHlwZSAgICAgID0gY29taW5nLnR5cGU7XG5cdFx0XHRzY3JvbGxpbmcgPSBjb21pbmcuc2Nyb2xsaW5nO1xuXG5cdFx0XHQkLmV4dGVuZChGLCB7XG5cdFx0XHRcdHdyYXAgIDogY3VycmVudC53cmFwLFxuXHRcdFx0XHRza2luICA6IGN1cnJlbnQuc2tpbixcblx0XHRcdFx0b3V0ZXIgOiBjdXJyZW50Lm91dGVyLFxuXHRcdFx0XHRpbm5lciA6IGN1cnJlbnQuaW5uZXIsXG5cdFx0XHRcdGN1cnJlbnQgIDogY3VycmVudCxcblx0XHRcdFx0cHJldmlvdXMgOiBwcmV2aW91c1xuXHRcdFx0fSk7XG5cblx0XHRcdGhyZWYgPSBjdXJyZW50LmhyZWY7XG5cblx0XHRcdHN3aXRjaCAodHlwZSkge1xuXHRcdFx0XHRjYXNlICdpbmxpbmUnOlxuXHRcdFx0XHRjYXNlICdhamF4Jzpcblx0XHRcdFx0Y2FzZSAnaHRtbCc6XG5cdFx0XHRcdFx0aWYgKGN1cnJlbnQuc2VsZWN0b3IpIHtcblx0XHRcdFx0XHRcdGNvbnRlbnQgPSAkKCc8ZGl2PicpLmh0bWwoY29udGVudCkuZmluZChjdXJyZW50LnNlbGVjdG9yKTtcblxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoaXNRdWVyeShjb250ZW50KSkge1xuXHRcdFx0XHRcdFx0aWYgKCFjb250ZW50LmRhdGEocGxhY2Vob2xkZXIpKSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRlbnQuZGF0YShwbGFjZWhvbGRlciwgJCgnPGRpdiBjbGFzcz1cIicgKyBwbGFjZWhvbGRlciArICdcIj48L2Rpdj4nKS5pbnNlcnRBZnRlciggY29udGVudCApLmhpZGUoKSApO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRjb250ZW50ID0gY29udGVudC5zaG93KCkuZGV0YWNoKCk7XG5cblx0XHRcdFx0XHRcdGN1cnJlbnQud3JhcC5iaW5kKCdvblJlc2V0JywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRpZiAoJCh0aGlzKS5maW5kKGNvbnRlbnQpLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0XHRcdGNvbnRlbnQuaGlkZSgpLnJlcGxhY2VBbGwoIGNvbnRlbnQuZGF0YShwbGFjZWhvbGRlcikgKS5kYXRhKHBsYWNlaG9sZGVyLCBmYWxzZSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSAnaW1hZ2UnOlxuXHRcdFx0XHRcdGNvbnRlbnQgPSBjdXJyZW50LnRwbC5pbWFnZS5yZXBsYWNlKCd7aHJlZn0nLCBocmVmKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSAnc3dmJzpcblx0XHRcdFx0XHRjb250ZW50ID0gJzxvYmplY3QgaWQ9XCJmYW5jeWJveC1zd2ZcIiBjbGFzc2lkPVwiY2xzaWQ6RDI3Q0RCNkUtQUU2RC0xMWNmLTk2QjgtNDQ0NTUzNTQwMDAwXCIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiPjxwYXJhbSBuYW1lPVwibW92aWVcIiB2YWx1ZT1cIicgKyBocmVmICsgJ1wiPjwvcGFyYW0+Jztcblx0XHRcdFx0XHRlbWJlZCAgID0gJyc7XG5cblx0XHRcdFx0XHQkLmVhY2goY3VycmVudC5zd2YsIGZ1bmN0aW9uKG5hbWUsIHZhbCkge1xuXHRcdFx0XHRcdFx0Y29udGVudCArPSAnPHBhcmFtIG5hbWU9XCInICsgbmFtZSArICdcIiB2YWx1ZT1cIicgKyB2YWwgKyAnXCI+PC9wYXJhbT4nO1xuXHRcdFx0XHRcdFx0ZW1iZWQgICArPSAnICcgKyBuYW1lICsgJz1cIicgKyB2YWwgKyAnXCInO1xuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0Y29udGVudCArPSAnPGVtYmVkIHNyYz1cIicgKyBocmVmICsgJ1wiIHR5cGU9XCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIicgKyBlbWJlZCArICc+PC9lbWJlZD48L29iamVjdD4nO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblxuXHRcdFx0aWYgKCEoaXNRdWVyeShjb250ZW50KSAmJiBjb250ZW50LnBhcmVudCgpLmlzKGN1cnJlbnQuaW5uZXIpKSkge1xuXHRcdFx0XHRjdXJyZW50LmlubmVyLmFwcGVuZCggY29udGVudCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBHaXZlIGEgY2hhbmNlIGZvciBoZWxwZXJzIG9yIGNhbGxiYWNrcyB0byB1cGRhdGUgZWxlbWVudHNcblx0XHRcdEYudHJpZ2dlcignYmVmb3JlU2hvdycpO1xuXG5cdFx0XHQvLyBTZXQgc2Nyb2xsaW5nIGJlZm9yZSBjYWxjdWxhdGluZyBkaW1lbnNpb25zXG5cdFx0XHRjdXJyZW50LmlubmVyLmNzcygnb3ZlcmZsb3cnLCBzY3JvbGxpbmcgPT09ICd5ZXMnID8gJ3Njcm9sbCcgOiAoc2Nyb2xsaW5nID09PSAnbm8nID8gJ2hpZGRlbicgOiBzY3JvbGxpbmcpKTtcblxuXHRcdFx0Ly8gU2V0IGluaXRpYWwgZGltZW5zaW9ucyBhbmQgc3RhcnQgcG9zaXRpb25cblx0XHRcdEYuX3NldERpbWVuc2lvbigpO1xuXG5cdFx0XHRGLnJlcG9zaXRpb24oKTtcblxuXHRcdFx0Ri5pc09wZW4gPSBmYWxzZTtcblx0XHRcdEYuY29taW5nID0gbnVsbDtcblxuXHRcdFx0Ri5iaW5kRXZlbnRzKCk7XG5cblx0XHRcdGlmICghRi5pc09wZW5lZCkge1xuXHRcdFx0XHQkKCcuZmFuY3lib3gtd3JhcCcpLm5vdCggY3VycmVudC53cmFwICkuc3RvcCh0cnVlKS50cmlnZ2VyKCdvblJlc2V0JykucmVtb3ZlKCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocHJldmlvdXMucHJldk1ldGhvZCkge1xuXHRcdFx0XHRGLnRyYW5zaXRpb25zWyBwcmV2aW91cy5wcmV2TWV0aG9kIF0oKTtcblx0XHRcdH1cblxuXHRcdFx0Ri50cmFuc2l0aW9uc1sgRi5pc09wZW5lZCA/IGN1cnJlbnQubmV4dE1ldGhvZCA6IGN1cnJlbnQub3Blbk1ldGhvZCBdKCk7XG5cblx0XHRcdEYuX3ByZWxvYWRJbWFnZXMoKTtcblx0XHR9LFxuXG5cdFx0X3NldERpbWVuc2lvbjogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIHZpZXdwb3J0ICAgPSBGLmdldFZpZXdwb3J0KCksXG5cdFx0XHRcdHN0ZXBzICAgICAgPSAwLFxuXHRcdFx0XHRjYW5TaHJpbmsgID0gZmFsc2UsXG5cdFx0XHRcdGNhbkV4cGFuZCAgPSBmYWxzZSxcblx0XHRcdFx0d3JhcCAgICAgICA9IEYud3JhcCxcblx0XHRcdFx0c2tpbiAgICAgICA9IEYuc2tpbixcblx0XHRcdFx0aW5uZXIgICAgICA9IEYuaW5uZXIsXG5cdFx0XHRcdGN1cnJlbnQgICAgPSBGLmN1cnJlbnQsXG5cdFx0XHRcdHdpZHRoICAgICAgPSBjdXJyZW50LndpZHRoLFxuXHRcdFx0XHRoZWlnaHQgICAgID0gY3VycmVudC5oZWlnaHQsXG5cdFx0XHRcdG1pbldpZHRoICAgPSBjdXJyZW50Lm1pbldpZHRoLFxuXHRcdFx0XHRtaW5IZWlnaHQgID0gY3VycmVudC5taW5IZWlnaHQsXG5cdFx0XHRcdG1heFdpZHRoICAgPSBjdXJyZW50Lm1heFdpZHRoLFxuXHRcdFx0XHRtYXhIZWlnaHQgID0gY3VycmVudC5tYXhIZWlnaHQsXG5cdFx0XHRcdHNjcm9sbGluZyAgPSBjdXJyZW50LnNjcm9sbGluZyxcblx0XHRcdFx0c2Nyb2xsT3V0ICA9IGN1cnJlbnQuc2Nyb2xsT3V0c2lkZSA/IGN1cnJlbnQuc2Nyb2xsYmFyV2lkdGggOiAwLFxuXHRcdFx0XHRtYXJnaW4gICAgID0gY3VycmVudC5tYXJnaW4sXG5cdFx0XHRcdHdNYXJnaW4gICAgPSBnZXRTY2FsYXIobWFyZ2luWzFdICsgbWFyZ2luWzNdKSxcblx0XHRcdFx0aE1hcmdpbiAgICA9IGdldFNjYWxhcihtYXJnaW5bMF0gKyBtYXJnaW5bMl0pLFxuXHRcdFx0XHR3UGFkZGluZyxcblx0XHRcdFx0aFBhZGRpbmcsXG5cdFx0XHRcdHdTcGFjZSxcblx0XHRcdFx0aFNwYWNlLFxuXHRcdFx0XHRvcmlnV2lkdGgsXG5cdFx0XHRcdG9yaWdIZWlnaHQsXG5cdFx0XHRcdG9yaWdNYXhXaWR0aCxcblx0XHRcdFx0b3JpZ01heEhlaWdodCxcblx0XHRcdFx0cmF0aW8sXG5cdFx0XHRcdHdpZHRoXyxcblx0XHRcdFx0aGVpZ2h0Xyxcblx0XHRcdFx0bWF4V2lkdGhfLFxuXHRcdFx0XHRtYXhIZWlnaHRfLFxuXHRcdFx0XHRpZnJhbWUsXG5cdFx0XHRcdGJvZHk7XG5cblx0XHRcdC8vIFJlc2V0IGRpbWVuc2lvbnMgc28gd2UgY291bGQgcmUtY2hlY2sgYWN0dWFsIHNpemVcblx0XHRcdHdyYXAuYWRkKHNraW4pLmFkZChpbm5lcikud2lkdGgoJ2F1dG8nKS5oZWlnaHQoJ2F1dG8nKS5yZW1vdmVDbGFzcygnZmFuY3lib3gtdG1wJyk7XG5cblx0XHRcdHdQYWRkaW5nID0gZ2V0U2NhbGFyKHNraW4ub3V0ZXJXaWR0aCh0cnVlKSAgLSBza2luLndpZHRoKCkpO1xuXHRcdFx0aFBhZGRpbmcgPSBnZXRTY2FsYXIoc2tpbi5vdXRlckhlaWdodCh0cnVlKSAtIHNraW4uaGVpZ2h0KCkpO1xuXG5cdFx0XHQvLyBBbnkgc3BhY2UgYmV0d2VlbiBjb250ZW50IGFuZCB2aWV3cG9ydCAobWFyZ2luLCBwYWRkaW5nLCBib3JkZXIsIHRpdGxlKVxuXHRcdFx0d1NwYWNlID0gd01hcmdpbiArIHdQYWRkaW5nO1xuXHRcdFx0aFNwYWNlID0gaE1hcmdpbiArIGhQYWRkaW5nO1xuXG5cdFx0XHRvcmlnV2lkdGggID0gaXNQZXJjZW50YWdlKHdpZHRoKSAgPyAodmlld3BvcnQudyAtIHdTcGFjZSkgKiBnZXRTY2FsYXIod2lkdGgpICAvIDEwMCA6IHdpZHRoO1xuXHRcdFx0b3JpZ0hlaWdodCA9IGlzUGVyY2VudGFnZShoZWlnaHQpID8gKHZpZXdwb3J0LmggLSBoU3BhY2UpICogZ2V0U2NhbGFyKGhlaWdodCkgLyAxMDAgOiBoZWlnaHQ7XG5cblx0XHRcdGlmIChjdXJyZW50LnR5cGUgPT09ICdpZnJhbWUnKSB7XG5cdFx0XHRcdGlmcmFtZSA9IGN1cnJlbnQuY29udGVudDtcblxuXHRcdFx0XHRpZiAoY3VycmVudC5hdXRvSGVpZ2h0ICYmIGlmcmFtZS5kYXRhKCdyZWFkeScpID09PSAxKSB7XG5cdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdGlmIChpZnJhbWVbMF0uY29udGVudFdpbmRvdy5kb2N1bWVudC5sb2NhdGlvbikge1xuXHRcdFx0XHRcdFx0XHRpbm5lci53aWR0aCggb3JpZ1dpZHRoICkuaGVpZ2h0KDk5OTkpO1xuXG5cdFx0XHRcdFx0XHRcdGJvZHkgPSBpZnJhbWUuY29udGVudHMoKS5maW5kKCdib2R5Jyk7XG5cblx0XHRcdFx0XHRcdFx0aWYgKHNjcm9sbE91dCkge1xuXHRcdFx0XHRcdFx0XHRcdGJvZHkuY3NzKCdvdmVyZmxvdy14JywgJ2hpZGRlbicpO1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0b3JpZ0hlaWdodCA9IGJvZHkub3V0ZXJIZWlnaHQodHJ1ZSk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR9IGNhdGNoIChlKSB7fVxuXHRcdFx0XHR9XG5cblx0XHRcdH0gZWxzZSBpZiAoY3VycmVudC5hdXRvV2lkdGggfHwgY3VycmVudC5hdXRvSGVpZ2h0KSB7XG5cdFx0XHRcdGlubmVyLmFkZENsYXNzKCAnZmFuY3lib3gtdG1wJyApO1xuXG5cdFx0XHRcdC8vIFNldCB3aWR0aCBvciBoZWlnaHQgaW4gY2FzZSB3ZSBuZWVkIHRvIGNhbGN1bGF0ZSBvbmx5IG9uZSBkaW1lbnNpb25cblx0XHRcdFx0aWYgKCFjdXJyZW50LmF1dG9XaWR0aCkge1xuXHRcdFx0XHRcdGlubmVyLndpZHRoKCBvcmlnV2lkdGggKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICghY3VycmVudC5hdXRvSGVpZ2h0KSB7XG5cdFx0XHRcdFx0aW5uZXIuaGVpZ2h0KCBvcmlnSGVpZ2h0ICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoY3VycmVudC5hdXRvV2lkdGgpIHtcblx0XHRcdFx0XHRvcmlnV2lkdGggPSBpbm5lci53aWR0aCgpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGN1cnJlbnQuYXV0b0hlaWdodCkge1xuXHRcdFx0XHRcdG9yaWdIZWlnaHQgPSBpbm5lci5oZWlnaHQoKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlubmVyLnJlbW92ZUNsYXNzKCAnZmFuY3lib3gtdG1wJyApO1xuXHRcdFx0fVxuXG5cdFx0XHR3aWR0aCAgPSBnZXRTY2FsYXIoIG9yaWdXaWR0aCApO1xuXHRcdFx0aGVpZ2h0ID0gZ2V0U2NhbGFyKCBvcmlnSGVpZ2h0ICk7XG5cblx0XHRcdHJhdGlvICA9IG9yaWdXaWR0aCAvIG9yaWdIZWlnaHQ7XG5cblx0XHRcdC8vIENhbGN1bGF0aW9ucyBmb3IgdGhlIGNvbnRlbnRcblx0XHRcdG1pbldpZHRoICA9IGdldFNjYWxhcihpc1BlcmNlbnRhZ2UobWluV2lkdGgpID8gZ2V0U2NhbGFyKG1pbldpZHRoLCAndycpIC0gd1NwYWNlIDogbWluV2lkdGgpO1xuXHRcdFx0bWF4V2lkdGggID0gZ2V0U2NhbGFyKGlzUGVyY2VudGFnZShtYXhXaWR0aCkgPyBnZXRTY2FsYXIobWF4V2lkdGgsICd3JykgLSB3U3BhY2UgOiBtYXhXaWR0aCk7XG5cblx0XHRcdG1pbkhlaWdodCA9IGdldFNjYWxhcihpc1BlcmNlbnRhZ2UobWluSGVpZ2h0KSA/IGdldFNjYWxhcihtaW5IZWlnaHQsICdoJykgLSBoU3BhY2UgOiBtaW5IZWlnaHQpO1xuXHRcdFx0bWF4SGVpZ2h0ID0gZ2V0U2NhbGFyKGlzUGVyY2VudGFnZShtYXhIZWlnaHQpID8gZ2V0U2NhbGFyKG1heEhlaWdodCwgJ2gnKSAtIGhTcGFjZSA6IG1heEhlaWdodCk7XG5cblx0XHRcdC8vIFRoZXNlIHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgaWYgd3JhcCBjYW4gZml0IGluIHRoZSB2aWV3cG9ydFxuXHRcdFx0b3JpZ01heFdpZHRoICA9IG1heFdpZHRoO1xuXHRcdFx0b3JpZ01heEhlaWdodCA9IG1heEhlaWdodDtcblxuXHRcdFx0aWYgKGN1cnJlbnQuZml0VG9WaWV3KSB7XG5cdFx0XHRcdG1heFdpZHRoICA9IE1hdGgubWluKHZpZXdwb3J0LncgLSB3U3BhY2UsIG1heFdpZHRoKTtcblx0XHRcdFx0bWF4SGVpZ2h0ID0gTWF0aC5taW4odmlld3BvcnQuaCAtIGhTcGFjZSwgbWF4SGVpZ2h0KTtcblx0XHRcdH1cblxuXHRcdFx0bWF4V2lkdGhfICA9IHZpZXdwb3J0LncgLSB3TWFyZ2luO1xuXHRcdFx0bWF4SGVpZ2h0XyA9IHZpZXdwb3J0LmggLSBoTWFyZ2luO1xuXG5cdFx0XHRpZiAoY3VycmVudC5hc3BlY3RSYXRpbykge1xuXHRcdFx0XHRpZiAod2lkdGggPiBtYXhXaWR0aCkge1xuXHRcdFx0XHRcdHdpZHRoICA9IG1heFdpZHRoO1xuXHRcdFx0XHRcdGhlaWdodCA9IGdldFNjYWxhcih3aWR0aCAvIHJhdGlvKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChoZWlnaHQgPiBtYXhIZWlnaHQpIHtcblx0XHRcdFx0XHRoZWlnaHQgPSBtYXhIZWlnaHQ7XG5cdFx0XHRcdFx0d2lkdGggID0gZ2V0U2NhbGFyKGhlaWdodCAqIHJhdGlvKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICh3aWR0aCA8IG1pbldpZHRoKSB7XG5cdFx0XHRcdFx0d2lkdGggID0gbWluV2lkdGg7XG5cdFx0XHRcdFx0aGVpZ2h0ID0gZ2V0U2NhbGFyKHdpZHRoIC8gcmF0aW8pO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKGhlaWdodCA8IG1pbkhlaWdodCkge1xuXHRcdFx0XHRcdGhlaWdodCA9IG1pbkhlaWdodDtcblx0XHRcdFx0XHR3aWR0aCAgPSBnZXRTY2FsYXIoaGVpZ2h0ICogcmF0aW8pO1xuXHRcdFx0XHR9XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdpZHRoID0gTWF0aC5tYXgobWluV2lkdGgsIE1hdGgubWluKHdpZHRoLCBtYXhXaWR0aCkpO1xuXG5cdFx0XHRcdGlmIChjdXJyZW50LmF1dG9IZWlnaHQgJiYgY3VycmVudC50eXBlICE9PSAnaWZyYW1lJykge1xuXHRcdFx0XHRcdGlubmVyLndpZHRoKCB3aWR0aCApO1xuXG5cdFx0XHRcdFx0aGVpZ2h0ID0gaW5uZXIuaGVpZ2h0KCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRoZWlnaHQgPSBNYXRoLm1heChtaW5IZWlnaHQsIE1hdGgubWluKGhlaWdodCwgbWF4SGVpZ2h0KSk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRyeSB0byBmaXQgaW5zaWRlIHZpZXdwb3J0IChpbmNsdWRpbmcgdGhlIHRpdGxlKVxuXHRcdFx0aWYgKGN1cnJlbnQuZml0VG9WaWV3KSB7XG5cdFx0XHRcdGlubmVyLndpZHRoKCB3aWR0aCApLmhlaWdodCggaGVpZ2h0ICk7XG5cblx0XHRcdFx0d3JhcC53aWR0aCggd2lkdGggKyB3UGFkZGluZyApO1xuXG5cdFx0XHRcdC8vIFJlYWwgd3JhcCBkaW1lbnNpb25zXG5cdFx0XHRcdHdpZHRoXyAgPSB3cmFwLndpZHRoKCk7XG5cdFx0XHRcdGhlaWdodF8gPSB3cmFwLmhlaWdodCgpO1xuXG5cdFx0XHRcdGlmIChjdXJyZW50LmFzcGVjdFJhdGlvKSB7XG5cdFx0XHRcdFx0d2hpbGUgKCh3aWR0aF8gPiBtYXhXaWR0aF8gfHwgaGVpZ2h0XyA+IG1heEhlaWdodF8pICYmIHdpZHRoID4gbWluV2lkdGggJiYgaGVpZ2h0ID4gbWluSGVpZ2h0KSB7XG5cdFx0XHRcdFx0XHRpZiAoc3RlcHMrKyA+IDE5KSB7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRoZWlnaHQgPSBNYXRoLm1heChtaW5IZWlnaHQsIE1hdGgubWluKG1heEhlaWdodCwgaGVpZ2h0IC0gMTApKTtcblx0XHRcdFx0XHRcdHdpZHRoICA9IGdldFNjYWxhcihoZWlnaHQgKiByYXRpbyk7XG5cblx0XHRcdFx0XHRcdGlmICh3aWR0aCA8IG1pbldpZHRoKSB7XG5cdFx0XHRcdFx0XHRcdHdpZHRoICA9IG1pbldpZHRoO1xuXHRcdFx0XHRcdFx0XHRoZWlnaHQgPSBnZXRTY2FsYXIod2lkdGggLyByYXRpbyk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmICh3aWR0aCA+IG1heFdpZHRoKSB7XG5cdFx0XHRcdFx0XHRcdHdpZHRoICA9IG1heFdpZHRoO1xuXHRcdFx0XHRcdFx0XHRoZWlnaHQgPSBnZXRTY2FsYXIod2lkdGggLyByYXRpbyk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlubmVyLndpZHRoKCB3aWR0aCApLmhlaWdodCggaGVpZ2h0ICk7XG5cblx0XHRcdFx0XHRcdHdyYXAud2lkdGgoIHdpZHRoICsgd1BhZGRpbmcgKTtcblxuXHRcdFx0XHRcdFx0d2lkdGhfICA9IHdyYXAud2lkdGgoKTtcblx0XHRcdFx0XHRcdGhlaWdodF8gPSB3cmFwLmhlaWdodCgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHdpZHRoICA9IE1hdGgubWF4KG1pbldpZHRoLCAgTWF0aC5taW4od2lkdGgsICB3aWR0aCAgLSAod2lkdGhfICAtIG1heFdpZHRoXykpKTtcblx0XHRcdFx0XHRoZWlnaHQgPSBNYXRoLm1heChtaW5IZWlnaHQsIE1hdGgubWluKGhlaWdodCwgaGVpZ2h0IC0gKGhlaWdodF8gLSBtYXhIZWlnaHRfKSkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmIChzY3JvbGxPdXQgJiYgc2Nyb2xsaW5nID09PSAnYXV0bycgJiYgaGVpZ2h0IDwgb3JpZ0hlaWdodCAmJiAod2lkdGggKyB3UGFkZGluZyArIHNjcm9sbE91dCkgPCBtYXhXaWR0aF8pIHtcblx0XHRcdFx0d2lkdGggKz0gc2Nyb2xsT3V0O1xuXHRcdFx0fVxuXG5cdFx0XHRpbm5lci53aWR0aCggd2lkdGggKS5oZWlnaHQoIGhlaWdodCApO1xuXG5cdFx0XHR3cmFwLndpZHRoKCB3aWR0aCArIHdQYWRkaW5nICk7XG5cblx0XHRcdHdpZHRoXyAgPSB3cmFwLndpZHRoKCk7XG5cdFx0XHRoZWlnaHRfID0gd3JhcC5oZWlnaHQoKTtcblxuXHRcdFx0Y2FuU2hyaW5rID0gKHdpZHRoXyA+IG1heFdpZHRoXyB8fCBoZWlnaHRfID4gbWF4SGVpZ2h0XykgJiYgd2lkdGggPiBtaW5XaWR0aCAmJiBoZWlnaHQgPiBtaW5IZWlnaHQ7XG5cdFx0XHRjYW5FeHBhbmQgPSBjdXJyZW50LmFzcGVjdFJhdGlvID8gKHdpZHRoIDwgb3JpZ01heFdpZHRoICYmIGhlaWdodCA8IG9yaWdNYXhIZWlnaHQgJiYgd2lkdGggPCBvcmlnV2lkdGggJiYgaGVpZ2h0IDwgb3JpZ0hlaWdodCkgOiAoKHdpZHRoIDwgb3JpZ01heFdpZHRoIHx8IGhlaWdodCA8IG9yaWdNYXhIZWlnaHQpICYmICh3aWR0aCA8IG9yaWdXaWR0aCB8fCBoZWlnaHQgPCBvcmlnSGVpZ2h0KSk7XG5cblx0XHRcdCQuZXh0ZW5kKGN1cnJlbnQsIHtcblx0XHRcdFx0ZGltIDoge1xuXHRcdFx0XHRcdHdpZHRoXHQ6IGdldFZhbHVlKCB3aWR0aF8gKSxcblx0XHRcdFx0XHRoZWlnaHRcdDogZ2V0VmFsdWUoIGhlaWdodF8gKVxuXHRcdFx0XHR9LFxuXHRcdFx0XHRvcmlnV2lkdGggIDogb3JpZ1dpZHRoLFxuXHRcdFx0XHRvcmlnSGVpZ2h0IDogb3JpZ0hlaWdodCxcblx0XHRcdFx0Y2FuU2hyaW5rICA6IGNhblNocmluayxcblx0XHRcdFx0Y2FuRXhwYW5kICA6IGNhbkV4cGFuZCxcblx0XHRcdFx0d1BhZGRpbmcgICA6IHdQYWRkaW5nLFxuXHRcdFx0XHRoUGFkZGluZyAgIDogaFBhZGRpbmcsXG5cdFx0XHRcdHdyYXBTcGFjZSAgOiBoZWlnaHRfIC0gc2tpbi5vdXRlckhlaWdodCh0cnVlKSxcblx0XHRcdFx0c2tpblNwYWNlICA6IHNraW4uaGVpZ2h0KCkgLSBoZWlnaHRcblx0XHRcdH0pO1xuXG5cdFx0XHRpZiAoIWlmcmFtZSAmJiBjdXJyZW50LmF1dG9IZWlnaHQgJiYgaGVpZ2h0ID4gbWluSGVpZ2h0ICYmIGhlaWdodCA8IG1heEhlaWdodCAmJiAhY2FuRXhwYW5kKSB7XG5cdFx0XHRcdGlubmVyLmhlaWdodCgnYXV0bycpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRfZ2V0UG9zaXRpb246IGZ1bmN0aW9uIChvbmx5QWJzb2x1dGUpIHtcblx0XHRcdHZhciBjdXJyZW50ICA9IEYuY3VycmVudCxcblx0XHRcdFx0dmlld3BvcnQgPSBGLmdldFZpZXdwb3J0KCksXG5cdFx0XHRcdG1hcmdpbiAgID0gY3VycmVudC5tYXJnaW4sXG5cdFx0XHRcdHdpZHRoICAgID0gRi53cmFwLndpZHRoKCkgICsgbWFyZ2luWzFdICsgbWFyZ2luWzNdLFxuXHRcdFx0XHRoZWlnaHQgICA9IEYud3JhcC5oZWlnaHQoKSArIG1hcmdpblswXSArIG1hcmdpblsyXSxcblx0XHRcdFx0cmV6ICAgICAgPSB7XG5cdFx0XHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRcdFx0dG9wICA6IG1hcmdpblswXSxcblx0XHRcdFx0XHRsZWZ0IDogbWFyZ2luWzNdXG5cdFx0XHRcdH07XG5cblx0XHRcdGlmIChjdXJyZW50LmF1dG9DZW50ZXIgJiYgY3VycmVudC5maXhlZCAmJiAhb25seUFic29sdXRlICYmIGhlaWdodCA8PSB2aWV3cG9ydC5oICYmIHdpZHRoIDw9IHZpZXdwb3J0LncpIHtcblx0XHRcdFx0cmV6LnBvc2l0aW9uID0gJ2ZpeGVkJztcblxuXHRcdFx0fSBlbHNlIGlmICghY3VycmVudC5sb2NrZWQpIHtcblx0XHRcdFx0cmV6LnRvcCAgKz0gdmlld3BvcnQueTtcblx0XHRcdFx0cmV6LmxlZnQgKz0gdmlld3BvcnQueDtcblx0XHRcdH1cblxuXHRcdFx0cmV6LnRvcCAgPSBnZXRWYWx1ZShNYXRoLm1heChyZXoudG9wLCAgcmV6LnRvcCAgKyAoKHZpZXdwb3J0LmggLSBoZWlnaHQpICogY3VycmVudC50b3BSYXRpbykpKTtcblx0XHRcdHJlei5sZWZ0ID0gZ2V0VmFsdWUoTWF0aC5tYXgocmV6LmxlZnQsIHJlei5sZWZ0ICsgKCh2aWV3cG9ydC53IC0gd2lkdGgpICAqIGN1cnJlbnQubGVmdFJhdGlvKSkpO1xuXG5cdFx0XHRyZXR1cm4gcmV6O1xuXHRcdH0sXG5cblx0XHRfYWZ0ZXJab29tSW46IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBjdXJyZW50ID0gRi5jdXJyZW50O1xuXG5cdFx0XHRpZiAoIWN1cnJlbnQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRGLmlzT3BlbiA9IEYuaXNPcGVuZWQgPSB0cnVlO1xuXG5cdFx0XHRGLndyYXAuY3NzKCdvdmVyZmxvdycsICd2aXNpYmxlJykuYWRkQ2xhc3MoJ2ZhbmN5Ym94LW9wZW5lZCcpO1xuXG5cdFx0XHRGLnVwZGF0ZSgpO1xuXG5cdFx0XHQvLyBBc3NpZ24gYSBjbGljayBldmVudFxuXHRcdFx0aWYgKCBjdXJyZW50LmNsb3NlQ2xpY2sgfHwgKGN1cnJlbnQubmV4dENsaWNrICYmIEYuZ3JvdXAubGVuZ3RoID4gMSkgKSB7XG5cdFx0XHRcdEYuaW5uZXIuY3NzKCdjdXJzb3InLCAncG9pbnRlcicpLmJpbmQoJ2NsaWNrLmZiJywgZnVuY3Rpb24oZSkge1xuXHRcdFx0XHRcdGlmICghJChlLnRhcmdldCkuaXMoJ2EnKSAmJiAhJChlLnRhcmdldCkucGFyZW50KCkuaXMoJ2EnKSkge1xuXHRcdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0XHRcdFx0XHRGWyBjdXJyZW50LmNsb3NlQ2xpY2sgPyAnY2xvc2UnIDogJ25leHQnIF0oKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDcmVhdGUgYSBjbG9zZSBidXR0b25cblx0XHRcdGlmIChjdXJyZW50LmNsb3NlQnRuKSB7XG5cdFx0XHRcdCQoY3VycmVudC50cGwuY2xvc2VCdG4pLmFwcGVuZFRvKEYuc2tpbikuYmluZCgnY2xpY2suZmInLCBmdW5jdGlvbihlKSB7XG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0XHRcdFx0Ri5jbG9zZSgpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ3JlYXRlIG5hdmlnYXRpb24gYXJyb3dzXG5cdFx0XHRpZiAoY3VycmVudC5hcnJvd3MgJiYgRi5ncm91cC5sZW5ndGggPiAxKSB7XG5cdFx0XHRcdGlmIChjdXJyZW50Lmxvb3AgfHwgY3VycmVudC5pbmRleCA+IDApIHtcblx0XHRcdFx0XHQkKGN1cnJlbnQudHBsLnByZXYpLmFwcGVuZFRvKEYub3V0ZXIpLmJpbmQoJ2NsaWNrLmZiJywgRi5wcmV2KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChjdXJyZW50Lmxvb3AgfHwgY3VycmVudC5pbmRleCA8IEYuZ3JvdXAubGVuZ3RoIC0gMSkge1xuXHRcdFx0XHRcdCQoY3VycmVudC50cGwubmV4dCkuYXBwZW5kVG8oRi5vdXRlcikuYmluZCgnY2xpY2suZmInLCBGLm5leHQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdEYudHJpZ2dlcignYWZ0ZXJTaG93Jyk7XG5cblx0XHRcdC8vIFN0b3AgdGhlIHNsaWRlc2hvdyBpZiB0aGlzIGlzIHRoZSBsYXN0IGl0ZW1cblx0XHRcdGlmICghY3VycmVudC5sb29wICYmIGN1cnJlbnQuaW5kZXggPT09IGN1cnJlbnQuZ3JvdXAubGVuZ3RoIC0gMSkge1xuXHRcdFx0XHRGLnBsYXkoIGZhbHNlICk7XG5cblx0XHRcdH0gZWxzZSBpZiAoRi5vcHRzLmF1dG9QbGF5ICYmICFGLnBsYXllci5pc0FjdGl2ZSkge1xuXHRcdFx0XHRGLm9wdHMuYXV0b1BsYXkgPSBmYWxzZTtcblxuXHRcdFx0XHRGLnBsYXkoKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0X2FmdGVyWm9vbU91dDogZnVuY3Rpb24gKCBvYmogKSB7XG5cdFx0XHRvYmogPSBvYmogfHwgRi5jdXJyZW50O1xuXG5cdFx0XHQkKCcuZmFuY3lib3gtd3JhcCcpLnRyaWdnZXIoJ29uUmVzZXQnKS5yZW1vdmUoKTtcblxuXHRcdFx0JC5leHRlbmQoRiwge1xuXHRcdFx0XHRncm91cCAgOiB7fSxcblx0XHRcdFx0b3B0cyAgIDoge30sXG5cdFx0XHRcdHJvdXRlciA6IGZhbHNlLFxuXHRcdFx0XHRjdXJyZW50ICAgOiBudWxsLFxuXHRcdFx0XHRpc0FjdGl2ZSAgOiBmYWxzZSxcblx0XHRcdFx0aXNPcGVuZWQgIDogZmFsc2UsXG5cdFx0XHRcdGlzT3BlbiAgICA6IGZhbHNlLFxuXHRcdFx0XHRpc0Nsb3NpbmcgOiBmYWxzZSxcblx0XHRcdFx0d3JhcCAgIDogbnVsbCxcblx0XHRcdFx0c2tpbiAgIDogbnVsbCxcblx0XHRcdFx0b3V0ZXIgIDogbnVsbCxcblx0XHRcdFx0aW5uZXIgIDogbnVsbFxuXHRcdFx0fSk7XG5cblx0XHRcdEYudHJpZ2dlcignYWZ0ZXJDbG9zZScsIG9iaik7XG5cdFx0fVxuXHR9KTtcblxuXHQvKlxuXHQgKlx0RGVmYXVsdCB0cmFuc2l0aW9uc1xuXHQgKi9cblxuXHRGLnRyYW5zaXRpb25zID0ge1xuXHRcdGdldE9yaWdQb3NpdGlvbjogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGN1cnJlbnQgID0gRi5jdXJyZW50LFxuXHRcdFx0XHRlbGVtZW50ICA9IGN1cnJlbnQuZWxlbWVudCxcblx0XHRcdFx0b3JpZyAgICAgPSBjdXJyZW50Lm9yaWcsXG5cdFx0XHRcdHBvcyAgICAgID0ge30sXG5cdFx0XHRcdHdpZHRoICAgID0gNTAsXG5cdFx0XHRcdGhlaWdodCAgID0gNTAsXG5cdFx0XHRcdGhQYWRkaW5nID0gY3VycmVudC5oUGFkZGluZyxcblx0XHRcdFx0d1BhZGRpbmcgPSBjdXJyZW50LndQYWRkaW5nLFxuXHRcdFx0XHR2aWV3cG9ydCA9IEYuZ2V0Vmlld3BvcnQoKTtcblxuXHRcdFx0aWYgKCFvcmlnICYmIGN1cnJlbnQuaXNEb20gJiYgZWxlbWVudC5pcygnOnZpc2libGUnKSkge1xuXHRcdFx0XHRvcmlnID0gZWxlbWVudC5maW5kKCdpbWc6Zmlyc3QnKTtcblxuXHRcdFx0XHRpZiAoIW9yaWcubGVuZ3RoKSB7XG5cdFx0XHRcdFx0b3JpZyA9IGVsZW1lbnQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKGlzUXVlcnkob3JpZykpIHtcblx0XHRcdFx0cG9zID0gb3JpZy5vZmZzZXQoKTtcblxuXHRcdFx0XHRpZiAob3JpZy5pcygnaW1nJykpIHtcblx0XHRcdFx0XHR3aWR0aCAgPSBvcmlnLm91dGVyV2lkdGgoKTtcblx0XHRcdFx0XHRoZWlnaHQgPSBvcmlnLm91dGVySGVpZ2h0KCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cG9zLnRvcCAgPSB2aWV3cG9ydC55ICsgKHZpZXdwb3J0LmggLSBoZWlnaHQpICogY3VycmVudC50b3BSYXRpbztcblx0XHRcdFx0cG9zLmxlZnQgPSB2aWV3cG9ydC54ICsgKHZpZXdwb3J0LncgLSB3aWR0aCkgICogY3VycmVudC5sZWZ0UmF0aW87XG5cdFx0XHR9XG5cblx0XHRcdGlmIChGLndyYXAuY3NzKCdwb3NpdGlvbicpID09PSAnZml4ZWQnIHx8IGN1cnJlbnQubG9ja2VkKSB7XG5cdFx0XHRcdHBvcy50b3AgIC09IHZpZXdwb3J0Lnk7XG5cdFx0XHRcdHBvcy5sZWZ0IC09IHZpZXdwb3J0Lng7XG5cdFx0XHR9XG5cblx0XHRcdHBvcyA9IHtcblx0XHRcdFx0dG9wICAgICA6IGdldFZhbHVlKHBvcy50b3AgIC0gaFBhZGRpbmcgKiBjdXJyZW50LnRvcFJhdGlvKSxcblx0XHRcdFx0bGVmdCAgICA6IGdldFZhbHVlKHBvcy5sZWZ0IC0gd1BhZGRpbmcgKiBjdXJyZW50LmxlZnRSYXRpbyksXG5cdFx0XHRcdHdpZHRoICAgOiBnZXRWYWx1ZSh3aWR0aCAgKyB3UGFkZGluZyksXG5cdFx0XHRcdGhlaWdodCAgOiBnZXRWYWx1ZShoZWlnaHQgKyBoUGFkZGluZylcblx0XHRcdH07XG5cblx0XHRcdHJldHVybiBwb3M7XG5cdFx0fSxcblxuXHRcdHN0ZXA6IGZ1bmN0aW9uIChub3csIGZ4KSB7XG5cdFx0XHR2YXIgcmF0aW8sXG5cdFx0XHRcdHBhZGRpbmcsXG5cdFx0XHRcdHZhbHVlLFxuXHRcdFx0XHRwcm9wICAgICAgID0gZngucHJvcCxcblx0XHRcdFx0Y3VycmVudCAgICA9IEYuY3VycmVudCxcblx0XHRcdFx0d3JhcFNwYWNlICA9IGN1cnJlbnQud3JhcFNwYWNlLFxuXHRcdFx0XHRza2luU3BhY2UgID0gY3VycmVudC5za2luU3BhY2U7XG5cblx0XHRcdGlmIChwcm9wID09PSAnd2lkdGgnIHx8IHByb3AgPT09ICdoZWlnaHQnKSB7XG5cdFx0XHRcdHJhdGlvID0gZnguZW5kID09PSBmeC5zdGFydCA/IDEgOiAobm93IC0gZnguc3RhcnQpIC8gKGZ4LmVuZCAtIGZ4LnN0YXJ0KTtcblxuXHRcdFx0XHRpZiAoRi5pc0Nsb3NpbmcpIHtcblx0XHRcdFx0XHRyYXRpbyA9IDEgLSByYXRpbztcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHBhZGRpbmcgPSBwcm9wID09PSAnd2lkdGgnID8gY3VycmVudC53UGFkZGluZyA6IGN1cnJlbnQuaFBhZGRpbmc7XG5cdFx0XHRcdHZhbHVlICAgPSBub3cgLSBwYWRkaW5nO1xuXG5cdFx0XHRcdEYuc2tpblsgcHJvcCBdKCAgZ2V0U2NhbGFyKCBwcm9wID09PSAnd2lkdGgnID8gIHZhbHVlIDogdmFsdWUgLSAod3JhcFNwYWNlICogcmF0aW8pICkgKTtcblx0XHRcdFx0Ri5pbm5lclsgcHJvcCBdKCBnZXRTY2FsYXIoIHByb3AgPT09ICd3aWR0aCcgPyAgdmFsdWUgOiB2YWx1ZSAtICh3cmFwU3BhY2UgKiByYXRpbykgLSAoc2tpblNwYWNlICogcmF0aW8pICkgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0em9vbUluOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgY3VycmVudCAgPSBGLmN1cnJlbnQsXG5cdFx0XHRcdHN0YXJ0UG9zID0gY3VycmVudC5wb3MsXG5cdFx0XHRcdGVmZmVjdCAgID0gY3VycmVudC5vcGVuRWZmZWN0LFxuXHRcdFx0XHRlbGFzdGljICA9IGVmZmVjdCA9PT0gJ2VsYXN0aWMnLFxuXHRcdFx0XHRlbmRQb3MgICA9ICQuZXh0ZW5kKHtvcGFjaXR5IDogMX0sIHN0YXJ0UG9zKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIFwicG9zaXRpb25cIiBwcm9wZXJ0eSB0aGF0IGJyZWFrcyBvbGRlciBJRVxuXHRcdFx0ZGVsZXRlIGVuZFBvcy5wb3NpdGlvbjtcblxuXHRcdFx0aWYgKGVsYXN0aWMpIHtcblx0XHRcdFx0c3RhcnRQb3MgPSB0aGlzLmdldE9yaWdQb3NpdGlvbigpO1xuXG5cdFx0XHRcdGlmIChjdXJyZW50Lm9wZW5PcGFjaXR5KSB7XG5cdFx0XHRcdFx0c3RhcnRQb3Mub3BhY2l0eSA9IDAuMTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9IGVsc2UgaWYgKGVmZmVjdCA9PT0gJ2ZhZGUnKSB7XG5cdFx0XHRcdHN0YXJ0UG9zLm9wYWNpdHkgPSAwLjE7XG5cdFx0XHR9XG5cblx0XHRcdEYud3JhcC5jc3Moc3RhcnRQb3MpLmFuaW1hdGUoZW5kUG9zLCB7XG5cdFx0XHRcdGR1cmF0aW9uIDogZWZmZWN0ID09PSAnbm9uZScgPyAwIDogY3VycmVudC5vcGVuU3BlZWQsXG5cdFx0XHRcdGVhc2luZyAgIDogY3VycmVudC5vcGVuRWFzaW5nLFxuXHRcdFx0XHRzdGVwICAgICA6IGVsYXN0aWMgPyB0aGlzLnN0ZXAgOiBudWxsLFxuXHRcdFx0XHRjb21wbGV0ZSA6IEYuX2FmdGVyWm9vbUluXG5cdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0em9vbU91dDogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGN1cnJlbnQgID0gRi5jdXJyZW50LFxuXHRcdFx0XHRlZmZlY3QgICA9IGN1cnJlbnQuY2xvc2VFZmZlY3QsXG5cdFx0XHRcdGVsYXN0aWMgID0gZWZmZWN0ID09PSAnZWxhc3RpYycsXG5cdFx0XHRcdGVuZFBvcyAgID0ge29wYWNpdHkgOiAwLjF9O1xuXG5cdFx0XHRpZiAoZWxhc3RpYykge1xuXHRcdFx0XHRlbmRQb3MgPSB0aGlzLmdldE9yaWdQb3NpdGlvbigpO1xuXG5cdFx0XHRcdGlmIChjdXJyZW50LmNsb3NlT3BhY2l0eSkge1xuXHRcdFx0XHRcdGVuZFBvcy5vcGFjaXR5ID0gMC4xO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdEYud3JhcC5hbmltYXRlKGVuZFBvcywge1xuXHRcdFx0XHRkdXJhdGlvbiA6IGVmZmVjdCA9PT0gJ25vbmUnID8gMCA6IGN1cnJlbnQuY2xvc2VTcGVlZCxcblx0XHRcdFx0ZWFzaW5nICAgOiBjdXJyZW50LmNsb3NlRWFzaW5nLFxuXHRcdFx0XHRzdGVwICAgICA6IGVsYXN0aWMgPyB0aGlzLnN0ZXAgOiBudWxsLFxuXHRcdFx0XHRjb21wbGV0ZSA6IEYuX2FmdGVyWm9vbU91dFxuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdGNoYW5nZUluOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgY3VycmVudCAgID0gRi5jdXJyZW50LFxuXHRcdFx0XHRlZmZlY3QgICAgPSBjdXJyZW50Lm5leHRFZmZlY3QsXG5cdFx0XHRcdHN0YXJ0UG9zICA9IGN1cnJlbnQucG9zLFxuXHRcdFx0XHRlbmRQb3MgICAgPSB7IG9wYWNpdHkgOiAxIH0sXG5cdFx0XHRcdGRpcmVjdGlvbiA9IEYuZGlyZWN0aW9uLFxuXHRcdFx0XHRkaXN0YW5jZSAgPSAyMDAsXG5cdFx0XHRcdGZpZWxkO1xuXG5cdFx0XHRzdGFydFBvcy5vcGFjaXR5ID0gMC4xO1xuXG5cdFx0XHRpZiAoZWZmZWN0ID09PSAnZWxhc3RpYycpIHtcblx0XHRcdFx0ZmllbGQgPSBkaXJlY3Rpb24gPT09ICdkb3duJyB8fCBkaXJlY3Rpb24gPT09ICd1cCcgPyAndG9wJyA6ICdsZWZ0JztcblxuXHRcdFx0XHRpZiAoZGlyZWN0aW9uID09PSAnZG93bicgfHwgZGlyZWN0aW9uID09PSAncmlnaHQnKSB7XG5cdFx0XHRcdFx0c3RhcnRQb3NbIGZpZWxkIF0gPSBnZXRWYWx1ZShnZXRTY2FsYXIoc3RhcnRQb3NbIGZpZWxkIF0pIC0gZGlzdGFuY2UpO1xuXHRcdFx0XHRcdGVuZFBvc1sgZmllbGQgXSAgID0gJys9JyArIGRpc3RhbmNlICsgJ3B4JztcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHN0YXJ0UG9zWyBmaWVsZCBdID0gZ2V0VmFsdWUoZ2V0U2NhbGFyKHN0YXJ0UG9zWyBmaWVsZCBdKSArIGRpc3RhbmNlKTtcblx0XHRcdFx0XHRlbmRQb3NbIGZpZWxkIF0gICA9ICctPScgKyBkaXN0YW5jZSArICdweCc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gV29ya2Fyb3VuZCBmb3IgaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIyNzNcblx0XHRcdGlmIChlZmZlY3QgPT09ICdub25lJykge1xuXHRcdFx0XHRGLl9hZnRlclpvb21JbigpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRGLndyYXAuY3NzKHN0YXJ0UG9zKS5hbmltYXRlKGVuZFBvcywge1xuXHRcdFx0XHRcdGR1cmF0aW9uIDogY3VycmVudC5uZXh0U3BlZWQsXG5cdFx0XHRcdFx0ZWFzaW5nICAgOiBjdXJyZW50Lm5leHRFYXNpbmcsXG5cdFx0XHRcdFx0Y29tcGxldGUgOiBGLl9hZnRlclpvb21JblxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Y2hhbmdlT3V0OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgcHJldmlvdXMgID0gRi5wcmV2aW91cyxcblx0XHRcdFx0ZWZmZWN0ICAgID0gcHJldmlvdXMucHJldkVmZmVjdCxcblx0XHRcdFx0ZW5kUG9zICAgID0geyBvcGFjaXR5IDogMC4xIH0sXG5cdFx0XHRcdGRpcmVjdGlvbiA9IEYuZGlyZWN0aW9uLFxuXHRcdFx0XHRkaXN0YW5jZSAgPSAyMDA7XG5cblx0XHRcdGlmIChlZmZlY3QgPT09ICdlbGFzdGljJykge1xuXHRcdFx0XHRlbmRQb3NbIGRpcmVjdGlvbiA9PT0gJ2Rvd24nIHx8IGRpcmVjdGlvbiA9PT0gJ3VwJyA/ICd0b3AnIDogJ2xlZnQnIF0gPSAoIGRpcmVjdGlvbiA9PT0gJ3VwJyB8fCBkaXJlY3Rpb24gPT09ICdsZWZ0JyA/ICctJyA6ICcrJyApICsgJz0nICsgZGlzdGFuY2UgKyAncHgnO1xuXHRcdFx0fVxuXG5cdFx0XHRwcmV2aW91cy53cmFwLmFuaW1hdGUoZW5kUG9zLCB7XG5cdFx0XHRcdGR1cmF0aW9uIDogZWZmZWN0ID09PSAnbm9uZScgPyAwIDogcHJldmlvdXMucHJldlNwZWVkLFxuXHRcdFx0XHRlYXNpbmcgICA6IHByZXZpb3VzLnByZXZFYXNpbmcsXG5cdFx0XHRcdGNvbXBsZXRlIDogZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdCQodGhpcykudHJpZ2dlcignb25SZXNldCcpLnJlbW92ZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9XG5cdH07XG5cblx0Lypcblx0ICpcdE92ZXJsYXkgaGVscGVyXG5cdCAqL1xuXG5cdEYuaGVscGVycy5vdmVybGF5ID0ge1xuXHRcdGRlZmF1bHRzIDoge1xuXHRcdFx0Y2xvc2VDbGljayA6IHRydWUsICAgICAgLy8gaWYgdHJ1ZSwgZmFuY3lCb3ggd2lsbCBiZSBjbG9zZWQgd2hlbiB1c2VyIGNsaWNrcyBvbiB0aGUgb3ZlcmxheVxuXHRcdFx0c3BlZWRPdXQgICA6IDIwMCwgICAgICAgLy8gZHVyYXRpb24gb2YgZmFkZU91dCBhbmltYXRpb25cblx0XHRcdHNob3dFYXJseSAgOiB0cnVlLCAgICAgIC8vIGluZGljYXRlcyBpZiBzaG91bGQgYmUgb3BlbmVkIGltbWVkaWF0ZWx5IG9yIHdhaXQgdW50aWwgdGhlIGNvbnRlbnQgaXMgcmVhZHlcblx0XHRcdGNzcyAgICAgICAgOiB7fSwgICAgICAgIC8vIGN1c3RvbSBDU1MgcHJvcGVydGllc1xuXHRcdFx0bG9ja2VkICAgICA6ICFpc1RvdWNoLCAgLy8gaWYgdHJ1ZSwgdGhlIGNvbnRlbnQgd2lsbCBiZSBsb2NrZWQgaW50byBvdmVybGF5XG5cdFx0XHRmaXhlZCAgICAgIDogdHJ1ZSAgICAgICAvLyBpZiBmYWxzZSwgdGhlIG92ZXJsYXkgQ1NTIHBvc2l0aW9uIHByb3BlcnR5IHdpbGwgbm90IGJlIHNldCB0byBcImZpeGVkXCJcblx0XHR9LFxuXG5cdFx0b3ZlcmxheSA6IG51bGwsICAgICAgLy8gY3VycmVudCBoYW5kbGVcblx0XHRmaXhlZCAgIDogZmFsc2UsICAgICAvLyBpbmRpY2F0ZXMgaWYgdGhlIG92ZXJsYXkgaGFzIHBvc2l0aW9uIFwiZml4ZWRcIlxuXHRcdGVsICAgICAgOiAkKCdodG1sJyksIC8vIGVsZW1lbnQgdGhhdCBjb250YWlucyBcInRoZSBsb2NrXCJcblxuXHRcdC8vIFB1YmxpYyBtZXRob2RzXG5cdFx0Y3JlYXRlIDogZnVuY3Rpb24ob3B0cykge1xuXHRcdFx0b3B0cyA9ICQuZXh0ZW5kKHt9LCB0aGlzLmRlZmF1bHRzLCBvcHRzKTtcblxuXHRcdFx0aWYgKHRoaXMub3ZlcmxheSkge1xuXHRcdFx0XHR0aGlzLmNsb3NlKCk7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMub3ZlcmxheSA9ICQoJzxkaXYgY2xhc3M9XCJmYW5jeWJveC1vdmVybGF5XCI+PC9kaXY+JykuYXBwZW5kVG8oIEYuY29taW5nID8gRi5jb21pbmcucGFyZW50IDogb3B0cy5wYXJlbnQgKTtcblx0XHRcdHRoaXMuZml4ZWQgICA9IGZhbHNlO1xuXG5cdFx0XHRpZiAob3B0cy5maXhlZCAmJiBGLmRlZmF1bHRzLmZpeGVkKSB7XG5cdFx0XHRcdHRoaXMub3ZlcmxheS5hZGRDbGFzcygnZmFuY3lib3gtb3ZlcmxheS1maXhlZCcpO1xuXG5cdFx0XHRcdHRoaXMuZml4ZWQgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRvcGVuIDogZnVuY3Rpb24ob3B0cykge1xuXHRcdFx0dmFyIHRoYXQgPSB0aGlzO1xuXG5cdFx0XHRvcHRzID0gJC5leHRlbmQoe30sIHRoaXMuZGVmYXVsdHMsIG9wdHMpO1xuXG5cdFx0XHRpZiAodGhpcy5vdmVybGF5KSB7XG5cdFx0XHRcdHRoaXMub3ZlcmxheS51bmJpbmQoJy5vdmVybGF5Jykud2lkdGgoJ2F1dG8nKS5oZWlnaHQoJ2F1dG8nKTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5jcmVhdGUob3B0cyk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICghdGhpcy5maXhlZCkge1xuXHRcdFx0XHRXLmJpbmQoJ3Jlc2l6ZS5vdmVybGF5JywgJC5wcm94eSggdGhpcy51cGRhdGUsIHRoaXMpICk7XG5cblx0XHRcdFx0dGhpcy51cGRhdGUoKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKG9wdHMuY2xvc2VDbGljaykge1xuXHRcdFx0XHR0aGlzLm92ZXJsYXkuYmluZCgnY2xpY2sub3ZlcmxheScsIGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0XHRpZiAoJChlLnRhcmdldCkuaGFzQ2xhc3MoJ2ZhbmN5Ym94LW92ZXJsYXknKSkge1xuXHRcdFx0XHRcdFx0aWYgKEYuaXNBY3RpdmUpIHtcblx0XHRcdFx0XHRcdFx0Ri5jbG9zZSgpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0dGhhdC5jbG9zZSgpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5vdmVybGF5LmNzcyggb3B0cy5jc3MgKS5zaG93KCk7XG5cdFx0fSxcblxuXHRcdGNsb3NlIDogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2Nyb2xsViwgc2Nyb2xsSDtcblxuXHRcdFx0Vy51bmJpbmQoJ3Jlc2l6ZS5vdmVybGF5Jyk7XG5cblx0XHRcdGlmICh0aGlzLmVsLmhhc0NsYXNzKCdmYW5jeWJveC1sb2NrJykpIHtcblx0XHRcdFx0JCgnLmZhbmN5Ym94LW1hcmdpbicpLnJlbW92ZUNsYXNzKCdmYW5jeWJveC1tYXJnaW4nKTtcblxuXHRcdFx0XHRzY3JvbGxWID0gVy5zY3JvbGxUb3AoKTtcblx0XHRcdFx0c2Nyb2xsSCA9IFcuc2Nyb2xsTGVmdCgpO1xuXG5cdFx0XHRcdHRoaXMuZWwucmVtb3ZlQ2xhc3MoJ2ZhbmN5Ym94LWxvY2snKTtcblxuXHRcdFx0XHRXLnNjcm9sbFRvcCggc2Nyb2xsViApLnNjcm9sbExlZnQoIHNjcm9sbEggKTtcblx0XHRcdH1cblxuXHRcdFx0JCgnLmZhbmN5Ym94LW92ZXJsYXknKS5yZW1vdmUoKS5oaWRlKCk7XG5cblx0XHRcdCQuZXh0ZW5kKHRoaXMsIHtcblx0XHRcdFx0b3ZlcmxheSA6IG51bGwsXG5cdFx0XHRcdGZpeGVkICAgOiBmYWxzZVxuXHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdC8vIFByaXZhdGUsIGNhbGxiYWNrc1xuXG5cdFx0dXBkYXRlIDogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIHdpZHRoID0gJzEwMCUnLCBvZmZzZXRXaWR0aDtcblxuXHRcdFx0Ly8gUmVzZXQgd2lkdGgvaGVpZ2h0IHNvIGl0IHdpbGwgbm90IG1lc3Ncblx0XHRcdHRoaXMub3ZlcmxheS53aWR0aCh3aWR0aCkuaGVpZ2h0KCcxMDAlJyk7XG5cblx0XHRcdC8vIGpRdWVyeSBkb2VzIG5vdCByZXR1cm4gcmVsaWFibGUgcmVzdWx0IGZvciBJRVxuXHRcdFx0aWYgKElFKSB7XG5cdFx0XHRcdG9mZnNldFdpZHRoID0gTWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm9mZnNldFdpZHRoLCBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoKTtcblxuXHRcdFx0XHRpZiAoRC53aWR0aCgpID4gb2Zmc2V0V2lkdGgpIHtcblx0XHRcdFx0XHR3aWR0aCA9IEQud2lkdGgoKTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9IGVsc2UgaWYgKEQud2lkdGgoKSA+IFcud2lkdGgoKSkge1xuXHRcdFx0XHR3aWR0aCA9IEQud2lkdGgoKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5vdmVybGF5LndpZHRoKHdpZHRoKS5oZWlnaHQoRC5oZWlnaHQoKSk7XG5cdFx0fSxcblxuXHRcdC8vIFRoaXMgaXMgd2hlcmUgd2UgY2FuIG1hbmlwdWxhdGUgRE9NLCBiZWNhdXNlIGxhdGVyIGl0IHdvdWxkIGNhdXNlIGlmcmFtZXMgdG8gcmVsb2FkXG5cdFx0b25SZWFkeSA6IGZ1bmN0aW9uIChvcHRzLCBvYmopIHtcblx0XHRcdHZhciBvdmVybGF5ID0gdGhpcy5vdmVybGF5O1xuXG5cdFx0XHQkKCcuZmFuY3lib3gtb3ZlcmxheScpLnN0b3AodHJ1ZSwgdHJ1ZSk7XG5cblx0XHRcdGlmICghb3ZlcmxheSkge1xuXHRcdFx0XHR0aGlzLmNyZWF0ZShvcHRzKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKG9wdHMubG9ja2VkICYmIHRoaXMuZml4ZWQgJiYgb2JqLmZpeGVkKSB7XG5cdFx0XHRcdGlmICghb3ZlcmxheSkge1xuXHRcdFx0XHRcdHRoaXMubWFyZ2luID0gRC5oZWlnaHQoKSA+IFcuaGVpZ2h0KCkgPyAkKCdodG1sJykuY3NzKCdtYXJnaW4tcmlnaHQnKS5yZXBsYWNlKFwicHhcIiwgXCJcIikgOiBmYWxzZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG9iai5sb2NrZWQgPSB0aGlzLm92ZXJsYXkuYXBwZW5kKCBvYmoud3JhcCApO1xuXHRcdFx0XHRvYmouZml4ZWQgID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChvcHRzLnNob3dFYXJseSA9PT0gdHJ1ZSkge1xuXHRcdFx0XHR0aGlzLmJlZm9yZVNob3cuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JlU2hvdyA6IGZ1bmN0aW9uKG9wdHMsIG9iaikge1xuXHRcdFx0dmFyIHNjcm9sbFYsIHNjcm9sbEg7XG5cblx0XHRcdGlmIChvYmoubG9ja2VkKSB7XG5cdFx0XHRcdGlmICh0aGlzLm1hcmdpbiAhPT0gZmFsc2UpIHtcblx0XHRcdFx0XHQkKCcqJykuZmlsdGVyKGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRyZXR1cm4gKCQodGhpcykuY3NzKCdwb3NpdGlvbicpID09PSAnZml4ZWQnICYmICEkKHRoaXMpLmhhc0NsYXNzKFwiZmFuY3lib3gtb3ZlcmxheVwiKSAmJiAhJCh0aGlzKS5oYXNDbGFzcyhcImZhbmN5Ym94LXdyYXBcIikgKTtcblx0XHRcdFx0XHR9KS5hZGRDbGFzcygnZmFuY3lib3gtbWFyZ2luJyk7XG5cblx0XHRcdFx0XHR0aGlzLmVsLmFkZENsYXNzKCdmYW5jeWJveC1tYXJnaW4nKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHNjcm9sbFYgPSBXLnNjcm9sbFRvcCgpO1xuXHRcdFx0XHRzY3JvbGxIID0gVy5zY3JvbGxMZWZ0KCk7XG5cblx0XHRcdFx0dGhpcy5lbC5hZGRDbGFzcygnZmFuY3lib3gtbG9jaycpO1xuXG5cdFx0XHRcdFcuc2Nyb2xsVG9wKCBzY3JvbGxWICkuc2Nyb2xsTGVmdCggc2Nyb2xsSCApO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLm9wZW4ob3B0cyk7XG5cdFx0fSxcblxuXHRcdG9uVXBkYXRlIDogZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoIXRoaXMuZml4ZWQpIHtcblx0XHRcdFx0dGhpcy51cGRhdGUoKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YWZ0ZXJDbG9zZTogZnVuY3Rpb24gKG9wdHMpIHtcblx0XHRcdC8vIFJlbW92ZSBvdmVybGF5IGlmIGV4aXN0cyBhbmQgZmFuY3lCb3ggaXMgbm90IG9wZW5pbmdcblx0XHRcdC8vIChlLmcuLCBpdCBpcyBub3QgYmVpbmcgb3BlbiB1c2luZyBhZnRlckNsb3NlIGNhbGxiYWNrKVxuXHRcdFx0Ly9pZiAodGhpcy5vdmVybGF5ICYmICFGLmlzQWN0aXZlKSB7XG5cdFx0XHRpZiAodGhpcy5vdmVybGF5ICYmICFGLmNvbWluZykge1xuXHRcdFx0XHR0aGlzLm92ZXJsYXkuZmFkZU91dChvcHRzLnNwZWVkT3V0LCAkLnByb3h5KCB0aGlzLmNsb3NlLCB0aGlzICkpO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblxuXHQvKlxuXHQgKlx0VGl0bGUgaGVscGVyXG5cdCAqL1xuXG5cdEYuaGVscGVycy50aXRsZSA9IHtcblx0XHRkZWZhdWx0cyA6IHtcblx0XHRcdHR5cGUgICAgIDogJ2Zsb2F0JywgLy8gJ2Zsb2F0JywgJ2luc2lkZScsICdvdXRzaWRlJyBvciAnb3ZlcicsXG5cdFx0XHRwb3NpdGlvbiA6ICdib3R0b20nIC8vICd0b3AnIG9yICdib3R0b20nXG5cdFx0fSxcblxuXHRcdGJlZm9yZVNob3c6IGZ1bmN0aW9uIChvcHRzKSB7XG5cdFx0XHR2YXIgY3VycmVudCA9IEYuY3VycmVudCxcblx0XHRcdFx0dGV4dCAgICA9IGN1cnJlbnQudGl0bGUsXG5cdFx0XHRcdHR5cGUgICAgPSBvcHRzLnR5cGUsXG5cdFx0XHRcdHRpdGxlLFxuXHRcdFx0XHR0YXJnZXQ7XG5cblx0XHRcdGlmICgkLmlzRnVuY3Rpb24odGV4dCkpIHtcblx0XHRcdFx0dGV4dCA9IHRleHQuY2FsbChjdXJyZW50LmVsZW1lbnQsIGN1cnJlbnQpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIWlzU3RyaW5nKHRleHQpIHx8ICQudHJpbSh0ZXh0KSA9PT0gJycpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR0aXRsZSA9ICQoJzxkaXYgY2xhc3M9XCJmYW5jeWJveC10aXRsZSBmYW5jeWJveC10aXRsZS0nICsgdHlwZSArICctd3JhcFwiPicgKyB0ZXh0ICsgJzwvZGl2PicpO1xuXG5cdFx0XHRzd2l0Y2ggKHR5cGUpIHtcblx0XHRcdFx0Y2FzZSAnaW5zaWRlJzpcblx0XHRcdFx0XHR0YXJnZXQgPSBGLnNraW47XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRcdGNhc2UgJ291dHNpZGUnOlxuXHRcdFx0XHRcdHRhcmdldCA9IEYud3JhcDtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0Y2FzZSAnb3Zlcic6XG5cdFx0XHRcdFx0dGFyZ2V0ID0gRi5pbm5lcjtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0ZGVmYXVsdDogLy8gJ2Zsb2F0J1xuXHRcdFx0XHRcdHRhcmdldCA9IEYuc2tpbjtcblxuXHRcdFx0XHRcdHRpdGxlLmFwcGVuZFRvKCdib2R5Jyk7XG5cblx0XHRcdFx0XHRpZiAoSUUpIHtcblx0XHRcdFx0XHRcdHRpdGxlLndpZHRoKCB0aXRsZS53aWR0aCgpICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dGl0bGUud3JhcElubmVyKCc8c3BhbiBjbGFzcz1cImNoaWxkXCI+PC9zcGFuPicpO1xuXG5cdFx0XHRcdFx0Ly9JbmNyZWFzZSBib3R0b20gbWFyZ2luIHNvIHRoaXMgdGl0bGUgd2lsbCBhbHNvIGZpdCBpbnRvIHZpZXdwb3J0XG5cdFx0XHRcdFx0Ri5jdXJyZW50Lm1hcmdpblsyXSArPSBNYXRoLmFicyggZ2V0U2NhbGFyKHRpdGxlLmNzcygnbWFyZ2luLWJvdHRvbScpKSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblxuXHRcdFx0dGl0bGVbIChvcHRzLnBvc2l0aW9uID09PSAndG9wJyA/ICdwcmVwZW5kVG8nICA6ICdhcHBlbmRUbycpIF0odGFyZ2V0KTtcblx0XHR9XG5cdH07XG5cblx0Ly8galF1ZXJ5IHBsdWdpbiBpbml0aWFsaXphdGlvblxuXHQkLmZuLmZhbmN5Ym94ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcblx0XHR2YXIgaW5kZXgsXG5cdFx0XHR0aGF0ICAgICA9ICQodGhpcyksXG5cdFx0XHRzZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IgfHwgJycsXG5cdFx0XHRydW4gICAgICA9IGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0dmFyIHdoYXQgPSAkKHRoaXMpLmJsdXIoKSwgaWR4ID0gaW5kZXgsIHJlbFR5cGUsIHJlbFZhbDtcblxuXHRcdFx0XHRpZiAoIShlLmN0cmxLZXkgfHwgZS5hbHRLZXkgfHwgZS5zaGlmdEtleSB8fCBlLm1ldGFLZXkpICYmICF3aGF0LmlzKCcuZmFuY3lib3gtd3JhcCcpKSB7XG5cdFx0XHRcdFx0cmVsVHlwZSA9IG9wdGlvbnMuZ3JvdXBBdHRyIHx8ICdkYXRhLWZhbmN5Ym94LWdyb3VwJztcblx0XHRcdFx0XHRyZWxWYWwgID0gd2hhdC5hdHRyKHJlbFR5cGUpO1xuXG5cdFx0XHRcdFx0aWYgKCFyZWxWYWwpIHtcblx0XHRcdFx0XHRcdHJlbFR5cGUgPSAncmVsJztcblx0XHRcdFx0XHRcdHJlbFZhbCAgPSB3aGF0LmdldCgwKVsgcmVsVHlwZSBdO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmIChyZWxWYWwgJiYgcmVsVmFsICE9PSAnJyAmJiByZWxWYWwgIT09ICdub2ZvbGxvdycpIHtcblx0XHRcdFx0XHRcdHdoYXQgPSBzZWxlY3Rvci5sZW5ndGggPyAkKHNlbGVjdG9yKSA6IHRoYXQ7XG5cdFx0XHRcdFx0XHR3aGF0ID0gd2hhdC5maWx0ZXIoJ1snICsgcmVsVHlwZSArICc9XCInICsgcmVsVmFsICsgJ1wiXScpO1xuXHRcdFx0XHRcdFx0aWR4ICA9IHdoYXQuaW5kZXgodGhpcyk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0b3B0aW9ucy5pbmRleCA9IGlkeDtcblxuXHRcdFx0XHRcdC8vIFN0b3AgYW4gZXZlbnQgZnJvbSBidWJibGluZyBpZiBldmVyeXRoaW5nIGlzIGZpbmVcblx0XHRcdFx0XHRpZiAoRi5vcGVuKHdoYXQsIG9wdGlvbnMpICE9PSBmYWxzZSkge1xuXHRcdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXHRcdGluZGV4ICAgPSBvcHRpb25zLmluZGV4IHx8IDA7XG5cblx0XHRpZiAoIXNlbGVjdG9yIHx8IG9wdGlvbnMubGl2ZSA9PT0gZmFsc2UpIHtcblx0XHRcdHRoYXQudW5iaW5kKCdjbGljay5mYi1zdGFydCcpLmJpbmQoJ2NsaWNrLmZiLXN0YXJ0JywgcnVuKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRELnVuZGVsZWdhdGUoc2VsZWN0b3IsICdjbGljay5mYi1zdGFydCcpLmRlbGVnYXRlKHNlbGVjdG9yICsgXCI6bm90KCcuZmFuY3lib3gtaXRlbSwgLmZhbmN5Ym94LW5hdicpXCIsICdjbGljay5mYi1zdGFydCcsIHJ1bik7XG5cdFx0fVxuXG5cdFx0dGhpcy5maWx0ZXIoJ1tkYXRhLWZhbmN5Ym94LXN0YXJ0PTFdJykudHJpZ2dlcignY2xpY2snKTtcblxuXHRcdHJldHVybiB0aGlzO1xuXHR9O1xuXG5cdC8vIFRlc3RzIHRoYXQgbmVlZCBhIGJvZHkgYXQgZG9jIHJlYWR5XG5cdEQucmVhZHkoZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHcxLCB3MjtcblxuXHRcdGlmICggJC5zY3JvbGxiYXJXaWR0aCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0Ly8gaHR0cDovL2JlbmFsbWFuLmNvbS9wcm9qZWN0cy9qcXVlcnktbWlzYy1wbHVnaW5zLyNzY3JvbGxiYXJ3aWR0aFxuXHRcdFx0JC5zY3JvbGxiYXJXaWR0aCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgcGFyZW50ID0gJCgnPGRpdiBzdHlsZT1cIndpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7b3ZlcmZsb3c6YXV0b1wiPjxkaXYvPjwvZGl2PicpLmFwcGVuZFRvKCdib2R5JyksXG5cdFx0XHRcdFx0Y2hpbGQgID0gcGFyZW50LmNoaWxkcmVuKCksXG5cdFx0XHRcdFx0d2lkdGggID0gY2hpbGQuaW5uZXJXaWR0aCgpIC0gY2hpbGQuaGVpZ2h0KCA5OSApLmlubmVyV2lkdGgoKTtcblxuXHRcdFx0XHRwYXJlbnQucmVtb3ZlKCk7XG5cblx0XHRcdFx0cmV0dXJuIHdpZHRoO1xuXHRcdFx0fTtcblx0XHR9XG5cblx0XHRpZiAoICQuc3VwcG9ydC5maXhlZFBvc2l0aW9uID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHQkLnN1cHBvcnQuZml4ZWRQb3NpdGlvbiA9IChmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gID0gJCgnPGRpdiBzdHlsZT1cInBvc2l0aW9uOmZpeGVkO3RvcDoyMHB4O1wiPjwvZGl2PicpLmFwcGVuZFRvKCdib2R5JyksXG5cdFx0XHRcdFx0Zml4ZWQgPSAoIGVsZW1bMF0ub2Zmc2V0VG9wID09PSAyMCB8fCBlbGVtWzBdLm9mZnNldFRvcCA9PT0gMTUgKTtcblxuXHRcdFx0XHRlbGVtLnJlbW92ZSgpO1xuXG5cdFx0XHRcdHJldHVybiBmaXhlZDtcblx0XHRcdH0oKSk7XG5cdFx0fVxuXG5cdFx0JC5leHRlbmQoRi5kZWZhdWx0cywge1xuXHRcdFx0c2Nyb2xsYmFyV2lkdGggOiAkLnNjcm9sbGJhcldpZHRoKCksXG5cdFx0XHRmaXhlZCAgOiAkLnN1cHBvcnQuZml4ZWRQb3NpdGlvbixcblx0XHRcdHBhcmVudCA6ICQoJ2JvZHknKVxuXHRcdH0pO1xuXG5cdFx0Ly9HZXQgcmVhbCB3aWR0aCBvZiBwYWdlIHNjcm9sbC1iYXJcblx0XHR3MSA9ICQod2luZG93KS53aWR0aCgpO1xuXG5cdFx0SC5hZGRDbGFzcygnZmFuY3lib3gtbG9jay10ZXN0Jyk7XG5cblx0XHR3MiA9ICQod2luZG93KS53aWR0aCgpO1xuXG5cdFx0SC5yZW1vdmVDbGFzcygnZmFuY3lib3gtbG9jay10ZXN0Jyk7XG5cblx0XHQkKFwiPHN0eWxlIHR5cGU9J3RleHQvY3NzJz4uZmFuY3lib3gtbWFyZ2lue21hcmdpbi1yaWdodDpcIiArICh3MiAtIHcxKSArIFwicHg7fTwvc3R5bGU+XCIpLmFwcGVuZFRvKFwiaGVhZFwiKTtcblx0fSk7XG5cbn0od2luZG93LCBkb2N1bWVudCwgalF1ZXJ5KSk7IiwiLyohIGZhbmN5Qm94IHYyLjEuNSBmYW5jeWFwcHMuY29tIHwgZmFuY3lhcHBzLmNvbS9mYW5jeWJveC8jbGljZW5zZSAqL1xuKGZ1bmN0aW9uKHIsRyxmLHYpe3ZhciBKPWYoXCJodG1sXCIpLG49ZihyKSxwPWYoRyksYj1mLmZhbmN5Ym94PWZ1bmN0aW9uKCl7Yi5vcGVuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sST1uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9tc2llL2kpLEI9bnVsbCxzPUcuY3JlYXRlVG91Y2ghPT12LHQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGEmJmEuaGFzT3duUHJvcGVydHkmJmEgaW5zdGFuY2VvZiBmfSxxPWZ1bmN0aW9uKGEpe3JldHVybiBhJiZcInN0cmluZ1wiPT09Zi50eXBlKGEpfSxFPWZ1bmN0aW9uKGEpe3JldHVybiBxKGEpJiYwPGEuaW5kZXhPZihcIiVcIil9LGw9ZnVuY3Rpb24oYSxkKXt2YXIgZT1wYXJzZUludChhLDEwKXx8MDtkJiZFKGEpJiYoZSo9Yi5nZXRWaWV3cG9ydCgpW2RdLzEwMCk7cmV0dXJuIE1hdGguY2VpbChlKX0sdz1mdW5jdGlvbihhLGIpe3JldHVybiBsKGEsYikrXCJweFwifTtmLmV4dGVuZChiLHt2ZXJzaW9uOlwiMi4xLjVcIixkZWZhdWx0czp7cGFkZGluZzoxNSxtYXJnaW46MjAsXG53aWR0aDo4MDAsaGVpZ2h0OjYwMCxtaW5XaWR0aDoxMDAsbWluSGVpZ2h0OjEwMCxtYXhXaWR0aDo5OTk5LG1heEhlaWdodDo5OTk5LHBpeGVsUmF0aW86MSxhdXRvU2l6ZTohMCxhdXRvSGVpZ2h0OiExLGF1dG9XaWR0aDohMSxhdXRvUmVzaXplOiEwLGF1dG9DZW50ZXI6IXMsZml0VG9WaWV3OiEwLGFzcGVjdFJhdGlvOiExLHRvcFJhdGlvOjAuNSxsZWZ0UmF0aW86MC41LHNjcm9sbGluZzpcImF1dG9cIix3cmFwQ1NTOlwiXCIsYXJyb3dzOiEwLGNsb3NlQnRuOiEwLGNsb3NlQ2xpY2s6ITEsbmV4dENsaWNrOiExLG1vdXNlV2hlZWw6ITAsYXV0b1BsYXk6ITEscGxheVNwZWVkOjNFMyxwcmVsb2FkOjMsbW9kYWw6ITEsbG9vcDohMCxhamF4OntkYXRhVHlwZTpcImh0bWxcIixoZWFkZXJzOntcIlgtZmFuY3lCb3hcIjohMH19LGlmcmFtZTp7c2Nyb2xsaW5nOlwiYXV0b1wiLHByZWxvYWQ6ITB9LHN3Zjp7d21vZGU6XCJ0cmFuc3BhcmVudFwiLGFsbG93ZnVsbHNjcmVlbjpcInRydWVcIixhbGxvd3NjcmlwdGFjY2VzczpcImFsd2F5c1wifSxcbmtleXM6e25leHQ6ezEzOlwibGVmdFwiLDM0OlwidXBcIiwzOTpcImxlZnRcIiw0MDpcInVwXCJ9LHByZXY6ezg6XCJyaWdodFwiLDMzOlwiZG93blwiLDM3OlwicmlnaHRcIiwzODpcImRvd25cIn0sY2xvc2U6WzI3XSxwbGF5OlszMl0sdG9nZ2xlOls3MF19LGRpcmVjdGlvbjp7bmV4dDpcImxlZnRcIixwcmV2OlwicmlnaHRcIn0sc2Nyb2xsT3V0c2lkZTohMCxpbmRleDowLHR5cGU6bnVsbCxocmVmOm51bGwsY29udGVudDpudWxsLHRpdGxlOm51bGwsdHBsOnt3cmFwOic8ZGl2IGNsYXNzPVwiZmFuY3lib3gtd3JhcFwiIHRhYkluZGV4PVwiLTFcIj48ZGl2IGNsYXNzPVwiZmFuY3lib3gtc2tpblwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1vdXRlclwiPjxkaXYgY2xhc3M9XCJmYW5jeWJveC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PicsaW1hZ2U6JzxpbWcgY2xhc3M9XCJmYW5jeWJveC1pbWFnZVwiIHNyYz1cIntocmVmfVwiIGFsdD1cIlwiIC8+JyxpZnJhbWU6JzxpZnJhbWUgaWQ9XCJmYW5jeWJveC1mcmFtZXtybmR9XCIgbmFtZT1cImZhbmN5Ym94LWZyYW1le3JuZH1cIiBjbGFzcz1cImZhbmN5Ym94LWlmcmFtZVwiIGZyYW1lYm9yZGVyPVwiMFwiIHZzcGFjZT1cIjBcIiBoc3BhY2U9XCIwXCIgd2Via2l0QWxsb3dGdWxsU2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiBhbGxvd0Z1bGxTY3JlZW4nK1xuKEk/JyBhbGxvd3RyYW5zcGFyZW5jeT1cInRydWVcIic6XCJcIikrXCI+PC9pZnJhbWU+XCIsZXJyb3I6JzxwIGNsYXNzPVwiZmFuY3lib3gtZXJyb3JcIj5UaGUgcmVxdWVzdGVkIGNvbnRlbnQgY2Fubm90IGJlIGxvYWRlZC48YnIvPlBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuPC9wPicsY2xvc2VCdG46JzxhIHRpdGxlPVwiQ2xvc2VcIiBjbGFzcz1cImZhbmN5Ym94LWl0ZW0gZmFuY3lib3gtY2xvc2VcIiBocmVmPVwiamF2YXNjcmlwdDo7XCI+PC9hPicsbmV4dDonPGEgdGl0bGU9XCJOZXh0XCIgY2xhc3M9XCJmYW5jeWJveC1uYXYgZmFuY3lib3gtbmV4dFwiIGhyZWY9XCJqYXZhc2NyaXB0OjtcIj48c3Bhbj48L3NwYW4+PC9hPicscHJldjonPGEgdGl0bGU9XCJQcmV2aW91c1wiIGNsYXNzPVwiZmFuY3lib3gtbmF2IGZhbmN5Ym94LXByZXZcIiBocmVmPVwiamF2YXNjcmlwdDo7XCI+PHNwYW4+PC9zcGFuPjwvYT4nfSxvcGVuRWZmZWN0OlwiZmFkZVwiLG9wZW5TcGVlZDoyNTAsb3BlbkVhc2luZzpcInN3aW5nXCIsb3Blbk9wYWNpdHk6ITAsXG5vcGVuTWV0aG9kOlwiem9vbUluXCIsY2xvc2VFZmZlY3Q6XCJmYWRlXCIsY2xvc2VTcGVlZDoyNTAsY2xvc2VFYXNpbmc6XCJzd2luZ1wiLGNsb3NlT3BhY2l0eTohMCxjbG9zZU1ldGhvZDpcInpvb21PdXRcIixuZXh0RWZmZWN0OlwiZWxhc3RpY1wiLG5leHRTcGVlZDoyNTAsbmV4dEVhc2luZzpcInN3aW5nXCIsbmV4dE1ldGhvZDpcImNoYW5nZUluXCIscHJldkVmZmVjdDpcImVsYXN0aWNcIixwcmV2U3BlZWQ6MjUwLHByZXZFYXNpbmc6XCJzd2luZ1wiLHByZXZNZXRob2Q6XCJjaGFuZ2VPdXRcIixoZWxwZXJzOntvdmVybGF5OiEwLHRpdGxlOiEwfSxvbkNhbmNlbDpmLm5vb3AsYmVmb3JlTG9hZDpmLm5vb3AsYWZ0ZXJMb2FkOmYubm9vcCxiZWZvcmVTaG93OmYubm9vcCxhZnRlclNob3c6Zi5ub29wLGJlZm9yZUNoYW5nZTpmLm5vb3AsYmVmb3JlQ2xvc2U6Zi5ub29wLGFmdGVyQ2xvc2U6Zi5ub29wfSxncm91cDp7fSxvcHRzOnt9LHByZXZpb3VzOm51bGwsY29taW5nOm51bGwsY3VycmVudDpudWxsLGlzQWN0aXZlOiExLFxuaXNPcGVuOiExLGlzT3BlbmVkOiExLHdyYXA6bnVsbCxza2luOm51bGwsb3V0ZXI6bnVsbCxpbm5lcjpudWxsLHBsYXllcjp7dGltZXI6bnVsbCxpc0FjdGl2ZTohMX0sYWpheExvYWQ6bnVsbCxpbWdQcmVsb2FkOm51bGwsdHJhbnNpdGlvbnM6e30saGVscGVyczp7fSxvcGVuOmZ1bmN0aW9uKGEsZCl7aWYoYSYmKGYuaXNQbGFpbk9iamVjdChkKXx8KGQ9e30pLCExIT09Yi5jbG9zZSghMCkpKXJldHVybiBmLmlzQXJyYXkoYSl8fChhPXQoYSk/ZihhKS5nZXQoKTpbYV0pLGYuZWFjaChhLGZ1bmN0aW9uKGUsYyl7dmFyIGs9e30sZyxoLGosbSxsO1wib2JqZWN0XCI9PT1mLnR5cGUoYykmJihjLm5vZGVUeXBlJiYoYz1mKGMpKSx0KGMpPyhrPXtocmVmOmMuZGF0YShcImZhbmN5Ym94LWhyZWZcIil8fGMuYXR0cihcImhyZWZcIiksdGl0bGU6Yy5kYXRhKFwiZmFuY3lib3gtdGl0bGVcIil8fGMuYXR0cihcInRpdGxlXCIpLGlzRG9tOiEwLGVsZW1lbnQ6Y30sZi5tZXRhZGF0YSYmZi5leHRlbmQoITAsayxcbmMubWV0YWRhdGEoKSkpOms9Yyk7Zz1kLmhyZWZ8fGsuaHJlZnx8KHEoYyk/YzpudWxsKTtoPWQudGl0bGUhPT12P2QudGl0bGU6ay50aXRsZXx8XCJcIjttPShqPWQuY29udGVudHx8ay5jb250ZW50KT9cImh0bWxcIjpkLnR5cGV8fGsudHlwZTshbSYmay5pc0RvbSYmKG09Yy5kYXRhKFwiZmFuY3lib3gtdHlwZVwiKSxtfHwobT0obT1jLnByb3AoXCJjbGFzc1wiKS5tYXRjaCgvZmFuY3lib3hcXC4oXFx3KykvKSk/bVsxXTpudWxsKSk7cShnKSYmKG18fChiLmlzSW1hZ2UoZyk/bT1cImltYWdlXCI6Yi5pc1NXRihnKT9tPVwic3dmXCI6XCIjXCI9PT1nLmNoYXJBdCgwKT9tPVwiaW5saW5lXCI6cShjKSYmKG09XCJodG1sXCIsaj1jKSksXCJhamF4XCI9PT1tJiYobD1nLnNwbGl0KC9cXHMrLywyKSxnPWwuc2hpZnQoKSxsPWwuc2hpZnQoKSkpO2p8fChcImlubGluZVwiPT09bT9nP2o9ZihxKGcpP2cucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLyxcIlwiKTpnKTprLmlzRG9tJiYoaj1jKTpcImh0bWxcIj09PW0/aj1nOiFtJiYoIWcmJlxuay5pc0RvbSkmJihtPVwiaW5saW5lXCIsaj1jKSk7Zi5leHRlbmQoayx7aHJlZjpnLHR5cGU6bSxjb250ZW50OmosdGl0bGU6aCxzZWxlY3RvcjpsfSk7YVtlXT1rfSksYi5vcHRzPWYuZXh0ZW5kKCEwLHt9LGIuZGVmYXVsdHMsZCksZC5rZXlzIT09diYmKGIub3B0cy5rZXlzPWQua2V5cz9mLmV4dGVuZCh7fSxiLmRlZmF1bHRzLmtleXMsZC5rZXlzKTohMSksYi5ncm91cD1hLGIuX3N0YXJ0KGIub3B0cy5pbmRleCl9LGNhbmNlbDpmdW5jdGlvbigpe3ZhciBhPWIuY29taW5nO2EmJiExIT09Yi50cmlnZ2VyKFwib25DYW5jZWxcIikmJihiLmhpZGVMb2FkaW5nKCksYi5hamF4TG9hZCYmYi5hamF4TG9hZC5hYm9ydCgpLGIuYWpheExvYWQ9bnVsbCxiLmltZ1ByZWxvYWQmJihiLmltZ1ByZWxvYWQub25sb2FkPWIuaW1nUHJlbG9hZC5vbmVycm9yPW51bGwpLGEud3JhcCYmYS53cmFwLnN0b3AoITAsITApLnRyaWdnZXIoXCJvblJlc2V0XCIpLnJlbW92ZSgpLGIuY29taW5nPW51bGwsYi5jdXJyZW50fHxcbmIuX2FmdGVyWm9vbU91dChhKSl9LGNsb3NlOmZ1bmN0aW9uKGEpe2IuY2FuY2VsKCk7ITEhPT1iLnRyaWdnZXIoXCJiZWZvcmVDbG9zZVwiKSYmKGIudW5iaW5kRXZlbnRzKCksYi5pc0FjdGl2ZSYmKCFiLmlzT3Blbnx8ITA9PT1hPyhmKFwiLmZhbmN5Ym94LXdyYXBcIikuc3RvcCghMCkudHJpZ2dlcihcIm9uUmVzZXRcIikucmVtb3ZlKCksYi5fYWZ0ZXJab29tT3V0KCkpOihiLmlzT3Blbj1iLmlzT3BlbmVkPSExLGIuaXNDbG9zaW5nPSEwLGYoXCIuZmFuY3lib3gtaXRlbSwgLmZhbmN5Ym94LW5hdlwiKS5yZW1vdmUoKSxiLndyYXAuc3RvcCghMCwhMCkucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1vcGVuZWRcIiksYi50cmFuc2l0aW9uc1tiLmN1cnJlbnQuY2xvc2VNZXRob2RdKCkpKSl9LHBsYXk6ZnVuY3Rpb24oYSl7dmFyIGQ9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoYi5wbGF5ZXIudGltZXIpfSxlPWZ1bmN0aW9uKCl7ZCgpO2IuY3VycmVudCYmYi5wbGF5ZXIuaXNBY3RpdmUmJihiLnBsYXllci50aW1lcj1cbnNldFRpbWVvdXQoYi5uZXh0LGIuY3VycmVudC5wbGF5U3BlZWQpKX0sYz1mdW5jdGlvbigpe2QoKTtwLnVuYmluZChcIi5wbGF5ZXJcIik7Yi5wbGF5ZXIuaXNBY3RpdmU9ITE7Yi50cmlnZ2VyKFwib25QbGF5RW5kXCIpfTtpZighMD09PWF8fCFiLnBsYXllci5pc0FjdGl2ZSYmITEhPT1hKXtpZihiLmN1cnJlbnQmJihiLmN1cnJlbnQubG9vcHx8Yi5jdXJyZW50LmluZGV4PGIuZ3JvdXAubGVuZ3RoLTEpKWIucGxheWVyLmlzQWN0aXZlPSEwLHAuYmluZCh7XCJvbkNhbmNlbC5wbGF5ZXIgYmVmb3JlQ2xvc2UucGxheWVyXCI6YyxcIm9uVXBkYXRlLnBsYXllclwiOmUsXCJiZWZvcmVMb2FkLnBsYXllclwiOmR9KSxlKCksYi50cmlnZ2VyKFwib25QbGF5U3RhcnRcIil9ZWxzZSBjKCl9LG5leHQ6ZnVuY3Rpb24oYSl7dmFyIGQ9Yi5jdXJyZW50O2QmJihxKGEpfHwoYT1kLmRpcmVjdGlvbi5uZXh0KSxiLmp1bXB0byhkLmluZGV4KzEsYSxcIm5leHRcIikpfSxwcmV2OmZ1bmN0aW9uKGEpe3ZhciBkPWIuY3VycmVudDtcbmQmJihxKGEpfHwoYT1kLmRpcmVjdGlvbi5wcmV2KSxiLmp1bXB0byhkLmluZGV4LTEsYSxcInByZXZcIikpfSxqdW1wdG86ZnVuY3Rpb24oYSxkLGUpe3ZhciBjPWIuY3VycmVudDtjJiYoYT1sKGEpLGIuZGlyZWN0aW9uPWR8fGMuZGlyZWN0aW9uW2E+PWMuaW5kZXg/XCJuZXh0XCI6XCJwcmV2XCJdLGIucm91dGVyPWV8fFwianVtcHRvXCIsYy5sb29wJiYoMD5hJiYoYT1jLmdyb3VwLmxlbmd0aCthJWMuZ3JvdXAubGVuZ3RoKSxhJT1jLmdyb3VwLmxlbmd0aCksYy5ncm91cFthXSE9PXYmJihiLmNhbmNlbCgpLGIuX3N0YXJ0KGEpKSl9LHJlcG9zaXRpb246ZnVuY3Rpb24oYSxkKXt2YXIgZT1iLmN1cnJlbnQsYz1lP2Uud3JhcDpudWxsLGs7YyYmKGs9Yi5fZ2V0UG9zaXRpb24oZCksYSYmXCJzY3JvbGxcIj09PWEudHlwZT8oZGVsZXRlIGsucG9zaXRpb24sYy5zdG9wKCEwLCEwKS5hbmltYXRlKGssMjAwKSk6KGMuY3NzKGspLGUucG9zPWYuZXh0ZW5kKHt9LGUuZGltLGspKSl9LHVwZGF0ZTpmdW5jdGlvbihhKXt2YXIgZD1cbmEmJmEudHlwZSxlPSFkfHxcIm9yaWVudGF0aW9uY2hhbmdlXCI9PT1kO2UmJihjbGVhclRpbWVvdXQoQiksQj1udWxsKTtiLmlzT3BlbiYmIUImJihCPXNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgYz1iLmN1cnJlbnQ7YyYmIWIuaXNDbG9zaW5nJiYoYi53cmFwLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtdG1wXCIpLChlfHxcImxvYWRcIj09PWR8fFwicmVzaXplXCI9PT1kJiZjLmF1dG9SZXNpemUpJiZiLl9zZXREaW1lbnNpb24oKSxcInNjcm9sbFwiPT09ZCYmYy5jYW5TaHJpbmt8fGIucmVwb3NpdGlvbihhKSxiLnRyaWdnZXIoXCJvblVwZGF0ZVwiKSxCPW51bGwpfSxlJiYhcz8wOjMwMCkpfSx0b2dnbGU6ZnVuY3Rpb24oYSl7Yi5pc09wZW4mJihiLmN1cnJlbnQuZml0VG9WaWV3PVwiYm9vbGVhblwiPT09Zi50eXBlKGEpP2E6IWIuY3VycmVudC5maXRUb1ZpZXcscyYmKGIud3JhcC5yZW1vdmVBdHRyKFwic3R5bGVcIikuYWRkQ2xhc3MoXCJmYW5jeWJveC10bXBcIiksYi50cmlnZ2VyKFwib25VcGRhdGVcIikpLFxuYi51cGRhdGUoKSl9LGhpZGVMb2FkaW5nOmZ1bmN0aW9uKCl7cC51bmJpbmQoXCIubG9hZGluZ1wiKTtmKFwiI2ZhbmN5Ym94LWxvYWRpbmdcIikucmVtb3ZlKCl9LHNob3dMb2FkaW5nOmZ1bmN0aW9uKCl7dmFyIGEsZDtiLmhpZGVMb2FkaW5nKCk7YT1mKCc8ZGl2IGlkPVwiZmFuY3lib3gtbG9hZGluZ1wiPjxkaXY+PC9kaXY+PC9kaXY+JykuY2xpY2soYi5jYW5jZWwpLmFwcGVuZFRvKFwiYm9keVwiKTtwLmJpbmQoXCJrZXlkb3duLmxvYWRpbmdcIixmdW5jdGlvbihhKXtpZigyNz09PShhLndoaWNofHxhLmtleUNvZGUpKWEucHJldmVudERlZmF1bHQoKSxiLmNhbmNlbCgpfSk7Yi5kZWZhdWx0cy5maXhlZHx8KGQ9Yi5nZXRWaWV3cG9ydCgpLGEuY3NzKHtwb3NpdGlvbjpcImFic29sdXRlXCIsdG9wOjAuNSpkLmgrZC55LGxlZnQ6MC41KmQudytkLnh9KSl9LGdldFZpZXdwb3J0OmZ1bmN0aW9uKCl7dmFyIGE9Yi5jdXJyZW50JiZiLmN1cnJlbnQubG9ja2VkfHwhMSxkPXt4Om4uc2Nyb2xsTGVmdCgpLFxueTpuLnNjcm9sbFRvcCgpfTthPyhkLnc9YVswXS5jbGllbnRXaWR0aCxkLmg9YVswXS5jbGllbnRIZWlnaHQpOihkLnc9cyYmci5pbm5lcldpZHRoP3IuaW5uZXJXaWR0aDpuLndpZHRoKCksZC5oPXMmJnIuaW5uZXJIZWlnaHQ/ci5pbm5lckhlaWdodDpuLmhlaWdodCgpKTtyZXR1cm4gZH0sdW5iaW5kRXZlbnRzOmZ1bmN0aW9uKCl7Yi53cmFwJiZ0KGIud3JhcCkmJmIud3JhcC51bmJpbmQoXCIuZmJcIik7cC51bmJpbmQoXCIuZmJcIik7bi51bmJpbmQoXCIuZmJcIil9LGJpbmRFdmVudHM6ZnVuY3Rpb24oKXt2YXIgYT1iLmN1cnJlbnQsZDthJiYobi5iaW5kKFwib3JpZW50YXRpb25jaGFuZ2UuZmJcIisocz9cIlwiOlwiIHJlc2l6ZS5mYlwiKSsoYS5hdXRvQ2VudGVyJiYhYS5sb2NrZWQ/XCIgc2Nyb2xsLmZiXCI6XCJcIiksYi51cGRhdGUpLChkPWEua2V5cykmJnAuYmluZChcImtleWRvd24uZmJcIixmdW5jdGlvbihlKXt2YXIgYz1lLndoaWNofHxlLmtleUNvZGUsaz1lLnRhcmdldHx8ZS5zcmNFbGVtZW50O1xuaWYoMjc9PT1jJiZiLmNvbWluZylyZXR1cm4hMTshZS5jdHJsS2V5JiYoIWUuYWx0S2V5JiYhZS5zaGlmdEtleSYmIWUubWV0YUtleSYmKCFrfHwhay50eXBlJiYhZihrKS5pcyhcIltjb250ZW50ZWRpdGFibGVdXCIpKSkmJmYuZWFjaChkLGZ1bmN0aW9uKGQsayl7aWYoMTxhLmdyb3VwLmxlbmd0aCYma1tjXSE9PXYpcmV0dXJuIGJbZF0oa1tjXSksZS5wcmV2ZW50RGVmYXVsdCgpLCExO2lmKC0xPGYuaW5BcnJheShjLGspKXJldHVybiBiW2RdKCksZS5wcmV2ZW50RGVmYXVsdCgpLCExfSl9KSxmLmZuLm1vdXNld2hlZWwmJmEubW91c2VXaGVlbCYmYi53cmFwLmJpbmQoXCJtb3VzZXdoZWVsLmZiXCIsZnVuY3Rpb24oZCxjLGssZyl7Zm9yKHZhciBoPWYoZC50YXJnZXR8fG51bGwpLGo9ITE7aC5sZW5ndGgmJiFqJiYhaC5pcyhcIi5mYW5jeWJveC1za2luXCIpJiYhaC5pcyhcIi5mYW5jeWJveC13cmFwXCIpOylqPWhbMF0mJiEoaFswXS5zdHlsZS5vdmVyZmxvdyYmXCJoaWRkZW5cIj09PWhbMF0uc3R5bGUub3ZlcmZsb3cpJiZcbihoWzBdLmNsaWVudFdpZHRoJiZoWzBdLnNjcm9sbFdpZHRoPmhbMF0uY2xpZW50V2lkdGh8fGhbMF0uY2xpZW50SGVpZ2h0JiZoWzBdLnNjcm9sbEhlaWdodD5oWzBdLmNsaWVudEhlaWdodCksaD1mKGgpLnBhcmVudCgpO2lmKDAhPT1jJiYhaiYmMTxiLmdyb3VwLmxlbmd0aCYmIWEuY2FuU2hyaW5rKXtpZigwPGd8fDA8ayliLnByZXYoMDxnP1wiZG93blwiOlwibGVmdFwiKTtlbHNlIGlmKDA+Z3x8MD5rKWIubmV4dCgwPmc/XCJ1cFwiOlwicmlnaHRcIik7ZC5wcmV2ZW50RGVmYXVsdCgpfX0pKX0sdHJpZ2dlcjpmdW5jdGlvbihhLGQpe3ZhciBlLGM9ZHx8Yi5jb21pbmd8fGIuY3VycmVudDtpZihjKXtmLmlzRnVuY3Rpb24oY1thXSkmJihlPWNbYV0uYXBwbHkoYyxBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSkpKTtpZighMT09PWUpcmV0dXJuITE7Yy5oZWxwZXJzJiZmLmVhY2goYy5oZWxwZXJzLGZ1bmN0aW9uKGQsZSl7aWYoZSYmYi5oZWxwZXJzW2RdJiZmLmlzRnVuY3Rpb24oYi5oZWxwZXJzW2RdW2FdKSliLmhlbHBlcnNbZF1bYV0oZi5leHRlbmQoITAsXG57fSxiLmhlbHBlcnNbZF0uZGVmYXVsdHMsZSksYyl9KTtwLnRyaWdnZXIoYSl9fSxpc0ltYWdlOmZ1bmN0aW9uKGEpe3JldHVybiBxKGEpJiZhLm1hdGNoKC8oXmRhdGE6aW1hZ2VcXC8uKiwpfChcXC4oanAoZXxnfGVnKXxnaWZ8cG5nfGJtcHx3ZWJwfHN2ZykoKFxcP3wjKS4qKT8kKS9pKX0saXNTV0Y6ZnVuY3Rpb24oYSl7cmV0dXJuIHEoYSkmJmEubWF0Y2goL1xcLihzd2YpKChcXD98IykuKik/JC9pKX0sX3N0YXJ0OmZ1bmN0aW9uKGEpe3ZhciBkPXt9LGUsYzthPWwoYSk7ZT1iLmdyb3VwW2FdfHxudWxsO2lmKCFlKXJldHVybiExO2Q9Zi5leHRlbmQoITAse30sYi5vcHRzLGUpO2U9ZC5tYXJnaW47Yz1kLnBhZGRpbmc7XCJudW1iZXJcIj09PWYudHlwZShlKSYmKGQubWFyZ2luPVtlLGUsZSxlXSk7XCJudW1iZXJcIj09PWYudHlwZShjKSYmKGQucGFkZGluZz1bYyxjLGMsY10pO2QubW9kYWwmJmYuZXh0ZW5kKCEwLGQse2Nsb3NlQnRuOiExLGNsb3NlQ2xpY2s6ITEsbmV4dENsaWNrOiExLGFycm93czohMSxcbm1vdXNlV2hlZWw6ITEsa2V5czpudWxsLGhlbHBlcnM6e292ZXJsYXk6e2Nsb3NlQ2xpY2s6ITF9fX0pO2QuYXV0b1NpemUmJihkLmF1dG9XaWR0aD1kLmF1dG9IZWlnaHQ9ITApO1wiYXV0b1wiPT09ZC53aWR0aCYmKGQuYXV0b1dpZHRoPSEwKTtcImF1dG9cIj09PWQuaGVpZ2h0JiYoZC5hdXRvSGVpZ2h0PSEwKTtkLmdyb3VwPWIuZ3JvdXA7ZC5pbmRleD1hO2IuY29taW5nPWQ7aWYoITE9PT1iLnRyaWdnZXIoXCJiZWZvcmVMb2FkXCIpKWIuY29taW5nPW51bGw7ZWxzZXtjPWQudHlwZTtlPWQuaHJlZjtpZighYylyZXR1cm4gYi5jb21pbmc9bnVsbCxiLmN1cnJlbnQmJmIucm91dGVyJiZcImp1bXB0b1wiIT09Yi5yb3V0ZXI/KGIuY3VycmVudC5pbmRleD1hLGJbYi5yb3V0ZXJdKGIuZGlyZWN0aW9uKSk6ITE7Yi5pc0FjdGl2ZT0hMDtpZihcImltYWdlXCI9PT1jfHxcInN3ZlwiPT09YylkLmF1dG9IZWlnaHQ9ZC5hdXRvV2lkdGg9ITEsZC5zY3JvbGxpbmc9XCJ2aXNpYmxlXCI7XCJpbWFnZVwiPT09YyYmKGQuYXNwZWN0UmF0aW89XG4hMCk7XCJpZnJhbWVcIj09PWMmJnMmJihkLnNjcm9sbGluZz1cInNjcm9sbFwiKTtkLndyYXA9ZihkLnRwbC53cmFwKS5hZGRDbGFzcyhcImZhbmN5Ym94LVwiKyhzP1wibW9iaWxlXCI6XCJkZXNrdG9wXCIpK1wiIGZhbmN5Ym94LXR5cGUtXCIrYytcIiBmYW5jeWJveC10bXAgXCIrZC53cmFwQ1NTKS5hcHBlbmRUbyhkLnBhcmVudHx8XCJib2R5XCIpO2YuZXh0ZW5kKGQse3NraW46ZihcIi5mYW5jeWJveC1za2luXCIsZC53cmFwKSxvdXRlcjpmKFwiLmZhbmN5Ym94LW91dGVyXCIsZC53cmFwKSxpbm5lcjpmKFwiLmZhbmN5Ym94LWlubmVyXCIsZC53cmFwKX0pO2YuZWFjaChbXCJUb3BcIixcIlJpZ2h0XCIsXCJCb3R0b21cIixcIkxlZnRcIl0sZnVuY3Rpb24oYSxiKXtkLnNraW4uY3NzKFwicGFkZGluZ1wiK2IsdyhkLnBhZGRpbmdbYV0pKX0pO2IudHJpZ2dlcihcIm9uUmVhZHlcIik7aWYoXCJpbmxpbmVcIj09PWN8fFwiaHRtbFwiPT09Yyl7aWYoIWQuY29udGVudHx8IWQuY29udGVudC5sZW5ndGgpcmV0dXJuIGIuX2Vycm9yKFwiY29udGVudFwiKX1lbHNlIGlmKCFlKXJldHVybiBiLl9lcnJvcihcImhyZWZcIik7XG5cImltYWdlXCI9PT1jP2IuX2xvYWRJbWFnZSgpOlwiYWpheFwiPT09Yz9iLl9sb2FkQWpheCgpOlwiaWZyYW1lXCI9PT1jP2IuX2xvYWRJZnJhbWUoKTpiLl9hZnRlckxvYWQoKX19LF9lcnJvcjpmdW5jdGlvbihhKXtmLmV4dGVuZChiLmNvbWluZyx7dHlwZTpcImh0bWxcIixhdXRvV2lkdGg6ITAsYXV0b0hlaWdodDohMCxtaW5XaWR0aDowLG1pbkhlaWdodDowLHNjcm9sbGluZzpcIm5vXCIsaGFzRXJyb3I6YSxjb250ZW50OmIuY29taW5nLnRwbC5lcnJvcn0pO2IuX2FmdGVyTG9hZCgpfSxfbG9hZEltYWdlOmZ1bmN0aW9uKCl7dmFyIGE9Yi5pbWdQcmVsb2FkPW5ldyBJbWFnZTthLm9ubG9hZD1mdW5jdGlvbigpe3RoaXMub25sb2FkPXRoaXMub25lcnJvcj1udWxsO2IuY29taW5nLndpZHRoPXRoaXMud2lkdGgvYi5vcHRzLnBpeGVsUmF0aW87Yi5jb21pbmcuaGVpZ2h0PXRoaXMuaGVpZ2h0L2Iub3B0cy5waXhlbFJhdGlvO2IuX2FmdGVyTG9hZCgpfTthLm9uZXJyb3I9ZnVuY3Rpb24oKXt0aGlzLm9ubG9hZD1cbnRoaXMub25lcnJvcj1udWxsO2IuX2Vycm9yKFwiaW1hZ2VcIil9O2Euc3JjPWIuY29taW5nLmhyZWY7ITAhPT1hLmNvbXBsZXRlJiZiLnNob3dMb2FkaW5nKCl9LF9sb2FkQWpheDpmdW5jdGlvbigpe3ZhciBhPWIuY29taW5nO2Iuc2hvd0xvYWRpbmcoKTtiLmFqYXhMb2FkPWYuYWpheChmLmV4dGVuZCh7fSxhLmFqYXgse3VybDphLmhyZWYsZXJyb3I6ZnVuY3Rpb24oYSxlKXtiLmNvbWluZyYmXCJhYm9ydFwiIT09ZT9iLl9lcnJvcihcImFqYXhcIixhKTpiLmhpZGVMb2FkaW5nKCl9LHN1Y2Nlc3M6ZnVuY3Rpb24oZCxlKXtcInN1Y2Nlc3NcIj09PWUmJihhLmNvbnRlbnQ9ZCxiLl9hZnRlckxvYWQoKSl9fSkpfSxfbG9hZElmcmFtZTpmdW5jdGlvbigpe3ZhciBhPWIuY29taW5nLGQ9ZihhLnRwbC5pZnJhbWUucmVwbGFjZSgvXFx7cm5kXFx9L2csKG5ldyBEYXRlKS5nZXRUaW1lKCkpKS5hdHRyKFwic2Nyb2xsaW5nXCIscz9cImF1dG9cIjphLmlmcmFtZS5zY3JvbGxpbmcpLmF0dHIoXCJzcmNcIixhLmhyZWYpO1xuZihhLndyYXApLmJpbmQoXCJvblJlc2V0XCIsZnVuY3Rpb24oKXt0cnl7Zih0aGlzKS5maW5kKFwiaWZyYW1lXCIpLmhpZGUoKS5hdHRyKFwic3JjXCIsXCIvL2Fib3V0OmJsYW5rXCIpLmVuZCgpLmVtcHR5KCl9Y2F0Y2goYSl7fX0pO2EuaWZyYW1lLnByZWxvYWQmJihiLnNob3dMb2FkaW5nKCksZC5vbmUoXCJsb2FkXCIsZnVuY3Rpb24oKXtmKHRoaXMpLmRhdGEoXCJyZWFkeVwiLDEpO3N8fGYodGhpcykuYmluZChcImxvYWQuZmJcIixiLnVwZGF0ZSk7Zih0aGlzKS5wYXJlbnRzKFwiLmZhbmN5Ym94LXdyYXBcIikud2lkdGgoXCIxMDAlXCIpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtdG1wXCIpLnNob3coKTtiLl9hZnRlckxvYWQoKX0pKTthLmNvbnRlbnQ9ZC5hcHBlbmRUbyhhLmlubmVyKTthLmlmcmFtZS5wcmVsb2FkfHxiLl9hZnRlckxvYWQoKX0sX3ByZWxvYWRJbWFnZXM6ZnVuY3Rpb24oKXt2YXIgYT1iLmdyb3VwLGQ9Yi5jdXJyZW50LGU9YS5sZW5ndGgsYz1kLnByZWxvYWQ/TWF0aC5taW4oZC5wcmVsb2FkLFxuZS0xKTowLGYsZztmb3IoZz0xO2c8PWM7Zys9MSlmPWFbKGQuaW5kZXgrZyklZV0sXCJpbWFnZVwiPT09Zi50eXBlJiZmLmhyZWYmJigobmV3IEltYWdlKS5zcmM9Zi5ocmVmKX0sX2FmdGVyTG9hZDpmdW5jdGlvbigpe3ZhciBhPWIuY29taW5nLGQ9Yi5jdXJyZW50LGUsYyxrLGcsaDtiLmhpZGVMb2FkaW5nKCk7aWYoYSYmITEhPT1iLmlzQWN0aXZlKWlmKCExPT09Yi50cmlnZ2VyKFwiYWZ0ZXJMb2FkXCIsYSxkKSlhLndyYXAuc3RvcCghMCkudHJpZ2dlcihcIm9uUmVzZXRcIikucmVtb3ZlKCksYi5jb21pbmc9bnVsbDtlbHNle2QmJihiLnRyaWdnZXIoXCJiZWZvcmVDaGFuZ2VcIixkKSxkLndyYXAuc3RvcCghMCkucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1vcGVuZWRcIikuZmluZChcIi5mYW5jeWJveC1pdGVtLCAuZmFuY3lib3gtbmF2XCIpLnJlbW92ZSgpKTtiLnVuYmluZEV2ZW50cygpO2U9YS5jb250ZW50O2M9YS50eXBlO2s9YS5zY3JvbGxpbmc7Zi5leHRlbmQoYix7d3JhcDphLndyYXAsc2tpbjphLnNraW4sXG5vdXRlcjphLm91dGVyLGlubmVyOmEuaW5uZXIsY3VycmVudDphLHByZXZpb3VzOmR9KTtnPWEuaHJlZjtzd2l0Y2goYyl7Y2FzZSBcImlubGluZVwiOmNhc2UgXCJhamF4XCI6Y2FzZSBcImh0bWxcIjphLnNlbGVjdG9yP2U9ZihcIjxkaXY+XCIpLmh0bWwoZSkuZmluZChhLnNlbGVjdG9yKTp0KGUpJiYoZS5kYXRhKFwiZmFuY3lib3gtcGxhY2Vob2xkZXJcIil8fGUuZGF0YShcImZhbmN5Ym94LXBsYWNlaG9sZGVyXCIsZignPGRpdiBjbGFzcz1cImZhbmN5Ym94LXBsYWNlaG9sZGVyXCI+PC9kaXY+JykuaW5zZXJ0QWZ0ZXIoZSkuaGlkZSgpKSxlPWUuc2hvdygpLmRldGFjaCgpLGEud3JhcC5iaW5kKFwib25SZXNldFwiLGZ1bmN0aW9uKCl7Zih0aGlzKS5maW5kKGUpLmxlbmd0aCYmZS5oaWRlKCkucmVwbGFjZUFsbChlLmRhdGEoXCJmYW5jeWJveC1wbGFjZWhvbGRlclwiKSkuZGF0YShcImZhbmN5Ym94LXBsYWNlaG9sZGVyXCIsITEpfSkpO2JyZWFrO2Nhc2UgXCJpbWFnZVwiOmU9YS50cGwuaW1hZ2UucmVwbGFjZShcIntocmVmfVwiLFxuZyk7YnJlYWs7Y2FzZSBcInN3ZlwiOmU9JzxvYmplY3QgaWQ9XCJmYW5jeWJveC1zd2ZcIiBjbGFzc2lkPVwiY2xzaWQ6RDI3Q0RCNkUtQUU2RC0xMWNmLTk2QjgtNDQ0NTUzNTQwMDAwXCIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiPjxwYXJhbSBuYW1lPVwibW92aWVcIiB2YWx1ZT1cIicrZysnXCI+PC9wYXJhbT4nLGg9XCJcIixmLmVhY2goYS5zd2YsZnVuY3Rpb24oYSxiKXtlKz0nPHBhcmFtIG5hbWU9XCInK2ErJ1wiIHZhbHVlPVwiJytiKydcIj48L3BhcmFtPic7aCs9XCIgXCIrYSsnPVwiJytiKydcIid9KSxlKz0nPGVtYmVkIHNyYz1cIicrZysnXCIgdHlwZT1cImFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoXCIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiJytoK1wiPjwvZW1iZWQ+PC9vYmplY3Q+XCJ9KCF0KGUpfHwhZS5wYXJlbnQoKS5pcyhhLmlubmVyKSkmJmEuaW5uZXIuYXBwZW5kKGUpO2IudHJpZ2dlcihcImJlZm9yZVNob3dcIik7YS5pbm5lci5jc3MoXCJvdmVyZmxvd1wiLFwieWVzXCI9PT1rP1wic2Nyb2xsXCI6XG5cIm5vXCI9PT1rP1wiaGlkZGVuXCI6ayk7Yi5fc2V0RGltZW5zaW9uKCk7Yi5yZXBvc2l0aW9uKCk7Yi5pc09wZW49ITE7Yi5jb21pbmc9bnVsbDtiLmJpbmRFdmVudHMoKTtpZihiLmlzT3BlbmVkKXtpZihkLnByZXZNZXRob2QpYi50cmFuc2l0aW9uc1tkLnByZXZNZXRob2RdKCl9ZWxzZSBmKFwiLmZhbmN5Ym94LXdyYXBcIikubm90KGEud3JhcCkuc3RvcCghMCkudHJpZ2dlcihcIm9uUmVzZXRcIikucmVtb3ZlKCk7Yi50cmFuc2l0aW9uc1tiLmlzT3BlbmVkP2EubmV4dE1ldGhvZDphLm9wZW5NZXRob2RdKCk7Yi5fcHJlbG9hZEltYWdlcygpfX0sX3NldERpbWVuc2lvbjpmdW5jdGlvbigpe3ZhciBhPWIuZ2V0Vmlld3BvcnQoKSxkPTAsZT0hMSxjPSExLGU9Yi53cmFwLGs9Yi5za2luLGc9Yi5pbm5lcixoPWIuY3VycmVudCxjPWgud2lkdGgsaj1oLmhlaWdodCxtPWgubWluV2lkdGgsdT1oLm1pbkhlaWdodCxuPWgubWF4V2lkdGgscD1oLm1heEhlaWdodCxzPWguc2Nyb2xsaW5nLHE9aC5zY3JvbGxPdXRzaWRlP1xuaC5zY3JvbGxiYXJXaWR0aDowLHg9aC5tYXJnaW4seT1sKHhbMV0reFszXSkscj1sKHhbMF0reFsyXSksdix6LHQsQyxBLEYsQixELEg7ZS5hZGQoaykuYWRkKGcpLndpZHRoKFwiYXV0b1wiKS5oZWlnaHQoXCJhdXRvXCIpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtdG1wXCIpO3g9bChrLm91dGVyV2lkdGgoITApLWsud2lkdGgoKSk7dj1sKGsub3V0ZXJIZWlnaHQoITApLWsuaGVpZ2h0KCkpO3o9eSt4O3Q9cit2O0M9RShjKT8oYS53LXopKmwoYykvMTAwOmM7QT1FKGopPyhhLmgtdCkqbChqKS8xMDA6ajtpZihcImlmcmFtZVwiPT09aC50eXBlKXtpZihIPWguY29udGVudCxoLmF1dG9IZWlnaHQmJjE9PT1ILmRhdGEoXCJyZWFkeVwiKSl0cnl7SFswXS5jb250ZW50V2luZG93LmRvY3VtZW50LmxvY2F0aW9uJiYoZy53aWR0aChDKS5oZWlnaHQoOTk5OSksRj1ILmNvbnRlbnRzKCkuZmluZChcImJvZHlcIikscSYmRi5jc3MoXCJvdmVyZmxvdy14XCIsXCJoaWRkZW5cIiksQT1GLm91dGVySGVpZ2h0KCEwKSl9Y2F0Y2goRyl7fX1lbHNlIGlmKGguYXV0b1dpZHRofHxcbmguYXV0b0hlaWdodClnLmFkZENsYXNzKFwiZmFuY3lib3gtdG1wXCIpLGguYXV0b1dpZHRofHxnLndpZHRoKEMpLGguYXV0b0hlaWdodHx8Zy5oZWlnaHQoQSksaC5hdXRvV2lkdGgmJihDPWcud2lkdGgoKSksaC5hdXRvSGVpZ2h0JiYoQT1nLmhlaWdodCgpKSxnLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtdG1wXCIpO2M9bChDKTtqPWwoQSk7RD1DL0E7bT1sKEUobSk/bChtLFwid1wiKS16Om0pO249bChFKG4pP2wobixcIndcIiktejpuKTt1PWwoRSh1KT9sKHUsXCJoXCIpLXQ6dSk7cD1sKEUocCk/bChwLFwiaFwiKS10OnApO0Y9bjtCPXA7aC5maXRUb1ZpZXcmJihuPU1hdGgubWluKGEudy16LG4pLHA9TWF0aC5taW4oYS5oLXQscCkpO3o9YS53LXk7cj1hLmgtcjtoLmFzcGVjdFJhdGlvPyhjPm4mJihjPW4saj1sKGMvRCkpLGo+cCYmKGo9cCxjPWwoaipEKSksYzxtJiYoYz1tLGo9bChjL0QpKSxqPHUmJihqPXUsYz1sKGoqRCkpKTooYz1NYXRoLm1heChtLE1hdGgubWluKGMsbikpLGguYXV0b0hlaWdodCYmXG5cImlmcmFtZVwiIT09aC50eXBlJiYoZy53aWR0aChjKSxqPWcuaGVpZ2h0KCkpLGo9TWF0aC5tYXgodSxNYXRoLm1pbihqLHApKSk7aWYoaC5maXRUb1ZpZXcpaWYoZy53aWR0aChjKS5oZWlnaHQoaiksZS53aWR0aChjK3gpLGE9ZS53aWR0aCgpLHk9ZS5oZWlnaHQoKSxoLmFzcGVjdFJhdGlvKWZvcig7KGE+enx8eT5yKSYmKGM+bSYmaj51KSYmISgxOTxkKyspOylqPU1hdGgubWF4KHUsTWF0aC5taW4ocCxqLTEwKSksYz1sKGoqRCksYzxtJiYoYz1tLGo9bChjL0QpKSxjPm4mJihjPW4saj1sKGMvRCkpLGcud2lkdGgoYykuaGVpZ2h0KGopLGUud2lkdGgoYyt4KSxhPWUud2lkdGgoKSx5PWUuaGVpZ2h0KCk7ZWxzZSBjPU1hdGgubWF4KG0sTWF0aC5taW4oYyxjLShhLXopKSksaj1NYXRoLm1heCh1LE1hdGgubWluKGosai0oeS1yKSkpO3EmJihcImF1dG9cIj09PXMmJmo8QSYmYyt4K3E8eikmJihjKz1xKTtnLndpZHRoKGMpLmhlaWdodChqKTtlLndpZHRoKGMreCk7YT1lLndpZHRoKCk7XG55PWUuaGVpZ2h0KCk7ZT0oYT56fHx5PnIpJiZjPm0mJmo+dTtjPWguYXNwZWN0UmF0aW8/YzxGJiZqPEImJmM8QyYmajxBOihjPEZ8fGo8QikmJihjPEN8fGo8QSk7Zi5leHRlbmQoaCx7ZGltOnt3aWR0aDp3KGEpLGhlaWdodDp3KHkpfSxvcmlnV2lkdGg6QyxvcmlnSGVpZ2h0OkEsY2FuU2hyaW5rOmUsY2FuRXhwYW5kOmMsd1BhZGRpbmc6eCxoUGFkZGluZzp2LHdyYXBTcGFjZTp5LWsub3V0ZXJIZWlnaHQoITApLHNraW5TcGFjZTprLmhlaWdodCgpLWp9KTshSCYmKGguYXV0b0hlaWdodCYmaj51JiZqPHAmJiFjKSYmZy5oZWlnaHQoXCJhdXRvXCIpfSxfZ2V0UG9zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGQ9Yi5jdXJyZW50LGU9Yi5nZXRWaWV3cG9ydCgpLGM9ZC5tYXJnaW4sZj1iLndyYXAud2lkdGgoKStjWzFdK2NbM10sZz1iLndyYXAuaGVpZ2h0KCkrY1swXStjWzJdLGM9e3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6Y1swXSxsZWZ0OmNbM119O2QuYXV0b0NlbnRlciYmZC5maXhlZCYmXG4hYSYmZzw9ZS5oJiZmPD1lLnc/Yy5wb3NpdGlvbj1cImZpeGVkXCI6ZC5sb2NrZWR8fChjLnRvcCs9ZS55LGMubGVmdCs9ZS54KTtjLnRvcD13KE1hdGgubWF4KGMudG9wLGMudG9wKyhlLmgtZykqZC50b3BSYXRpbykpO2MubGVmdD13KE1hdGgubWF4KGMubGVmdCxjLmxlZnQrKGUudy1mKSpkLmxlZnRSYXRpbykpO3JldHVybiBjfSxfYWZ0ZXJab29tSW46ZnVuY3Rpb24oKXt2YXIgYT1iLmN1cnJlbnQ7YSYmKGIuaXNPcGVuPWIuaXNPcGVuZWQ9ITAsYi53cmFwLmNzcyhcIm92ZXJmbG93XCIsXCJ2aXNpYmxlXCIpLmFkZENsYXNzKFwiZmFuY3lib3gtb3BlbmVkXCIpLGIudXBkYXRlKCksKGEuY2xvc2VDbGlja3x8YS5uZXh0Q2xpY2smJjE8Yi5ncm91cC5sZW5ndGgpJiZiLmlubmVyLmNzcyhcImN1cnNvclwiLFwicG9pbnRlclwiKS5iaW5kKFwiY2xpY2suZmJcIixmdW5jdGlvbihkKXshZihkLnRhcmdldCkuaXMoXCJhXCIpJiYhZihkLnRhcmdldCkucGFyZW50KCkuaXMoXCJhXCIpJiYoZC5wcmV2ZW50RGVmYXVsdCgpLFxuYlthLmNsb3NlQ2xpY2s/XCJjbG9zZVwiOlwibmV4dFwiXSgpKX0pLGEuY2xvc2VCdG4mJmYoYS50cGwuY2xvc2VCdG4pLmFwcGVuZFRvKGIuc2tpbikuYmluZChcImNsaWNrLmZiXCIsZnVuY3Rpb24oYSl7YS5wcmV2ZW50RGVmYXVsdCgpO2IuY2xvc2UoKX0pLGEuYXJyb3dzJiYxPGIuZ3JvdXAubGVuZ3RoJiYoKGEubG9vcHx8MDxhLmluZGV4KSYmZihhLnRwbC5wcmV2KS5hcHBlbmRUbyhiLm91dGVyKS5iaW5kKFwiY2xpY2suZmJcIixiLnByZXYpLChhLmxvb3B8fGEuaW5kZXg8Yi5ncm91cC5sZW5ndGgtMSkmJmYoYS50cGwubmV4dCkuYXBwZW5kVG8oYi5vdXRlcikuYmluZChcImNsaWNrLmZiXCIsYi5uZXh0KSksYi50cmlnZ2VyKFwiYWZ0ZXJTaG93XCIpLCFhLmxvb3AmJmEuaW5kZXg9PT1hLmdyb3VwLmxlbmd0aC0xP2IucGxheSghMSk6Yi5vcHRzLmF1dG9QbGF5JiYhYi5wbGF5ZXIuaXNBY3RpdmUmJihiLm9wdHMuYXV0b1BsYXk9ITEsYi5wbGF5KCkpKX0sX2FmdGVyWm9vbU91dDpmdW5jdGlvbihhKXthPVxuYXx8Yi5jdXJyZW50O2YoXCIuZmFuY3lib3gtd3JhcFwiKS50cmlnZ2VyKFwib25SZXNldFwiKS5yZW1vdmUoKTtmLmV4dGVuZChiLHtncm91cDp7fSxvcHRzOnt9LHJvdXRlcjohMSxjdXJyZW50Om51bGwsaXNBY3RpdmU6ITEsaXNPcGVuZWQ6ITEsaXNPcGVuOiExLGlzQ2xvc2luZzohMSx3cmFwOm51bGwsc2tpbjpudWxsLG91dGVyOm51bGwsaW5uZXI6bnVsbH0pO2IudHJpZ2dlcihcImFmdGVyQ2xvc2VcIixhKX19KTtiLnRyYW5zaXRpb25zPXtnZXRPcmlnUG9zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1iLmN1cnJlbnQsZD1hLmVsZW1lbnQsZT1hLm9yaWcsYz17fSxmPTUwLGc9NTAsaD1hLmhQYWRkaW5nLGo9YS53UGFkZGluZyxtPWIuZ2V0Vmlld3BvcnQoKTshZSYmKGEuaXNEb20mJmQuaXMoXCI6dmlzaWJsZVwiKSkmJihlPWQuZmluZChcImltZzpmaXJzdFwiKSxlLmxlbmd0aHx8KGU9ZCkpO3QoZSk/KGM9ZS5vZmZzZXQoKSxlLmlzKFwiaW1nXCIpJiYoZj1lLm91dGVyV2lkdGgoKSxnPWUub3V0ZXJIZWlnaHQoKSkpOlxuKGMudG9wPW0ueSsobS5oLWcpKmEudG9wUmF0aW8sYy5sZWZ0PW0ueCsobS53LWYpKmEubGVmdFJhdGlvKTtpZihcImZpeGVkXCI9PT1iLndyYXAuY3NzKFwicG9zaXRpb25cIil8fGEubG9ja2VkKWMudG9wLT1tLnksYy5sZWZ0LT1tLng7cmV0dXJuIGM9e3RvcDp3KGMudG9wLWgqYS50b3BSYXRpbyksbGVmdDp3KGMubGVmdC1qKmEubGVmdFJhdGlvKSx3aWR0aDp3KGYraiksaGVpZ2h0OncoZytoKX19LHN0ZXA6ZnVuY3Rpb24oYSxkKXt2YXIgZSxjLGY9ZC5wcm9wO2M9Yi5jdXJyZW50O3ZhciBnPWMud3JhcFNwYWNlLGg9Yy5za2luU3BhY2U7aWYoXCJ3aWR0aFwiPT09Znx8XCJoZWlnaHRcIj09PWYpZT1kLmVuZD09PWQuc3RhcnQ/MTooYS1kLnN0YXJ0KS8oZC5lbmQtZC5zdGFydCksYi5pc0Nsb3NpbmcmJihlPTEtZSksYz1cIndpZHRoXCI9PT1mP2Mud1BhZGRpbmc6Yy5oUGFkZGluZyxjPWEtYyxiLnNraW5bZl0obChcIndpZHRoXCI9PT1mP2M6Yy1nKmUpKSxiLmlubmVyW2ZdKGwoXCJ3aWR0aFwiPT09XG5mP2M6Yy1nKmUtaCplKSl9LHpvb21JbjpmdW5jdGlvbigpe3ZhciBhPWIuY3VycmVudCxkPWEucG9zLGU9YS5vcGVuRWZmZWN0LGM9XCJlbGFzdGljXCI9PT1lLGs9Zi5leHRlbmQoe29wYWNpdHk6MX0sZCk7ZGVsZXRlIGsucG9zaXRpb247Yz8oZD10aGlzLmdldE9yaWdQb3NpdGlvbigpLGEub3Blbk9wYWNpdHkmJihkLm9wYWNpdHk9MC4xKSk6XCJmYWRlXCI9PT1lJiYoZC5vcGFjaXR5PTAuMSk7Yi53cmFwLmNzcyhkKS5hbmltYXRlKGsse2R1cmF0aW9uOlwibm9uZVwiPT09ZT8wOmEub3BlblNwZWVkLGVhc2luZzphLm9wZW5FYXNpbmcsc3RlcDpjP3RoaXMuc3RlcDpudWxsLGNvbXBsZXRlOmIuX2FmdGVyWm9vbUlufSl9LHpvb21PdXQ6ZnVuY3Rpb24oKXt2YXIgYT1iLmN1cnJlbnQsZD1hLmNsb3NlRWZmZWN0LGU9XCJlbGFzdGljXCI9PT1kLGM9e29wYWNpdHk6MC4xfTtlJiYoYz10aGlzLmdldE9yaWdQb3NpdGlvbigpLGEuY2xvc2VPcGFjaXR5JiYoYy5vcGFjaXR5PTAuMSkpO2Iud3JhcC5hbmltYXRlKGMsXG57ZHVyYXRpb246XCJub25lXCI9PT1kPzA6YS5jbG9zZVNwZWVkLGVhc2luZzphLmNsb3NlRWFzaW5nLHN0ZXA6ZT90aGlzLnN0ZXA6bnVsbCxjb21wbGV0ZTpiLl9hZnRlclpvb21PdXR9KX0sY2hhbmdlSW46ZnVuY3Rpb24oKXt2YXIgYT1iLmN1cnJlbnQsZD1hLm5leHRFZmZlY3QsZT1hLnBvcyxjPXtvcGFjaXR5OjF9LGY9Yi5kaXJlY3Rpb24sZztlLm9wYWNpdHk9MC4xO1wiZWxhc3RpY1wiPT09ZCYmKGc9XCJkb3duXCI9PT1mfHxcInVwXCI9PT1mP1widG9wXCI6XCJsZWZ0XCIsXCJkb3duXCI9PT1mfHxcInJpZ2h0XCI9PT1mPyhlW2ddPXcobChlW2ddKS0yMDApLGNbZ109XCIrPTIwMHB4XCIpOihlW2ddPXcobChlW2ddKSsyMDApLGNbZ109XCItPTIwMHB4XCIpKTtcIm5vbmVcIj09PWQ/Yi5fYWZ0ZXJab29tSW4oKTpiLndyYXAuY3NzKGUpLmFuaW1hdGUoYyx7ZHVyYXRpb246YS5uZXh0U3BlZWQsZWFzaW5nOmEubmV4dEVhc2luZyxjb21wbGV0ZTpiLl9hZnRlclpvb21Jbn0pfSxjaGFuZ2VPdXQ6ZnVuY3Rpb24oKXt2YXIgYT1cbmIucHJldmlvdXMsZD1hLnByZXZFZmZlY3QsZT17b3BhY2l0eTowLjF9LGM9Yi5kaXJlY3Rpb247XCJlbGFzdGljXCI9PT1kJiYoZVtcImRvd25cIj09PWN8fFwidXBcIj09PWM/XCJ0b3BcIjpcImxlZnRcIl09KFwidXBcIj09PWN8fFwibGVmdFwiPT09Yz9cIi1cIjpcIitcIikrXCI9MjAwcHhcIik7YS53cmFwLmFuaW1hdGUoZSx7ZHVyYXRpb246XCJub25lXCI9PT1kPzA6YS5wcmV2U3BlZWQsZWFzaW5nOmEucHJldkVhc2luZyxjb21wbGV0ZTpmdW5jdGlvbigpe2YodGhpcykudHJpZ2dlcihcIm9uUmVzZXRcIikucmVtb3ZlKCl9fSl9fTtiLmhlbHBlcnMub3ZlcmxheT17ZGVmYXVsdHM6e2Nsb3NlQ2xpY2s6ITAsc3BlZWRPdXQ6MjAwLHNob3dFYXJseTohMCxjc3M6e30sbG9ja2VkOiFzLGZpeGVkOiEwfSxvdmVybGF5Om51bGwsZml4ZWQ6ITEsZWw6ZihcImh0bWxcIiksY3JlYXRlOmZ1bmN0aW9uKGEpe2E9Zi5leHRlbmQoe30sdGhpcy5kZWZhdWx0cyxhKTt0aGlzLm92ZXJsYXkmJnRoaXMuY2xvc2UoKTt0aGlzLm92ZXJsYXk9XG5mKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtb3ZlcmxheVwiPjwvZGl2PicpLmFwcGVuZFRvKGIuY29taW5nP2IuY29taW5nLnBhcmVudDphLnBhcmVudCk7dGhpcy5maXhlZD0hMTthLmZpeGVkJiZiLmRlZmF1bHRzLmZpeGVkJiYodGhpcy5vdmVybGF5LmFkZENsYXNzKFwiZmFuY3lib3gtb3ZlcmxheS1maXhlZFwiKSx0aGlzLmZpeGVkPSEwKX0sb3BlbjpmdW5jdGlvbihhKXt2YXIgZD10aGlzO2E9Zi5leHRlbmQoe30sdGhpcy5kZWZhdWx0cyxhKTt0aGlzLm92ZXJsYXk/dGhpcy5vdmVybGF5LnVuYmluZChcIi5vdmVybGF5XCIpLndpZHRoKFwiYXV0b1wiKS5oZWlnaHQoXCJhdXRvXCIpOnRoaXMuY3JlYXRlKGEpO3RoaXMuZml4ZWR8fChuLmJpbmQoXCJyZXNpemUub3ZlcmxheVwiLGYucHJveHkodGhpcy51cGRhdGUsdGhpcykpLHRoaXMudXBkYXRlKCkpO2EuY2xvc2VDbGljayYmdGhpcy5vdmVybGF5LmJpbmQoXCJjbGljay5vdmVybGF5XCIsZnVuY3Rpb24oYSl7aWYoZihhLnRhcmdldCkuaGFzQ2xhc3MoXCJmYW5jeWJveC1vdmVybGF5XCIpKXJldHVybiBiLmlzQWN0aXZlP1xuYi5jbG9zZSgpOmQuY2xvc2UoKSwhMX0pO3RoaXMub3ZlcmxheS5jc3MoYS5jc3MpLnNob3coKX0sY2xvc2U6ZnVuY3Rpb24oKXt2YXIgYSxiO24udW5iaW5kKFwicmVzaXplLm92ZXJsYXlcIik7dGhpcy5lbC5oYXNDbGFzcyhcImZhbmN5Ym94LWxvY2tcIikmJihmKFwiLmZhbmN5Ym94LW1hcmdpblwiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LW1hcmdpblwiKSxhPW4uc2Nyb2xsVG9wKCksYj1uLnNjcm9sbExlZnQoKSx0aGlzLmVsLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtbG9ja1wiKSxuLnNjcm9sbFRvcChhKS5zY3JvbGxMZWZ0KGIpKTtmKFwiLmZhbmN5Ym94LW92ZXJsYXlcIikucmVtb3ZlKCkuaGlkZSgpO2YuZXh0ZW5kKHRoaXMse292ZXJsYXk6bnVsbCxmaXhlZDohMX0pfSx1cGRhdGU6ZnVuY3Rpb24oKXt2YXIgYT1cIjEwMCVcIixiO3RoaXMub3ZlcmxheS53aWR0aChhKS5oZWlnaHQoXCIxMDAlXCIpO0k/KGI9TWF0aC5tYXgoRy5kb2N1bWVudEVsZW1lbnQub2Zmc2V0V2lkdGgsRy5ib2R5Lm9mZnNldFdpZHRoKSxcbnAud2lkdGgoKT5iJiYoYT1wLndpZHRoKCkpKTpwLndpZHRoKCk+bi53aWR0aCgpJiYoYT1wLndpZHRoKCkpO3RoaXMub3ZlcmxheS53aWR0aChhKS5oZWlnaHQocC5oZWlnaHQoKSl9LG9uUmVhZHk6ZnVuY3Rpb24oYSxiKXt2YXIgZT10aGlzLm92ZXJsYXk7ZihcIi5mYW5jeWJveC1vdmVybGF5XCIpLnN0b3AoITAsITApO2V8fHRoaXMuY3JlYXRlKGEpO2EubG9ja2VkJiYodGhpcy5maXhlZCYmYi5maXhlZCkmJihlfHwodGhpcy5tYXJnaW49cC5oZWlnaHQoKT5uLmhlaWdodCgpP2YoXCJodG1sXCIpLmNzcyhcIm1hcmdpbi1yaWdodFwiKS5yZXBsYWNlKFwicHhcIixcIlwiKTohMSksYi5sb2NrZWQ9dGhpcy5vdmVybGF5LmFwcGVuZChiLndyYXApLGIuZml4ZWQ9ITEpOyEwPT09YS5zaG93RWFybHkmJnRoaXMuYmVmb3JlU2hvdy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGJlZm9yZVNob3c6ZnVuY3Rpb24oYSxiKXt2YXIgZSxjO2IubG9ja2VkJiYoITEhPT10aGlzLm1hcmdpbiYmKGYoXCIqXCIpLmZpbHRlcihmdW5jdGlvbigpe3JldHVyblwiZml4ZWRcIj09PVxuZih0aGlzKS5jc3MoXCJwb3NpdGlvblwiKSYmIWYodGhpcykuaGFzQ2xhc3MoXCJmYW5jeWJveC1vdmVybGF5XCIpJiYhZih0aGlzKS5oYXNDbGFzcyhcImZhbmN5Ym94LXdyYXBcIil9KS5hZGRDbGFzcyhcImZhbmN5Ym94LW1hcmdpblwiKSx0aGlzLmVsLmFkZENsYXNzKFwiZmFuY3lib3gtbWFyZ2luXCIpKSxlPW4uc2Nyb2xsVG9wKCksYz1uLnNjcm9sbExlZnQoKSx0aGlzLmVsLmFkZENsYXNzKFwiZmFuY3lib3gtbG9ja1wiKSxuLnNjcm9sbFRvcChlKS5zY3JvbGxMZWZ0KGMpKTt0aGlzLm9wZW4oYSl9LG9uVXBkYXRlOmZ1bmN0aW9uKCl7dGhpcy5maXhlZHx8dGhpcy51cGRhdGUoKX0sYWZ0ZXJDbG9zZTpmdW5jdGlvbihhKXt0aGlzLm92ZXJsYXkmJiFiLmNvbWluZyYmdGhpcy5vdmVybGF5LmZhZGVPdXQoYS5zcGVlZE91dCxmLnByb3h5KHRoaXMuY2xvc2UsdGhpcykpfX07Yi5oZWxwZXJzLnRpdGxlPXtkZWZhdWx0czp7dHlwZTpcImZsb2F0XCIscG9zaXRpb246XCJib3R0b21cIn0sYmVmb3JlU2hvdzpmdW5jdGlvbihhKXt2YXIgZD1cbmIuY3VycmVudCxlPWQudGl0bGUsYz1hLnR5cGU7Zi5pc0Z1bmN0aW9uKGUpJiYoZT1lLmNhbGwoZC5lbGVtZW50LGQpKTtpZihxKGUpJiZcIlwiIT09Zi50cmltKGUpKXtkPWYoJzxkaXYgY2xhc3M9XCJmYW5jeWJveC10aXRsZSBmYW5jeWJveC10aXRsZS0nK2MrJy13cmFwXCI+JytlK1wiPC9kaXY+XCIpO3N3aXRjaChjKXtjYXNlIFwiaW5zaWRlXCI6Yz1iLnNraW47YnJlYWs7Y2FzZSBcIm91dHNpZGVcIjpjPWIud3JhcDticmVhaztjYXNlIFwib3ZlclwiOmM9Yi5pbm5lcjticmVhaztkZWZhdWx0OmM9Yi5za2luLGQuYXBwZW5kVG8oXCJib2R5XCIpLEkmJmQud2lkdGgoZC53aWR0aCgpKSxkLndyYXBJbm5lcignPHNwYW4gY2xhc3M9XCJjaGlsZFwiPjwvc3Bhbj4nKSxiLmN1cnJlbnQubWFyZ2luWzJdKz1NYXRoLmFicyhsKGQuY3NzKFwibWFyZ2luLWJvdHRvbVwiKSkpfWRbXCJ0b3BcIj09PWEucG9zaXRpb24/XCJwcmVwZW5kVG9cIjpcImFwcGVuZFRvXCJdKGMpfX19O2YuZm4uZmFuY3lib3g9ZnVuY3Rpb24oYSl7dmFyIGQsXG5lPWYodGhpcyksYz10aGlzLnNlbGVjdG9yfHxcIlwiLGs9ZnVuY3Rpb24oZyl7dmFyIGg9Zih0aGlzKS5ibHVyKCksaj1kLGssbDshZy5jdHJsS2V5JiYoIWcuYWx0S2V5JiYhZy5zaGlmdEtleSYmIWcubWV0YUtleSkmJiFoLmlzKFwiLmZhbmN5Ym94LXdyYXBcIikmJihrPWEuZ3JvdXBBdHRyfHxcImRhdGEtZmFuY3lib3gtZ3JvdXBcIixsPWguYXR0cihrKSxsfHwoaz1cInJlbFwiLGw9aC5nZXQoMClba10pLGwmJihcIlwiIT09bCYmXCJub2ZvbGxvd1wiIT09bCkmJihoPWMubGVuZ3RoP2YoYyk6ZSxoPWguZmlsdGVyKFwiW1wiK2srJz1cIicrbCsnXCJdJyksaj1oLmluZGV4KHRoaXMpKSxhLmluZGV4PWosITEhPT1iLm9wZW4oaCxhKSYmZy5wcmV2ZW50RGVmYXVsdCgpKX07YT1hfHx7fTtkPWEuaW5kZXh8fDA7IWN8fCExPT09YS5saXZlP2UudW5iaW5kKFwiY2xpY2suZmItc3RhcnRcIikuYmluZChcImNsaWNrLmZiLXN0YXJ0XCIsayk6cC51bmRlbGVnYXRlKGMsXCJjbGljay5mYi1zdGFydFwiKS5kZWxlZ2F0ZShjK1xuXCI6bm90KCcuZmFuY3lib3gtaXRlbSwgLmZhbmN5Ym94LW5hdicpXCIsXCJjbGljay5mYi1zdGFydFwiLGspO3RoaXMuZmlsdGVyKFwiW2RhdGEtZmFuY3lib3gtc3RhcnQ9MV1cIikudHJpZ2dlcihcImNsaWNrXCIpO3JldHVybiB0aGlzfTtwLnJlYWR5KGZ1bmN0aW9uKCl7dmFyIGEsZDtmLnNjcm9sbGJhcldpZHRoPT09diYmKGYuc2Nyb2xsYmFyV2lkdGg9ZnVuY3Rpb24oKXt2YXIgYT1mKCc8ZGl2IHN0eWxlPVwid2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzphdXRvXCI+PGRpdi8+PC9kaXY+JykuYXBwZW5kVG8oXCJib2R5XCIpLGI9YS5jaGlsZHJlbigpLGI9Yi5pbm5lcldpZHRoKCktYi5oZWlnaHQoOTkpLmlubmVyV2lkdGgoKTthLnJlbW92ZSgpO3JldHVybiBifSk7aWYoZi5zdXBwb3J0LmZpeGVkUG9zaXRpb249PT12KXthPWYuc3VwcG9ydDtkPWYoJzxkaXYgc3R5bGU9XCJwb3NpdGlvbjpmaXhlZDt0b3A6MjBweDtcIj48L2Rpdj4nKS5hcHBlbmRUbyhcImJvZHlcIik7dmFyIGU9MjA9PT1cbmRbMF0ub2Zmc2V0VG9wfHwxNT09PWRbMF0ub2Zmc2V0VG9wO2QucmVtb3ZlKCk7YS5maXhlZFBvc2l0aW9uPWV9Zi5leHRlbmQoYi5kZWZhdWx0cyx7c2Nyb2xsYmFyV2lkdGg6Zi5zY3JvbGxiYXJXaWR0aCgpLGZpeGVkOmYuc3VwcG9ydC5maXhlZFBvc2l0aW9uLHBhcmVudDpmKFwiYm9keVwiKX0pO2E9ZihyKS53aWR0aCgpO0ouYWRkQ2xhc3MoXCJmYW5jeWJveC1sb2NrLXRlc3RcIik7ZD1mKHIpLndpZHRoKCk7Si5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWxvY2stdGVzdFwiKTtmKFwiPHN0eWxlIHR5cGU9J3RleHQvY3NzJz4uZmFuY3lib3gtbWFyZ2lue21hcmdpbi1yaWdodDpcIisoZC1hKStcInB4O308L3N0eWxlPlwiKS5hcHBlbmRUbyhcImhlYWRcIil9KX0pKHdpbmRvdyxkb2N1bWVudCxqUXVlcnkpOyIsIiAvKiFcbiAqIEJ1dHRvbnMgaGVscGVyIGZvciBmYW5jeUJveFxuICogdmVyc2lvbjogMS4wLjUgKE1vbiwgMTUgT2N0IDIwMTIpXG4gKiBAcmVxdWlyZXMgZmFuY3lCb3ggdjIuMCBvciBsYXRlclxuICpcbiAqIFVzYWdlOlxuICogICAgICQoXCIuZmFuY3lib3hcIikuZmFuY3lib3goe1xuICogICAgICAgICBoZWxwZXJzIDoge1xuICogICAgICAgICAgICAgYnV0dG9uczoge1xuICogICAgICAgICAgICAgICAgIHBvc2l0aW9uIDogJ3RvcCdcbiAqICAgICAgICAgICAgIH1cbiAqICAgICAgICAgfVxuICogICAgIH0pO1xuICpcbiAqL1xuKGZ1bmN0aW9uICgkKSB7XG5cdC8vU2hvcnRjdXQgZm9yIGZhbmN5Qm94IG9iamVjdFxuXHR2YXIgRiA9ICQuZmFuY3lib3g7XG5cblx0Ly9BZGQgaGVscGVyIG9iamVjdFxuXHRGLmhlbHBlcnMuYnV0dG9ucyA9IHtcblx0XHRkZWZhdWx0cyA6IHtcblx0XHRcdHNraXBTaW5nbGUgOiBmYWxzZSwgLy8gZGlzYWJsZXMgaWYgZ2FsbGVyeSBjb250YWlucyBzaW5nbGUgaW1hZ2Vcblx0XHRcdHBvc2l0aW9uICAgOiAndG9wJywgLy8gJ3RvcCcgb3IgJ2JvdHRvbSdcblx0XHRcdHRwbCAgICAgICAgOiAnPGRpdiBpZD1cImZhbmN5Ym94LWJ1dHRvbnNcIj48dWw+PGxpPjxhIGNsYXNzPVwiYnRuUHJldlwiIHRpdGxlPVwiUHJldmlvdXNcIiBocmVmPVwiamF2YXNjcmlwdDo7XCI+PC9hPjwvbGk+PGxpPjxhIGNsYXNzPVwiYnRuUGxheVwiIHRpdGxlPVwiU3RhcnQgc2xpZGVzaG93XCIgaHJlZj1cImphdmFzY3JpcHQ6O1wiPjwvYT48L2xpPjxsaT48YSBjbGFzcz1cImJ0bk5leHRcIiB0aXRsZT1cIk5leHRcIiBocmVmPVwiamF2YXNjcmlwdDo7XCI+PC9hPjwvbGk+PGxpPjxhIGNsYXNzPVwiYnRuVG9nZ2xlXCIgdGl0bGU9XCJUb2dnbGUgc2l6ZVwiIGhyZWY9XCJqYXZhc2NyaXB0OjtcIj48L2E+PC9saT48bGk+PGEgY2xhc3M9XCJidG5DbG9zZVwiIHRpdGxlPVwiQ2xvc2VcIiBocmVmPVwiamF2YXNjcmlwdDo7XCI+PC9hPjwvbGk+PC91bD48L2Rpdj4nXG5cdFx0fSxcblxuXHRcdGxpc3QgOiBudWxsLFxuXHRcdGJ1dHRvbnM6IG51bGwsXG5cblx0XHRiZWZvcmVMb2FkOiBmdW5jdGlvbiAob3B0cywgb2JqKSB7XG5cdFx0XHQvL1JlbW92ZSBzZWxmIGlmIGdhbGxlcnkgZG8gbm90IGhhdmUgYXQgbGVhc3QgdHdvIGl0ZW1zXG5cblx0XHRcdGlmIChvcHRzLnNraXBTaW5nbGUgJiYgb2JqLmdyb3VwLmxlbmd0aCA8IDIpIHtcblx0XHRcdFx0b2JqLmhlbHBlcnMuYnV0dG9ucyA9IGZhbHNlO1xuXHRcdFx0XHRvYmouY2xvc2VCdG4gPSB0cnVlO1xuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly9JbmNyZWFzZSB0b3AgbWFyZ2luIHRvIGdpdmUgc3BhY2UgZm9yIGJ1dHRvbnNcblx0XHRcdG9iai5tYXJnaW5bIG9wdHMucG9zaXRpb24gPT09ICdib3R0b20nID8gMiA6IDAgXSArPSAzMDtcblx0XHR9LFxuXG5cdFx0b25QbGF5U3RhcnQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmICh0aGlzLmJ1dHRvbnMpIHtcblx0XHRcdFx0dGhpcy5idXR0b25zLnBsYXkuYXR0cigndGl0bGUnLCAnUGF1c2Ugc2xpZGVzaG93JykuYWRkQ2xhc3MoJ2J0blBsYXlPbicpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRvblBsYXlFbmQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmICh0aGlzLmJ1dHRvbnMpIHtcblx0XHRcdFx0dGhpcy5idXR0b25zLnBsYXkuYXR0cigndGl0bGUnLCAnU3RhcnQgc2xpZGVzaG93JykucmVtb3ZlQ2xhc3MoJ2J0blBsYXlPbicpO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRhZnRlclNob3c6IGZ1bmN0aW9uIChvcHRzLCBvYmopIHtcblx0XHRcdHZhciBidXR0b25zID0gdGhpcy5idXR0b25zO1xuXG5cdFx0XHRpZiAoIWJ1dHRvbnMpIHtcblx0XHRcdFx0dGhpcy5saXN0ID0gJChvcHRzLnRwbCkuYWRkQ2xhc3Mob3B0cy5wb3NpdGlvbikuYXBwZW5kVG8oJ2JvZHknKTtcblxuXHRcdFx0XHRidXR0b25zID0ge1xuXHRcdFx0XHRcdHByZXYgICA6IHRoaXMubGlzdC5maW5kKCcuYnRuUHJldicpLmNsaWNrKCBGLnByZXYgKSxcblx0XHRcdFx0XHRuZXh0ICAgOiB0aGlzLmxpc3QuZmluZCgnLmJ0bk5leHQnKS5jbGljayggRi5uZXh0ICksXG5cdFx0XHRcdFx0cGxheSAgIDogdGhpcy5saXN0LmZpbmQoJy5idG5QbGF5JykuY2xpY2soIEYucGxheSApLFxuXHRcdFx0XHRcdHRvZ2dsZSA6IHRoaXMubGlzdC5maW5kKCcuYnRuVG9nZ2xlJykuY2xpY2soIEYudG9nZ2xlICksXG5cdFx0XHRcdFx0Y2xvc2UgIDogdGhpcy5saXN0LmZpbmQoJy5idG5DbG9zZScpLmNsaWNrKCBGLmNsb3NlIClcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvL1ByZXZcblx0XHRcdGlmIChvYmouaW5kZXggPiAwIHx8IG9iai5sb29wKSB7XG5cdFx0XHRcdGJ1dHRvbnMucHJldi5yZW1vdmVDbGFzcygnYnRuRGlzYWJsZWQnKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1dHRvbnMucHJldi5hZGRDbGFzcygnYnRuRGlzYWJsZWQnKTtcblx0XHRcdH1cblxuXHRcdFx0Ly9OZXh0IC8gUGxheVxuXHRcdFx0aWYgKG9iai5sb29wIHx8IG9iai5pbmRleCA8IG9iai5ncm91cC5sZW5ndGggLSAxKSB7XG5cdFx0XHRcdGJ1dHRvbnMubmV4dC5yZW1vdmVDbGFzcygnYnRuRGlzYWJsZWQnKTtcblx0XHRcdFx0YnV0dG9ucy5wbGF5LnJlbW92ZUNsYXNzKCdidG5EaXNhYmxlZCcpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRidXR0b25zLm5leHQuYWRkQ2xhc3MoJ2J0bkRpc2FibGVkJyk7XG5cdFx0XHRcdGJ1dHRvbnMucGxheS5hZGRDbGFzcygnYnRuRGlzYWJsZWQnKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5idXR0b25zID0gYnV0dG9ucztcblxuXHRcdFx0dGhpcy5vblVwZGF0ZShvcHRzLCBvYmopO1xuXHRcdH0sXG5cblx0XHRvblVwZGF0ZTogZnVuY3Rpb24gKG9wdHMsIG9iaikge1xuXHRcdFx0dmFyIHRvZ2dsZTtcblxuXHRcdFx0aWYgKCF0aGlzLmJ1dHRvbnMpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR0b2dnbGUgPSB0aGlzLmJ1dHRvbnMudG9nZ2xlLnJlbW92ZUNsYXNzKCdidG5EaXNhYmxlZCBidG5Ub2dnbGVPbicpO1xuXG5cdFx0XHQvL1NpemUgdG9nZ2xlIGJ1dHRvblxuXHRcdFx0aWYgKG9iai5jYW5TaHJpbmspIHtcblx0XHRcdFx0dG9nZ2xlLmFkZENsYXNzKCdidG5Ub2dnbGVPbicpO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCFvYmouY2FuRXhwYW5kKSB7XG5cdFx0XHRcdHRvZ2dsZS5hZGRDbGFzcygnYnRuRGlzYWJsZWQnKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JlQ2xvc2U6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmICh0aGlzLmxpc3QpIHtcblx0XHRcdFx0dGhpcy5saXN0LnJlbW92ZSgpO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLmxpc3QgICAgPSBudWxsO1xuXHRcdFx0dGhpcy5idXR0b25zID0gbnVsbDtcblx0XHR9XG5cdH07XG5cbn0oalF1ZXJ5KSk7XG4iLCIvKiFcbiAqIE1lZGlhIGhlbHBlciBmb3IgZmFuY3lCb3hcbiAqIHZlcnNpb246IDEuMC42IChGcmksIDE0IEp1biAyMDEzKVxuICogQHJlcXVpcmVzIGZhbmN5Qm94IHYyLjAgb3IgbGF0ZXJcbiAqXG4gKiBVc2FnZTpcbiAqICAgICAkKFwiLmZhbmN5Ym94XCIpLmZhbmN5Ym94KHtcbiAqICAgICAgICAgaGVscGVycyA6IHtcbiAqICAgICAgICAgICAgIG1lZGlhOiB0cnVlXG4gKiAgICAgICAgIH1cbiAqICAgICB9KTtcbiAqXG4gKiBTZXQgY3VzdG9tIFVSTCBwYXJhbWV0ZXJzOlxuICogICAgICQoXCIuZmFuY3lib3hcIikuZmFuY3lib3goe1xuICogICAgICAgICBoZWxwZXJzIDoge1xuICogICAgICAgICAgICAgbWVkaWE6IHtcbiAqICAgICAgICAgICAgICAgICB5b3V0dWJlIDoge1xuICogICAgICAgICAgICAgICAgICAgICBwYXJhbXMgOiB7XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvcGxheSA6IDBcbiAqICAgICAgICAgICAgICAgICAgICAgfVxuICogICAgICAgICAgICAgICAgIH1cbiAqICAgICAgICAgICAgIH1cbiAqICAgICAgICAgfVxuICogICAgIH0pO1xuICpcbiAqIE9yOlxuICogICAgICQoXCIuZmFuY3lib3hcIikuZmFuY3lib3goeyxcbiAqICAgICAgICAgaGVscGVycyA6IHtcbiAqICAgICAgICAgICAgIG1lZGlhOiB0cnVlXG4gKiAgICAgICAgIH0sXG4gKiAgICAgICAgIHlvdXR1YmUgOiB7XG4gKiAgICAgICAgICAgICBhdXRvcGxheTogMFxuICogICAgICAgICB9XG4gKiAgICAgfSk7XG4gKlxuICogIFN1cHBvcnRzOlxuICpcbiAqICAgICAgWW91dHViZVxuICogICAgICAgICAgaHR0cDovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PW9wajI0S256cldvXG4gKiAgICAgICAgICBodHRwOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL29wajI0S256cldvXG4gKiAgICAgICAgICBodHRwOi8veW91dHUuYmUvb3BqMjRLbnpyV29cbiAqXHRcdFx0aHR0cDovL3d3dy55b3V0dWJlLW5vY29va2llLmNvbS9lbWJlZC9vcGoyNEtuenJXb1xuICogICAgICBWaW1lb1xuICogICAgICAgICAgaHR0cDovL3ZpbWVvLmNvbS80MDY0ODE2OVxuICogICAgICAgICAgaHR0cDovL3ZpbWVvLmNvbS9jaGFubmVscy9zdGFmZnBpY2tzLzM4ODQzNjI4XG4gKiAgICAgICAgICBodHRwOi8vdmltZW8uY29tL2dyb3Vwcy9zdXJyZWFsaXNtL3ZpZGVvcy8zNjUxNjM4NFxuICogICAgICAgICAgaHR0cDovL3BsYXllci52aW1lby5jb20vdmlkZW8vNDUwNzQzMDNcbiAqICAgICAgTWV0YWNhZmVcbiAqICAgICAgICAgIGh0dHA6Ly93d3cubWV0YWNhZmUuY29tL3dhdGNoLzc2MzU5NjQvZHJfc2V1c3NfdGhlX2xvcmF4X21vdmllX3RyYWlsZXIvXG4gKiAgICAgICAgICBodHRwOi8vd3d3Lm1ldGFjYWZlLmNvbS93YXRjaC83NjM1OTY0L1xuICogICAgICBEYWlseW1vdGlvblxuICogICAgICAgICAgaHR0cDovL3d3dy5kYWlseW1vdGlvbi5jb20vdmlkZW8veG95dHFoX2RyLXNldXNzLXRoZS1sb3JheC1wcmVtaWVyZV9wZW9wbGVcbiAqICAgICAgVHdpdHZpZFxuICogICAgICAgICAgaHR0cDovL3R3aXR2aWQuY29tL1FZN01EXG4gKiAgICAgIFR3aXRwaWNcbiAqICAgICAgICAgIGh0dHA6Ly90d2l0cGljLmNvbS83cDkzc3RcbiAqICAgICAgSW5zdGFncmFtXG4gKiAgICAgICAgICBodHRwOi8vaW5zdGFnci5hbS9wL0llamt1VUd4UW4vXG4gKiAgICAgICAgICBodHRwOi8vaW5zdGFncmFtLmNvbS9wL0llamt1VUd4UW4vXG4gKiAgICAgIEdvb2dsZSBtYXBzXG4gKiAgICAgICAgICBodHRwOi8vbWFwcy5nb29nbGUuY29tL21hcHM/cT1FaWZmZWwrVG93ZXIsK0F2ZW51ZStHdXN0YXZlK0VpZmZlbCwrUGFyaXMsK0ZyYW5jZSZ0PWgmej0xN1xuICogICAgICAgICAgaHR0cDovL21hcHMuZ29vZ2xlLmNvbS8/bGw9NDguODU3OTk1LDIuMjk0Mjk3JnNwbj0wLjAwNzY2NiwwLjAyMTEzNiZ0PW0mej0xNlxuICogICAgICAgICAgaHR0cDovL21hcHMuZ29vZ2xlLmNvbS8/bGw9NDguODU5NDYzLDIuMjkyNjI2JnNwbj0wLjAwMDk2NSwwLjAwMjY0MiZ0PW0mej0xOSZsYXllcj1jJmNibGw9NDguODU5NTI0LDIuMjkyNTMyJnBhbm9pZD1ZSjBscTI4T095M1ZUMklxSXVWWTBnJmNicD0xMiwxNTEuNTgsLDAsLTE1LjU2XG4gKi9cbihmdW5jdGlvbiAoJCkge1xuXHRcInVzZSBzdHJpY3RcIjtcblxuXHQvL1Nob3J0Y3V0IGZvciBmYW5jeUJveCBvYmplY3Rcblx0dmFyIEYgPSAkLmZhbmN5Ym94LFxuXHRcdGZvcm1hdCA9IGZ1bmN0aW9uKCB1cmwsIHJleiwgcGFyYW1zICkge1xuXHRcdFx0cGFyYW1zID0gcGFyYW1zIHx8ICcnO1xuXG5cdFx0XHRpZiAoICQudHlwZSggcGFyYW1zICkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRcdHBhcmFtcyA9ICQucGFyYW0ocGFyYW1zLCB0cnVlKTtcblx0XHRcdH1cblxuXHRcdFx0JC5lYWNoKHJleiwgZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuXHRcdFx0XHR1cmwgPSB1cmwucmVwbGFjZSggJyQnICsga2V5LCB2YWx1ZSB8fCAnJyApO1xuXHRcdFx0fSk7XG5cblx0XHRcdGlmIChwYXJhbXMubGVuZ3RoKSB7XG5cdFx0XHRcdHVybCArPSAoIHVybC5pbmRleE9mKCc/JykgPiAwID8gJyYnIDogJz8nICkgKyBwYXJhbXM7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB1cmw7XG5cdFx0fTtcblxuXHQvL0FkZCBoZWxwZXIgb2JqZWN0XG5cdEYuaGVscGVycy5tZWRpYSA9IHtcblx0XHRkZWZhdWx0cyA6IHtcblx0XHRcdHlvdXR1YmUgOiB7XG5cdFx0XHRcdG1hdGNoZXIgOiAvKHlvdXR1YmVcXC5jb218eW91dHVcXC5iZXx5b3V0dWJlLW5vY29va2llXFwuY29tKVxcLyh3YXRjaFxcP3Y9fHZcXC98dVxcL3xlbWJlZFxcLz8pPyh2aWRlb3Nlcmllc1xcP2xpc3Q9KC4qKXxbXFx3LV17MTF9fFxcP2xpc3RUeXBlPSguKikmbGlzdD0oLiopKS4qL2ksXG5cdFx0XHRcdHBhcmFtcyAgOiB7XG5cdFx0XHRcdFx0YXV0b3BsYXkgICAgOiAxLFxuXHRcdFx0XHRcdGF1dG9oaWRlICAgIDogMSxcblx0XHRcdFx0XHRmcyAgICAgICAgICA6IDEsXG5cdFx0XHRcdFx0cmVsICAgICAgICAgOiAwLFxuXHRcdFx0XHRcdGhkICAgICAgICAgIDogMSxcblx0XHRcdFx0XHR3bW9kZSAgICAgICA6ICdvcGFxdWUnLFxuXHRcdFx0XHRcdGVuYWJsZWpzYXBpIDogMVxuXHRcdFx0XHR9LFxuXHRcdFx0XHR0eXBlIDogJ2lmcmFtZScsXG5cdFx0XHRcdHVybCAgOiAnLy93d3cueW91dHViZS5jb20vZW1iZWQvJDMnXG5cdFx0XHR9LFxuXHRcdFx0dmltZW8gOiB7XG5cdFx0XHRcdG1hdGNoZXIgOiAvKD86dmltZW8oPzpwcm8pPy5jb20pXFwvKD86W15cXGRdKyk/KFxcZCspKD86LiopLyxcblx0XHRcdFx0cGFyYW1zICA6IHtcblx0XHRcdFx0XHRhdXRvcGxheSAgICAgIDogMSxcblx0XHRcdFx0XHRoZCAgICAgICAgICAgIDogMSxcblx0XHRcdFx0XHRzaG93X3RpdGxlICAgIDogMSxcblx0XHRcdFx0XHRzaG93X2J5bGluZSAgIDogMSxcblx0XHRcdFx0XHRzaG93X3BvcnRyYWl0IDogMCxcblx0XHRcdFx0XHRmdWxsc2NyZWVuICAgIDogMVxuXHRcdFx0XHR9LFxuXHRcdFx0XHR0eXBlIDogJ2lmcmFtZScsXG5cdFx0XHRcdHVybCAgOiAnLy9wbGF5ZXIudmltZW8uY29tL3ZpZGVvLyQxJ1xuXHRcdFx0fSxcblx0XHRcdG1ldGFjYWZlIDoge1xuXHRcdFx0XHRtYXRjaGVyIDogL21ldGFjYWZlLmNvbVxcLyg/OndhdGNofGZwbGF5ZXIpXFwvKFtcXHdcXC1dezEsMTB9KS8sXG5cdFx0XHRcdHBhcmFtcyAgOiB7XG5cdFx0XHRcdFx0YXV0b1BsYXkgOiAneWVzJ1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0eXBlIDogJ3N3ZicsXG5cdFx0XHRcdHVybCAgOiBmdW5jdGlvbiggcmV6LCBwYXJhbXMsIG9iaiApIHtcblx0XHRcdFx0XHRvYmouc3dmLmZsYXNoVmFycyA9ICdwbGF5ZXJWYXJzPScgKyAkLnBhcmFtKCBwYXJhbXMsIHRydWUgKTtcblxuXHRcdFx0XHRcdHJldHVybiAnLy93d3cubWV0YWNhZmUuY29tL2ZwbGF5ZXIvJyArIHJlelsxXSArICcvLnN3Zic7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkYWlseW1vdGlvbiA6IHtcblx0XHRcdFx0bWF0Y2hlciA6IC9kYWlseW1vdGlvbi5jb21cXC92aWRlb1xcLyguKilcXC8/KC4qKS8sXG5cdFx0XHRcdHBhcmFtcyAgOiB7XG5cdFx0XHRcdFx0YWRkaXRpb25hbEluZm9zIDogMCxcblx0XHRcdFx0XHRhdXRvU3RhcnQgOiAxXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHR5cGUgOiAnc3dmJyxcblx0XHRcdFx0dXJsICA6ICcvL3d3dy5kYWlseW1vdGlvbi5jb20vc3dmL3ZpZGVvLyQxJ1xuXHRcdFx0fSxcblx0XHRcdHR3aXR2aWQgOiB7XG5cdFx0XHRcdG1hdGNoZXIgOiAvdHdpdHZpZFxcLmNvbVxcLyhbYS16QS1aMC05X1xcLVxcP1xcPV0rKS9pLFxuXHRcdFx0XHRwYXJhbXMgIDoge1xuXHRcdFx0XHRcdGF1dG9wbGF5IDogMFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR0eXBlIDogJ2lmcmFtZScsXG5cdFx0XHRcdHVybCAgOiAnLy93d3cudHdpdHZpZC5jb20vZW1iZWQucGhwP2d1aWQ9JDEnXG5cdFx0XHR9LFxuXHRcdFx0dHdpdHBpYyA6IHtcblx0XHRcdFx0bWF0Y2hlciA6IC90d2l0cGljXFwuY29tXFwvKD8hKD86cGxhY2V8cGhvdG9zfGV2ZW50cylcXC8pKFthLXpBLVowLTlcXD9cXD1cXC1dKykvaSxcblx0XHRcdFx0dHlwZSA6ICdpbWFnZScsXG5cdFx0XHRcdHVybCAgOiAnLy90d2l0cGljLmNvbS9zaG93L2Z1bGwvJDEvJ1xuXHRcdFx0fSxcblx0XHRcdGluc3RhZ3JhbSA6IHtcblx0XHRcdFx0bWF0Y2hlciA6IC8oaW5zdGFnclxcLmFtfGluc3RhZ3JhbVxcLmNvbSlcXC9wXFwvKFthLXpBLVowLTlfXFwtXSspXFwvPy9pLFxuXHRcdFx0XHR0eXBlIDogJ2ltYWdlJyxcblx0XHRcdFx0dXJsICA6ICcvLyQxL3AvJDIvbWVkaWEvP3NpemU9bCdcblx0XHRcdH0sXG5cdFx0XHRnb29nbGVfbWFwcyA6IHtcblx0XHRcdFx0bWF0Y2hlciA6IC9tYXBzXFwuZ29vZ2xlXFwuKFthLXpdezIsM30oXFwuW2Etel17Mn0pPylcXC8oXFw/bGw9fG1hcHNcXD8pKC4qKS9pLFxuXHRcdFx0XHR0eXBlIDogJ2lmcmFtZScsXG5cdFx0XHRcdHVybCAgOiBmdW5jdGlvbiggcmV6ICkge1xuXHRcdFx0XHRcdHJldHVybiAnLy9tYXBzLmdvb2dsZS4nICsgcmV6WzFdICsgJy8nICsgcmV6WzNdICsgJycgKyByZXpbNF0gKyAnJm91dHB1dD0nICsgKHJlels0XS5pbmRleE9mKCdsYXllcj1jJykgPiAwID8gJ3N2ZW1iZWQnIDogJ2VtYmVkJyk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JlTG9hZCA6IGZ1bmN0aW9uKG9wdHMsIG9iaikge1xuXHRcdFx0dmFyIHVybCAgID0gb2JqLmhyZWYgfHwgJycsXG5cdFx0XHRcdHR5cGUgID0gZmFsc2UsXG5cdFx0XHRcdHdoYXQsXG5cdFx0XHRcdGl0ZW0sXG5cdFx0XHRcdHJleixcblx0XHRcdFx0cGFyYW1zO1xuXG5cdFx0XHRmb3IgKHdoYXQgaW4gb3B0cykge1xuXHRcdFx0XHRpZiAob3B0cy5oYXNPd25Qcm9wZXJ0eSh3aGF0KSkge1xuXHRcdFx0XHRcdGl0ZW0gPSBvcHRzWyB3aGF0IF07XG5cdFx0XHRcdFx0cmV6ICA9IHVybC5tYXRjaCggaXRlbS5tYXRjaGVyICk7XG5cblx0XHRcdFx0XHRpZiAocmV6KSB7XG5cdFx0XHRcdFx0XHR0eXBlICAgPSBpdGVtLnR5cGU7XG5cdFx0XHRcdFx0XHRwYXJhbXMgPSAkLmV4dGVuZCh0cnVlLCB7fSwgaXRlbS5wYXJhbXMsIG9ialsgd2hhdCBdIHx8ICgkLmlzUGxhaW5PYmplY3Qob3B0c1sgd2hhdCBdKSA/IG9wdHNbIHdoYXQgXS5wYXJhbXMgOiBudWxsKSk7XG5cblx0XHRcdFx0XHRcdHVybCA9ICQudHlwZSggaXRlbS51cmwgKSA9PT0gXCJmdW5jdGlvblwiID8gaXRlbS51cmwuY2FsbCggdGhpcywgcmV6LCBwYXJhbXMsIG9iaiApIDogZm9ybWF0KCBpdGVtLnVybCwgcmV6LCBwYXJhbXMgKTtcblxuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICh0eXBlKSB7XG5cdFx0XHRcdG9iai5ocmVmID0gdXJsO1xuXHRcdFx0XHRvYmoudHlwZSA9IHR5cGU7XG5cblx0XHRcdFx0b2JqLmF1dG9IZWlnaHQgPSBmYWxzZTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cbn0oalF1ZXJ5KSk7IiwiIC8qIVxuICogVGh1bWJuYWlsIGhlbHBlciBmb3IgZmFuY3lCb3hcbiAqIHZlcnNpb246IDEuMC43IChNb24sIDAxIE9jdCAyMDEyKVxuICogQHJlcXVpcmVzIGZhbmN5Qm94IHYyLjAgb3IgbGF0ZXJcbiAqXG4gKiBVc2FnZTpcbiAqICAgICAkKFwiLmZhbmN5Ym94XCIpLmZhbmN5Ym94KHtcbiAqICAgICAgICAgaGVscGVycyA6IHtcbiAqICAgICAgICAgICAgIHRodW1iczoge1xuICogICAgICAgICAgICAgICAgIHdpZHRoICA6IDUwLFxuICogICAgICAgICAgICAgICAgIGhlaWdodCA6IDUwXG4gKiAgICAgICAgICAgICB9XG4gKiAgICAgICAgIH1cbiAqICAgICB9KTtcbiAqXG4gKi9cbihmdW5jdGlvbiAoJCkge1xuXHQvL1Nob3J0Y3V0IGZvciBmYW5jeUJveCBvYmplY3Rcblx0dmFyIEYgPSAkLmZhbmN5Ym94O1xuXG5cdC8vQWRkIGhlbHBlciBvYmplY3Rcblx0Ri5oZWxwZXJzLnRodW1icyA9IHtcblx0XHRkZWZhdWx0cyA6IHtcblx0XHRcdHdpZHRoICAgIDogNTAsICAgICAgIC8vIHRodW1ibmFpbCB3aWR0aFxuXHRcdFx0aGVpZ2h0ICAgOiA1MCwgICAgICAgLy8gdGh1bWJuYWlsIGhlaWdodFxuXHRcdFx0cG9zaXRpb24gOiAnYm90dG9tJywgLy8gJ3RvcCcgb3IgJ2JvdHRvbSdcblx0XHRcdHNvdXJjZSAgIDogZnVuY3Rpb24gKCBpdGVtICkgeyAgLy8gZnVuY3Rpb24gdG8gb2J0YWluIHRoZSBVUkwgb2YgdGhlIHRodW1ibmFpbCBpbWFnZVxuXHRcdFx0XHR2YXIgaHJlZjtcblxuXHRcdFx0XHRpZiAoaXRlbS5lbGVtZW50KSB7XG5cdFx0XHRcdFx0aHJlZiA9ICQoaXRlbS5lbGVtZW50KS5maW5kKCdpbWcnKS5hdHRyKCdzcmMnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICghaHJlZiAmJiBpdGVtLnR5cGUgPT09ICdpbWFnZScgJiYgaXRlbS5ocmVmKSB7XG5cdFx0XHRcdFx0aHJlZiA9IGl0ZW0uaHJlZjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBocmVmO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHR3cmFwICA6IG51bGwsXG5cdFx0bGlzdCAgOiBudWxsLFxuXHRcdHdpZHRoIDogMCxcblxuXHRcdGluaXQ6IGZ1bmN0aW9uIChvcHRzLCBvYmopIHtcblx0XHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdFx0bGlzdCxcblx0XHRcdFx0dGh1bWJXaWR0aCAgPSBvcHRzLndpZHRoLFxuXHRcdFx0XHR0aHVtYkhlaWdodCA9IG9wdHMuaGVpZ2h0LFxuXHRcdFx0XHR0aHVtYlNvdXJjZSA9IG9wdHMuc291cmNlO1xuXG5cdFx0XHQvL0J1aWxkIGxpc3Qgc3RydWN0dXJlXG5cdFx0XHRsaXN0ID0gJyc7XG5cblx0XHRcdGZvciAodmFyIG4gPSAwOyBuIDwgb2JqLmdyb3VwLmxlbmd0aDsgbisrKSB7XG5cdFx0XHRcdGxpc3QgKz0gJzxsaT48YSBzdHlsZT1cIndpZHRoOicgKyB0aHVtYldpZHRoICsgJ3B4O2hlaWdodDonICsgdGh1bWJIZWlnaHQgKyAncHg7XCIgaHJlZj1cImphdmFzY3JpcHQ6alF1ZXJ5LmZhbmN5Ym94Lmp1bXB0bygnICsgbiArICcpO1wiPjwvYT48L2xpPic7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMud3JhcCA9ICQoJzxkaXYgaWQ9XCJmYW5jeWJveC10aHVtYnNcIj48L2Rpdj4nKS5hZGRDbGFzcyhvcHRzLnBvc2l0aW9uKS5hcHBlbmRUbygnYm9keScpO1xuXHRcdFx0dGhpcy5saXN0ID0gJCgnPHVsPicgKyBsaXN0ICsgJzwvdWw+JykuYXBwZW5kVG8odGhpcy53cmFwKTtcblxuXHRcdFx0Ly9Mb2FkIGVhY2ggdGh1bWJuYWlsXG5cdFx0XHQkLmVhY2gob2JqLmdyb3VwLCBmdW5jdGlvbiAoaSkge1xuXHRcdFx0XHR2YXIgaHJlZiA9IHRodW1iU291cmNlKCBvYmouZ3JvdXBbIGkgXSApO1xuXG5cdFx0XHRcdGlmICghaHJlZikge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCQoXCI8aW1nIC8+XCIpLmxvYWQoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdHZhciB3aWR0aCAgPSB0aGlzLndpZHRoLFxuXHRcdFx0XHRcdFx0aGVpZ2h0ID0gdGhpcy5oZWlnaHQsXG5cdFx0XHRcdFx0XHR3aWR0aFJhdGlvLCBoZWlnaHRSYXRpbywgcGFyZW50O1xuXG5cdFx0XHRcdFx0aWYgKCF0aGF0Lmxpc3QgfHwgIXdpZHRoIHx8ICFoZWlnaHQpIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvL0NhbGN1bGF0ZSB0aHVtYm5haWwgd2lkdGgvaGVpZ2h0IGFuZCBjZW50ZXIgaXRcblx0XHRcdFx0XHR3aWR0aFJhdGlvICA9IHdpZHRoIC8gdGh1bWJXaWR0aDtcblx0XHRcdFx0XHRoZWlnaHRSYXRpbyA9IGhlaWdodCAvIHRodW1iSGVpZ2h0O1xuXG5cdFx0XHRcdFx0cGFyZW50ID0gdGhhdC5saXN0LmNoaWxkcmVuKCkuZXEoaSkuZmluZCgnYScpO1xuXG5cdFx0XHRcdFx0aWYgKHdpZHRoUmF0aW8gPj0gMSAmJiBoZWlnaHRSYXRpbyA+PSAxKSB7XG5cdFx0XHRcdFx0XHRpZiAod2lkdGhSYXRpbyA+IGhlaWdodFJhdGlvKSB7XG5cdFx0XHRcdFx0XHRcdHdpZHRoICA9IE1hdGguZmxvb3Iod2lkdGggLyBoZWlnaHRSYXRpbyk7XG5cdFx0XHRcdFx0XHRcdGhlaWdodCA9IHRodW1iSGVpZ2h0O1xuXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHR3aWR0aCAgPSB0aHVtYldpZHRoO1xuXHRcdFx0XHRcdFx0XHRoZWlnaHQgPSBNYXRoLmZsb29yKGhlaWdodCAvIHdpZHRoUmF0aW8pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdCQodGhpcykuY3NzKHtcblx0XHRcdFx0XHRcdHdpZHRoICA6IHdpZHRoLFxuXHRcdFx0XHRcdFx0aGVpZ2h0IDogaGVpZ2h0LFxuXHRcdFx0XHRcdFx0dG9wICAgIDogTWF0aC5mbG9vcih0aHVtYkhlaWdodCAvIDIgLSBoZWlnaHQgLyAyKSxcblx0XHRcdFx0XHRcdGxlZnQgICA6IE1hdGguZmxvb3IodGh1bWJXaWR0aCAvIDIgLSB3aWR0aCAvIDIpXG5cdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRwYXJlbnQud2lkdGgodGh1bWJXaWR0aCkuaGVpZ2h0KHRodW1iSGVpZ2h0KTtcblxuXHRcdFx0XHRcdCQodGhpcykuaGlkZSgpLmFwcGVuZFRvKHBhcmVudCkuZmFkZUluKDMwMCk7XG5cblx0XHRcdFx0fSkuYXR0cignc3JjJywgaHJlZik7XG5cdFx0XHR9KTtcblxuXHRcdFx0Ly9TZXQgaW5pdGlhbCB3aWR0aFxuXHRcdFx0dGhpcy53aWR0aCA9IHRoaXMubGlzdC5jaGlsZHJlbigpLmVxKDApLm91dGVyV2lkdGgodHJ1ZSk7XG5cblx0XHRcdHRoaXMubGlzdC53aWR0aCh0aGlzLndpZHRoICogKG9iai5ncm91cC5sZW5ndGggKyAxKSkuY3NzKCdsZWZ0JywgTWF0aC5mbG9vcigkKHdpbmRvdykud2lkdGgoKSAqIDAuNSAtIChvYmouaW5kZXggKiB0aGlzLndpZHRoICsgdGhpcy53aWR0aCAqIDAuNSkpKTtcblx0XHR9LFxuXG5cdFx0YmVmb3JlTG9hZDogZnVuY3Rpb24gKG9wdHMsIG9iaikge1xuXHRcdFx0Ly9SZW1vdmUgc2VsZiBpZiBnYWxsZXJ5IGRvIG5vdCBoYXZlIGF0IGxlYXN0IHR3byBpdGVtc1xuXHRcdFx0aWYgKG9iai5ncm91cC5sZW5ndGggPCAyKSB7XG5cdFx0XHRcdG9iai5oZWxwZXJzLnRodW1icyA9IGZhbHNlO1xuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly9JbmNyZWFzZSBib3R0b20gbWFyZ2luIHRvIGdpdmUgc3BhY2UgZm9yIHRodW1ic1xuXHRcdFx0b2JqLm1hcmdpblsgb3B0cy5wb3NpdGlvbiA9PT0gJ3RvcCcgPyAwIDogMiBdICs9ICgob3B0cy5oZWlnaHQpICsgMTUpO1xuXHRcdH0sXG5cblx0XHRhZnRlclNob3c6IGZ1bmN0aW9uIChvcHRzLCBvYmopIHtcblx0XHRcdC8vQ2hlY2sgaWYgZXhpc3RzIGFuZCBjcmVhdGUgb3IgdXBkYXRlIGxpc3Rcblx0XHRcdGlmICh0aGlzLmxpc3QpIHtcblx0XHRcdFx0dGhpcy5vblVwZGF0ZShvcHRzLCBvYmopO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLmluaXQob3B0cywgb2JqKTtcblx0XHRcdH1cblxuXHRcdFx0Ly9TZXQgYWN0aXZlIGVsZW1lbnRcblx0XHRcdHRoaXMubGlzdC5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKS5lcShvYmouaW5kZXgpLmFkZENsYXNzKCdhY3RpdmUnKTtcblx0XHR9LFxuXG5cdFx0Ly9DZW50ZXIgbGlzdFxuXHRcdG9uVXBkYXRlOiBmdW5jdGlvbiAob3B0cywgb2JqKSB7XG5cdFx0XHRpZiAodGhpcy5saXN0KSB7XG5cdFx0XHRcdHRoaXMubGlzdC5zdG9wKHRydWUpLmFuaW1hdGUoe1xuXHRcdFx0XHRcdCdsZWZ0JzogTWF0aC5mbG9vcigkKHdpbmRvdykud2lkdGgoKSAqIDAuNSAtIChvYmouaW5kZXggKiB0aGlzLndpZHRoICsgdGhpcy53aWR0aCAqIDAuNSkpXG5cdFx0XHRcdH0sIDE1MCk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGJlZm9yZUNsb3NlOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRpZiAodGhpcy53cmFwKSB7XG5cdFx0XHRcdHRoaXMud3JhcC5yZW1vdmUoKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy53cmFwICA9IG51bGw7XG5cdFx0XHR0aGlzLmxpc3QgID0gbnVsbDtcblx0XHRcdHRoaXMud2lkdGggPSAwO1xuXHRcdH1cblx0fVxuXG59KGpRdWVyeSkpOyIsIi8qISBDb3B5cmlnaHQgKGMpIDIwMTEgQnJhbmRvbiBBYXJvbiAoaHR0cDovL2JyYW5kb25hYXJvbi5uZXQpXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKExJQ0VOU0UudHh0KS5cbiAqXG4gKiBUaGFua3MgdG86IGh0dHA6Ly9hZG9tYXMub3JnL2phdmFzY3JpcHQtbW91c2Utd2hlZWwvIGZvciBzb21lIHBvaW50ZXJzLlxuICogVGhhbmtzIHRvOiBNYXRoaWFzIEJhbmsoaHR0cDovL3d3dy5tYXRoaWFzLWJhbmsuZGUpIGZvciBhIHNjb3BlIGJ1ZyBmaXguXG4gKiBUaGFua3MgdG86IFNlYW11cyBMZWFoeSBmb3IgYWRkaW5nIGRlbHRhWCBhbmQgZGVsdGFZXG4gKlxuICogVmVyc2lvbjogMy4wLjZcbiAqIFxuICogUmVxdWlyZXM6IDEuMi4yK1xuICovXG4oZnVuY3Rpb24oZCl7ZnVuY3Rpb24gZShhKXt2YXIgYj1hfHx3aW5kb3cuZXZlbnQsYz1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxmPTAsZT0wLGc9MCxhPWQuZXZlbnQuZml4KGIpO2EudHlwZT1cIm1vdXNld2hlZWxcIjtiLndoZWVsRGVsdGEmJihmPWIud2hlZWxEZWx0YS8xMjApO2IuZGV0YWlsJiYoZj0tYi5kZXRhaWwvMyk7Zz1mO2IuYXhpcyE9PXZvaWQgMCYmYi5heGlzPT09Yi5IT1JJWk9OVEFMX0FYSVMmJihnPTAsZT0tMSpmKTtiLndoZWVsRGVsdGFZIT09dm9pZCAwJiYoZz1iLndoZWVsRGVsdGFZLzEyMCk7Yi53aGVlbERlbHRhWCE9PXZvaWQgMCYmKGU9LTEqYi53aGVlbERlbHRhWC8xMjApO2MudW5zaGlmdChhLGYsZSxnKTtyZXR1cm4oZC5ldmVudC5kaXNwYXRjaHx8ZC5ldmVudC5oYW5kbGUpLmFwcGx5KHRoaXMsYyl9dmFyIGM9W1wiRE9NTW91c2VTY3JvbGxcIixcIm1vdXNld2hlZWxcIl07aWYoZC5ldmVudC5maXhIb29rcylmb3IodmFyIGg9Yy5sZW5ndGg7aDspZC5ldmVudC5maXhIb29rc1tjWy0taF1dPVxuZC5ldmVudC5tb3VzZUhvb2tzO2QuZXZlbnQuc3BlY2lhbC5tb3VzZXdoZWVsPXtzZXR1cDpmdW5jdGlvbigpe2lmKHRoaXMuYWRkRXZlbnRMaXN0ZW5lcilmb3IodmFyIGE9Yy5sZW5ndGg7YTspdGhpcy5hZGRFdmVudExpc3RlbmVyKGNbLS1hXSxlLGZhbHNlKTtlbHNlIHRoaXMub25tb3VzZXdoZWVsPWV9LHRlYXJkb3duOmZ1bmN0aW9uKCl7aWYodGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKWZvcih2YXIgYT1jLmxlbmd0aDthOyl0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoY1stLWFdLGUsZmFsc2UpO2Vsc2UgdGhpcy5vbm1vdXNld2hlZWw9bnVsbH19O2QuZm4uZXh0ZW5kKHttb3VzZXdoZWVsOmZ1bmN0aW9uKGEpe3JldHVybiBhP3RoaXMuYmluZChcIm1vdXNld2hlZWxcIixhKTp0aGlzLnRyaWdnZXIoXCJtb3VzZXdoZWVsXCIpfSx1bm1vdXNld2hlZWw6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMudW5iaW5kKFwibW91c2V3aGVlbFwiLGEpfX0pfSkoalF1ZXJ5KTsiLCIvKlxuKipcdEFuZGVyc29uIEZlcm1pbmlhbm9cbioqXHRjb250YXRvQGFuZGVyc29uZmVybWluaWFuby5jb20gLS0gZmVlbCBmcmVlIHRvIGNvbnRhY3QgbWUgZm9yIGJ1Z3Mgb3IgbmV3IGltcGxlbWVudGF0aW9ucy5cbioqXHRqUXVlcnkgU2Nyb2xsUGFnaW5hdGlvblxuKipcdDI4dGgvTWFyY2gvMjAxMVxuKipcdGh0dHA6Ly9hbmRlcnNvbmZlcm1pbmlhbm8uY29tL2pxdWVyeXNjcm9sbHBhZ2luYXRpb24vXG4qKlx0WW91IG1heSB1c2UgdGhpcyBzY3JpcHQgZm9yIGZyZWUsIGJ1dCBrZWVwIG15IGNyZWRpdHMuXG4qKlx0VGhhbmsgeW91LlxuKi9cblxuKGZ1bmN0aW9uKCAkICl7XG5cdCBcblx0XHQgXG4gJC5mbi5zY3JvbGxQYWdpbmF0aW9uID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBcdFxuXHRcdHZhciBvcHRzID0gJC5leHRlbmQoJC5mbi5zY3JvbGxQYWdpbmF0aW9uLmRlZmF1bHRzLCBvcHRpb25zKTsgIFxuXHRcdHZhciB0YXJnZXQgPSBvcHRzLnNjcm9sbFRhcmdldDtcblx0XHRpZiAodGFyZ2V0ID09IG51bGwpe1xuXHRcdFx0dGFyZ2V0ID0gb2JqOyBcblx0IFx0fVxuXHRcdG9wdHMuc2Nyb2xsVGFyZ2V0ID0gdGFyZ2V0O1xuXHQgXG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHQgICQuZm4uc2Nyb2xsUGFnaW5hdGlvbi5pbml0KCQodGhpcyksIG9wdHMpO1xuXHRcdH0pO1xuXG4gIH07XG4gIFxuICAkLmZuLnN0b3BTY3JvbGxQYWdpbmF0aW9uID0gZnVuY3Rpb24oKXtcblx0ICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuXHQgXHQkKHRoaXMpLmF0dHIoJ3Njcm9sbFBhZ2luYXRpb24nLCAnZGlzYWJsZWQnKTtcblx0ICB9KTtcblx0ICBcbiAgfTtcbiAgXG4gICQuZm4uc2Nyb2xsUGFnaW5hdGlvbi5sb2FkQ29udGVudCA9IGZ1bmN0aW9uKG9iaiwgb3B0cyl7XG5cdCB2YXIgdGFyZ2V0ID0gb3B0cy5zY3JvbGxUYXJnZXQ7XG5cdCB2YXIgbWF5TG9hZENvbnRlbnQgPSAkKHRhcmdldCkuc2Nyb2xsVG9wKCkrb3B0cy5oZWlnaHRPZmZzZXQgPj0gJChkb2N1bWVudCkuaGVpZ2h0KCkgLSAkKHRhcmdldCkuaGVpZ2h0KCk7XG5cdCBpZiAobWF5TG9hZENvbnRlbnQpe1xuXHRcdCBpZiAob3B0cy5iZWZvcmVMb2FkICE9IG51bGwpe1xuXHRcdFx0b3B0cy5iZWZvcmVMb2FkKCk7IFxuXHRcdCB9XG5cdFx0ICQob2JqKS5jaGlsZHJlbigpLmF0dHIoJ3JlbCcsICdsb2FkZWQnKTtcblx0XHQgJC5hamF4KHtcblx0XHRcdCAgdHlwZTogJ1BPU1QnLFxuXHRcdFx0ICB1cmw6IG9wdHMuY29udGVudFBhZ2UsXG5cdFx0XHQgIGRhdGE6IG9wdHMuY29udGVudERhdGEsXG5cdFx0XHQgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpe1xuXHRcdFx0XHQkKG9iaikuYXBwZW5kKGRhdGEpOyBcblx0XHRcdFx0dmFyIG9iamVjdHNSZW5kZXJlZCA9ICQob2JqKS5jaGlsZHJlbignW3JlbCE9bG9hZGVkXScpO1xuXHRcdFx0XHRcblx0XHRcdFx0aWYgKG9wdHMuYWZ0ZXJMb2FkICE9IG51bGwpe1xuXHRcdFx0XHRcdG9wdHMuYWZ0ZXJMb2FkKG9iamVjdHNSZW5kZXJlZCk7XHRcblx0XHRcdFx0fVxuXHRcdFx0ICB9LFxuXHRcdFx0ICBkYXRhVHlwZTogJ2h0bWwnXG5cdFx0IH0pO1xuXHQgfVxuXHQgXG4gIH07XG4gIFxuICAkLmZuLnNjcm9sbFBhZ2luYXRpb24uaW5pdCA9IGZ1bmN0aW9uKG9iaiwgb3B0cyl7XG5cdCB2YXIgdGFyZ2V0ID0gb3B0cy5zY3JvbGxUYXJnZXQ7XG5cdCAkKG9iaikuYXR0cignc2Nyb2xsUGFnaW5hdGlvbicsICdlbmFibGVkJyk7XG5cdFxuXHQgJCh0YXJnZXQpLnNjcm9sbChmdW5jdGlvbihldmVudCl7XG5cdFx0aWYgKCQob2JqKS5hdHRyKCdzY3JvbGxQYWdpbmF0aW9uJykgPT0gJ2VuYWJsZWQnKXtcblx0IFx0XHQkLmZuLnNjcm9sbFBhZ2luYXRpb24ubG9hZENvbnRlbnQob2JqLCBvcHRzKTtcdFx0XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHRcblx0XHR9XG5cdCB9KTtcblx0IFxuXHQgJC5mbi5zY3JvbGxQYWdpbmF0aW9uLmxvYWRDb250ZW50KG9iaiwgb3B0cyk7XG5cdCBcbiB9O1xuXHRcbiAkLmZuLnNjcm9sbFBhZ2luYXRpb24uZGVmYXVsdHMgPSB7XG4gICBcdCAnY29udGVudFBhZ2UnIDogbnVsbCxcbiAgIFx0ICdjb250ZW50RGF0YScgOiB7fSxcblx0XHQgJ2JlZm9yZUxvYWQnOiBudWxsLFxuXHRcdCAnYWZ0ZXJMb2FkJzogbnVsbFx0LFxuXHRcdCAnc2Nyb2xsVGFyZ2V0JzogbnVsbCxcblx0XHQgJ2hlaWdodE9mZnNldCc6IDBcdFx0ICBcbiB9O1x0XG59KSggalF1ZXJ5ICk7IiwiLypcbiAqIGpRdWVyeSBFYXNpbmcgdjEuMyAtIGh0dHA6Ly9nc2dkLmNvLnVrL3NhbmRib3gvanF1ZXJ5L2Vhc2luZy9cbiAqXG4gKiBVc2VzIHRoZSBidWlsdCBpbiBlYXNpbmcgY2FwYWJpbGl0aWVzIGFkZGVkIEluIGpRdWVyeSAxLjFcbiAqIHRvIG9mZmVyIG11bHRpcGxlIGVhc2luZyBvcHRpb25zXG4gKlxuICogVEVSTVMgT0YgVVNFIC0galF1ZXJ5IEVhc2luZ1xuICogXG4gKiBPcGVuIHNvdXJjZSB1bmRlciB0aGUgQlNEIExpY2Vuc2UuIFxuICogXG4gKiBDb3B5cmlnaHQgwqkgMjAwOCBHZW9yZ2UgTWNHaW5sZXkgU21pdGhcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBcbiAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIFxuICogYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OlxuICogXG4gKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBcbiAqIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci5cbiAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IFxuICogb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgXG4gKiBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG4gKiBcbiAqIE5laXRoZXIgdGhlIG5hbWUgb2YgdGhlIGF1dGhvciBub3IgdGhlIG5hbWVzIG9mIGNvbnRyaWJ1dG9ycyBtYXkgYmUgdXNlZCB0byBlbmRvcnNlIFxuICogb3IgcHJvbW90ZSBwcm9kdWN0cyBkZXJpdmVkIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi5cbiAqIFxuICogVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQ09QWVJJR0hUIEhPTERFUlMgQU5EIENPTlRSSUJVVE9SUyBcIkFTIElTXCIgQU5EIEFOWSBcbiAqIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRlxuICogTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gKiAgQ09QWVJJR0hUIE9XTkVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLFxuICogIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURVxuICogIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBcbiAqIEFORCBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HXG4gKiAgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgXG4gKiBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuIFxuICpcbiovXG5cbi8vIHQ6IGN1cnJlbnQgdGltZSwgYjogYmVnSW5uSW5nIHZhbHVlLCBjOiBjaGFuZ2UgSW4gdmFsdWUsIGQ6IGR1cmF0aW9uXG5qUXVlcnkuZWFzaW5nWydqc3dpbmcnXSA9IGpRdWVyeS5lYXNpbmdbJ3N3aW5nJ107XG5cbmpRdWVyeS5leHRlbmQoIGpRdWVyeS5lYXNpbmcsXG57XG5cdGRlZjogJ2Vhc2VPdXRRdWFkJyxcblx0c3dpbmc6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0Ly9hbGVydChqUXVlcnkuZWFzaW5nLmRlZmF1bHQpO1xuXHRcdHJldHVybiBqUXVlcnkuZWFzaW5nW2pRdWVyeS5lYXNpbmcuZGVmXSh4LCB0LCBiLCBjLCBkKTtcblx0fSxcblx0ZWFzZUluUXVhZDogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcblx0XHRyZXR1cm4gYyoodC89ZCkqdCArIGI7XG5cdH0sXG5cdGVhc2VPdXRRdWFkOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdHJldHVybiAtYyAqKHQvPWQpKih0LTIpICsgYjtcblx0fSxcblx0ZWFzZUluT3V0UXVhZDogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcblx0XHRpZiAoKHQvPWQvMikgPCAxKSByZXR1cm4gYy8yKnQqdCArIGI7XG5cdFx0cmV0dXJuIC1jLzIgKiAoKC0tdCkqKHQtMikgLSAxKSArIGI7XG5cdH0sXG5cdGVhc2VJbkN1YmljOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdHJldHVybiBjKih0Lz1kKSp0KnQgKyBiO1xuXHR9LFxuXHRlYXNlT3V0Q3ViaWM6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuIGMqKCh0PXQvZC0xKSp0KnQgKyAxKSArIGI7XG5cdH0sXG5cdGVhc2VJbk91dEN1YmljOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdGlmICgodC89ZC8yKSA8IDEpIHJldHVybiBjLzIqdCp0KnQgKyBiO1xuXHRcdHJldHVybiBjLzIqKCh0LT0yKSp0KnQgKyAyKSArIGI7XG5cdH0sXG5cdGVhc2VJblF1YXJ0OiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdHJldHVybiBjKih0Lz1kKSp0KnQqdCArIGI7XG5cdH0sXG5cdGVhc2VPdXRRdWFydDogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcblx0XHRyZXR1cm4gLWMgKiAoKHQ9dC9kLTEpKnQqdCp0IC0gMSkgKyBiO1xuXHR9LFxuXHRlYXNlSW5PdXRRdWFydDogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcblx0XHRpZiAoKHQvPWQvMikgPCAxKSByZXR1cm4gYy8yKnQqdCp0KnQgKyBiO1xuXHRcdHJldHVybiAtYy8yICogKCh0LT0yKSp0KnQqdCAtIDIpICsgYjtcblx0fSxcblx0ZWFzZUluUXVpbnQ6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuIGMqKHQvPWQpKnQqdCp0KnQgKyBiO1xuXHR9LFxuXHRlYXNlT3V0UXVpbnQ6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuIGMqKCh0PXQvZC0xKSp0KnQqdCp0ICsgMSkgKyBiO1xuXHR9LFxuXHRlYXNlSW5PdXRRdWludDogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcblx0XHRpZiAoKHQvPWQvMikgPCAxKSByZXR1cm4gYy8yKnQqdCp0KnQqdCArIGI7XG5cdFx0cmV0dXJuIGMvMiooKHQtPTIpKnQqdCp0KnQgKyAyKSArIGI7XG5cdH0sXG5cdGVhc2VJblNpbmU6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuIC1jICogTWF0aC5jb3ModC9kICogKE1hdGguUEkvMikpICsgYyArIGI7XG5cdH0sXG5cdGVhc2VPdXRTaW5lOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdHJldHVybiBjICogTWF0aC5zaW4odC9kICogKE1hdGguUEkvMikpICsgYjtcblx0fSxcblx0ZWFzZUluT3V0U2luZTogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcblx0XHRyZXR1cm4gLWMvMiAqIChNYXRoLmNvcyhNYXRoLlBJKnQvZCkgLSAxKSArIGI7XG5cdH0sXG5cdGVhc2VJbkV4cG86IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuICh0PT0wKSA/IGIgOiBjICogTWF0aC5wb3coMiwgMTAgKiAodC9kIC0gMSkpICsgYjtcblx0fSxcblx0ZWFzZU91dEV4cG86IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuICh0PT1kKSA/IGIrYyA6IGMgKiAoLU1hdGgucG93KDIsIC0xMCAqIHQvZCkgKyAxKSArIGI7XG5cdH0sXG5cdGVhc2VJbk91dEV4cG86IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0aWYgKHQ9PTApIHJldHVybiBiO1xuXHRcdGlmICh0PT1kKSByZXR1cm4gYitjO1xuXHRcdGlmICgodC89ZC8yKSA8IDEpIHJldHVybiBjLzIgKiBNYXRoLnBvdygyLCAxMCAqICh0IC0gMSkpICsgYjtcblx0XHRyZXR1cm4gYy8yICogKC1NYXRoLnBvdygyLCAtMTAgKiAtLXQpICsgMikgKyBiO1xuXHR9LFxuXHRlYXNlSW5DaXJjOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdHJldHVybiAtYyAqIChNYXRoLnNxcnQoMSAtICh0Lz1kKSp0KSAtIDEpICsgYjtcblx0fSxcblx0ZWFzZU91dENpcmM6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuIGMgKiBNYXRoLnNxcnQoMSAtICh0PXQvZC0xKSp0KSArIGI7XG5cdH0sXG5cdGVhc2VJbk91dENpcmM6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0aWYgKCh0Lz1kLzIpIDwgMSkgcmV0dXJuIC1jLzIgKiAoTWF0aC5zcXJ0KDEgLSB0KnQpIC0gMSkgKyBiO1xuXHRcdHJldHVybiBjLzIgKiAoTWF0aC5zcXJ0KDEgLSAodC09MikqdCkgKyAxKSArIGI7XG5cdH0sXG5cdGVhc2VJbkVsYXN0aWM6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0dmFyIHM9MS43MDE1ODt2YXIgcD0wO3ZhciBhPWM7XG5cdFx0aWYgKHQ9PTApIHJldHVybiBiOyAgaWYgKCh0Lz1kKT09MSkgcmV0dXJuIGIrYzsgIGlmICghcCkgcD1kKi4zO1xuXHRcdGlmIChhIDwgTWF0aC5hYnMoYykpIHsgYT1jOyB2YXIgcz1wLzQ7IH1cblx0XHRlbHNlIHZhciBzID0gcC8oMipNYXRoLlBJKSAqIE1hdGguYXNpbiAoYy9hKTtcblx0XHRyZXR1cm4gLShhKk1hdGgucG93KDIsMTAqKHQtPTEpKSAqIE1hdGguc2luKCAodCpkLXMpKigyKk1hdGguUEkpL3AgKSkgKyBiO1xuXHR9LFxuXHRlYXNlT3V0RWxhc3RpYzogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcblx0XHR2YXIgcz0xLjcwMTU4O3ZhciBwPTA7dmFyIGE9Yztcblx0XHRpZiAodD09MCkgcmV0dXJuIGI7ICBpZiAoKHQvPWQpPT0xKSByZXR1cm4gYitjOyAgaWYgKCFwKSBwPWQqLjM7XG5cdFx0aWYgKGEgPCBNYXRoLmFicyhjKSkgeyBhPWM7IHZhciBzPXAvNDsgfVxuXHRcdGVsc2UgdmFyIHMgPSBwLygyKk1hdGguUEkpICogTWF0aC5hc2luIChjL2EpO1xuXHRcdHJldHVybiBhKk1hdGgucG93KDIsLTEwKnQpICogTWF0aC5zaW4oICh0KmQtcykqKDIqTWF0aC5QSSkvcCApICsgYyArIGI7XG5cdH0sXG5cdGVhc2VJbk91dEVsYXN0aWM6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0dmFyIHM9MS43MDE1ODt2YXIgcD0wO3ZhciBhPWM7XG5cdFx0aWYgKHQ9PTApIHJldHVybiBiOyAgaWYgKCh0Lz1kLzIpPT0yKSByZXR1cm4gYitjOyAgaWYgKCFwKSBwPWQqKC4zKjEuNSk7XG5cdFx0aWYgKGEgPCBNYXRoLmFicyhjKSkgeyBhPWM7IHZhciBzPXAvNDsgfVxuXHRcdGVsc2UgdmFyIHMgPSBwLygyKk1hdGguUEkpICogTWF0aC5hc2luIChjL2EpO1xuXHRcdGlmICh0IDwgMSkgcmV0dXJuIC0uNSooYSpNYXRoLnBvdygyLDEwKih0LT0xKSkgKiBNYXRoLnNpbiggKHQqZC1zKSooMipNYXRoLlBJKS9wICkpICsgYjtcblx0XHRyZXR1cm4gYSpNYXRoLnBvdygyLC0xMCoodC09MSkpICogTWF0aC5zaW4oICh0KmQtcykqKDIqTWF0aC5QSSkvcCApKi41ICsgYyArIGI7XG5cdH0sXG5cdGVhc2VJbkJhY2s6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkLCBzKSB7XG5cdFx0aWYgKHMgPT0gdW5kZWZpbmVkKSBzID0gMS43MDE1ODtcblx0XHRyZXR1cm4gYyoodC89ZCkqdCooKHMrMSkqdCAtIHMpICsgYjtcblx0fSxcblx0ZWFzZU91dEJhY2s6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkLCBzKSB7XG5cdFx0aWYgKHMgPT0gdW5kZWZpbmVkKSBzID0gMS43MDE1ODtcblx0XHRyZXR1cm4gYyooKHQ9dC9kLTEpKnQqKChzKzEpKnQgKyBzKSArIDEpICsgYjtcblx0fSxcblx0ZWFzZUluT3V0QmFjazogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQsIHMpIHtcblx0XHRpZiAocyA9PSB1bmRlZmluZWQpIHMgPSAxLjcwMTU4OyBcblx0XHRpZiAoKHQvPWQvMikgPCAxKSByZXR1cm4gYy8yKih0KnQqKCgocyo9KDEuNTI1KSkrMSkqdCAtIHMpKSArIGI7XG5cdFx0cmV0dXJuIGMvMiooKHQtPTIpKnQqKCgocyo9KDEuNTI1KSkrMSkqdCArIHMpICsgMikgKyBiO1xuXHR9LFxuXHRlYXNlSW5Cb3VuY2U6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XG5cdFx0cmV0dXJuIGMgLSBqUXVlcnkuZWFzaW5nLmVhc2VPdXRCb3VuY2UgKHgsIGQtdCwgMCwgYywgZCkgKyBiO1xuXHR9LFxuXHRlYXNlT3V0Qm91bmNlOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdGlmICgodC89ZCkgPCAoMS8yLjc1KSkge1xuXHRcdFx0cmV0dXJuIGMqKDcuNTYyNSp0KnQpICsgYjtcblx0XHR9IGVsc2UgaWYgKHQgPCAoMi8yLjc1KSkge1xuXHRcdFx0cmV0dXJuIGMqKDcuNTYyNSoodC09KDEuNS8yLjc1KSkqdCArIC43NSkgKyBiO1xuXHRcdH0gZWxzZSBpZiAodCA8ICgyLjUvMi43NSkpIHtcblx0XHRcdHJldHVybiBjKig3LjU2MjUqKHQtPSgyLjI1LzIuNzUpKSp0ICsgLjkzNzUpICsgYjtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuIGMqKDcuNTYyNSoodC09KDIuNjI1LzIuNzUpKSp0ICsgLjk4NDM3NSkgKyBiO1xuXHRcdH1cblx0fSxcblx0ZWFzZUluT3V0Qm91bmNlOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xuXHRcdGlmICh0IDwgZC8yKSByZXR1cm4galF1ZXJ5LmVhc2luZy5lYXNlSW5Cb3VuY2UgKHgsIHQqMiwgMCwgYywgZCkgKiAuNSArIGI7XG5cdFx0cmV0dXJuIGpRdWVyeS5lYXNpbmcuZWFzZU91dEJvdW5jZSAoeCwgdCoyLWQsIDAsIGMsIGQpICogLjUgKyBjKi41ICsgYjtcblx0fVxufSk7XG5cbi8qXG4gKlxuICogVEVSTVMgT0YgVVNFIC0gRUFTSU5HIEVRVUFUSU9OU1xuICogXG4gKiBPcGVuIHNvdXJjZSB1bmRlciB0aGUgQlNEIExpY2Vuc2UuIFxuICogXG4gKiBDb3B5cmlnaHQgwqkgMjAwMSBSb2JlcnQgUGVubmVyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogXG4gKiBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQgbW9kaWZpY2F0aW9uLCBcbiAqIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDpcbiAqIFxuICogUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3Qgb2YgXG4gKiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG4gKiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBcbiAqIG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIFxuICogcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuICogXG4gKiBOZWl0aGVyIHRoZSBuYW1lIG9mIHRoZSBhdXRob3Igbm9yIHRoZSBuYW1lcyBvZiBjb250cmlidXRvcnMgbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBcbiAqIG9yIHByb21vdGUgcHJvZHVjdHMgZGVyaXZlZCBmcm9tIHRoaXMgc29mdHdhcmUgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uXG4gKiBcbiAqIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgXCJBUyBJU1wiIEFORCBBTlkgXG4gKiBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0ZcbiAqIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuICogIENPUFlSSUdIVCBPV05FUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCxcbiAqICBFWEVNUExBUlksIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEVcbiAqICBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgXG4gKiBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElOR1xuICogIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIFxuICogT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLiBcbiAqXG4gKi8iLCIvKiFcbiAqIHNjcm9sbHVwIHYyLjQuMVxuICogVXJsOiBodHRwOi8vbWFya2dvb2R5ZWFyLmNvbS9sYWJzL3Njcm9sbHVwL1xuICogQ29weXJpZ2h0IChjKSBNYXJrIEdvb2R5ZWFyIOKAlCBAbWFya2dkeXIg4oCUIGh0dHA6Ly9tYXJrZ29vZHllYXIuY29tXG4gKiBMaWNlbnNlOiBNSVRcbiAqL1xuKGZ1bmN0aW9uICgkLCB3aW5kb3csIGRvY3VtZW50KSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgLy8gTWFpbiBmdW5jdGlvblxuICAgICQuZm4uc2Nyb2xsVXAgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuXG4gICAgICAgIC8vIEVuc3VyZSB0aGF0IG9ubHkgb25lIHNjcm9sbFVwIGV4aXN0c1xuICAgICAgICBpZiAoISQuZGF0YShkb2N1bWVudC5ib2R5LCAnc2Nyb2xsVXAnKSkge1xuICAgICAgICAgICAgJC5kYXRhKGRvY3VtZW50LmJvZHksICdzY3JvbGxVcCcsIHRydWUpO1xuICAgICAgICAgICAgJC5mbi5zY3JvbGxVcC5pbml0KG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIEluaXRcbiAgICAkLmZuLnNjcm9sbFVwLmluaXQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuXG4gICAgICAgIC8vIERlZmluZSB2YXJzXG4gICAgICAgIHZhciBvID0gJC5mbi5zY3JvbGxVcC5zZXR0aW5ncyA9ICQuZXh0ZW5kKHt9LCAkLmZuLnNjcm9sbFVwLmRlZmF1bHRzLCBvcHRpb25zKSxcbiAgICAgICAgICAgIHRyaWdnZXJWaXNpYmxlID0gZmFsc2UsXG4gICAgICAgICAgICBhbmltSW4sIGFuaW1PdXQsIGFuaW1TcGVlZCwgc2Nyb2xsRGlzLCBzY3JvbGxFdmVudCwgc2Nyb2xsVGFyZ2V0LCAkc2VsZjtcblxuICAgICAgICAvLyBDcmVhdGUgZWxlbWVudFxuICAgICAgICBpZiAoby5zY3JvbGxUcmlnZ2VyKSB7XG4gICAgICAgICAgICAkc2VsZiA9ICQoby5zY3JvbGxUcmlnZ2VyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICRzZWxmID0gJCgnPGEvPicsIHtcbiAgICAgICAgICAgICAgICBpZDogby5zY3JvbGxOYW1lLFxuICAgICAgICAgICAgICAgIGhyZWY6ICcjdG9wJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTZXQgc2Nyb2xsVGl0bGUgaWYgdGhlcmUgaXMgb25lXG4gICAgICAgIGlmIChvLnNjcm9sbFRpdGxlKSB7XG4gICAgICAgICAgICAkc2VsZi5hdHRyKCd0aXRsZScsIG8uc2Nyb2xsVGl0bGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgJHNlbGYuYXBwZW5kVG8oJ2JvZHknKTtcblxuICAgICAgICAvLyBJZiBub3QgdXNpbmcgYW4gaW1hZ2UgZGlzcGxheSB0ZXh0XG4gICAgICAgIGlmICghKG8uc2Nyb2xsSW1nIHx8IG8uc2Nyb2xsVHJpZ2dlcikpIHtcbiAgICAgICAgICAgICRzZWxmLmh0bWwoby5zY3JvbGxUZXh0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE1pbmltdW0gQ1NTIHRvIG1ha2UgdGhlIG1hZ2ljIGhhcHBlblxuICAgICAgICAkc2VsZi5jc3Moe1xuICAgICAgICAgICAgZGlzcGxheTogJ25vbmUnLFxuICAgICAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgICAgICAgICB6SW5kZXg6IG8uekluZGV4XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEFjdGl2ZSBwb2ludCBvdmVybGF5XG4gICAgICAgIGlmIChvLmFjdGl2ZU92ZXJsYXkpIHtcbiAgICAgICAgICAgICQoJzxkaXYvPicsIHtcbiAgICAgICAgICAgICAgICBpZDogby5zY3JvbGxOYW1lICsgJy1hY3RpdmUnXG4gICAgICAgICAgICB9KS5jc3Moe1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgICAgICd0b3AnOiBvLnNjcm9sbERpc3RhbmNlICsgJ3B4JyxcbiAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgICAgIGJvcmRlclRvcDogJzFweCBkb3R0ZWQnICsgby5hY3RpdmVPdmVybGF5LFxuICAgICAgICAgICAgICAgIHpJbmRleDogby56SW5kZXhcbiAgICAgICAgICAgIH0pLmFwcGVuZFRvKCdib2R5Jyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTd2l0Y2ggYW5pbWF0aW9uIHR5cGVcbiAgICAgICAgc3dpdGNoIChvLmFuaW1hdGlvbikge1xuICAgICAgICAgICAgY2FzZSAnZmFkZSc6XG4gICAgICAgICAgICAgICAgYW5pbUluID0gJ2ZhZGVJbic7XG4gICAgICAgICAgICAgICAgYW5pbU91dCA9ICdmYWRlT3V0JztcbiAgICAgICAgICAgICAgICBhbmltU3BlZWQgPSBvLmFuaW1hdGlvblNwZWVkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlICdzbGlkZSc6XG4gICAgICAgICAgICAgICAgYW5pbUluID0gJ3NsaWRlRG93bic7XG4gICAgICAgICAgICAgICAgYW5pbU91dCA9ICdzbGlkZVVwJztcbiAgICAgICAgICAgICAgICBhbmltU3BlZWQgPSBvLmFuaW1hdGlvblNwZWVkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGFuaW1JbiA9ICdzaG93JztcbiAgICAgICAgICAgICAgICBhbmltT3V0ID0gJ2hpZGUnO1xuICAgICAgICAgICAgICAgIGFuaW1TcGVlZCA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJZiBmcm9tIHRvcCBvciBib3R0b21cbiAgICAgICAgaWYgKG8uc2Nyb2xsRnJvbSA9PT0gJ3RvcCcpIHtcbiAgICAgICAgICAgIHNjcm9sbERpcyA9IG8uc2Nyb2xsRGlzdGFuY2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzY3JvbGxEaXMgPSAkKGRvY3VtZW50KS5oZWlnaHQoKSAtICQod2luZG93KS5oZWlnaHQoKSAtIG8uc2Nyb2xsRGlzdGFuY2U7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTY3JvbGwgZnVuY3Rpb25cbiAgICAgICAgc2Nyb2xsRXZlbnQgPSAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICgkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiBzY3JvbGxEaXMpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRyaWdnZXJWaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmW2FuaW1Jbl0oYW5pbVNwZWVkKTtcbiAgICAgICAgICAgICAgICAgICAgdHJpZ2dlclZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHRyaWdnZXJWaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICRzZWxmW2FuaW1PdXRdKGFuaW1TcGVlZCk7XG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXJWaXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoby5zY3JvbGxUYXJnZXQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygby5zY3JvbGxUYXJnZXQgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgc2Nyb2xsVGFyZ2V0ID0gby5zY3JvbGxUYXJnZXQ7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvLnNjcm9sbFRhcmdldCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBzY3JvbGxUYXJnZXQgPSBNYXRoLmZsb29yKCQoby5zY3JvbGxUYXJnZXQpLm9mZnNldCgpLnRvcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzY3JvbGxUYXJnZXQgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVG8gdGhlIHRvcFxuICAgICAgICAkc2VsZi5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgICAgc2Nyb2xsVG9wOiBzY3JvbGxUYXJnZXRcbiAgICAgICAgICAgIH0sIG8uc2Nyb2xsU3BlZWQsIG8uZWFzaW5nVHlwZSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBEZWZhdWx0c1xuICAgICQuZm4uc2Nyb2xsVXAuZGVmYXVsdHMgPSB7XG4gICAgICAgIHNjcm9sbE5hbWU6ICdzY3JvbGxVcCcsICAgICAgLy8gRWxlbWVudCBJRFxuICAgICAgICBzY3JvbGxEaXN0YW5jZTogMzAwLCAgICAgICAgIC8vIERpc3RhbmNlIGZyb20gdG9wL2JvdHRvbSBiZWZvcmUgc2hvd2luZyBlbGVtZW50IChweClcbiAgICAgICAgc2Nyb2xsRnJvbTogJ3RvcCcsICAgICAgICAgICAvLyAndG9wJyBvciAnYm90dG9tJ1xuICAgICAgICBzY3JvbGxTcGVlZDogMzAwLCAgICAgICAgICAgIC8vIFNwZWVkIGJhY2sgdG8gdG9wIChtcylcbiAgICAgICAgZWFzaW5nVHlwZTogJ2xpbmVhcicsICAgICAgICAvLyBTY3JvbGwgdG8gdG9wIGVhc2luZyAoc2VlIGh0dHA6Ly9lYXNpbmdzLm5ldC8pXG4gICAgICAgIGFuaW1hdGlvbjogJ2ZhZGUnLCAgICAgICAgICAgLy8gRmFkZSwgc2xpZGUsIG5vbmVcbiAgICAgICAgYW5pbWF0aW9uU3BlZWQ6IDIwMCwgICAgICAgICAvLyBBbmltYXRpb24gaW4gc3BlZWQgKG1zKVxuICAgICAgICBzY3JvbGxUcmlnZ2VyOiBmYWxzZSwgICAgICAgIC8vIFNldCBhIGN1c3RvbSB0cmlnZ2VyaW5nIGVsZW1lbnQuIENhbiBiZSBhbiBIVE1MIHN0cmluZyBvciBqUXVlcnkgb2JqZWN0XG4gICAgICAgIHNjcm9sbFRhcmdldDogZmFsc2UsICAgICAgICAgLy8gU2V0IGEgY3VzdG9tIHRhcmdldCBlbGVtZW50IGZvciBzY3JvbGxpbmcgdG8uIENhbiBiZSBlbGVtZW50IG9yIG51bWJlclxuICAgICAgICBzY3JvbGxUZXh0OiAnU2Nyb2xsIHRvIHRvcCcsIC8vIFRleHQgZm9yIGVsZW1lbnQsIGNhbiBjb250YWluIEhUTUxcbiAgICAgICAgc2Nyb2xsVGl0bGU6IGZhbHNlLCAgICAgICAgICAvLyBTZXQgYSBjdXN0b20gPGE+IHRpdGxlIGlmIHJlcXVpcmVkLiBEZWZhdWx0cyB0byBzY3JvbGxUZXh0XG4gICAgICAgIHNjcm9sbEltZzogZmFsc2UsICAgICAgICAgICAgLy8gU2V0IHRydWUgdG8gdXNlIGltYWdlXG4gICAgICAgIGFjdGl2ZU92ZXJsYXk6IGZhbHNlLCAgICAgICAgLy8gU2V0IENTUyBjb2xvciB0byBkaXNwbGF5IHNjcm9sbFVwIGFjdGl2ZSBwb2ludCwgZS5nICcjMDBGRkZGJ1xuICAgICAgICB6SW5kZXg6IDIxNDc0ODM2NDcgICAgICAgICAgIC8vIFotSW5kZXggZm9yIHRoZSBvdmVybGF5XG4gICAgfTtcblxuICAgIC8vIERlc3Ryb3kgc2Nyb2xsVXAgcGx1Z2luIGFuZCBjbGVhbiBhbGwgbW9kaWZpY2F0aW9ucyB0byB0aGUgRE9NXG4gICAgJC5mbi5zY3JvbGxVcC5kZXN0cm95ID0gZnVuY3Rpb24gKHNjcm9sbEV2ZW50KSB7XG4gICAgICAgICQucmVtb3ZlRGF0YShkb2N1bWVudC5ib2R5LCAnc2Nyb2xsVXAnKTtcbiAgICAgICAgJCgnIycgKyAkLmZuLnNjcm9sbFVwLnNldHRpbmdzLnNjcm9sbE5hbWUpLnJlbW92ZSgpO1xuICAgICAgICAkKCcjJyArICQuZm4uc2Nyb2xsVXAuc2V0dGluZ3Muc2Nyb2xsTmFtZSArICctYWN0aXZlJykucmVtb3ZlKCk7XG5cbiAgICAgICAgLy8gSWYgMS43IG9yIGFib3ZlIHVzZSB0aGUgbmV3IC5vZmYoKVxuICAgICAgICBpZiAoJC5mbi5qcXVlcnkuc3BsaXQoJy4nKVsxXSA+PSA3KSB7XG4gICAgICAgICAgICAkKHdpbmRvdykub2ZmKCdzY3JvbGwnLCBzY3JvbGxFdmVudCk7XG5cbiAgICAgICAgLy8gRWxzZSB1c2UgdGhlIG9sZCAudW5iaW5kKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQod2luZG93KS51bmJpbmQoJ3Njcm9sbCcsIHNjcm9sbEV2ZW50KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAkLnNjcm9sbFVwID0gJC5mbi5zY3JvbGxVcDtcblxufSkoalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcbiIsIihmdW5jdGlvbiAoJCwgd2luZG93LCBkb2N1bWVudCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIC8vIE1haW4gZnVuY3Rpb25cbiAgICAkLmZuLnNjcm9sbFVwID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcblxuICAgICAgICAvLyBFbnN1cmUgdGhhdCBvbmx5IG9uZSBzY3JvbGxVcCBleGlzdHNcbiAgICAgICAgaWYgKCEkLmRhdGEoZG9jdW1lbnQuYm9keSwgJ3Njcm9sbFVwJykpIHtcbiAgICAgICAgICAgICQuZGF0YShkb2N1bWVudC5ib2R5LCAnc2Nyb2xsVXAnLCB0cnVlKTtcbiAgICAgICAgICAgICQuZm4uc2Nyb2xsVXAuaW5pdChvcHRpb25zKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBJbml0XG4gICAgJC5mbi5zY3JvbGxVcC5pbml0ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcblxuICAgICAgICAvLyBEZWZpbmUgdmFyc1xuICAgICAgICB2YXIgbyA9ICQuZm4uc2Nyb2xsVXAuc2V0dGluZ3MgPSAkLmV4dGVuZCh7fSwgJC5mbi5zY3JvbGxVcC5kZWZhdWx0cywgb3B0aW9ucyksXG4gICAgICAgICAgICB0cmlnZ2VyVmlzaWJsZSA9IGZhbHNlLFxuICAgICAgICAgICAgYW5pbUluLCBhbmltT3V0LCBhbmltU3BlZWQsIHNjcm9sbERpcywgc2Nyb2xsRXZlbnQsIHNjcm9sbFRhcmdldCwgJHNlbGY7XG5cbiAgICAgICAgLy8gQ3JlYXRlIGVsZW1lbnRcbiAgICAgICAgaWYgKG8uc2Nyb2xsVHJpZ2dlcikge1xuICAgICAgICAgICAgJHNlbGYgPSAkKG8uc2Nyb2xsVHJpZ2dlcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkc2VsZiA9ICQoJzxhLz4nLCB7XG4gICAgICAgICAgICAgICAgaWQ6IG8uc2Nyb2xsTmFtZSxcbiAgICAgICAgICAgICAgICBocmVmOiAnI3RvcCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2V0IHNjcm9sbFRpdGxlIGlmIHRoZXJlIGlzIG9uZVxuICAgICAgICBpZiAoby5zY3JvbGxUaXRsZSkge1xuICAgICAgICAgICAgJHNlbGYuYXR0cigndGl0bGUnLCBvLnNjcm9sbFRpdGxlKTtcbiAgICAgICAgfVxuXG4gICAgICAgICRzZWxmLmFwcGVuZFRvKCdib2R5Jyk7XG5cbiAgICAgICAgLy8gSWYgbm90IHVzaW5nIGFuIGltYWdlIGRpc3BsYXkgdGV4dFxuICAgICAgICBpZiAoIShvLnNjcm9sbEltZyB8fCBvLnNjcm9sbFRyaWdnZXIpKSB7XG4gICAgICAgICAgICAkc2VsZi5odG1sKG8uc2Nyb2xsVGV4dCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBNaW5pbXVtIENTUyB0byBtYWtlIHRoZSBtYWdpYyBoYXBwZW5cbiAgICAgICAgJHNlbGYuY3NzKHtcbiAgICAgICAgICAgIGRpc3BsYXk6ICdub25lJyxcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgICAgekluZGV4OiBvLnpJbmRleFxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBBY3RpdmUgcG9pbnQgb3ZlcmxheVxuICAgICAgICBpZiAoby5hY3RpdmVPdmVybGF5KSB7XG4gICAgICAgICAgICAkKCc8ZGl2Lz4nLCB7XG4gICAgICAgICAgICAgICAgaWQ6IG8uc2Nyb2xsTmFtZSArICctYWN0aXZlJ1xuICAgICAgICAgICAgfSkuY3NzKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgICAgICAndG9wJzogby5zY3JvbGxEaXN0YW5jZSArICdweCcsXG4gICAgICAgICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICBib3JkZXJUb3A6ICcxcHggZG90dGVkJyArIG8uYWN0aXZlT3ZlcmxheSxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IG8uekluZGV4XG4gICAgICAgICAgICB9KS5hcHBlbmRUbygnYm9keScpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU3dpdGNoIGFuaW1hdGlvbiB0eXBlXG4gICAgICAgIHN3aXRjaCAoby5hbmltYXRpb24pIHtcbiAgICAgICAgICAgIGNhc2UgJ2ZhZGUnOlxuICAgICAgICAgICAgICAgIGFuaW1JbiA9ICdmYWRlSW4nO1xuICAgICAgICAgICAgICAgIGFuaW1PdXQgPSAnZmFkZU91dCc7XG4gICAgICAgICAgICAgICAgYW5pbVNwZWVkID0gby5hbmltYXRpb25TcGVlZDtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnc2xpZGUnOlxuICAgICAgICAgICAgICAgIGFuaW1JbiA9ICdzbGlkZURvd24nO1xuICAgICAgICAgICAgICAgIGFuaW1PdXQgPSAnc2xpZGVVcCc7XG4gICAgICAgICAgICAgICAgYW5pbVNwZWVkID0gby5hbmltYXRpb25TcGVlZDtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBhbmltSW4gPSAnc2hvdyc7XG4gICAgICAgICAgICAgICAgYW5pbU91dCA9ICdoaWRlJztcbiAgICAgICAgICAgICAgICBhbmltU3BlZWQgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWYgZnJvbSB0b3Agb3IgYm90dG9tXG4gICAgICAgIGlmIChvLnNjcm9sbEZyb20gPT09ICd0b3AnKSB7XG4gICAgICAgICAgICBzY3JvbGxEaXMgPSBvLnNjcm9sbERpc3RhbmNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2Nyb2xsRGlzID0gJChkb2N1bWVudCkuaGVpZ2h0KCkgLSAkKHdpbmRvdykuaGVpZ2h0KCkgLSBvLnNjcm9sbERpc3RhbmNlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2Nyb2xsIGZ1bmN0aW9uXG4gICAgICAgIHNjcm9sbEV2ZW50ID0gJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoJCh3aW5kb3cpLnNjcm9sbFRvcCgpID4gc2Nyb2xsRGlzKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0cmlnZ2VyVmlzaWJsZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2VsZlthbmltSW5dKGFuaW1TcGVlZCk7XG4gICAgICAgICAgICAgICAgICAgIHRyaWdnZXJWaXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICh0cmlnZ2VyVmlzaWJsZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2VsZlthbmltT3V0XShhbmltU3BlZWQpO1xuICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyVmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKG8uc2Nyb2xsVGFyZ2V0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG8uc2Nyb2xsVGFyZ2V0ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIHNjcm9sbFRhcmdldCA9IG8uc2Nyb2xsVGFyZ2V0O1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygby5zY3JvbGxUYXJnZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgc2Nyb2xsVGFyZ2V0ID0gTWF0aC5mbG9vcigkKG8uc2Nyb2xsVGFyZ2V0KS5vZmZzZXQoKS50b3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2Nyb2xsVGFyZ2V0ID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRvIHRoZSB0b3BcbiAgICAgICAgJHNlbGYuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogc2Nyb2xsVGFyZ2V0XG4gICAgICAgICAgICB9LCBvLnNjcm9sbFNwZWVkLCBvLmVhc2luZ1R5cGUpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gRGVmYXVsdHNcbiAgICAkLmZuLnNjcm9sbFVwLmRlZmF1bHRzID0ge1xuICAgICAgICBzY3JvbGxOYW1lOiAnc2Nyb2xsVXAnLCAgICAgIC8vIEVsZW1lbnQgSURcbiAgICAgICAgc2Nyb2xsRGlzdGFuY2U6IDMwMCwgICAgICAgICAvLyBEaXN0YW5jZSBmcm9tIHRvcC9ib3R0b20gYmVmb3JlIHNob3dpbmcgZWxlbWVudCAocHgpXG4gICAgICAgIHNjcm9sbEZyb206ICd0b3AnLCAgICAgICAgICAgLy8gJ3RvcCcgb3IgJ2JvdHRvbSdcbiAgICAgICAgc2Nyb2xsU3BlZWQ6IDMwMCwgICAgICAgICAgICAvLyBTcGVlZCBiYWNrIHRvIHRvcCAobXMpXG4gICAgICAgIGVhc2luZ1R5cGU6ICdsaW5lYXInLCAgICAgICAgLy8gU2Nyb2xsIHRvIHRvcCBlYXNpbmcgKHNlZSBodHRwOi8vZWFzaW5ncy5uZXQvKVxuICAgICAgICBhbmltYXRpb246ICdmYWRlJywgICAgICAgICAgIC8vIEZhZGUsIHNsaWRlLCBub25lXG4gICAgICAgIGFuaW1hdGlvblNwZWVkOiAyMDAsICAgICAgICAgLy8gQW5pbWF0aW9uIGluIHNwZWVkIChtcylcbiAgICAgICAgc2Nyb2xsVHJpZ2dlcjogZmFsc2UsICAgICAgICAvLyBTZXQgYSBjdXN0b20gdHJpZ2dlcmluZyBlbGVtZW50LiBDYW4gYmUgYW4gSFRNTCBzdHJpbmcgb3IgalF1ZXJ5IG9iamVjdFxuICAgICAgICBzY3JvbGxUYXJnZXQ6IGZhbHNlLCAgICAgICAgIC8vIFNldCBhIGN1c3RvbSB0YXJnZXQgZWxlbWVudCBmb3Igc2Nyb2xsaW5nIHRvLiBDYW4gYmUgZWxlbWVudCBvciBudW1iZXJcbiAgICAgICAgc2Nyb2xsVGV4dDogJ1Njcm9sbCB0byB0b3AnLCAvLyBUZXh0IGZvciBlbGVtZW50LCBjYW4gY29udGFpbiBIVE1MXG4gICAgICAgIHNjcm9sbFRpdGxlOiBmYWxzZSwgICAgICAgICAgLy8gU2V0IGEgY3VzdG9tIDxhPiB0aXRsZSBpZiByZXF1aXJlZC4gRGVmYXVsdHMgdG8gc2Nyb2xsVGV4dFxuICAgICAgICBzY3JvbGxJbWc6IGZhbHNlLCAgICAgICAgICAgIC8vIFNldCB0cnVlIHRvIHVzZSBpbWFnZVxuICAgICAgICBhY3RpdmVPdmVybGF5OiBmYWxzZSwgICAgICAgIC8vIFNldCBDU1MgY29sb3IgdG8gZGlzcGxheSBzY3JvbGxVcCBhY3RpdmUgcG9pbnQsIGUuZyAnIzAwRkZGRidcbiAgICAgICAgekluZGV4OiAyMTQ3NDgzNjQ3ICAgICAgICAgICAvLyBaLUluZGV4IGZvciB0aGUgb3ZlcmxheVxuICAgIH07XG5cbiAgICAvLyBEZXN0cm95IHNjcm9sbFVwIHBsdWdpbiBhbmQgY2xlYW4gYWxsIG1vZGlmaWNhdGlvbnMgdG8gdGhlIERPTVxuICAgICQuZm4uc2Nyb2xsVXAuZGVzdHJveSA9IGZ1bmN0aW9uIChzY3JvbGxFdmVudCkge1xuICAgICAgICAkLnJlbW92ZURhdGEoZG9jdW1lbnQuYm9keSwgJ3Njcm9sbFVwJyk7XG4gICAgICAgICQoJyMnICsgJC5mbi5zY3JvbGxVcC5zZXR0aW5ncy5zY3JvbGxOYW1lKS5yZW1vdmUoKTtcbiAgICAgICAgJCgnIycgKyAkLmZuLnNjcm9sbFVwLnNldHRpbmdzLnNjcm9sbE5hbWUgKyAnLWFjdGl2ZScpLnJlbW92ZSgpO1xuXG4gICAgICAgIC8vIElmIDEuNyBvciBhYm92ZSB1c2UgdGhlIG5ldyAub2ZmKClcbiAgICAgICAgaWYgKCQuZm4uanF1ZXJ5LnNwbGl0KCcuJylbMV0gPj0gNykge1xuICAgICAgICAgICAgJCh3aW5kb3cpLm9mZignc2Nyb2xsJywgc2Nyb2xsRXZlbnQpO1xuXG4gICAgICAgIC8vIEVsc2UgdXNlIHRoZSBvbGQgLnVuYmluZCgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkKHdpbmRvdykudW5iaW5kKCdzY3JvbGwnLCBzY3JvbGxFdmVudCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgJC5zY3JvbGxVcCA9ICQuZm4uc2Nyb2xsVXA7XG5cbn0pKGpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG4iLCIvKiFcbiAqIEJvb3RzdHJhcCB2My4zLjYgKGh0dHA6Ly9nZXRib290c3RyYXAuY29tKVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqL1xuaWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGpRdWVyeSl0aHJvdyBuZXcgRXJyb3IoXCJCb290c3RyYXAncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGpRdWVyeVwiKTsrZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGI9YS5mbi5qcXVlcnkuc3BsaXQoXCIgXCIpWzBdLnNwbGl0KFwiLlwiKTtpZihiWzBdPDImJmJbMV08OXx8MT09YlswXSYmOT09YlsxXSYmYlsyXTwxfHxiWzBdPjIpdGhyb3cgbmV3IEVycm9yKFwiQm9vdHN0cmFwJ3MgSmF2YVNjcmlwdCByZXF1aXJlcyBqUXVlcnkgdmVyc2lvbiAxLjkuMSBvciBoaWdoZXIsIGJ1dCBsb3dlciB0aGFuIHZlcnNpb24gM1wiKX0oalF1ZXJ5KSwrZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYigpe3ZhciBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJib290c3RyYXBcIiksYj17V2Via2l0VHJhbnNpdGlvbjpcIndlYmtpdFRyYW5zaXRpb25FbmRcIixNb3pUcmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwiLE9UcmFuc2l0aW9uOlwib1RyYW5zaXRpb25FbmQgb3RyYW5zaXRpb25lbmRcIix0cmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwifTtmb3IodmFyIGMgaW4gYilpZih2b2lkIDAhPT1hLnN0eWxlW2NdKXJldHVybntlbmQ6YltjXX07cmV0dXJuITF9YS5mbi5lbXVsYXRlVHJhbnNpdGlvbkVuZD1mdW5jdGlvbihiKXt2YXIgYz0hMSxkPXRoaXM7YSh0aGlzKS5vbmUoXCJic1RyYW5zaXRpb25FbmRcIixmdW5jdGlvbigpe2M9ITB9KTt2YXIgZT1mdW5jdGlvbigpe2N8fGEoZCkudHJpZ2dlcihhLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQpfTtyZXR1cm4gc2V0VGltZW91dChlLGIpLHRoaXN9LGEoZnVuY3Rpb24oKXthLnN1cHBvcnQudHJhbnNpdGlvbj1iKCksYS5zdXBwb3J0LnRyYW5zaXRpb24mJihhLmV2ZW50LnNwZWNpYWwuYnNUcmFuc2l0aW9uRW5kPXtiaW5kVHlwZTphLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsZGVsZWdhdGVUeXBlOmEuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxoYW5kbGU6ZnVuY3Rpb24oYil7cmV0dXJuIGEoYi50YXJnZXQpLmlzKHRoaXMpP2IuaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpOnZvaWQgMH19KX0pfShqUXVlcnkpLCtmdW5jdGlvbihhKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBiKGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYz1hKHRoaXMpLGU9Yy5kYXRhKFwiYnMuYWxlcnRcIik7ZXx8Yy5kYXRhKFwiYnMuYWxlcnRcIixlPW5ldyBkKHRoaXMpKSxcInN0cmluZ1wiPT10eXBlb2YgYiYmZVtiXS5jYWxsKGMpfSl9dmFyIGM9J1tkYXRhLWRpc21pc3M9XCJhbGVydFwiXScsZD1mdW5jdGlvbihiKXthKGIpLm9uKFwiY2xpY2tcIixjLHRoaXMuY2xvc2UpfTtkLlZFUlNJT049XCIzLjMuNlwiLGQuVFJBTlNJVElPTl9EVVJBVElPTj0xNTAsZC5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oYil7ZnVuY3Rpb24gYygpe2cuZGV0YWNoKCkudHJpZ2dlcihcImNsb3NlZC5icy5hbGVydFwiKS5yZW1vdmUoKX12YXIgZT1hKHRoaXMpLGY9ZS5hdHRyKFwiZGF0YS10YXJnZXRcIik7Znx8KGY9ZS5hdHRyKFwiaHJlZlwiKSxmPWYmJmYucmVwbGFjZSgvLiooPz0jW15cXHNdKiQpLyxcIlwiKSk7dmFyIGc9YShmKTtiJiZiLnByZXZlbnREZWZhdWx0KCksZy5sZW5ndGh8fChnPWUuY2xvc2VzdChcIi5hbGVydFwiKSksZy50cmlnZ2VyKGI9YS5FdmVudChcImNsb3NlLmJzLmFsZXJ0XCIpKSxiLmlzRGVmYXVsdFByZXZlbnRlZCgpfHwoZy5yZW1vdmVDbGFzcyhcImluXCIpLGEuc3VwcG9ydC50cmFuc2l0aW9uJiZnLmhhc0NsYXNzKFwiZmFkZVwiKT9nLm9uZShcImJzVHJhbnNpdGlvbkVuZFwiLGMpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKGQuVFJBTlNJVElPTl9EVVJBVElPTik6YygpKX07dmFyIGU9YS5mbi5hbGVydDthLmZuLmFsZXJ0PWIsYS5mbi5hbGVydC5Db25zdHJ1Y3Rvcj1kLGEuZm4uYWxlcnQubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiBhLmZuLmFsZXJ0PWUsdGhpc30sYShkb2N1bWVudCkub24oXCJjbGljay5icy5hbGVydC5kYXRhLWFwaVwiLGMsZC5wcm90b3R5cGUuY2xvc2UpfShqUXVlcnkpLCtmdW5jdGlvbihhKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBiKGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZD1hKHRoaXMpLGU9ZC5kYXRhKFwiYnMuYnV0dG9uXCIpLGY9XCJvYmplY3RcIj09dHlwZW9mIGImJmI7ZXx8ZC5kYXRhKFwiYnMuYnV0dG9uXCIsZT1uZXcgYyh0aGlzLGYpKSxcInRvZ2dsZVwiPT1iP2UudG9nZ2xlKCk6YiYmZS5zZXRTdGF0ZShiKX0pfXZhciBjPWZ1bmN0aW9uKGIsZCl7dGhpcy4kZWxlbWVudD1hKGIpLHRoaXMub3B0aW9ucz1hLmV4dGVuZCh7fSxjLkRFRkFVTFRTLGQpLHRoaXMuaXNMb2FkaW5nPSExfTtjLlZFUlNJT049XCIzLjMuNlwiLGMuREVGQVVMVFM9e2xvYWRpbmdUZXh0OlwibG9hZGluZy4uLlwifSxjLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihiKXt2YXIgYz1cImRpc2FibGVkXCIsZD10aGlzLiRlbGVtZW50LGU9ZC5pcyhcImlucHV0XCIpP1widmFsXCI6XCJodG1sXCIsZj1kLmRhdGEoKTtiKz1cIlRleHRcIixudWxsPT1mLnJlc2V0VGV4dCYmZC5kYXRhKFwicmVzZXRUZXh0XCIsZFtlXSgpKSxzZXRUaW1lb3V0KGEucHJveHkoZnVuY3Rpb24oKXtkW2VdKG51bGw9PWZbYl0/dGhpcy5vcHRpb25zW2JdOmZbYl0pLFwibG9hZGluZ1RleHRcIj09Yj8odGhpcy5pc0xvYWRpbmc9ITAsZC5hZGRDbGFzcyhjKS5hdHRyKGMsYykpOnRoaXMuaXNMb2FkaW5nJiYodGhpcy5pc0xvYWRpbmc9ITEsZC5yZW1vdmVDbGFzcyhjKS5yZW1vdmVBdHRyKGMpKX0sdGhpcyksMCl9LGMucHJvdG90eXBlLnRvZ2dsZT1mdW5jdGlvbigpe3ZhciBhPSEwLGI9dGhpcy4kZWxlbWVudC5jbG9zZXN0KCdbZGF0YS10b2dnbGU9XCJidXR0b25zXCJdJyk7aWYoYi5sZW5ndGgpe3ZhciBjPXRoaXMuJGVsZW1lbnQuZmluZChcImlucHV0XCIpO1wicmFkaW9cIj09Yy5wcm9wKFwidHlwZVwiKT8oYy5wcm9wKFwiY2hlY2tlZFwiKSYmKGE9ITEpLGIuZmluZChcIi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIiksdGhpcy4kZWxlbWVudC5hZGRDbGFzcyhcImFjdGl2ZVwiKSk6XCJjaGVja2JveFwiPT1jLnByb3AoXCJ0eXBlXCIpJiYoYy5wcm9wKFwiY2hlY2tlZFwiKSE9PXRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoXCJhY3RpdmVcIikmJihhPSExKSx0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpKSxjLnByb3AoXCJjaGVja2VkXCIsdGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImFjdGl2ZVwiKSksYSYmYy50cmlnZ2VyKFwiY2hhbmdlXCIpfWVsc2UgdGhpcy4kZWxlbWVudC5hdHRyKFwiYXJpYS1wcmVzc2VkXCIsIXRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoXCJhY3RpdmVcIikpLHRoaXMuJGVsZW1lbnQudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIil9O3ZhciBkPWEuZm4uYnV0dG9uO2EuZm4uYnV0dG9uPWIsYS5mbi5idXR0b24uQ29uc3RydWN0b3I9YyxhLmZuLmJ1dHRvbi5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIGEuZm4uYnV0dG9uPWQsdGhpc30sYShkb2N1bWVudCkub24oXCJjbGljay5icy5idXR0b24uZGF0YS1hcGlcIiwnW2RhdGEtdG9nZ2xlXj1cImJ1dHRvblwiXScsZnVuY3Rpb24oYyl7dmFyIGQ9YShjLnRhcmdldCk7ZC5oYXNDbGFzcyhcImJ0blwiKXx8KGQ9ZC5jbG9zZXN0KFwiLmJ0blwiKSksYi5jYWxsKGQsXCJ0b2dnbGVcIiksYShjLnRhcmdldCkuaXMoJ2lucHV0W3R5cGU9XCJyYWRpb1wiXScpfHxhKGMudGFyZ2V0KS5pcygnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdJyl8fGMucHJldmVudERlZmF1bHQoKX0pLm9uKFwiZm9jdXMuYnMuYnV0dG9uLmRhdGEtYXBpIGJsdXIuYnMuYnV0dG9uLmRhdGEtYXBpXCIsJ1tkYXRhLXRvZ2dsZV49XCJidXR0b25cIl0nLGZ1bmN0aW9uKGIpe2EoYi50YXJnZXQpLmNsb3Nlc3QoXCIuYnRuXCIpLnRvZ2dsZUNsYXNzKFwiZm9jdXNcIiwvXmZvY3VzKGluKT8kLy50ZXN0KGIudHlwZSkpfSl9KGpRdWVyeSksK2Z1bmN0aW9uKGEpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGIoYil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBkPWEodGhpcyksZT1kLmRhdGEoXCJicy5jYXJvdXNlbFwiKSxmPWEuZXh0ZW5kKHt9LGMuREVGQVVMVFMsZC5kYXRhKCksXCJvYmplY3RcIj09dHlwZW9mIGImJmIpLGc9XCJzdHJpbmdcIj09dHlwZW9mIGI/YjpmLnNsaWRlO2V8fGQuZGF0YShcImJzLmNhcm91c2VsXCIsZT1uZXcgYyh0aGlzLGYpKSxcIm51bWJlclwiPT10eXBlb2YgYj9lLnRvKGIpOmc/ZVtnXSgpOmYuaW50ZXJ2YWwmJmUucGF1c2UoKS5jeWNsZSgpfSl9dmFyIGM9ZnVuY3Rpb24oYixjKXt0aGlzLiRlbGVtZW50PWEoYiksdGhpcy4kaW5kaWNhdG9ycz10aGlzLiRlbGVtZW50LmZpbmQoXCIuY2Fyb3VzZWwtaW5kaWNhdG9yc1wiKSx0aGlzLm9wdGlvbnM9Yyx0aGlzLnBhdXNlZD1udWxsLHRoaXMuc2xpZGluZz1udWxsLHRoaXMuaW50ZXJ2YWw9bnVsbCx0aGlzLiRhY3RpdmU9bnVsbCx0aGlzLiRpdGVtcz1udWxsLHRoaXMub3B0aW9ucy5rZXlib2FyZCYmdGhpcy4kZWxlbWVudC5vbihcImtleWRvd24uYnMuY2Fyb3VzZWxcIixhLnByb3h5KHRoaXMua2V5ZG93bix0aGlzKSksXCJob3ZlclwiPT10aGlzLm9wdGlvbnMucGF1c2UmJiEoXCJvbnRvdWNoc3RhcnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkmJnRoaXMuJGVsZW1lbnQub24oXCJtb3VzZWVudGVyLmJzLmNhcm91c2VsXCIsYS5wcm94eSh0aGlzLnBhdXNlLHRoaXMpKS5vbihcIm1vdXNlbGVhdmUuYnMuY2Fyb3VzZWxcIixhLnByb3h5KHRoaXMuY3ljbGUsdGhpcykpfTtjLlZFUlNJT049XCIzLjMuNlwiLGMuVFJBTlNJVElPTl9EVVJBVElPTj02MDAsYy5ERUZBVUxUUz17aW50ZXJ2YWw6NWUzLHBhdXNlOlwiaG92ZXJcIix3cmFwOiEwLGtleWJvYXJkOiEwfSxjLnByb3RvdHlwZS5rZXlkb3duPWZ1bmN0aW9uKGEpe2lmKCEvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGEudGFyZ2V0LnRhZ05hbWUpKXtzd2l0Y2goYS53aGljaCl7Y2FzZSAzNzp0aGlzLnByZXYoKTticmVhaztjYXNlIDM5OnRoaXMubmV4dCgpO2JyZWFrO2RlZmF1bHQ6cmV0dXJufWEucHJldmVudERlZmF1bHQoKX19LGMucHJvdG90eXBlLmN5Y2xlPWZ1bmN0aW9uKGIpe3JldHVybiBifHwodGhpcy5wYXVzZWQ9ITEpLHRoaXMuaW50ZXJ2YWwmJmNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCksdGhpcy5vcHRpb25zLmludGVydmFsJiYhdGhpcy5wYXVzZWQmJih0aGlzLmludGVydmFsPXNldEludGVydmFsKGEucHJveHkodGhpcy5uZXh0LHRoaXMpLHRoaXMub3B0aW9ucy5pbnRlcnZhbCkpLHRoaXN9LGMucHJvdG90eXBlLmdldEl0ZW1JbmRleD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy4kaXRlbXM9YS5wYXJlbnQoKS5jaGlsZHJlbihcIi5pdGVtXCIpLHRoaXMuJGl0ZW1zLmluZGV4KGF8fHRoaXMuJGFjdGl2ZSl9LGMucHJvdG90eXBlLmdldEl0ZW1Gb3JEaXJlY3Rpb249ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmdldEl0ZW1JbmRleChiKSxkPVwicHJldlwiPT1hJiYwPT09Y3x8XCJuZXh0XCI9PWEmJmM9PXRoaXMuJGl0ZW1zLmxlbmd0aC0xO2lmKGQmJiF0aGlzLm9wdGlvbnMud3JhcClyZXR1cm4gYjt2YXIgZT1cInByZXZcIj09YT8tMToxLGY9KGMrZSkldGhpcy4kaXRlbXMubGVuZ3RoO3JldHVybiB0aGlzLiRpdGVtcy5lcShmKX0sYy5wcm90b3R5cGUudG89ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPXRoaXMuZ2V0SXRlbUluZGV4KHRoaXMuJGFjdGl2ZT10aGlzLiRlbGVtZW50LmZpbmQoXCIuaXRlbS5hY3RpdmVcIikpO3JldHVybiBhPnRoaXMuJGl0ZW1zLmxlbmd0aC0xfHwwPmE/dm9pZCAwOnRoaXMuc2xpZGluZz90aGlzLiRlbGVtZW50Lm9uZShcInNsaWQuYnMuY2Fyb3VzZWxcIixmdW5jdGlvbigpe2IudG8oYSl9KTpjPT1hP3RoaXMucGF1c2UoKS5jeWNsZSgpOnRoaXMuc2xpZGUoYT5jP1wibmV4dFwiOlwicHJldlwiLHRoaXMuJGl0ZW1zLmVxKGEpKX0sYy5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oYil7cmV0dXJuIGJ8fCh0aGlzLnBhdXNlZD0hMCksdGhpcy4kZWxlbWVudC5maW5kKFwiLm5leHQsIC5wcmV2XCIpLmxlbmd0aCYmYS5zdXBwb3J0LnRyYW5zaXRpb24mJih0aGlzLiRlbGVtZW50LnRyaWdnZXIoYS5zdXBwb3J0LnRyYW5zaXRpb24uZW5kKSx0aGlzLmN5Y2xlKCEwKSksdGhpcy5pbnRlcnZhbD1jbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpLHRoaXN9LGMucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zbGlkaW5nP3ZvaWQgMDp0aGlzLnNsaWRlKFwibmV4dFwiKX0sYy5wcm90b3R5cGUucHJldj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNsaWRpbmc/dm9pZCAwOnRoaXMuc2xpZGUoXCJwcmV2XCIpfSxjLnByb3RvdHlwZS5zbGlkZT1mdW5jdGlvbihiLGQpe3ZhciBlPXRoaXMuJGVsZW1lbnQuZmluZChcIi5pdGVtLmFjdGl2ZVwiKSxmPWR8fHRoaXMuZ2V0SXRlbUZvckRpcmVjdGlvbihiLGUpLGc9dGhpcy5pbnRlcnZhbCxoPVwibmV4dFwiPT1iP1wibGVmdFwiOlwicmlnaHRcIixpPXRoaXM7aWYoZi5oYXNDbGFzcyhcImFjdGl2ZVwiKSlyZXR1cm4gdGhpcy5zbGlkaW5nPSExO3ZhciBqPWZbMF0saz1hLkV2ZW50KFwic2xpZGUuYnMuY2Fyb3VzZWxcIix7cmVsYXRlZFRhcmdldDpqLGRpcmVjdGlvbjpofSk7aWYodGhpcy4kZWxlbWVudC50cmlnZ2VyKGspLCFrLmlzRGVmYXVsdFByZXZlbnRlZCgpKXtpZih0aGlzLnNsaWRpbmc9ITAsZyYmdGhpcy5wYXVzZSgpLHRoaXMuJGluZGljYXRvcnMubGVuZ3RoKXt0aGlzLiRpbmRpY2F0b3JzLmZpbmQoXCIuYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO3ZhciBsPWEodGhpcy4kaW5kaWNhdG9ycy5jaGlsZHJlbigpW3RoaXMuZ2V0SXRlbUluZGV4KGYpXSk7bCYmbC5hZGRDbGFzcyhcImFjdGl2ZVwiKX12YXIgbT1hLkV2ZW50KFwic2xpZC5icy5jYXJvdXNlbFwiLHtyZWxhdGVkVGFyZ2V0OmosZGlyZWN0aW9uOmh9KTtyZXR1cm4gYS5zdXBwb3J0LnRyYW5zaXRpb24mJnRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoXCJzbGlkZVwiKT8oZi5hZGRDbGFzcyhiKSxmWzBdLm9mZnNldFdpZHRoLGUuYWRkQ2xhc3MoaCksZi5hZGRDbGFzcyhoKSxlLm9uZShcImJzVHJhbnNpdGlvbkVuZFwiLGZ1bmN0aW9uKCl7Zi5yZW1vdmVDbGFzcyhbYixoXS5qb2luKFwiIFwiKSkuYWRkQ2xhc3MoXCJhY3RpdmVcIiksZS5yZW1vdmVDbGFzcyhbXCJhY3RpdmVcIixoXS5qb2luKFwiIFwiKSksaS5zbGlkaW5nPSExLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLiRlbGVtZW50LnRyaWdnZXIobSl9LDApfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoYy5UUkFOU0lUSU9OX0RVUkFUSU9OKSk6KGUucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIiksZi5hZGRDbGFzcyhcImFjdGl2ZVwiKSx0aGlzLnNsaWRpbmc9ITEsdGhpcy4kZWxlbWVudC50cmlnZ2VyKG0pKSxnJiZ0aGlzLmN5Y2xlKCksdGhpc319O3ZhciBkPWEuZm4uY2Fyb3VzZWw7YS5mbi5jYXJvdXNlbD1iLGEuZm4uY2Fyb3VzZWwuQ29uc3RydWN0b3I9YyxhLmZuLmNhcm91c2VsLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gYS5mbi5jYXJvdXNlbD1kLHRoaXN9O3ZhciBlPWZ1bmN0aW9uKGMpe3ZhciBkLGU9YSh0aGlzKSxmPWEoZS5hdHRyKFwiZGF0YS10YXJnZXRcIil8fChkPWUuYXR0cihcImhyZWZcIikpJiZkLnJlcGxhY2UoLy4qKD89I1teXFxzXSskKS8sXCJcIikpO2lmKGYuaGFzQ2xhc3MoXCJjYXJvdXNlbFwiKSl7dmFyIGc9YS5leHRlbmQoe30sZi5kYXRhKCksZS5kYXRhKCkpLGg9ZS5hdHRyKFwiZGF0YS1zbGlkZS10b1wiKTtoJiYoZy5pbnRlcnZhbD0hMSksYi5jYWxsKGYsZyksaCYmZi5kYXRhKFwiYnMuY2Fyb3VzZWxcIikudG8oaCksYy5wcmV2ZW50RGVmYXVsdCgpfX07YShkb2N1bWVudCkub24oXCJjbGljay5icy5jYXJvdXNlbC5kYXRhLWFwaVwiLFwiW2RhdGEtc2xpZGVdXCIsZSkub24oXCJjbGljay5icy5jYXJvdXNlbC5kYXRhLWFwaVwiLFwiW2RhdGEtc2xpZGUtdG9dXCIsZSksYSh3aW5kb3cpLm9uKFwibG9hZFwiLGZ1bmN0aW9uKCl7YSgnW2RhdGEtcmlkZT1cImNhcm91c2VsXCJdJykuZWFjaChmdW5jdGlvbigpe3ZhciBjPWEodGhpcyk7Yi5jYWxsKGMsYy5kYXRhKCkpfSl9KX0oalF1ZXJ5KSwrZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYihiKXt2YXIgYyxkPWIuYXR0cihcImRhdGEtdGFyZ2V0XCIpfHwoYz1iLmF0dHIoXCJocmVmXCIpKSYmYy5yZXBsYWNlKC8uKig/PSNbXlxcc10rJCkvLFwiXCIpO3JldHVybiBhKGQpfWZ1bmN0aW9uIGMoYil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBjPWEodGhpcyksZT1jLmRhdGEoXCJicy5jb2xsYXBzZVwiKSxmPWEuZXh0ZW5kKHt9LGQuREVGQVVMVFMsYy5kYXRhKCksXCJvYmplY3RcIj09dHlwZW9mIGImJmIpOyFlJiZmLnRvZ2dsZSYmL3Nob3d8aGlkZS8udGVzdChiKSYmKGYudG9nZ2xlPSExKSxlfHxjLmRhdGEoXCJicy5jb2xsYXBzZVwiLGU9bmV3IGQodGhpcyxmKSksXCJzdHJpbmdcIj09dHlwZW9mIGImJmVbYl0oKX0pfXZhciBkPWZ1bmN0aW9uKGIsYyl7dGhpcy4kZWxlbWVudD1hKGIpLHRoaXMub3B0aW9ucz1hLmV4dGVuZCh7fSxkLkRFRkFVTFRTLGMpLHRoaXMuJHRyaWdnZXI9YSgnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl1baHJlZj1cIiMnK2IuaWQrJ1wiXSxbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXRhcmdldD1cIiMnK2IuaWQrJ1wiXScpLHRoaXMudHJhbnNpdGlvbmluZz1udWxsLHRoaXMub3B0aW9ucy5wYXJlbnQ/dGhpcy4kcGFyZW50PXRoaXMuZ2V0UGFyZW50KCk6dGhpcy5hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3ModGhpcy4kZWxlbWVudCx0aGlzLiR0cmlnZ2VyKSx0aGlzLm9wdGlvbnMudG9nZ2xlJiZ0aGlzLnRvZ2dsZSgpfTtkLlZFUlNJT049XCIzLjMuNlwiLGQuVFJBTlNJVElPTl9EVVJBVElPTj0zNTAsZC5ERUZBVUxUUz17dG9nZ2xlOiEwfSxkLnByb3RvdHlwZS5kaW1lbnNpb249ZnVuY3Rpb24oKXt2YXIgYT10aGlzLiRlbGVtZW50Lmhhc0NsYXNzKFwid2lkdGhcIik7cmV0dXJuIGE/XCJ3aWR0aFwiOlwiaGVpZ2h0XCJ9LGQucHJvdG90eXBlLnNob3c9ZnVuY3Rpb24oKXtpZighdGhpcy50cmFuc2l0aW9uaW5nJiYhdGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImluXCIpKXt2YXIgYixlPXRoaXMuJHBhcmVudCYmdGhpcy4kcGFyZW50LmNoaWxkcmVuKFwiLnBhbmVsXCIpLmNoaWxkcmVuKFwiLmluLCAuY29sbGFwc2luZ1wiKTtpZighKGUmJmUubGVuZ3RoJiYoYj1lLmRhdGEoXCJicy5jb2xsYXBzZVwiKSxiJiZiLnRyYW5zaXRpb25pbmcpKSl7dmFyIGY9YS5FdmVudChcInNob3cuYnMuY29sbGFwc2VcIik7aWYodGhpcy4kZWxlbWVudC50cmlnZ2VyKGYpLCFmLmlzRGVmYXVsdFByZXZlbnRlZCgpKXtlJiZlLmxlbmd0aCYmKGMuY2FsbChlLFwiaGlkZVwiKSxifHxlLmRhdGEoXCJicy5jb2xsYXBzZVwiLG51bGwpKTt2YXIgZz10aGlzLmRpbWVuc2lvbigpO3RoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJjb2xsYXBzZVwiKS5hZGRDbGFzcyhcImNvbGxhcHNpbmdcIilbZ10oMCkuYXR0cihcImFyaWEtZXhwYW5kZWRcIiwhMCksdGhpcy4kdHJpZ2dlci5yZW1vdmVDbGFzcyhcImNvbGxhcHNlZFwiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCEwKSx0aGlzLnRyYW5zaXRpb25pbmc9MTt2YXIgaD1mdW5jdGlvbigpe3RoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJjb2xsYXBzaW5nXCIpLmFkZENsYXNzKFwiY29sbGFwc2UgaW5cIilbZ10oXCJcIiksdGhpcy50cmFuc2l0aW9uaW5nPTAsdGhpcy4kZWxlbWVudC50cmlnZ2VyKFwic2hvd24uYnMuY29sbGFwc2VcIil9O2lmKCFhLnN1cHBvcnQudHJhbnNpdGlvbilyZXR1cm4gaC5jYWxsKHRoaXMpO3ZhciBpPWEuY2FtZWxDYXNlKFtcInNjcm9sbFwiLGddLmpvaW4oXCItXCIpKTt0aGlzLiRlbGVtZW50Lm9uZShcImJzVHJhbnNpdGlvbkVuZFwiLGEucHJveHkoaCx0aGlzKSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoZC5UUkFOU0lUSU9OX0RVUkFUSU9OKVtnXSh0aGlzLiRlbGVtZW50WzBdW2ldKX19fX0sZC5wcm90b3R5cGUuaGlkZT1mdW5jdGlvbigpe2lmKCF0aGlzLnRyYW5zaXRpb25pbmcmJnRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoXCJpblwiKSl7dmFyIGI9YS5FdmVudChcImhpZGUuYnMuY29sbGFwc2VcIik7aWYodGhpcy4kZWxlbWVudC50cmlnZ2VyKGIpLCFiLmlzRGVmYXVsdFByZXZlbnRlZCgpKXt2YXIgYz10aGlzLmRpbWVuc2lvbigpO3RoaXMuJGVsZW1lbnRbY10odGhpcy4kZWxlbWVudFtjXSgpKVswXS5vZmZzZXRIZWlnaHQsdGhpcy4kZWxlbWVudC5hZGRDbGFzcyhcImNvbGxhcHNpbmdcIikucmVtb3ZlQ2xhc3MoXCJjb2xsYXBzZSBpblwiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCExKSx0aGlzLiR0cmlnZ2VyLmFkZENsYXNzKFwiY29sbGFwc2VkXCIpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsITEpLHRoaXMudHJhbnNpdGlvbmluZz0xO3ZhciBlPWZ1bmN0aW9uKCl7dGhpcy50cmFuc2l0aW9uaW5nPTAsdGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyhcImNvbGxhcHNpbmdcIikuYWRkQ2xhc3MoXCJjb2xsYXBzZVwiKS50cmlnZ2VyKFwiaGlkZGVuLmJzLmNvbGxhcHNlXCIpfTtyZXR1cm4gYS5zdXBwb3J0LnRyYW5zaXRpb24/dm9pZCB0aGlzLiRlbGVtZW50W2NdKDApLm9uZShcImJzVHJhbnNpdGlvbkVuZFwiLGEucHJveHkoZSx0aGlzKSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoZC5UUkFOU0lUSU9OX0RVUkFUSU9OKTplLmNhbGwodGhpcyl9fX0sZC5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKCl7dGhpc1t0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKFwiaW5cIik/XCJoaWRlXCI6XCJzaG93XCJdKCl9LGQucHJvdG90eXBlLmdldFBhcmVudD1mdW5jdGlvbigpe3JldHVybiBhKHRoaXMub3B0aW9ucy5wYXJlbnQpLmZpbmQoJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdW2RhdGEtcGFyZW50PVwiJyt0aGlzLm9wdGlvbnMucGFyZW50KydcIl0nKS5lYWNoKGEucHJveHkoZnVuY3Rpb24oYyxkKXt2YXIgZT1hKGQpO3RoaXMuYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKGIoZSksZSl9LHRoaXMpKS5lbmQoKX0sZC5wcm90b3R5cGUuYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzPWZ1bmN0aW9uKGEsYil7dmFyIGM9YS5oYXNDbGFzcyhcImluXCIpO2EuYXR0cihcImFyaWEtZXhwYW5kZWRcIixjKSxiLnRvZ2dsZUNsYXNzKFwiY29sbGFwc2VkXCIsIWMpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsYyl9O3ZhciBlPWEuZm4uY29sbGFwc2U7YS5mbi5jb2xsYXBzZT1jLGEuZm4uY29sbGFwc2UuQ29uc3RydWN0b3I9ZCxhLmZuLmNvbGxhcHNlLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gYS5mbi5jb2xsYXBzZT1lLHRoaXN9LGEoZG9jdW1lbnQpLm9uKFwiY2xpY2suYnMuY29sbGFwc2UuZGF0YS1hcGlcIiwnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl0nLGZ1bmN0aW9uKGQpe3ZhciBlPWEodGhpcyk7ZS5hdHRyKFwiZGF0YS10YXJnZXRcIil8fGQucHJldmVudERlZmF1bHQoKTt2YXIgZj1iKGUpLGc9Zi5kYXRhKFwiYnMuY29sbGFwc2VcIiksaD1nP1widG9nZ2xlXCI6ZS5kYXRhKCk7Yy5jYWxsKGYsaCl9KX0oalF1ZXJ5KSwrZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYihiKXt2YXIgYz1iLmF0dHIoXCJkYXRhLXRhcmdldFwiKTtjfHwoYz1iLmF0dHIoXCJocmVmXCIpLGM9YyYmLyNbQS1aYS16XS8udGVzdChjKSYmYy5yZXBsYWNlKC8uKig/PSNbXlxcc10qJCkvLFwiXCIpKTt2YXIgZD1jJiZhKGMpO3JldHVybiBkJiZkLmxlbmd0aD9kOmIucGFyZW50KCl9ZnVuY3Rpb24gYyhjKXtjJiYzPT09Yy53aGljaHx8KGEoZSkucmVtb3ZlKCksYShmKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGQ9YSh0aGlzKSxlPWIoZCksZj17cmVsYXRlZFRhcmdldDp0aGlzfTtlLmhhc0NsYXNzKFwib3BlblwiKSYmKGMmJlwiY2xpY2tcIj09Yy50eXBlJiYvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGMudGFyZ2V0LnRhZ05hbWUpJiZhLmNvbnRhaW5zKGVbMF0sYy50YXJnZXQpfHwoZS50cmlnZ2VyKGM9YS5FdmVudChcImhpZGUuYnMuZHJvcGRvd25cIixmKSksYy5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8KGQuYXR0cihcImFyaWEtZXhwYW5kZWRcIixcImZhbHNlXCIpLGUucmVtb3ZlQ2xhc3MoXCJvcGVuXCIpLnRyaWdnZXIoYS5FdmVudChcImhpZGRlbi5icy5kcm9wZG93blwiLGYpKSkpKX0pKX1mdW5jdGlvbiBkKGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYz1hKHRoaXMpLGQ9Yy5kYXRhKFwiYnMuZHJvcGRvd25cIik7ZHx8Yy5kYXRhKFwiYnMuZHJvcGRvd25cIixkPW5ldyBnKHRoaXMpKSxcInN0cmluZ1wiPT10eXBlb2YgYiYmZFtiXS5jYWxsKGMpfSl9dmFyIGU9XCIuZHJvcGRvd24tYmFja2Ryb3BcIixmPSdbZGF0YS10b2dnbGU9XCJkcm9wZG93blwiXScsZz1mdW5jdGlvbihiKXthKGIpLm9uKFwiY2xpY2suYnMuZHJvcGRvd25cIix0aGlzLnRvZ2dsZSl9O2cuVkVSU0lPTj1cIjMuMy42XCIsZy5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKGQpe3ZhciBlPWEodGhpcyk7aWYoIWUuaXMoXCIuZGlzYWJsZWQsIDpkaXNhYmxlZFwiKSl7dmFyIGY9YihlKSxnPWYuaGFzQ2xhc3MoXCJvcGVuXCIpO2lmKGMoKSwhZyl7XCJvbnRvdWNoc3RhcnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCYmIWYuY2xvc2VzdChcIi5uYXZiYXItbmF2XCIpLmxlbmd0aCYmYShkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKS5hZGRDbGFzcyhcImRyb3Bkb3duLWJhY2tkcm9wXCIpLmluc2VydEFmdGVyKGEodGhpcykpLm9uKFwiY2xpY2tcIixjKTt2YXIgaD17cmVsYXRlZFRhcmdldDp0aGlzfTtpZihmLnRyaWdnZXIoZD1hLkV2ZW50KFwic2hvdy5icy5kcm9wZG93blwiLGgpKSxkLmlzRGVmYXVsdFByZXZlbnRlZCgpKXJldHVybjtlLnRyaWdnZXIoXCJmb2N1c1wiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLFwidHJ1ZVwiKSxmLnRvZ2dsZUNsYXNzKFwib3BlblwiKS50cmlnZ2VyKGEuRXZlbnQoXCJzaG93bi5icy5kcm9wZG93blwiLGgpKX1yZXR1cm4hMX19LGcucHJvdG90eXBlLmtleWRvd249ZnVuY3Rpb24oYyl7aWYoLygzOHw0MHwyN3wzMikvLnRlc3QoYy53aGljaCkmJiEvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGMudGFyZ2V0LnRhZ05hbWUpKXt2YXIgZD1hKHRoaXMpO2lmKGMucHJldmVudERlZmF1bHQoKSxjLnN0b3BQcm9wYWdhdGlvbigpLCFkLmlzKFwiLmRpc2FibGVkLCA6ZGlzYWJsZWRcIikpe3ZhciBlPWIoZCksZz1lLmhhc0NsYXNzKFwib3BlblwiKTtpZighZyYmMjchPWMud2hpY2h8fGcmJjI3PT1jLndoaWNoKXJldHVybiAyNz09Yy53aGljaCYmZS5maW5kKGYpLnRyaWdnZXIoXCJmb2N1c1wiKSxkLnRyaWdnZXIoXCJjbGlja1wiKTt2YXIgaD1cIiBsaTpub3QoLmRpc2FibGVkKTp2aXNpYmxlIGFcIixpPWUuZmluZChcIi5kcm9wZG93bi1tZW51XCIraCk7aWYoaS5sZW5ndGgpe3ZhciBqPWkuaW5kZXgoYy50YXJnZXQpOzM4PT1jLndoaWNoJiZqPjAmJmotLSw0MD09Yy53aGljaCYmajxpLmxlbmd0aC0xJiZqKyssfmp8fChqPTApLGkuZXEoaikudHJpZ2dlcihcImZvY3VzXCIpfX19fTt2YXIgaD1hLmZuLmRyb3Bkb3duO2EuZm4uZHJvcGRvd249ZCxhLmZuLmRyb3Bkb3duLkNvbnN0cnVjdG9yPWcsYS5mbi5kcm9wZG93bi5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIGEuZm4uZHJvcGRvd249aCx0aGlzfSxhKGRvY3VtZW50KS5vbihcImNsaWNrLmJzLmRyb3Bkb3duLmRhdGEtYXBpXCIsYykub24oXCJjbGljay5icy5kcm9wZG93bi5kYXRhLWFwaVwiLFwiLmRyb3Bkb3duIGZvcm1cIixmdW5jdGlvbihhKXthLnN0b3BQcm9wYWdhdGlvbigpfSkub24oXCJjbGljay5icy5kcm9wZG93bi5kYXRhLWFwaVwiLGYsZy5wcm90b3R5cGUudG9nZ2xlKS5vbihcImtleWRvd24uYnMuZHJvcGRvd24uZGF0YS1hcGlcIixmLGcucHJvdG90eXBlLmtleWRvd24pLm9uKFwia2V5ZG93bi5icy5kcm9wZG93bi5kYXRhLWFwaVwiLFwiLmRyb3Bkb3duLW1lbnVcIixnLnByb3RvdHlwZS5rZXlkb3duKX0oalF1ZXJ5KSwrZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYihiLGQpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1hKHRoaXMpLGY9ZS5kYXRhKFwiYnMubW9kYWxcIiksZz1hLmV4dGVuZCh7fSxjLkRFRkFVTFRTLGUuZGF0YSgpLFwib2JqZWN0XCI9PXR5cGVvZiBiJiZiKTtmfHxlLmRhdGEoXCJicy5tb2RhbFwiLGY9bmV3IGModGhpcyxnKSksXCJzdHJpbmdcIj09dHlwZW9mIGI/ZltiXShkKTpnLnNob3cmJmYuc2hvdyhkKX0pfXZhciBjPWZ1bmN0aW9uKGIsYyl7dGhpcy5vcHRpb25zPWMsdGhpcy4kYm9keT1hKGRvY3VtZW50LmJvZHkpLHRoaXMuJGVsZW1lbnQ9YShiKSx0aGlzLiRkaWFsb2c9dGhpcy4kZWxlbWVudC5maW5kKFwiLm1vZGFsLWRpYWxvZ1wiKSx0aGlzLiRiYWNrZHJvcD1udWxsLHRoaXMuaXNTaG93bj1udWxsLHRoaXMub3JpZ2luYWxCb2R5UGFkPW51bGwsdGhpcy5zY3JvbGxiYXJXaWR0aD0wLHRoaXMuaWdub3JlQmFja2Ryb3BDbGljaz0hMSx0aGlzLm9wdGlvbnMucmVtb3RlJiZ0aGlzLiRlbGVtZW50LmZpbmQoXCIubW9kYWwtY29udGVudFwiKS5sb2FkKHRoaXMub3B0aW9ucy5yZW1vdGUsYS5wcm94eShmdW5jdGlvbigpe3RoaXMuJGVsZW1lbnQudHJpZ2dlcihcImxvYWRlZC5icy5tb2RhbFwiKX0sdGhpcykpfTtjLlZFUlNJT049XCIzLjMuNlwiLGMuVFJBTlNJVElPTl9EVVJBVElPTj0zMDAsYy5CQUNLRFJPUF9UUkFOU0lUSU9OX0RVUkFUSU9OPTE1MCxjLkRFRkFVTFRTPXtiYWNrZHJvcDohMCxrZXlib2FyZDohMCxzaG93OiEwfSxjLnByb3RvdHlwZS50b2dnbGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaXNTaG93bj90aGlzLmhpZGUoKTp0aGlzLnNob3coYSl9LGMucHJvdG90eXBlLnNob3c9ZnVuY3Rpb24oYil7dmFyIGQ9dGhpcyxlPWEuRXZlbnQoXCJzaG93LmJzLm1vZGFsXCIse3JlbGF0ZWRUYXJnZXQ6Yn0pO3RoaXMuJGVsZW1lbnQudHJpZ2dlcihlKSx0aGlzLmlzU2hvd258fGUuaXNEZWZhdWx0UHJldmVudGVkKCl8fCh0aGlzLmlzU2hvd249ITAsdGhpcy5jaGVja1Njcm9sbGJhcigpLHRoaXMuc2V0U2Nyb2xsYmFyKCksdGhpcy4kYm9keS5hZGRDbGFzcyhcIm1vZGFsLW9wZW5cIiksdGhpcy5lc2NhcGUoKSx0aGlzLnJlc2l6ZSgpLHRoaXMuJGVsZW1lbnQub24oXCJjbGljay5kaXNtaXNzLmJzLm1vZGFsXCIsJ1tkYXRhLWRpc21pc3M9XCJtb2RhbFwiXScsYS5wcm94eSh0aGlzLmhpZGUsdGhpcykpLHRoaXMuJGRpYWxvZy5vbihcIm1vdXNlZG93bi5kaXNtaXNzLmJzLm1vZGFsXCIsZnVuY3Rpb24oKXtkLiRlbGVtZW50Lm9uZShcIm1vdXNldXAuZGlzbWlzcy5icy5tb2RhbFwiLGZ1bmN0aW9uKGIpe2EoYi50YXJnZXQpLmlzKGQuJGVsZW1lbnQpJiYoZC5pZ25vcmVCYWNrZHJvcENsaWNrPSEwKX0pfSksdGhpcy5iYWNrZHJvcChmdW5jdGlvbigpe3ZhciBlPWEuc3VwcG9ydC50cmFuc2l0aW9uJiZkLiRlbGVtZW50Lmhhc0NsYXNzKFwiZmFkZVwiKTtkLiRlbGVtZW50LnBhcmVudCgpLmxlbmd0aHx8ZC4kZWxlbWVudC5hcHBlbmRUbyhkLiRib2R5KSxkLiRlbGVtZW50LnNob3coKS5zY3JvbGxUb3AoMCksZC5hZGp1c3REaWFsb2coKSxlJiZkLiRlbGVtZW50WzBdLm9mZnNldFdpZHRoLGQuJGVsZW1lbnQuYWRkQ2xhc3MoXCJpblwiKSxkLmVuZm9yY2VGb2N1cygpO3ZhciBmPWEuRXZlbnQoXCJzaG93bi5icy5tb2RhbFwiLHtyZWxhdGVkVGFyZ2V0OmJ9KTtlP2QuJGRpYWxvZy5vbmUoXCJic1RyYW5zaXRpb25FbmRcIixmdW5jdGlvbigpe2QuJGVsZW1lbnQudHJpZ2dlcihcImZvY3VzXCIpLnRyaWdnZXIoZil9KS5lbXVsYXRlVHJhbnNpdGlvbkVuZChjLlRSQU5TSVRJT05fRFVSQVRJT04pOmQuJGVsZW1lbnQudHJpZ2dlcihcImZvY3VzXCIpLnRyaWdnZXIoZil9KSl9LGMucHJvdG90eXBlLmhpZGU9ZnVuY3Rpb24oYil7YiYmYi5wcmV2ZW50RGVmYXVsdCgpLGI9YS5FdmVudChcImhpZGUuYnMubW9kYWxcIiksdGhpcy4kZWxlbWVudC50cmlnZ2VyKGIpLHRoaXMuaXNTaG93biYmIWIuaXNEZWZhdWx0UHJldmVudGVkKCkmJih0aGlzLmlzU2hvd249ITEsdGhpcy5lc2NhcGUoKSx0aGlzLnJlc2l6ZSgpLGEoZG9jdW1lbnQpLm9mZihcImZvY3VzaW4uYnMubW9kYWxcIiksdGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyhcImluXCIpLm9mZihcImNsaWNrLmRpc21pc3MuYnMubW9kYWxcIikub2ZmKFwibW91c2V1cC5kaXNtaXNzLmJzLm1vZGFsXCIpLHRoaXMuJGRpYWxvZy5vZmYoXCJtb3VzZWRvd24uZGlzbWlzcy5icy5tb2RhbFwiKSxhLnN1cHBvcnQudHJhbnNpdGlvbiYmdGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImZhZGVcIik/dGhpcy4kZWxlbWVudC5vbmUoXCJic1RyYW5zaXRpb25FbmRcIixhLnByb3h5KHRoaXMuaGlkZU1vZGFsLHRoaXMpKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChjLlRSQU5TSVRJT05fRFVSQVRJT04pOnRoaXMuaGlkZU1vZGFsKCkpfSxjLnByb3RvdHlwZS5lbmZvcmNlRm9jdXM9ZnVuY3Rpb24oKXthKGRvY3VtZW50KS5vZmYoXCJmb2N1c2luLmJzLm1vZGFsXCIpLm9uKFwiZm9jdXNpbi5icy5tb2RhbFwiLGEucHJveHkoZnVuY3Rpb24oYSl7dGhpcy4kZWxlbWVudFswXT09PWEudGFyZ2V0fHx0aGlzLiRlbGVtZW50LmhhcyhhLnRhcmdldCkubGVuZ3RofHx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJmb2N1c1wiKX0sdGhpcykpfSxjLnByb3RvdHlwZS5lc2NhcGU9ZnVuY3Rpb24oKXt0aGlzLmlzU2hvd24mJnRoaXMub3B0aW9ucy5rZXlib2FyZD90aGlzLiRlbGVtZW50Lm9uKFwia2V5ZG93bi5kaXNtaXNzLmJzLm1vZGFsXCIsYS5wcm94eShmdW5jdGlvbihhKXsyNz09YS53aGljaCYmdGhpcy5oaWRlKCl9LHRoaXMpKTp0aGlzLmlzU2hvd258fHRoaXMuJGVsZW1lbnQub2ZmKFwia2V5ZG93bi5kaXNtaXNzLmJzLm1vZGFsXCIpfSxjLnByb3RvdHlwZS5yZXNpemU9ZnVuY3Rpb24oKXt0aGlzLmlzU2hvd24/YSh3aW5kb3cpLm9uKFwicmVzaXplLmJzLm1vZGFsXCIsYS5wcm94eSh0aGlzLmhhbmRsZVVwZGF0ZSx0aGlzKSk6YSh3aW5kb3cpLm9mZihcInJlc2l6ZS5icy5tb2RhbFwiKX0sYy5wcm90b3R5cGUuaGlkZU1vZGFsPWZ1bmN0aW9uKCl7dmFyIGE9dGhpczt0aGlzLiRlbGVtZW50LmhpZGUoKSx0aGlzLmJhY2tkcm9wKGZ1bmN0aW9uKCl7YS4kYm9keS5yZW1vdmVDbGFzcyhcIm1vZGFsLW9wZW5cIiksYS5yZXNldEFkanVzdG1lbnRzKCksYS5yZXNldFNjcm9sbGJhcigpLGEuJGVsZW1lbnQudHJpZ2dlcihcImhpZGRlbi5icy5tb2RhbFwiKX0pfSxjLnByb3RvdHlwZS5yZW1vdmVCYWNrZHJvcD1mdW5jdGlvbigpe3RoaXMuJGJhY2tkcm9wJiZ0aGlzLiRiYWNrZHJvcC5yZW1vdmUoKSx0aGlzLiRiYWNrZHJvcD1udWxsfSxjLnByb3RvdHlwZS5iYWNrZHJvcD1mdW5jdGlvbihiKXt2YXIgZD10aGlzLGU9dGhpcy4kZWxlbWVudC5oYXNDbGFzcyhcImZhZGVcIik/XCJmYWRlXCI6XCJcIjtpZih0aGlzLmlzU2hvd24mJnRoaXMub3B0aW9ucy5iYWNrZHJvcCl7dmFyIGY9YS5zdXBwb3J0LnRyYW5zaXRpb24mJmU7aWYodGhpcy4kYmFja2Ryb3A9YShkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKS5hZGRDbGFzcyhcIm1vZGFsLWJhY2tkcm9wIFwiK2UpLmFwcGVuZFRvKHRoaXMuJGJvZHkpLHRoaXMuJGVsZW1lbnQub24oXCJjbGljay5kaXNtaXNzLmJzLm1vZGFsXCIsYS5wcm94eShmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pZ25vcmVCYWNrZHJvcENsaWNrP3ZvaWQodGhpcy5pZ25vcmVCYWNrZHJvcENsaWNrPSExKTp2b2lkKGEudGFyZ2V0PT09YS5jdXJyZW50VGFyZ2V0JiYoXCJzdGF0aWNcIj09dGhpcy5vcHRpb25zLmJhY2tkcm9wP3RoaXMuJGVsZW1lbnRbMF0uZm9jdXMoKTp0aGlzLmhpZGUoKSkpfSx0aGlzKSksZiYmdGhpcy4kYmFja2Ryb3BbMF0ub2Zmc2V0V2lkdGgsdGhpcy4kYmFja2Ryb3AuYWRkQ2xhc3MoXCJpblwiKSwhYilyZXR1cm47Zj90aGlzLiRiYWNrZHJvcC5vbmUoXCJic1RyYW5zaXRpb25FbmRcIixiKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChjLkJBQ0tEUk9QX1RSQU5TSVRJT05fRFVSQVRJT04pOmIoKX1lbHNlIGlmKCF0aGlzLmlzU2hvd24mJnRoaXMuJGJhY2tkcm9wKXt0aGlzLiRiYWNrZHJvcC5yZW1vdmVDbGFzcyhcImluXCIpO3ZhciBnPWZ1bmN0aW9uKCl7ZC5yZW1vdmVCYWNrZHJvcCgpLGImJmIoKX07YS5zdXBwb3J0LnRyYW5zaXRpb24mJnRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoXCJmYWRlXCIpP3RoaXMuJGJhY2tkcm9wLm9uZShcImJzVHJhbnNpdGlvbkVuZFwiLGcpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKGMuQkFDS0RST1BfVFJBTlNJVElPTl9EVVJBVElPTik6ZygpfWVsc2UgYiYmYigpfSxjLnByb3RvdHlwZS5oYW5kbGVVcGRhdGU9ZnVuY3Rpb24oKXt0aGlzLmFkanVzdERpYWxvZygpfSxjLnByb3RvdHlwZS5hZGp1c3REaWFsb2c9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLiRlbGVtZW50WzBdLnNjcm9sbEhlaWdodD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O3RoaXMuJGVsZW1lbnQuY3NzKHtwYWRkaW5nTGVmdDohdGhpcy5ib2R5SXNPdmVyZmxvd2luZyYmYT90aGlzLnNjcm9sbGJhcldpZHRoOlwiXCIscGFkZGluZ1JpZ2h0OnRoaXMuYm9keUlzT3ZlcmZsb3dpbmcmJiFhP3RoaXMuc2Nyb2xsYmFyV2lkdGg6XCJcIn0pfSxjLnByb3RvdHlwZS5yZXNldEFkanVzdG1lbnRzPWZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC5jc3Moe3BhZGRpbmdMZWZ0OlwiXCIscGFkZGluZ1JpZ2h0OlwiXCJ9KX0sYy5wcm90b3R5cGUuY2hlY2tTY3JvbGxiYXI9ZnVuY3Rpb24oKXt2YXIgYT13aW5kb3cuaW5uZXJXaWR0aDtpZighYSl7dmFyIGI9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2E9Yi5yaWdodC1NYXRoLmFicyhiLmxlZnQpfXRoaXMuYm9keUlzT3ZlcmZsb3dpbmc9ZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDxhLHRoaXMuc2Nyb2xsYmFyV2lkdGg9dGhpcy5tZWFzdXJlU2Nyb2xsYmFyKCl9LGMucHJvdG90eXBlLnNldFNjcm9sbGJhcj1mdW5jdGlvbigpe3ZhciBhPXBhcnNlSW50KHRoaXMuJGJvZHkuY3NzKFwicGFkZGluZy1yaWdodFwiKXx8MCwxMCk7dGhpcy5vcmlnaW5hbEJvZHlQYWQ9ZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHR8fFwiXCIsdGhpcy5ib2R5SXNPdmVyZmxvd2luZyYmdGhpcy4kYm9keS5jc3MoXCJwYWRkaW5nLXJpZ2h0XCIsYSt0aGlzLnNjcm9sbGJhcldpZHRoKX0sYy5wcm90b3R5cGUucmVzZXRTY3JvbGxiYXI9ZnVuY3Rpb24oKXt0aGlzLiRib2R5LmNzcyhcInBhZGRpbmctcmlnaHRcIix0aGlzLm9yaWdpbmFsQm9keVBhZCl9LGMucHJvdG90eXBlLm1lYXN1cmVTY3JvbGxiYXI9ZnVuY3Rpb24oKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2EuY2xhc3NOYW1lPVwibW9kYWwtc2Nyb2xsYmFyLW1lYXN1cmVcIix0aGlzLiRib2R5LmFwcGVuZChhKTt2YXIgYj1hLm9mZnNldFdpZHRoLWEuY2xpZW50V2lkdGg7cmV0dXJuIHRoaXMuJGJvZHlbMF0ucmVtb3ZlQ2hpbGQoYSksYn07dmFyIGQ9YS5mbi5tb2RhbDthLmZuLm1vZGFsPWIsYS5mbi5tb2RhbC5Db25zdHJ1Y3Rvcj1jLGEuZm4ubW9kYWwubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiBhLmZuLm1vZGFsPWQsdGhpc30sYShkb2N1bWVudCkub24oXCJjbGljay5icy5tb2RhbC5kYXRhLWFwaVwiLCdbZGF0YS10b2dnbGU9XCJtb2RhbFwiXScsZnVuY3Rpb24oYyl7dmFyIGQ9YSh0aGlzKSxlPWQuYXR0cihcImhyZWZcIiksZj1hKGQuYXR0cihcImRhdGEtdGFyZ2V0XCIpfHxlJiZlLnJlcGxhY2UoLy4qKD89I1teXFxzXSskKS8sXCJcIikpLGc9Zi5kYXRhKFwiYnMubW9kYWxcIik/XCJ0b2dnbGVcIjphLmV4dGVuZCh7cmVtb3RlOiEvIy8udGVzdChlKSYmZX0sZi5kYXRhKCksZC5kYXRhKCkpO2QuaXMoXCJhXCIpJiZjLnByZXZlbnREZWZhdWx0KCksZi5vbmUoXCJzaG93LmJzLm1vZGFsXCIsZnVuY3Rpb24oYSl7YS5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8Zi5vbmUoXCJoaWRkZW4uYnMubW9kYWxcIixmdW5jdGlvbigpe2QuaXMoXCI6dmlzaWJsZVwiKSYmZC50cmlnZ2VyKFwiZm9jdXNcIil9KX0pLGIuY2FsbChmLGcsdGhpcyl9KX0oalF1ZXJ5KSwrZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYihiKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGQ9YSh0aGlzKSxlPWQuZGF0YShcImJzLnRvb2x0aXBcIiksZj1cIm9iamVjdFwiPT10eXBlb2YgYiYmYjsoZXx8IS9kZXN0cm95fGhpZGUvLnRlc3QoYikpJiYoZXx8ZC5kYXRhKFwiYnMudG9vbHRpcFwiLGU9bmV3IGModGhpcyxmKSksXCJzdHJpbmdcIj09dHlwZW9mIGImJmVbYl0oKSl9KX12YXIgYz1mdW5jdGlvbihhLGIpe3RoaXMudHlwZT1udWxsLHRoaXMub3B0aW9ucz1udWxsLHRoaXMuZW5hYmxlZD1udWxsLHRoaXMudGltZW91dD1udWxsLHRoaXMuaG92ZXJTdGF0ZT1udWxsLHRoaXMuJGVsZW1lbnQ9bnVsbCx0aGlzLmluU3RhdGU9bnVsbCx0aGlzLmluaXQoXCJ0b29sdGlwXCIsYSxiKX07Yy5WRVJTSU9OPVwiMy4zLjZcIixjLlRSQU5TSVRJT05fRFVSQVRJT049MTUwLGMuREVGQVVMVFM9e2FuaW1hdGlvbjohMCxwbGFjZW1lbnQ6XCJ0b3BcIixzZWxlY3RvcjohMSx0ZW1wbGF0ZTonPGRpdiBjbGFzcz1cInRvb2x0aXBcIiByb2xlPVwidG9vbHRpcFwiPjxkaXYgY2xhc3M9XCJ0b29sdGlwLWFycm93XCI+PC9kaXY+PGRpdiBjbGFzcz1cInRvb2x0aXAtaW5uZXJcIj48L2Rpdj48L2Rpdj4nLHRyaWdnZXI6XCJob3ZlciBmb2N1c1wiLHRpdGxlOlwiXCIsZGVsYXk6MCxodG1sOiExLGNvbnRhaW5lcjohMSx2aWV3cG9ydDp7c2VsZWN0b3I6XCJib2R5XCIscGFkZGluZzowfX0sYy5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbihiLGMsZCl7aWYodGhpcy5lbmFibGVkPSEwLHRoaXMudHlwZT1iLHRoaXMuJGVsZW1lbnQ9YShjKSx0aGlzLm9wdGlvbnM9dGhpcy5nZXRPcHRpb25zKGQpLHRoaXMuJHZpZXdwb3J0PXRoaXMub3B0aW9ucy52aWV3cG9ydCYmYShhLmlzRnVuY3Rpb24odGhpcy5vcHRpb25zLnZpZXdwb3J0KT90aGlzLm9wdGlvbnMudmlld3BvcnQuY2FsbCh0aGlzLHRoaXMuJGVsZW1lbnQpOnRoaXMub3B0aW9ucy52aWV3cG9ydC5zZWxlY3Rvcnx8dGhpcy5vcHRpb25zLnZpZXdwb3J0KSx0aGlzLmluU3RhdGU9e2NsaWNrOiExLGhvdmVyOiExLGZvY3VzOiExfSx0aGlzLiRlbGVtZW50WzBdaW5zdGFuY2VvZiBkb2N1bWVudC5jb25zdHJ1Y3RvciYmIXRoaXMub3B0aW9ucy5zZWxlY3Rvcil0aHJvdyBuZXcgRXJyb3IoXCJgc2VsZWN0b3JgIG9wdGlvbiBtdXN0IGJlIHNwZWNpZmllZCB3aGVuIGluaXRpYWxpemluZyBcIit0aGlzLnR5cGUrXCIgb24gdGhlIHdpbmRvdy5kb2N1bWVudCBvYmplY3QhXCIpO2Zvcih2YXIgZT10aGlzLm9wdGlvbnMudHJpZ2dlci5zcGxpdChcIiBcIiksZj1lLmxlbmd0aDtmLS07KXt2YXIgZz1lW2ZdO2lmKFwiY2xpY2tcIj09Zyl0aGlzLiRlbGVtZW50Lm9uKFwiY2xpY2suXCIrdGhpcy50eXBlLHRoaXMub3B0aW9ucy5zZWxlY3RvcixhLnByb3h5KHRoaXMudG9nZ2xlLHRoaXMpKTtlbHNlIGlmKFwibWFudWFsXCIhPWcpe3ZhciBoPVwiaG92ZXJcIj09Zz9cIm1vdXNlZW50ZXJcIjpcImZvY3VzaW5cIixpPVwiaG92ZXJcIj09Zz9cIm1vdXNlbGVhdmVcIjpcImZvY3Vzb3V0XCI7dGhpcy4kZWxlbWVudC5vbihoK1wiLlwiK3RoaXMudHlwZSx0aGlzLm9wdGlvbnMuc2VsZWN0b3IsYS5wcm94eSh0aGlzLmVudGVyLHRoaXMpKSx0aGlzLiRlbGVtZW50Lm9uKGkrXCIuXCIrdGhpcy50eXBlLHRoaXMub3B0aW9ucy5zZWxlY3RvcixhLnByb3h5KHRoaXMubGVhdmUsdGhpcykpfX10aGlzLm9wdGlvbnMuc2VsZWN0b3I/dGhpcy5fb3B0aW9ucz1hLmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMse3RyaWdnZXI6XCJtYW51YWxcIixzZWxlY3RvcjpcIlwifSk6dGhpcy5maXhUaXRsZSgpfSxjLnByb3RvdHlwZS5nZXREZWZhdWx0cz1mdW5jdGlvbigpe3JldHVybiBjLkRFRkFVTFRTfSxjLnByb3RvdHlwZS5nZXRPcHRpb25zPWZ1bmN0aW9uKGIpe3JldHVybiBiPWEuZXh0ZW5kKHt9LHRoaXMuZ2V0RGVmYXVsdHMoKSx0aGlzLiRlbGVtZW50LmRhdGEoKSxiKSxiLmRlbGF5JiZcIm51bWJlclwiPT10eXBlb2YgYi5kZWxheSYmKGIuZGVsYXk9e3Nob3c6Yi5kZWxheSxoaWRlOmIuZGVsYXl9KSxifSxjLnByb3RvdHlwZS5nZXREZWxlZ2F0ZU9wdGlvbnM9ZnVuY3Rpb24oKXt2YXIgYj17fSxjPXRoaXMuZ2V0RGVmYXVsdHMoKTtyZXR1cm4gdGhpcy5fb3B0aW9ucyYmYS5lYWNoKHRoaXMuX29wdGlvbnMsZnVuY3Rpb24oYSxkKXtjW2FdIT1kJiYoYlthXT1kKX0pLGJ9LGMucHJvdG90eXBlLmVudGVyPWZ1bmN0aW9uKGIpe3ZhciBjPWIgaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yP2I6YShiLmN1cnJlbnRUYXJnZXQpLmRhdGEoXCJicy5cIit0aGlzLnR5cGUpO3JldHVybiBjfHwoYz1uZXcgdGhpcy5jb25zdHJ1Y3RvcihiLmN1cnJlbnRUYXJnZXQsdGhpcy5nZXREZWxlZ2F0ZU9wdGlvbnMoKSksYShiLmN1cnJlbnRUYXJnZXQpLmRhdGEoXCJicy5cIit0aGlzLnR5cGUsYykpLGIgaW5zdGFuY2VvZiBhLkV2ZW50JiYoYy5pblN0YXRlW1wiZm9jdXNpblwiPT1iLnR5cGU/XCJmb2N1c1wiOlwiaG92ZXJcIl09ITApLGMudGlwKCkuaGFzQ2xhc3MoXCJpblwiKXx8XCJpblwiPT1jLmhvdmVyU3RhdGU/dm9pZChjLmhvdmVyU3RhdGU9XCJpblwiKTooY2xlYXJUaW1lb3V0KGMudGltZW91dCksYy5ob3ZlclN0YXRlPVwiaW5cIixjLm9wdGlvbnMuZGVsYXkmJmMub3B0aW9ucy5kZWxheS5zaG93P3ZvaWQoYy50aW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtcImluXCI9PWMuaG92ZXJTdGF0ZSYmYy5zaG93KCl9LGMub3B0aW9ucy5kZWxheS5zaG93KSk6Yy5zaG93KCkpfSxjLnByb3RvdHlwZS5pc0luU3RhdGVUcnVlPWZ1bmN0aW9uKCl7Zm9yKHZhciBhIGluIHRoaXMuaW5TdGF0ZSlpZih0aGlzLmluU3RhdGVbYV0pcmV0dXJuITA7cmV0dXJuITF9LGMucHJvdG90eXBlLmxlYXZlPWZ1bmN0aW9uKGIpe3ZhciBjPWIgaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yP2I6YShiLmN1cnJlbnRUYXJnZXQpLmRhdGEoXCJicy5cIit0aGlzLnR5cGUpO3JldHVybiBjfHwoYz1uZXcgdGhpcy5jb25zdHJ1Y3RvcihiLmN1cnJlbnRUYXJnZXQsdGhpcy5nZXREZWxlZ2F0ZU9wdGlvbnMoKSksYShiLmN1cnJlbnRUYXJnZXQpLmRhdGEoXCJicy5cIit0aGlzLnR5cGUsYykpLGIgaW5zdGFuY2VvZiBhLkV2ZW50JiYoYy5pblN0YXRlW1wiZm9jdXNvdXRcIj09Yi50eXBlP1wiZm9jdXNcIjpcImhvdmVyXCJdPSExKSxjLmlzSW5TdGF0ZVRydWUoKT92b2lkIDA6KGNsZWFyVGltZW91dChjLnRpbWVvdXQpLGMuaG92ZXJTdGF0ZT1cIm91dFwiLGMub3B0aW9ucy5kZWxheSYmYy5vcHRpb25zLmRlbGF5LmhpZGU/dm9pZChjLnRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe1wib3V0XCI9PWMuaG92ZXJTdGF0ZSYmYy5oaWRlKCl9LGMub3B0aW9ucy5kZWxheS5oaWRlKSk6Yy5oaWRlKCkpfSxjLnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7dmFyIGI9YS5FdmVudChcInNob3cuYnMuXCIrdGhpcy50eXBlKTtpZih0aGlzLmhhc0NvbnRlbnQoKSYmdGhpcy5lbmFibGVkKXt0aGlzLiRlbGVtZW50LnRyaWdnZXIoYik7dmFyIGQ9YS5jb250YWlucyh0aGlzLiRlbGVtZW50WzBdLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHRoaXMuJGVsZW1lbnRbMF0pO2lmKGIuaXNEZWZhdWx0UHJldmVudGVkKCl8fCFkKXJldHVybjt2YXIgZT10aGlzLGY9dGhpcy50aXAoKSxnPXRoaXMuZ2V0VUlEKHRoaXMudHlwZSk7dGhpcy5zZXRDb250ZW50KCksZi5hdHRyKFwiaWRcIixnKSx0aGlzLiRlbGVtZW50LmF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIsZyksdGhpcy5vcHRpb25zLmFuaW1hdGlvbiYmZi5hZGRDbGFzcyhcImZhZGVcIik7dmFyIGg9XCJmdW5jdGlvblwiPT10eXBlb2YgdGhpcy5vcHRpb25zLnBsYWNlbWVudD90aGlzLm9wdGlvbnMucGxhY2VtZW50LmNhbGwodGhpcyxmWzBdLHRoaXMuJGVsZW1lbnRbMF0pOnRoaXMub3B0aW9ucy5wbGFjZW1lbnQsaT0vXFxzP2F1dG8/XFxzPy9pLGo9aS50ZXN0KGgpO2omJihoPWgucmVwbGFjZShpLFwiXCIpfHxcInRvcFwiKSxmLmRldGFjaCgpLmNzcyh7dG9wOjAsbGVmdDowLGRpc3BsYXk6XCJibG9ja1wifSkuYWRkQ2xhc3MoaCkuZGF0YShcImJzLlwiK3RoaXMudHlwZSx0aGlzKSx0aGlzLm9wdGlvbnMuY29udGFpbmVyP2YuYXBwZW5kVG8odGhpcy5vcHRpb25zLmNvbnRhaW5lcik6Zi5pbnNlcnRBZnRlcih0aGlzLiRlbGVtZW50KSx0aGlzLiRlbGVtZW50LnRyaWdnZXIoXCJpbnNlcnRlZC5icy5cIit0aGlzLnR5cGUpO3ZhciBrPXRoaXMuZ2V0UG9zaXRpb24oKSxsPWZbMF0ub2Zmc2V0V2lkdGgsbT1mWzBdLm9mZnNldEhlaWdodDtpZihqKXt2YXIgbj1oLG89dGhpcy5nZXRQb3NpdGlvbih0aGlzLiR2aWV3cG9ydCk7aD1cImJvdHRvbVwiPT1oJiZrLmJvdHRvbSttPm8uYm90dG9tP1widG9wXCI6XCJ0b3BcIj09aCYmay50b3AtbTxvLnRvcD9cImJvdHRvbVwiOlwicmlnaHRcIj09aCYmay5yaWdodCtsPm8ud2lkdGg/XCJsZWZ0XCI6XCJsZWZ0XCI9PWgmJmsubGVmdC1sPG8ubGVmdD9cInJpZ2h0XCI6aCxmLnJlbW92ZUNsYXNzKG4pLmFkZENsYXNzKGgpfXZhciBwPXRoaXMuZ2V0Q2FsY3VsYXRlZE9mZnNldChoLGssbCxtKTt0aGlzLmFwcGx5UGxhY2VtZW50KHAsaCk7dmFyIHE9ZnVuY3Rpb24oKXt2YXIgYT1lLmhvdmVyU3RhdGU7ZS4kZWxlbWVudC50cmlnZ2VyKFwic2hvd24uYnMuXCIrZS50eXBlKSxlLmhvdmVyU3RhdGU9bnVsbCxcIm91dFwiPT1hJiZlLmxlYXZlKGUpfTthLnN1cHBvcnQudHJhbnNpdGlvbiYmdGhpcy4kdGlwLmhhc0NsYXNzKFwiZmFkZVwiKT9mLm9uZShcImJzVHJhbnNpdGlvbkVuZFwiLHEpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKGMuVFJBTlNJVElPTl9EVVJBVElPTik6cSgpfX0sYy5wcm90b3R5cGUuYXBwbHlQbGFjZW1lbnQ9ZnVuY3Rpb24oYixjKXt2YXIgZD10aGlzLnRpcCgpLGU9ZFswXS5vZmZzZXRXaWR0aCxmPWRbMF0ub2Zmc2V0SGVpZ2h0LGc9cGFyc2VJbnQoZC5jc3MoXCJtYXJnaW4tdG9wXCIpLDEwKSxoPXBhcnNlSW50KGQuY3NzKFwibWFyZ2luLWxlZnRcIiksMTApO2lzTmFOKGcpJiYoZz0wKSxpc05hTihoKSYmKGg9MCksYi50b3ArPWcsYi5sZWZ0Kz1oLGEub2Zmc2V0LnNldE9mZnNldChkWzBdLGEuZXh0ZW5kKHt1c2luZzpmdW5jdGlvbihhKXtkLmNzcyh7dG9wOk1hdGgucm91bmQoYS50b3ApLGxlZnQ6TWF0aC5yb3VuZChhLmxlZnQpfSl9fSxiKSwwKSxkLmFkZENsYXNzKFwiaW5cIik7dmFyIGk9ZFswXS5vZmZzZXRXaWR0aCxqPWRbMF0ub2Zmc2V0SGVpZ2h0O1widG9wXCI9PWMmJmohPWYmJihiLnRvcD1iLnRvcCtmLWopO3ZhciBrPXRoaXMuZ2V0Vmlld3BvcnRBZGp1c3RlZERlbHRhKGMsYixpLGopO2subGVmdD9iLmxlZnQrPWsubGVmdDpiLnRvcCs9ay50b3A7dmFyIGw9L3RvcHxib3R0b20vLnRlc3QoYyksbT1sPzIqay5sZWZ0LWUraToyKmsudG9wLWYraixuPWw/XCJvZmZzZXRXaWR0aFwiOlwib2Zmc2V0SGVpZ2h0XCI7ZC5vZmZzZXQoYiksdGhpcy5yZXBsYWNlQXJyb3cobSxkWzBdW25dLGwpfSxjLnByb3RvdHlwZS5yZXBsYWNlQXJyb3c9ZnVuY3Rpb24oYSxiLGMpe3RoaXMuYXJyb3coKS5jc3MoYz9cImxlZnRcIjpcInRvcFwiLDUwKigxLWEvYikrXCIlXCIpLmNzcyhjP1widG9wXCI6XCJsZWZ0XCIsXCJcIil9LGMucHJvdG90eXBlLnNldENvbnRlbnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnRpcCgpLGI9dGhpcy5nZXRUaXRsZSgpO2EuZmluZChcIi50b29sdGlwLWlubmVyXCIpW3RoaXMub3B0aW9ucy5odG1sP1wiaHRtbFwiOlwidGV4dFwiXShiKSxhLnJlbW92ZUNsYXNzKFwiZmFkZSBpbiB0b3AgYm90dG9tIGxlZnQgcmlnaHRcIil9LGMucHJvdG90eXBlLmhpZGU9ZnVuY3Rpb24oYil7ZnVuY3Rpb24gZCgpe1wiaW5cIiE9ZS5ob3ZlclN0YXRlJiZmLmRldGFjaCgpLGUuJGVsZW1lbnQucmVtb3ZlQXR0cihcImFyaWEtZGVzY3JpYmVkYnlcIikudHJpZ2dlcihcImhpZGRlbi5icy5cIitlLnR5cGUpLGImJmIoKX12YXIgZT10aGlzLGY9YSh0aGlzLiR0aXApLGc9YS5FdmVudChcImhpZGUuYnMuXCIrdGhpcy50eXBlKTtyZXR1cm4gdGhpcy4kZWxlbWVudC50cmlnZ2VyKGcpLGcuaXNEZWZhdWx0UHJldmVudGVkKCk/dm9pZCAwOihmLnJlbW92ZUNsYXNzKFwiaW5cIiksYS5zdXBwb3J0LnRyYW5zaXRpb24mJmYuaGFzQ2xhc3MoXCJmYWRlXCIpP2Yub25lKFwiYnNUcmFuc2l0aW9uRW5kXCIsZCkuZW11bGF0ZVRyYW5zaXRpb25FbmQoYy5UUkFOU0lUSU9OX0RVUkFUSU9OKTpkKCksdGhpcy5ob3ZlclN0YXRlPW51bGwsdGhpcyl9LGMucHJvdG90eXBlLmZpeFRpdGxlPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy4kZWxlbWVudDsoYS5hdHRyKFwidGl0bGVcIil8fFwic3RyaW5nXCIhPXR5cGVvZiBhLmF0dHIoXCJkYXRhLW9yaWdpbmFsLXRpdGxlXCIpKSYmYS5hdHRyKFwiZGF0YS1vcmlnaW5hbC10aXRsZVwiLGEuYXR0cihcInRpdGxlXCIpfHxcIlwiKS5hdHRyKFwidGl0bGVcIixcIlwiKX0sYy5wcm90b3R5cGUuaGFzQ29udGVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFRpdGxlKCl9LGMucHJvdG90eXBlLmdldFBvc2l0aW9uPWZ1bmN0aW9uKGIpe2I9Ynx8dGhpcy4kZWxlbWVudDt2YXIgYz1iWzBdLGQ9XCJCT0RZXCI9PWMudGFnTmFtZSxlPWMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7bnVsbD09ZS53aWR0aCYmKGU9YS5leHRlbmQoe30sZSx7d2lkdGg6ZS5yaWdodC1lLmxlZnQsaGVpZ2h0OmUuYm90dG9tLWUudG9wfSkpO3ZhciBmPWQ/e3RvcDowLGxlZnQ6MH06Yi5vZmZzZXQoKSxnPXtzY3JvbGw6ZD9kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wfHxkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDpiLnNjcm9sbFRvcCgpfSxoPWQ/e3dpZHRoOmEod2luZG93KS53aWR0aCgpLGhlaWdodDphKHdpbmRvdykuaGVpZ2h0KCl9Om51bGw7cmV0dXJuIGEuZXh0ZW5kKHt9LGUsZyxoLGYpfSxjLnByb3RvdHlwZS5nZXRDYWxjdWxhdGVkT2Zmc2V0PWZ1bmN0aW9uKGEsYixjLGQpe3JldHVyblwiYm90dG9tXCI9PWE/e3RvcDpiLnRvcCtiLmhlaWdodCxsZWZ0OmIubGVmdCtiLndpZHRoLzItYy8yfTpcInRvcFwiPT1hP3t0b3A6Yi50b3AtZCxsZWZ0OmIubGVmdCtiLndpZHRoLzItYy8yfTpcImxlZnRcIj09YT97dG9wOmIudG9wK2IuaGVpZ2h0LzItZC8yLGxlZnQ6Yi5sZWZ0LWN9Ont0b3A6Yi50b3ArYi5oZWlnaHQvMi1kLzIsbGVmdDpiLmxlZnQrYi53aWR0aH19LGMucHJvdG90eXBlLmdldFZpZXdwb3J0QWRqdXN0ZWREZWx0YT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT17dG9wOjAsbGVmdDowfTtpZighdGhpcy4kdmlld3BvcnQpcmV0dXJuIGU7dmFyIGY9dGhpcy5vcHRpb25zLnZpZXdwb3J0JiZ0aGlzLm9wdGlvbnMudmlld3BvcnQucGFkZGluZ3x8MCxnPXRoaXMuZ2V0UG9zaXRpb24odGhpcy4kdmlld3BvcnQpO2lmKC9yaWdodHxsZWZ0Ly50ZXN0KGEpKXt2YXIgaD1iLnRvcC1mLWcuc2Nyb2xsLGk9Yi50b3ArZi1nLnNjcm9sbCtkO2g8Zy50b3A/ZS50b3A9Zy50b3AtaDppPmcudG9wK2cuaGVpZ2h0JiYoZS50b3A9Zy50b3ArZy5oZWlnaHQtaSl9ZWxzZXt2YXIgaj1iLmxlZnQtZixrPWIubGVmdCtmK2M7ajxnLmxlZnQ/ZS5sZWZ0PWcubGVmdC1qOms+Zy5yaWdodCYmKGUubGVmdD1nLmxlZnQrZy53aWR0aC1rKX1yZXR1cm4gZX0sYy5wcm90b3R5cGUuZ2V0VGl0bGU9ZnVuY3Rpb24oKXt2YXIgYSxiPXRoaXMuJGVsZW1lbnQsYz10aGlzLm9wdGlvbnM7cmV0dXJuIGE9Yi5hdHRyKFwiZGF0YS1vcmlnaW5hbC10aXRsZVwiKXx8KFwiZnVuY3Rpb25cIj09dHlwZW9mIGMudGl0bGU/Yy50aXRsZS5jYWxsKGJbMF0pOmMudGl0bGUpfSxjLnByb3RvdHlwZS5nZXRVSUQ9ZnVuY3Rpb24oYSl7ZG8gYSs9fn4oMWU2Kk1hdGgucmFuZG9tKCkpO3doaWxlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGEpKTtyZXR1cm4gYX0sYy5wcm90b3R5cGUudGlwPWZ1bmN0aW9uKCl7aWYoIXRoaXMuJHRpcCYmKHRoaXMuJHRpcD1hKHRoaXMub3B0aW9ucy50ZW1wbGF0ZSksMSE9dGhpcy4kdGlwLmxlbmd0aCkpdGhyb3cgbmV3IEVycm9yKHRoaXMudHlwZStcIiBgdGVtcGxhdGVgIG9wdGlvbiBtdXN0IGNvbnNpc3Qgb2YgZXhhY3RseSAxIHRvcC1sZXZlbCBlbGVtZW50IVwiKTtyZXR1cm4gdGhpcy4kdGlwfSxjLnByb3RvdHlwZS5hcnJvdz1mdW5jdGlvbigpe3JldHVybiB0aGlzLiRhcnJvdz10aGlzLiRhcnJvd3x8dGhpcy50aXAoKS5maW5kKFwiLnRvb2x0aXAtYXJyb3dcIil9LGMucHJvdG90eXBlLmVuYWJsZT1mdW5jdGlvbigpe3RoaXMuZW5hYmxlZD0hMH0sYy5wcm90b3R5cGUuZGlzYWJsZT1mdW5jdGlvbigpe3RoaXMuZW5hYmxlZD0hMX0sYy5wcm90b3R5cGUudG9nZ2xlRW5hYmxlZD1mdW5jdGlvbigpe3RoaXMuZW5hYmxlZD0hdGhpcy5lbmFibGVkfSxjLnByb3RvdHlwZS50b2dnbGU9ZnVuY3Rpb24oYil7dmFyIGM9dGhpcztiJiYoYz1hKGIuY3VycmVudFRhcmdldCkuZGF0YShcImJzLlwiK3RoaXMudHlwZSksY3x8KGM9bmV3IHRoaXMuY29uc3RydWN0b3IoYi5jdXJyZW50VGFyZ2V0LHRoaXMuZ2V0RGVsZWdhdGVPcHRpb25zKCkpLGEoYi5jdXJyZW50VGFyZ2V0KS5kYXRhKFwiYnMuXCIrdGhpcy50eXBlLGMpKSksYj8oYy5pblN0YXRlLmNsaWNrPSFjLmluU3RhdGUuY2xpY2ssYy5pc0luU3RhdGVUcnVlKCk/Yy5lbnRlcihjKTpjLmxlYXZlKGMpKTpjLnRpcCgpLmhhc0NsYXNzKFwiaW5cIik/Yy5sZWF2ZShjKTpjLmVudGVyKGMpfSxjLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0KSx0aGlzLmhpZGUoZnVuY3Rpb24oKXthLiRlbGVtZW50Lm9mZihcIi5cIithLnR5cGUpLnJlbW92ZURhdGEoXCJicy5cIithLnR5cGUpLGEuJHRpcCYmYS4kdGlwLmRldGFjaCgpLGEuJHRpcD1udWxsLGEuJGFycm93PW51bGwsYS4kdmlld3BvcnQ9bnVsbH0pfTt2YXIgZD1hLmZuLnRvb2x0aXA7YS5mbi50b29sdGlwPWIsYS5mbi50b29sdGlwLkNvbnN0cnVjdG9yPWMsYS5mbi50b29sdGlwLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gYS5mbi50b29sdGlwPWQsdGhpc319KGpRdWVyeSksK2Z1bmN0aW9uKGEpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGIoYil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBkPWEodGhpcyksZT1kLmRhdGEoXCJicy5wb3BvdmVyXCIpLGY9XCJvYmplY3RcIj09dHlwZW9mIGImJmI7KGV8fCEvZGVzdHJveXxoaWRlLy50ZXN0KGIpKSYmKGV8fGQuZGF0YShcImJzLnBvcG92ZXJcIixlPW5ldyBjKHRoaXMsZikpLFwic3RyaW5nXCI9PXR5cGVvZiBiJiZlW2JdKCkpfSl9dmFyIGM9ZnVuY3Rpb24oYSxiKXt0aGlzLmluaXQoXCJwb3BvdmVyXCIsYSxiKX07aWYoIWEuZm4udG9vbHRpcCl0aHJvdyBuZXcgRXJyb3IoXCJQb3BvdmVyIHJlcXVpcmVzIHRvb2x0aXAuanNcIik7Yy5WRVJTSU9OPVwiMy4zLjZcIixjLkRFRkFVTFRTPWEuZXh0ZW5kKHt9LGEuZm4udG9vbHRpcC5Db25zdHJ1Y3Rvci5ERUZBVUxUUyx7cGxhY2VtZW50OlwicmlnaHRcIix0cmlnZ2VyOlwiY2xpY2tcIixjb250ZW50OlwiXCIsdGVtcGxhdGU6JzxkaXYgY2xhc3M9XCJwb3BvdmVyXCIgcm9sZT1cInRvb2x0aXBcIj48ZGl2IGNsYXNzPVwiYXJyb3dcIj48L2Rpdj48aDMgY2xhc3M9XCJwb3BvdmVyLXRpdGxlXCI+PC9oMz48ZGl2IGNsYXNzPVwicG9wb3Zlci1jb250ZW50XCI+PC9kaXY+PC9kaXY+J30pLGMucHJvdG90eXBlPWEuZXh0ZW5kKHt9LGEuZm4udG9vbHRpcC5Db25zdHJ1Y3Rvci5wcm90b3R5cGUpLGMucHJvdG90eXBlLmNvbnN0cnVjdG9yPWMsYy5wcm90b3R5cGUuZ2V0RGVmYXVsdHM9ZnVuY3Rpb24oKXtyZXR1cm4gYy5ERUZBVUxUU30sYy5wcm90b3R5cGUuc2V0Q29udGVudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMudGlwKCksYj10aGlzLmdldFRpdGxlKCksYz10aGlzLmdldENvbnRlbnQoKTthLmZpbmQoXCIucG9wb3Zlci10aXRsZVwiKVt0aGlzLm9wdGlvbnMuaHRtbD9cImh0bWxcIjpcInRleHRcIl0oYiksYS5maW5kKFwiLnBvcG92ZXItY29udGVudFwiKS5jaGlsZHJlbigpLmRldGFjaCgpLmVuZCgpW3RoaXMub3B0aW9ucy5odG1sP1wic3RyaW5nXCI9PXR5cGVvZiBjP1wiaHRtbFwiOlwiYXBwZW5kXCI6XCJ0ZXh0XCJdKGMpLGEucmVtb3ZlQ2xhc3MoXCJmYWRlIHRvcCBib3R0b20gbGVmdCByaWdodCBpblwiKSxhLmZpbmQoXCIucG9wb3Zlci10aXRsZVwiKS5odG1sKCl8fGEuZmluZChcIi5wb3BvdmVyLXRpdGxlXCIpLmhpZGUoKX0sYy5wcm90b3R5cGUuaGFzQ29udGVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFRpdGxlKCl8fHRoaXMuZ2V0Q29udGVudCgpfSxjLnByb3RvdHlwZS5nZXRDb250ZW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy4kZWxlbWVudCxiPXRoaXMub3B0aW9ucztyZXR1cm4gYS5hdHRyKFwiZGF0YS1jb250ZW50XCIpfHwoXCJmdW5jdGlvblwiPT10eXBlb2YgYi5jb250ZW50P2IuY29udGVudC5jYWxsKGFbMF0pOmIuY29udGVudCl9LGMucHJvdG90eXBlLmFycm93PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGFycm93PXRoaXMuJGFycm93fHx0aGlzLnRpcCgpLmZpbmQoXCIuYXJyb3dcIil9O3ZhciBkPWEuZm4ucG9wb3ZlcjthLmZuLnBvcG92ZXI9YixhLmZuLnBvcG92ZXIuQ29uc3RydWN0b3I9YyxhLmZuLnBvcG92ZXIubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiBhLmZuLnBvcG92ZXI9ZCx0aGlzfX0oalF1ZXJ5KSwrZnVuY3Rpb24oYSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYihjLGQpe3RoaXMuJGJvZHk9YShkb2N1bWVudC5ib2R5KSx0aGlzLiRzY3JvbGxFbGVtZW50PWEoYShjKS5pcyhkb2N1bWVudC5ib2R5KT93aW5kb3c6YyksdGhpcy5vcHRpb25zPWEuZXh0ZW5kKHt9LGIuREVGQVVMVFMsZCksdGhpcy5zZWxlY3Rvcj0odGhpcy5vcHRpb25zLnRhcmdldHx8XCJcIikrXCIgLm5hdiBsaSA+IGFcIix0aGlzLm9mZnNldHM9W10sdGhpcy50YXJnZXRzPVtdLHRoaXMuYWN0aXZlVGFyZ2V0PW51bGwsdGhpcy5zY3JvbGxIZWlnaHQ9MCx0aGlzLiRzY3JvbGxFbGVtZW50Lm9uKFwic2Nyb2xsLmJzLnNjcm9sbHNweVwiLGEucHJveHkodGhpcy5wcm9jZXNzLHRoaXMpKSx0aGlzLnJlZnJlc2goKSx0aGlzLnByb2Nlc3MoKX1mdW5jdGlvbiBjKGMpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZD1hKHRoaXMpLGU9ZC5kYXRhKFwiYnMuc2Nyb2xsc3B5XCIpLGY9XCJvYmplY3RcIj09dHlwZW9mIGMmJmM7ZXx8ZC5kYXRhKFwiYnMuc2Nyb2xsc3B5XCIsZT1uZXcgYih0aGlzLGYpKSxcInN0cmluZ1wiPT10eXBlb2YgYyYmZVtjXSgpfSl9Yi5WRVJTSU9OPVwiMy4zLjZcIixiLkRFRkFVTFRTPXtvZmZzZXQ6MTB9LGIucHJvdG90eXBlLmdldFNjcm9sbEhlaWdodD1mdW5jdGlvbigpe3JldHVybiB0aGlzLiRzY3JvbGxFbGVtZW50WzBdLnNjcm9sbEhlaWdodHx8TWF0aC5tYXgodGhpcy4kYm9keVswXS5zY3JvbGxIZWlnaHQsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCl9LGIucHJvdG90eXBlLnJlZnJlc2g9ZnVuY3Rpb24oKXt2YXIgYj10aGlzLGM9XCJvZmZzZXRcIixkPTA7dGhpcy5vZmZzZXRzPVtdLHRoaXMudGFyZ2V0cz1bXSx0aGlzLnNjcm9sbEhlaWdodD10aGlzLmdldFNjcm9sbEhlaWdodCgpLGEuaXNXaW5kb3codGhpcy4kc2Nyb2xsRWxlbWVudFswXSl8fChjPVwicG9zaXRpb25cIixkPXRoaXMuJHNjcm9sbEVsZW1lbnQuc2Nyb2xsVG9wKCkpLHRoaXMuJGJvZHkuZmluZCh0aGlzLnNlbGVjdG9yKS5tYXAoZnVuY3Rpb24oKXt2YXIgYj1hKHRoaXMpLGU9Yi5kYXRhKFwidGFyZ2V0XCIpfHxiLmF0dHIoXCJocmVmXCIpLGY9L14jLi8udGVzdChlKSYmYShlKTtyZXR1cm4gZiYmZi5sZW5ndGgmJmYuaXMoXCI6dmlzaWJsZVwiKSYmW1tmW2NdKCkudG9wK2QsZV1dfHxudWxsfSkuc29ydChmdW5jdGlvbihhLGIpe3JldHVybiBhWzBdLWJbMF19KS5lYWNoKGZ1bmN0aW9uKCl7Yi5vZmZzZXRzLnB1c2godGhpc1swXSksYi50YXJnZXRzLnB1c2godGhpc1sxXSl9KX0sYi5wcm90b3R5cGUucHJvY2Vzcz1mdW5jdGlvbigpe3ZhciBhLGI9dGhpcy4kc2Nyb2xsRWxlbWVudC5zY3JvbGxUb3AoKSt0aGlzLm9wdGlvbnMub2Zmc2V0LGM9dGhpcy5nZXRTY3JvbGxIZWlnaHQoKSxkPXRoaXMub3B0aW9ucy5vZmZzZXQrYy10aGlzLiRzY3JvbGxFbGVtZW50LmhlaWdodCgpLGU9dGhpcy5vZmZzZXRzLGY9dGhpcy50YXJnZXRzLGc9dGhpcy5hY3RpdmVUYXJnZXQ7aWYodGhpcy5zY3JvbGxIZWlnaHQhPWMmJnRoaXMucmVmcmVzaCgpLGI+PWQpcmV0dXJuIGchPShhPWZbZi5sZW5ndGgtMV0pJiZ0aGlzLmFjdGl2YXRlKGEpO2lmKGcmJmI8ZVswXSlyZXR1cm4gdGhpcy5hY3RpdmVUYXJnZXQ9bnVsbCx0aGlzLmNsZWFyKCk7Zm9yKGE9ZS5sZW5ndGg7YS0tOylnIT1mW2FdJiZiPj1lW2FdJiYodm9pZCAwPT09ZVthKzFdfHxiPGVbYSsxXSkmJnRoaXMuYWN0aXZhdGUoZlthXSl9LGIucHJvdG90eXBlLmFjdGl2YXRlPWZ1bmN0aW9uKGIpe3RoaXMuYWN0aXZlVGFyZ2V0PWIsdGhpcy5jbGVhcigpO3ZhciBjPXRoaXMuc2VsZWN0b3IrJ1tkYXRhLXRhcmdldD1cIicrYisnXCJdLCcrdGhpcy5zZWxlY3RvcisnW2hyZWY9XCInK2IrJ1wiXScsZD1hKGMpLnBhcmVudHMoXCJsaVwiKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcbmQucGFyZW50KFwiLmRyb3Bkb3duLW1lbnVcIikubGVuZ3RoJiYoZD1kLmNsb3Nlc3QoXCJsaS5kcm9wZG93blwiKS5hZGRDbGFzcyhcImFjdGl2ZVwiKSksZC50cmlnZ2VyKFwiYWN0aXZhdGUuYnMuc2Nyb2xsc3B5XCIpfSxiLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe2EodGhpcy5zZWxlY3RvcikucGFyZW50c1VudGlsKHRoaXMub3B0aW9ucy50YXJnZXQsXCIuYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpfTt2YXIgZD1hLmZuLnNjcm9sbHNweTthLmZuLnNjcm9sbHNweT1jLGEuZm4uc2Nyb2xsc3B5LkNvbnN0cnVjdG9yPWIsYS5mbi5zY3JvbGxzcHkubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiBhLmZuLnNjcm9sbHNweT1kLHRoaXN9LGEod2luZG93KS5vbihcImxvYWQuYnMuc2Nyb2xsc3B5LmRhdGEtYXBpXCIsZnVuY3Rpb24oKXthKCdbZGF0YS1zcHk9XCJzY3JvbGxcIl0nKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9YSh0aGlzKTtjLmNhbGwoYixiLmRhdGEoKSl9KX0pfShqUXVlcnkpLCtmdW5jdGlvbihhKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBiKGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZD1hKHRoaXMpLGU9ZC5kYXRhKFwiYnMudGFiXCIpO2V8fGQuZGF0YShcImJzLnRhYlwiLGU9bmV3IGModGhpcykpLFwic3RyaW5nXCI9PXR5cGVvZiBiJiZlW2JdKCl9KX12YXIgYz1mdW5jdGlvbihiKXt0aGlzLmVsZW1lbnQ9YShiKX07Yy5WRVJTSU9OPVwiMy4zLjZcIixjLlRSQU5TSVRJT05fRFVSQVRJT049MTUwLGMucHJvdG90eXBlLnNob3c9ZnVuY3Rpb24oKXt2YXIgYj10aGlzLmVsZW1lbnQsYz1iLmNsb3Nlc3QoXCJ1bDpub3QoLmRyb3Bkb3duLW1lbnUpXCIpLGQ9Yi5kYXRhKFwidGFyZ2V0XCIpO2lmKGR8fChkPWIuYXR0cihcImhyZWZcIiksZD1kJiZkLnJlcGxhY2UoLy4qKD89I1teXFxzXSokKS8sXCJcIikpLCFiLnBhcmVudChcImxpXCIpLmhhc0NsYXNzKFwiYWN0aXZlXCIpKXt2YXIgZT1jLmZpbmQoXCIuYWN0aXZlOmxhc3QgYVwiKSxmPWEuRXZlbnQoXCJoaWRlLmJzLnRhYlwiLHtyZWxhdGVkVGFyZ2V0OmJbMF19KSxnPWEuRXZlbnQoXCJzaG93LmJzLnRhYlwiLHtyZWxhdGVkVGFyZ2V0OmVbMF19KTtpZihlLnRyaWdnZXIoZiksYi50cmlnZ2VyKGcpLCFnLmlzRGVmYXVsdFByZXZlbnRlZCgpJiYhZi5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl7dmFyIGg9YShkKTt0aGlzLmFjdGl2YXRlKGIuY2xvc2VzdChcImxpXCIpLGMpLHRoaXMuYWN0aXZhdGUoaCxoLnBhcmVudCgpLGZ1bmN0aW9uKCl7ZS50cmlnZ2VyKHt0eXBlOlwiaGlkZGVuLmJzLnRhYlwiLHJlbGF0ZWRUYXJnZXQ6YlswXX0pLGIudHJpZ2dlcih7dHlwZTpcInNob3duLmJzLnRhYlwiLHJlbGF0ZWRUYXJnZXQ6ZVswXX0pfSl9fX0sYy5wcm90b3R5cGUuYWN0aXZhdGU9ZnVuY3Rpb24oYixkLGUpe2Z1bmN0aW9uIGYoKXtnLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLmZpbmQoXCI+IC5kcm9wZG93bi1tZW51ID4gLmFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKS5lbmQoKS5maW5kKCdbZGF0YS10b2dnbGU9XCJ0YWJcIl0nKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCExKSxiLmFkZENsYXNzKFwiYWN0aXZlXCIpLmZpbmQoJ1tkYXRhLXRvZ2dsZT1cInRhYlwiXScpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsITApLGg/KGJbMF0ub2Zmc2V0V2lkdGgsYi5hZGRDbGFzcyhcImluXCIpKTpiLnJlbW92ZUNsYXNzKFwiZmFkZVwiKSxiLnBhcmVudChcIi5kcm9wZG93bi1tZW51XCIpLmxlbmd0aCYmYi5jbG9zZXN0KFwibGkuZHJvcGRvd25cIikuYWRkQ2xhc3MoXCJhY3RpdmVcIikuZW5kKCkuZmluZCgnW2RhdGEtdG9nZ2xlPVwidGFiXCJdJykuYXR0cihcImFyaWEtZXhwYW5kZWRcIiwhMCksZSYmZSgpfXZhciBnPWQuZmluZChcIj4gLmFjdGl2ZVwiKSxoPWUmJmEuc3VwcG9ydC50cmFuc2l0aW9uJiYoZy5sZW5ndGgmJmcuaGFzQ2xhc3MoXCJmYWRlXCIpfHwhIWQuZmluZChcIj4gLmZhZGVcIikubGVuZ3RoKTtnLmxlbmd0aCYmaD9nLm9uZShcImJzVHJhbnNpdGlvbkVuZFwiLGYpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKGMuVFJBTlNJVElPTl9EVVJBVElPTik6ZigpLGcucmVtb3ZlQ2xhc3MoXCJpblwiKX07dmFyIGQ9YS5mbi50YWI7YS5mbi50YWI9YixhLmZuLnRhYi5Db25zdHJ1Y3Rvcj1jLGEuZm4udGFiLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gYS5mbi50YWI9ZCx0aGlzfTt2YXIgZT1mdW5jdGlvbihjKXtjLnByZXZlbnREZWZhdWx0KCksYi5jYWxsKGEodGhpcyksXCJzaG93XCIpfTthKGRvY3VtZW50KS5vbihcImNsaWNrLmJzLnRhYi5kYXRhLWFwaVwiLCdbZGF0YS10b2dnbGU9XCJ0YWJcIl0nLGUpLm9uKFwiY2xpY2suYnMudGFiLmRhdGEtYXBpXCIsJ1tkYXRhLXRvZ2dsZT1cInBpbGxcIl0nLGUpfShqUXVlcnkpLCtmdW5jdGlvbihhKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBiKGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZD1hKHRoaXMpLGU9ZC5kYXRhKFwiYnMuYWZmaXhcIiksZj1cIm9iamVjdFwiPT10eXBlb2YgYiYmYjtlfHxkLmRhdGEoXCJicy5hZmZpeFwiLGU9bmV3IGModGhpcyxmKSksXCJzdHJpbmdcIj09dHlwZW9mIGImJmVbYl0oKX0pfXZhciBjPWZ1bmN0aW9uKGIsZCl7dGhpcy5vcHRpb25zPWEuZXh0ZW5kKHt9LGMuREVGQVVMVFMsZCksdGhpcy4kdGFyZ2V0PWEodGhpcy5vcHRpb25zLnRhcmdldCkub24oXCJzY3JvbGwuYnMuYWZmaXguZGF0YS1hcGlcIixhLnByb3h5KHRoaXMuY2hlY2tQb3NpdGlvbix0aGlzKSkub24oXCJjbGljay5icy5hZmZpeC5kYXRhLWFwaVwiLGEucHJveHkodGhpcy5jaGVja1Bvc2l0aW9uV2l0aEV2ZW50TG9vcCx0aGlzKSksdGhpcy4kZWxlbWVudD1hKGIpLHRoaXMuYWZmaXhlZD1udWxsLHRoaXMudW5waW49bnVsbCx0aGlzLnBpbm5lZE9mZnNldD1udWxsLHRoaXMuY2hlY2tQb3NpdGlvbigpfTtjLlZFUlNJT049XCIzLjMuNlwiLGMuUkVTRVQ9XCJhZmZpeCBhZmZpeC10b3AgYWZmaXgtYm90dG9tXCIsYy5ERUZBVUxUUz17b2Zmc2V0OjAsdGFyZ2V0OndpbmRvd30sYy5wcm90b3R5cGUuZ2V0U3RhdGU9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dGhpcy4kdGFyZ2V0LnNjcm9sbFRvcCgpLGY9dGhpcy4kZWxlbWVudC5vZmZzZXQoKSxnPXRoaXMuJHRhcmdldC5oZWlnaHQoKTtpZihudWxsIT1jJiZcInRvcFwiPT10aGlzLmFmZml4ZWQpcmV0dXJuIGM+ZT9cInRvcFwiOiExO2lmKFwiYm90dG9tXCI9PXRoaXMuYWZmaXhlZClyZXR1cm4gbnVsbCE9Yz9lK3RoaXMudW5waW48PWYudG9wPyExOlwiYm90dG9tXCI6YS1kPj1lK2c/ITE6XCJib3R0b21cIjt2YXIgaD1udWxsPT10aGlzLmFmZml4ZWQsaT1oP2U6Zi50b3Asaj1oP2c6YjtyZXR1cm4gbnVsbCE9YyYmYz49ZT9cInRvcFwiOm51bGwhPWQmJmkraj49YS1kP1wiYm90dG9tXCI6ITF9LGMucHJvdG90eXBlLmdldFBpbm5lZE9mZnNldD1mdW5jdGlvbigpe2lmKHRoaXMucGlubmVkT2Zmc2V0KXJldHVybiB0aGlzLnBpbm5lZE9mZnNldDt0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKGMuUkVTRVQpLmFkZENsYXNzKFwiYWZmaXhcIik7dmFyIGE9dGhpcy4kdGFyZ2V0LnNjcm9sbFRvcCgpLGI9dGhpcy4kZWxlbWVudC5vZmZzZXQoKTtyZXR1cm4gdGhpcy5waW5uZWRPZmZzZXQ9Yi50b3AtYX0sYy5wcm90b3R5cGUuY2hlY2tQb3NpdGlvbldpdGhFdmVudExvb3A9ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGEucHJveHkodGhpcy5jaGVja1Bvc2l0aW9uLHRoaXMpLDEpfSxjLnByb3RvdHlwZS5jaGVja1Bvc2l0aW9uPWZ1bmN0aW9uKCl7aWYodGhpcy4kZWxlbWVudC5pcyhcIjp2aXNpYmxlXCIpKXt2YXIgYj10aGlzLiRlbGVtZW50LmhlaWdodCgpLGQ9dGhpcy5vcHRpb25zLm9mZnNldCxlPWQudG9wLGY9ZC5ib3R0b20sZz1NYXRoLm1heChhKGRvY3VtZW50KS5oZWlnaHQoKSxhKGRvY3VtZW50LmJvZHkpLmhlaWdodCgpKTtcIm9iamVjdFwiIT10eXBlb2YgZCYmKGY9ZT1kKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiYoZT1kLnRvcCh0aGlzLiRlbGVtZW50KSksXCJmdW5jdGlvblwiPT10eXBlb2YgZiYmKGY9ZC5ib3R0b20odGhpcy4kZWxlbWVudCkpO3ZhciBoPXRoaXMuZ2V0U3RhdGUoZyxiLGUsZik7aWYodGhpcy5hZmZpeGVkIT1oKXtudWxsIT10aGlzLnVucGluJiZ0aGlzLiRlbGVtZW50LmNzcyhcInRvcFwiLFwiXCIpO3ZhciBpPVwiYWZmaXhcIisoaD9cIi1cIitoOlwiXCIpLGo9YS5FdmVudChpK1wiLmJzLmFmZml4XCIpO2lmKHRoaXMuJGVsZW1lbnQudHJpZ2dlcihqKSxqLmlzRGVmYXVsdFByZXZlbnRlZCgpKXJldHVybjt0aGlzLmFmZml4ZWQ9aCx0aGlzLnVucGluPVwiYm90dG9tXCI9PWg/dGhpcy5nZXRQaW5uZWRPZmZzZXQoKTpudWxsLHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoYy5SRVNFVCkuYWRkQ2xhc3MoaSkudHJpZ2dlcihpLnJlcGxhY2UoXCJhZmZpeFwiLFwiYWZmaXhlZFwiKStcIi5icy5hZmZpeFwiKX1cImJvdHRvbVwiPT1oJiZ0aGlzLiRlbGVtZW50Lm9mZnNldCh7dG9wOmctYi1mfSl9fTt2YXIgZD1hLmZuLmFmZml4O2EuZm4uYWZmaXg9YixhLmZuLmFmZml4LkNvbnN0cnVjdG9yPWMsYS5mbi5hZmZpeC5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIGEuZm4uYWZmaXg9ZCx0aGlzfSxhKHdpbmRvdykub24oXCJsb2FkXCIsZnVuY3Rpb24oKXthKCdbZGF0YS1zcHk9XCJhZmZpeFwiXScpLmVhY2goZnVuY3Rpb24oKXt2YXIgYz1hKHRoaXMpLGQ9Yy5kYXRhKCk7ZC5vZmZzZXQ9ZC5vZmZzZXR8fHt9LG51bGwhPWQub2Zmc2V0Qm90dG9tJiYoZC5vZmZzZXQuYm90dG9tPWQub2Zmc2V0Qm90dG9tKSxudWxsIT1kLm9mZnNldFRvcCYmKGQub2Zmc2V0LnRvcD1kLm9mZnNldFRvcCksYi5jYWxsKGMsZCl9KX0pfShqUXVlcnkpOyIsIlxyXG4vKipcclxuICogXHJcbiAqICBGb250IEF3ZXNvbWUgSUUgOFxyXG4gKiBcclxuICovXHJcblxyXG5pZiAoIHdpbmRvdy5hdHRhY2hFdmVudCAmJiAhd2luZG93LmFkZEV2ZW50TGlzdGVuZXIgKSB7IC8vIDwtLSBQb29yIG1hbidzIElFOCBkZXRlY3Rpb25cclxuICAgIHdpbmRvdy5hdHRhY2hFdmVudCggXCJvbmxvYWRcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhclxyXG4gICAgICAgIGh0bWwgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXHJcbiAgICAgICAgY2xzcyA9IGh0bWwuY2xhc3NOYW1lO1xyXG5cclxuICAgICAgaHRtbC5jbGFzc05hbWUgPSBjbHNzICsgXCIgaWUtZm9yY2UtcHNldWRvLXJlZnJlc2hcIjtcclxuICAgICAgc2V0VGltZW91dCggZnVuY3Rpb24oKXsgaHRtbC5jbGFzc05hbWUgPSBjbHNzOyB9LCAxMCApO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG5cclxuICAkKCdbZGF0YS10b2dnbGU9XCJ0b29sdGlwXCJdJykudG9vbHRpcCgpOyAgICAgLy8gVG9vbCBUaXBcclxuXHJcbiAgXHJcbiAgXHJcbn0pOyIsIiQoZnVuY3Rpb24gKCkge1xyXG4gIFxyXG4gICQuc2Nyb2xsVXAoe1xyXG4gICAgYW5pbWF0aW9uOiAnZmFkZScsXHJcbiAgICAvLyBhY3RpdmVPdmVybGF5OiAnIzAwRkZGRicsICAgIC8vIGZhbHNlIC8gU2V0IENTUyBjb2xvciB0byBkaXNwbGF5IHNjcm9sbFVwIGFjdGl2ZSBwb2ludCwgZS5nICcjMDBGRkZGJ1xyXG4gICAgc2Nyb2xsVGV4dDogJ1Njcm9sbCB0byB0b3AnLCAvLyBUZXh0IGZvciBlbGVtZW50XHJcbiAgICBzY3JvbGxOYW1lOiAnc2Nyb2xsVXAnLCAgLy8gRWxlbWVudCBJRFxyXG4gICAgdG9wRGlzdGFuY2U6ICczMDAnLCAgICAgIC8vIERpc3RhbmNlIGZyb20gdG9wIGJlZm9yZSBzaG93aW5nIGVsZW1lbnQgKHB4KVxyXG4gICAgdG9wU3BlZWQ6IDMwMCwgICAgICAgICAgIC8vIFNwZWVkIGJhY2sgdG8gdG9wIChtcylcclxuICAgIGFuaW1hdGlvbkluU3BlZWQ6IDIwMCwgICAvLyBBbmltYXRpb24gaW4gc3BlZWQgKG1zKVxyXG4gICAgYW5pbWF0aW9uT3V0U3BlZWQ6IDIwMCwgIC8vIEFuaW1hdGlvbiBvdXQgc3BlZWQgKG1zKVxyXG4gICAgc2Nyb2xsSW1nOiB7IGFjdGl2ZTogdHJ1ZSwgdHlwZTogJ2JhY2tncm91bmQnLCBzcmM6ICcvanMvc2Nyb2xsdXAvZGVtby9pbWcvdG9wLnBuZycgfVxyXG4gIH0pOyAgXHJcbiAgICBcclxuICBcclxuICAkKFwiI293bC1leGFtcGxlXCIpLm93bENhcm91c2VsKHtcclxuICAgIGl0ZW1zIDogNSxcclxuICAgIGl0ZW1zQ3VzdG9tIDogZmFsc2UsXHJcbiAgICBiYXNlQ2xhc3MgOiBcIm93bC1jYXJvdXNlbFwiLFxyXG4gICAgdGhlbWUgOiBcIm93bC10aGVtZVwiLFxyXG4gICAgcGFnaW5hdGlvbiA6IHRydWUsXHJcbiAgICBwYWdpbmF0aW9uTnVtYmVyczogZmFsc2VcclxuICB9KTtcclxuICBcclxuICBcclxuICAvLyAkKFwiLmZhbmN5Ym94XCIpLmZhbmN5Ym94KCk7XHJcbiBcclxuICBcclxuICAvLyBjb2RlIGZvciBmYWRlIGluIGVsZW1lbnQgYnkgZWxlbWVudFxyXG4gICQuZm4uZmFkZUluV2l0aERlbGF5ID0gZnVuY3Rpb24oKXtcclxuICAgIHZhciBkZWxheSA9IDA7XHJcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7XHJcbiAgICAgICQodGhpcykuZGVsYXkoZGVsYXkpLmFuaW1hdGUoe29wYWNpdHk6MX0sIDIwMCk7XHJcbiAgICAgIGRlbGF5ICs9IDEwMDtcclxuICAgIH0pO1xyXG4gIH07ICBcclxuICBcclxuICAkKCcjY29udGVudCcpLnNjcm9sbFBhZ2luYXRpb24oe1xyXG4gICAgJ2NvbnRlbnRQYWdlJzogJy9qcy9zY3JvbGxwYWdlL2RlbW9jb250ZW50Lmh0bWwnLCAvLyB0aGUgdXJsIHlvdSBhcmUgZmV0Y2hpbmcgdGhlIHJlc3VsdHNcclxuICAgICdjb250ZW50RGF0YSc6IHt9LCAvLyB0aGVzZSBhcmUgdGhlIHZhcmlhYmxlcyB5b3UgY2FuIHBhc3MgdG8gdGhlIHJlcXVlc3QsIGZvciBleGFtcGxlOiBjaGlsZHJlbigpLnNpemUoKSB0byBrbm93IHdoaWNoIHBhZ2UgeW91IGFyZVxyXG4gICAgJ3Njcm9sbFRhcmdldCc6ICQod2luZG93KSwgLy8gd2hvIGdvbm5hIHNjcm9sbD8gaW4gdGhpcyBleGFtcGxlLCB0aGUgZnVsbCB3aW5kb3dcclxuICAgICdoZWlnaHRPZmZzZXQnOiAxMCwgLy8gaXQgZ29ubmEgcmVxdWVzdCB3aGVuIHNjcm9sbCBpcyAxMCBwaXhlbHMgYmVmb3JlIHRoZSBwYWdlIGVuZHNcclxuICAgICdiZWZvcmVMb2FkJzogZnVuY3Rpb24oKXsgLy8gYmVmb3JlIGxvYWQgZnVuY3Rpb24sIHlvdSBjYW4gZGlzcGxheSBhIHByZWxvYWRlciBkaXZcclxuICAgICAgJCgnI2xvYWRpbmcnKS5mYWRlSW4oKTsgXHJcbiAgICB9LFxyXG4gICAgJ2FmdGVyTG9hZCc6IGZ1bmN0aW9uKGVsZW1lbnRzTG9hZGVkKXsgLy8gYWZ0ZXIgbG9hZGluZyBjb250ZW50LCB5b3UgY2FuIHVzZSB0aGlzIGZ1bmN0aW9uIHRvIGFuaW1hdGUgeW91ciBuZXcgZWxlbWVudHNcclxuICAgICAgICQoJyNsb2FkaW5nJykuZmFkZU91dCgpO1xyXG4gICAgICAgdmFyIGkgPSAwO1xyXG4gICAgICAgJChlbGVtZW50c0xvYWRlZCkuZmFkZUluV2l0aERlbGF5KCk7XHJcbiAgICAgICBpZiAoJCgnI2NvbnRlbnQnKS5jaGlsZHJlbigpLnNpemUoKSA+IDEwMCl7IC8vIGlmIG1vcmUgdGhhbiAxMDAgcmVzdWx0cyBhbHJlYWR5IGxvYWRlZCwgdGhlbiBzdG9wIHBhZ2luYXRpb24gKG9ubHkgZm9yIHRlc3RpbmcpXHJcbiAgICAgICAgJCgnI25vbW9yZXJlc3VsdHMnKS5mYWRlSW4oKTtcclxuICAgICAgICAkKCcjY29udGVudCcpLnN0b3BTY3JvbGxQYWdpbmF0aW9uKCk7XHJcbiAgICAgICB9XHJcbiAgICB9XHJcbiAgfSk7ICBcclxuICBcclxuICBcclxuICAvKiogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAqIFxyXG4gICAqICAgICAgICAgICAgICAgICAgc3ViMiAtIGZ1bGwg7ZmU66m0IFxyXG4gICAqIFxyXG4gICAqL1xyXG5cclxuICBmdW5jdGlvbiBmdWxsc2NyZWVuRml4KCl7XHJcbiAgICB2YXIgaCA9ICQoJ2JvZHknKS5oZWlnaHQoKTtcclxuICAgICQoXCIuc2l0ZS13cmFwcGVyLWNvbnRhaW5lclwiKS5lYWNoKGZ1bmN0aW9uKGkpe1xyXG4gICAgICAgIGlmKCQodGhpcykuaW5uZXJIZWlnaHQoKSA+IGgpe1xyXG4gICAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoXCIuZnVsbHNjcmVlblwiKS5hZGRDbGFzcyhcIm92ZXJmbG93XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gcmVzaXplIGJhY2tncm91bmQgaW1hZ2VzXHJcbiAgZnVuY3Rpb24gYmFja2dyb3VuZFJlc2l6ZSgpe1xyXG4gICAgICB2YXIgd2luZG93SCA9ICQod2luZG93KS5oZWlnaHQoKTtcclxuICAgICAgXHJcbiAgICAgICQoXCIuYmFja2dyb3VuZFwiKS5lYWNoKGZ1bmN0aW9uKGkpe1xyXG4gICAgICAgICAgdmFyIHBhdGggPSAkKHRoaXMpO1xyXG4gICAgICAgICAgLy8gdmFyaWFibGVzXHJcbiAgICAgICAgICB2YXIgY29udFcgPSBwYXRoLndpZHRoKCk7XHJcbiAgICAgICAgICB2YXIgY29udEggPSBwYXRoLmhlaWdodCgpO1xyXG4gICAgICAgICAgdmFyIGltZ1cgPSBwYXRoLmF0dHIoXCJkYXRhLWltZy13aWR0aFwiKTtcclxuICAgICAgICAgIHZhciBpbWdIID0gcGF0aC5hdHRyKFwiZGF0YS1pbWctaGVpZ2h0XCIpO1xyXG4gICAgICAgICAgdmFyIHJhdGlvID0gaW1nVyAvIGltZ0g7XHJcbiAgICAgICAgICAvLyBvdmVyZmxvd2luZyBkaWZmZXJlbmNlXHJcbiAgICAgICAgICB2YXIgZGlmZiA9IHBhcnNlRmxvYXQocGF0aC5hdHRyKFwiZGF0YS1kaWZmXCIpKTtcclxuICAgICAgICAgIGRpZmYgPSBkaWZmID8gZGlmZiA6IDA7XHJcbiAgICAgICAgICAvLyByZW1haW5pbmcgaGVpZ2h0IHRvIGhhdmUgZnVsbHNjcmVlbiBpbWFnZSBvbmx5IG9uIHBhcmFsbGF4XHJcbiAgICAgICAgICB2YXIgcmVtYWluaW5nSCA9IDA7XHJcbiAgICAgICAgICBpZihwYXRoLmhhc0NsYXNzKFwicGFyYWxsYXhcIikpe1xyXG4gICAgICAgICAgICAgIHZhciBtYXhIID0gY29udEggPiB3aW5kb3dIID8gY29udEggOiB3aW5kb3dIO1xyXG4gICAgICAgICAgICAgIHJlbWFpbmluZ0ggPSB3aW5kb3dIIC0gY29udEg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAvLyBzZXQgaW1nIHZhbHVlcyBkZXBlbmRpbmcgb24gY29udFxyXG4gICAgICAgICAgaW1nSCA9IGNvbnRIICsgcmVtYWluaW5nSCArIGRpZmY7XHJcbiAgICAgICAgICBpbWdXID0gaW1nSCAqIHJhdGlvO1xyXG4gICAgICAgICAgLy8gZml4IHdoZW4gdG9vIGxhcmdlXHJcbiAgICAgICAgICBpZihjb250VyA+IGltZ1cpe1xyXG4gICAgICAgICAgICAgIGltZ1cgPSBjb250VztcclxuICAgICAgICAgICAgICBpbWdIID0gaW1nVyAvIHJhdGlvO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLy9cclxuICAgICAgICAgIHBhdGguZGF0YShcInJlc2l6ZWQtaW1nV1wiLCBpbWdXKTtcclxuICAgICAgICAgIHBhdGguZGF0YShcInJlc2l6ZWQtaW1nSFwiLCBpbWdIKTtcclxuICAgICAgICAgIHBhdGguY3NzKFwiYmFja2dyb3VuZC1zaXplXCIsIGltZ1cgKyBcInB4IFwiICsgaW1nSCArIFwicHhcIik7XHJcbiAgICAgIH0pO1xyXG4gIH0gIFxyXG4gIFxyXG4gIGlmKCAkKFwiaHRtbFwiKS5oYXNDbGFzcyhcImZ1bGxcIikgKSB7XHJcbiAgICAkKHdpbmRvdykucmVzaXplKGJhY2tncm91bmRSZXNpemUpO1xyXG4gICAgJCh3aW5kb3cpLnJlc2l6ZShmdWxsc2NyZWVuRml4KTtcclxuICAgICQod2luZG93KS5mb2N1cyhiYWNrZ3JvdW5kUmVzaXplKTsgIFxyXG4gICAgXHJcbiAgICBmdWxsc2NyZWVuRml4KCk7XHJcbiAgICBiYWNrZ3JvdW5kUmVzaXplKCk7XHJcbiAgfSAgXHJcbiAgXHJcbiAgLyoqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgKiBcclxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgIOyLpO2WiSDsi5zqsIRcclxuICAgKiBcclxuICAgKi9cclxuICBcclxuICB2YXIgZ2dyX3N0aW1lID0gbmV3IERhdGUoKTsgXHJcbiAgZnVuY3Rpb24gZ2dyX3Nob3d0aW1lKCl7ICQoJyNnZ3JzaG93dGltZScpLmh0bWwoICgoKG5ldyBEYXRlKCkpLWdncl9zdGltZSkvMTAwMCkrJyBzZWMnICk7IH0gXHJcbiAgd2luZG93Lm9uc3RvcCA9IGdncl9zaG93dGltZTsgXHJcbiAgd2luZG93Lm9ubG9hZCA9IGdncl9zaG93dGltZTsgXHJcbiAgXHJcbiAgXHJcbn0pOyIsIi8qIVxyXG4gKiBJRTEwIHZpZXdwb3J0IGhhY2sgZm9yIFN1cmZhY2UvZGVza3RvcCBXaW5kb3dzIDggYnVnXHJcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUgVHdpdHRlciwgSW5jLlxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxyXG4gKi9cclxuXHJcbi8vIFNlZSB0aGUgR2V0dGluZyBTdGFydGVkIGRvY3MgZm9yIG1vcmUgaW5mb3JtYXRpb246XHJcbi8vIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2dldHRpbmctc3RhcnRlZC8jc3VwcG9ydC1pZTEwLXdpZHRoXHJcblxyXG4oZnVuY3Rpb24oKSB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0lFTW9iaWxlXFwvMTBcXC4wLykpIHtcclxuICAgICAgICB2YXIgbXNWaWV3cG9ydFN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxyXG4gICAgICAgIG1zVmlld3BvcnRTdHlsZS5hcHBlbmRDaGlsZChcclxuICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXHJcbiAgICAgICAgICAgICAgICAnQC1tcy12aWV3cG9ydHt3aWR0aDphdXRvIWltcG9ydGFudH0nXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICApXHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZCcpLmFwcGVuZENoaWxkKG1zVmlld3BvcnRTdHlsZSlcclxuICAgIH1cclxuXHJcbn0pKCk7IiwiLyohXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYxLjEyLjBcbiAqIGh0dHA6Ly9qcXVlcnkuY29tL1xuICpcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xuICogaHR0cDovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlXG4gKlxuICogRGF0ZTogMjAxNi0wMS0wOFQxOTo1NlpcbiAqL1xuXG4oZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXHRcdC8vIEZvciBDb21tb25KUyBhbmQgQ29tbW9uSlMtbGlrZSBlbnZpcm9ubWVudHMgd2hlcmUgYSBwcm9wZXIgYHdpbmRvd2Bcblx0XHQvLyBpcyBwcmVzZW50LCBleGVjdXRlIHRoZSBmYWN0b3J5IGFuZCBnZXQgalF1ZXJ5LlxuXHRcdC8vIEZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3QgaGF2ZSBhIGB3aW5kb3dgIHdpdGggYSBgZG9jdW1lbnRgXG5cdFx0Ly8gKHN1Y2ggYXMgTm9kZS5qcyksIGV4cG9zZSBhIGZhY3RvcnkgYXMgbW9kdWxlLmV4cG9ydHMuXG5cdFx0Ly8gVGhpcyBhY2NlbnR1YXRlcyB0aGUgbmVlZCBmb3IgdGhlIGNyZWF0aW9uIG9mIGEgcmVhbCBgd2luZG93YC5cblx0XHQvLyBlLmcuIHZhciBqUXVlcnkgPSByZXF1aXJlKFwianF1ZXJ5XCIpKHdpbmRvdyk7XG5cdFx0Ly8gU2VlIHRpY2tldCAjMTQ1NDkgZm9yIG1vcmUgaW5mby5cblx0XHRtb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5kb2N1bWVudCA/XG5cdFx0XHRmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6XG5cdFx0XHRmdW5jdGlvbiggdyApIHtcblx0XHRcdFx0aWYgKCAhdy5kb2N1bWVudCApIHtcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoIFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGZhY3RvcnkoIHcgKTtcblx0XHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0ZmFjdG9yeSggZ2xvYmFsICk7XG5cdH1cblxuLy8gUGFzcyB0aGlzIGlmIHdpbmRvdyBpcyBub3QgZGVmaW5lZCB5ZXRcbn0odHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCB3aW5kb3csIG5vR2xvYmFsICkge1xuXG4vLyBTdXBwb3J0OiBGaXJlZm94IDE4K1xuLy8gQ2FuJ3QgYmUgaW4gc3RyaWN0IG1vZGUsIHNldmVyYWwgbGlicyBpbmNsdWRpbmcgQVNQLk5FVCB0cmFjZVxuLy8gdGhlIHN0YWNrIHZpYSBhcmd1bWVudHMuY2FsbGVyLmNhbGxlZSBhbmQgRmlyZWZveCBkaWVzIGlmXG4vLyB5b3UgdHJ5IHRvIHRyYWNlIHRocm91Z2ggXCJ1c2Ugc3RyaWN0XCIgY2FsbCBjaGFpbnMuICgjMTMzMzUpXG4vL1widXNlIHN0cmljdFwiO1xudmFyIGRlbGV0ZWRJZHMgPSBbXTtcblxudmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xuXG52YXIgc2xpY2UgPSBkZWxldGVkSWRzLnNsaWNlO1xuXG52YXIgY29uY2F0ID0gZGVsZXRlZElkcy5jb25jYXQ7XG5cbnZhciBwdXNoID0gZGVsZXRlZElkcy5wdXNoO1xuXG52YXIgaW5kZXhPZiA9IGRlbGV0ZWRJZHMuaW5kZXhPZjtcblxudmFyIGNsYXNzMnR5cGUgPSB7fTtcblxudmFyIHRvU3RyaW5nID0gY2xhc3MydHlwZS50b1N0cmluZztcblxudmFyIGhhc093biA9IGNsYXNzMnR5cGUuaGFzT3duUHJvcGVydHk7XG5cbnZhciBzdXBwb3J0ID0ge307XG5cblxuXG52YXJcblx0dmVyc2lvbiA9IFwiMS4xMi4wXCIsXG5cblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4xLCBJRTw5XG5cdC8vIE1ha2Ugc3VyZSB3ZSB0cmltIEJPTSBhbmQgTkJTUFxuXHRydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZyxcblxuXHQvLyBNYXRjaGVzIGRhc2hlZCBzdHJpbmcgZm9yIGNhbWVsaXppbmdcblx0cm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFtcXGRhLXpdKS9naSxcblxuXHQvLyBVc2VkIGJ5IGpRdWVyeS5jYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXG5cdGZjYW1lbENhc2UgPSBmdW5jdGlvbiggYWxsLCBsZXR0ZXIgKSB7XG5cdFx0cmV0dXJuIGxldHRlci50b1VwcGVyQ2FzZSgpO1xuXHR9O1xuXG5qUXVlcnkuZm4gPSBqUXVlcnkucHJvdG90eXBlID0ge1xuXG5cdC8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWRcblx0anF1ZXJ5OiB2ZXJzaW9uLFxuXG5cdGNvbnN0cnVjdG9yOiBqUXVlcnksXG5cblx0Ly8gU3RhcnQgd2l0aCBhbiBlbXB0eSBzZWxlY3RvclxuXHRzZWxlY3RvcjogXCJcIixcblxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcblx0bGVuZ3RoOiAwLFxuXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gR2V0IHRoZSBOdGggZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldCBPUlxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XG5cdFx0cmV0dXJuIG51bSAhPSBudWxsID9cblxuXHRcdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxuXHRcdFx0KCBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdICkgOlxuXG5cdFx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XG5cdFx0XHRzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gVGFrZSBhbiBhcnJheSBvZiBlbGVtZW50cyBhbmQgcHVzaCBpdCBvbnRvIHRoZSBzdGFja1xuXHQvLyAocmV0dXJuaW5nIHRoZSBuZXcgbWF0Y2hlZCBlbGVtZW50IHNldClcblx0cHVzaFN0YWNrOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cblx0XHQvLyBCdWlsZCBhIG5ldyBqUXVlcnkgbWF0Y2hlZCBlbGVtZW50IHNldFxuXHRcdHZhciByZXQgPSBqUXVlcnkubWVyZ2UoIHRoaXMuY29uc3RydWN0b3IoKSwgZWxlbXMgKTtcblxuXHRcdC8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBzdGFjayAoYXMgYSByZWZlcmVuY2UpXG5cdFx0cmV0LnByZXZPYmplY3QgPSB0aGlzO1xuXHRcdHJldC5jb250ZXh0ID0gdGhpcy5jb250ZXh0O1xuXG5cdFx0Ly8gUmV0dXJuIHRoZSBuZXdseS1mb3JtZWQgZWxlbWVudCBzZXRcblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdC8vIEV4ZWN1dGUgYSBjYWxsYmFjayBmb3IgZXZlcnkgZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBzZXQuXG5cdGVhY2g6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrICk7XG5cdH0sXG5cblx0bWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkubWFwKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiBjYWxsYmFjay5jYWxsKCBlbGVtLCBpLCBlbGVtICk7XG5cdFx0fSApICk7XG5cdH0sXG5cblx0c2xpY2U6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggc2xpY2UuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApICk7XG5cdH0sXG5cblx0Zmlyc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAwICk7XG5cdH0sXG5cblx0bGFzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIC0xICk7XG5cdH0sXG5cblx0ZXE6IGZ1bmN0aW9uKCBpICkge1xuXHRcdHZhciBsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdGogPSAraSArICggaSA8IDAgPyBsZW4gOiAwICk7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1sgaiBdIF0gOiBbXSApO1xuXHR9LFxuXG5cdGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHJldk9iamVjdCB8fCB0aGlzLmNvbnN0cnVjdG9yKCk7XG5cdH0sXG5cblx0Ly8gRm9yIGludGVybmFsIHVzZSBvbmx5LlxuXHQvLyBCZWhhdmVzIGxpa2UgYW4gQXJyYXkncyBtZXRob2QsIG5vdCBsaWtlIGEgalF1ZXJ5IG1ldGhvZC5cblx0cHVzaDogcHVzaCxcblx0c29ydDogZGVsZXRlZElkcy5zb3J0LFxuXHRzcGxpY2U6IGRlbGV0ZWRJZHMuc3BsaWNlXG59O1xuXG5qUXVlcnkuZXh0ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgc3JjLCBjb3B5SXNBcnJheSwgY29weSwgbmFtZSwgb3B0aW9ucywgY2xvbmUsXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyAwIF0gfHwge30sXG5cdFx0aSA9IDEsXG5cdFx0bGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCxcblx0XHRkZWVwID0gZmFsc2U7XG5cblx0Ly8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdGRlZXAgPSB0YXJnZXQ7XG5cblx0XHQvLyBza2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyBpIF0gfHwge307XG5cdFx0aSsrO1xuXHR9XG5cblx0Ly8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcgb3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpXG5cdGlmICggdHlwZW9mIHRhcmdldCAhPT0gXCJvYmplY3RcIiAmJiAhalF1ZXJ5LmlzRnVuY3Rpb24oIHRhcmdldCApICkge1xuXHRcdHRhcmdldCA9IHt9O1xuXHR9XG5cblx0Ly8gZXh0ZW5kIGpRdWVyeSBpdHNlbGYgaWYgb25seSBvbmUgYXJndW1lbnQgaXMgcGFzc2VkXG5cdGlmICggaSA9PT0gbGVuZ3RoICkge1xuXHRcdHRhcmdldCA9IHRoaXM7XG5cdFx0aS0tO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cblx0XHQvLyBPbmx5IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzXG5cdFx0aWYgKCAoIG9wdGlvbnMgPSBhcmd1bWVudHNbIGkgXSApICE9IG51bGwgKSB7XG5cblx0XHRcdC8vIEV4dGVuZCB0aGUgYmFzZSBvYmplY3Rcblx0XHRcdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRcdFx0c3JjID0gdGFyZ2V0WyBuYW1lIF07XG5cdFx0XHRcdGNvcHkgPSBvcHRpb25zWyBuYW1lIF07XG5cblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxuXHRcdFx0XHRpZiAoIHRhcmdldCA9PT0gY29weSApIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJlY3Vyc2UgaWYgd2UncmUgbWVyZ2luZyBwbGFpbiBvYmplY3RzIG9yIGFycmF5c1xuXHRcdFx0XHRpZiAoIGRlZXAgJiYgY29weSAmJiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb3B5ICkgfHxcblx0XHRcdFx0XHQoIGNvcHlJc0FycmF5ID0galF1ZXJ5LmlzQXJyYXkoIGNvcHkgKSApICkgKSB7XG5cblx0XHRcdFx0XHRpZiAoIGNvcHlJc0FycmF5ICkge1xuXHRcdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIGpRdWVyeS5pc0FycmF5KCBzcmMgKSA/IHNyYyA6IFtdO1xuXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBzcmMgKSA/IHNyYyA6IHt9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0galF1ZXJ5LmV4dGVuZCggZGVlcCwgY2xvbmUsIGNvcHkgKTtcblxuXHRcdFx0XHQvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzXG5cdFx0XHRcdH0gZWxzZSBpZiAoIGNvcHkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGNvcHk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIFVuaXF1ZSBmb3IgZWFjaCBjb3B5IG9mIGpRdWVyeSBvbiB0aGUgcGFnZVxuXHRleHBhbmRvOiBcImpRdWVyeVwiICsgKCB2ZXJzaW9uICsgTWF0aC5yYW5kb20oKSApLnJlcGxhY2UoIC9cXEQvZywgXCJcIiApLFxuXG5cdC8vIEFzc3VtZSBqUXVlcnkgaXMgcmVhZHkgd2l0aG91dCB0aGUgcmVhZHkgbW9kdWxlXG5cdGlzUmVhZHk6IHRydWUsXG5cblx0ZXJyb3I6IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCBtc2cgKTtcblx0fSxcblxuXHRub29wOiBmdW5jdGlvbigpIHt9LFxuXG5cdC8vIFNlZSB0ZXN0L3VuaXQvY29yZS5qcyBmb3IgZGV0YWlscyBjb25jZXJuaW5nIGlzRnVuY3Rpb24uXG5cdC8vIFNpbmNlIHZlcnNpb24gMS4zLCBET00gbWV0aG9kcyBhbmQgZnVuY3Rpb25zIGxpa2UgYWxlcnRcblx0Ly8gYXJlbid0IHN1cHBvcnRlZC4gVGhleSByZXR1cm4gZmFsc2Ugb24gSUUgKCMyOTY4KS5cblx0aXNGdW5jdGlvbjogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRyZXR1cm4galF1ZXJ5LnR5cGUoIG9iaiApID09PSBcImZ1bmN0aW9uXCI7XG5cdH0sXG5cblx0aXNBcnJheTogQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiggb2JqICkge1xuXHRcdHJldHVybiBqUXVlcnkudHlwZSggb2JqICkgPT09IFwiYXJyYXlcIjtcblx0fSxcblxuXHRpc1dpbmRvdzogZnVuY3Rpb24oIG9iaiApIHtcblx0XHQvKiBqc2hpbnQgZXFlcWVxOiBmYWxzZSAqL1xuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT0gb2JqLndpbmRvdztcblx0fSxcblxuXHRpc051bWVyaWM6IGZ1bmN0aW9uKCBvYmogKSB7XG5cblx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAobnVsbHx0cnVlfGZhbHNlfFwiXCIpXG5cdFx0Ly8gLi4uYnV0IG1pc2ludGVycHJldHMgbGVhZGluZy1udW1iZXIgc3RyaW5ncywgcGFydGljdWxhcmx5IGhleCBsaXRlcmFscyAoXCIweC4uLlwiKVxuXHRcdC8vIHN1YnRyYWN0aW9uIGZvcmNlcyBpbmZpbml0aWVzIHRvIE5hTlxuXHRcdC8vIGFkZGluZyAxIGNvcnJlY3RzIGxvc3Mgb2YgcHJlY2lzaW9uIGZyb20gcGFyc2VGbG9hdCAoIzE1MTAwKVxuXHRcdHZhciByZWFsU3RyaW5nT2JqID0gb2JqICYmIG9iai50b1N0cmluZygpO1xuXHRcdHJldHVybiAhalF1ZXJ5LmlzQXJyYXkoIG9iaiApICYmICggcmVhbFN0cmluZ09iaiAtIHBhcnNlRmxvYXQoIHJlYWxTdHJpbmdPYmogKSArIDEgKSA+PSAwO1xuXHR9LFxuXG5cdGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIG5hbWU7XG5cdFx0Zm9yICggbmFtZSBpbiBvYmogKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXG5cdGlzUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIGtleTtcblxuXHRcdC8vIE11c3QgYmUgYW4gT2JqZWN0LlxuXHRcdC8vIEJlY2F1c2Ugb2YgSUUsIHdlIGFsc28gaGF2ZSB0byBjaGVjayB0aGUgcHJlc2VuY2Ugb2YgdGhlIGNvbnN0cnVjdG9yIHByb3BlcnR5LlxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IERPTSBub2RlcyBhbmQgd2luZG93IG9iamVjdHMgZG9uJ3QgcGFzcyB0aHJvdWdoLCBhcyB3ZWxsXG5cdFx0aWYgKCAhb2JqIHx8IGpRdWVyeS50eXBlKCBvYmogKSAhPT0gXCJvYmplY3RcIiB8fCBvYmoubm9kZVR5cGUgfHwgalF1ZXJ5LmlzV2luZG93KCBvYmogKSApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHR0cnkge1xuXG5cdFx0XHQvLyBOb3Qgb3duIGNvbnN0cnVjdG9yIHByb3BlcnR5IG11c3QgYmUgT2JqZWN0XG5cdFx0XHRpZiAoIG9iai5jb25zdHJ1Y3RvciAmJlxuXHRcdFx0XHQhaGFzT3duLmNhbGwoIG9iaiwgXCJjb25zdHJ1Y3RvclwiICkgJiZcblx0XHRcdFx0IWhhc093bi5jYWxsKCBvYmouY29uc3RydWN0b3IucHJvdG90eXBlLCBcImlzUHJvdG90eXBlT2ZcIiApICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdC8vIElFOCw5IFdpbGwgdGhyb3cgZXhjZXB0aW9ucyBvbiBjZXJ0YWluIGhvc3Qgb2JqZWN0cyAjOTg5N1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHQvLyBIYW5kbGUgaXRlcmF0aW9uIG92ZXIgaW5oZXJpdGVkIHByb3BlcnRpZXMgYmVmb3JlIG93biBwcm9wZXJ0aWVzLlxuXHRcdGlmICggIXN1cHBvcnQub3duRmlyc3QgKSB7XG5cdFx0XHRmb3IgKCBrZXkgaW4gb2JqICkge1xuXHRcdFx0XHRyZXR1cm4gaGFzT3duLmNhbGwoIG9iaiwga2V5ICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gT3duIHByb3BlcnRpZXMgYXJlIGVudW1lcmF0ZWQgZmlyc3RseSwgc28gdG8gc3BlZWQgdXAsXG5cdFx0Ly8gaWYgbGFzdCBvbmUgaXMgb3duLCB0aGVuIGFsbCBwcm9wZXJ0aWVzIGFyZSBvd24uXG5cdFx0Zm9yICgga2V5IGluIG9iaiApIHt9XG5cblx0XHRyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgfHwgaGFzT3duLmNhbGwoIG9iaiwga2V5ICk7XG5cdH0sXG5cblx0dHlwZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRpZiAoIG9iaiA9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIG9iaiArIFwiXCI7XG5cdFx0fVxuXHRcdHJldHVybiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiA/XG5cdFx0XHRjbGFzczJ0eXBlWyB0b1N0cmluZy5jYWxsKCBvYmogKSBdIHx8IFwib2JqZWN0XCIgOlxuXHRcdFx0dHlwZW9mIG9iajtcblx0fSxcblxuXHQvLyBXb3JrYXJvdW5kcyBiYXNlZCBvbiBmaW5kaW5ncyBieSBKaW0gRHJpc2NvbGxcblx0Ly8gaHR0cDovL3dlYmxvZ3MuamF2YS5uZXQvYmxvZy9kcmlzY29sbC9hcmNoaXZlLzIwMDkvMDkvMDgvZXZhbC1qYXZhc2NyaXB0LWdsb2JhbC1jb250ZXh0XG5cdGdsb2JhbEV2YWw6IGZ1bmN0aW9uKCBkYXRhICkge1xuXHRcdGlmICggZGF0YSAmJiBqUXVlcnkudHJpbSggZGF0YSApICkge1xuXG5cdFx0XHQvLyBXZSB1c2UgZXhlY1NjcmlwdCBvbiBJbnRlcm5ldCBFeHBsb3JlclxuXHRcdFx0Ly8gV2UgdXNlIGFuIGFub255bW91cyBmdW5jdGlvbiBzbyB0aGF0IGNvbnRleHQgaXMgd2luZG93XG5cdFx0XHQvLyByYXRoZXIgdGhhbiBqUXVlcnkgaW4gRmlyZWZveFxuXHRcdFx0KCB3aW5kb3cuZXhlY1NjcmlwdCB8fCBmdW5jdGlvbiggZGF0YSApIHtcblx0XHRcdFx0d2luZG93WyBcImV2YWxcIiBdLmNhbGwoIHdpbmRvdywgZGF0YSApOyAvLyBqc2NzOmlnbm9yZSByZXF1aXJlRG90Tm90YXRpb25cblx0XHRcdH0gKSggZGF0YSApO1xuXHRcdH1cblx0fSxcblxuXHQvLyBDb252ZXJ0IGRhc2hlZCB0byBjYW1lbENhc2U7IHVzZWQgYnkgdGhlIGNzcyBhbmQgZGF0YSBtb2R1bGVzXG5cdC8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3Milcblx0Y2FtZWxDYXNlOiBmdW5jdGlvbiggc3RyaW5nICkge1xuXHRcdHJldHVybiBzdHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCBcIm1zLVwiICkucmVwbGFjZSggcmRhc2hBbHBoYSwgZmNhbWVsQ2FzZSApO1xuXHR9LFxuXG5cdG5vZGVOYW1lOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblx0fSxcblxuXHRlYWNoOiBmdW5jdGlvbiggb2JqLCBjYWxsYmFjayApIHtcblx0XHR2YXIgbGVuZ3RoLCBpID0gMDtcblxuXHRcdGlmICggaXNBcnJheUxpa2UoIG9iaiApICkge1xuXHRcdFx0bGVuZ3RoID0gb2JqLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIG9iaiApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gb2JqO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4xLCBJRTw5XG5cdHRyaW06IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdHJldHVybiB0ZXh0ID09IG51bGwgP1xuXHRcdFx0XCJcIiA6XG5cdFx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiXCIgKTtcblx0fSxcblxuXHQvLyByZXN1bHRzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1ha2VBcnJheTogZnVuY3Rpb24oIGFyciwgcmVzdWx0cyApIHtcblx0XHR2YXIgcmV0ID0gcmVzdWx0cyB8fCBbXTtcblxuXHRcdGlmICggYXJyICE9IG51bGwgKSB7XG5cdFx0XHRpZiAoIGlzQXJyYXlMaWtlKCBPYmplY3QoIGFyciApICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggcmV0LFxuXHRcdFx0XHRcdHR5cGVvZiBhcnIgPT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRcdFsgYXJyIF0gOiBhcnJcblx0XHRcdFx0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guY2FsbCggcmV0LCBhcnIgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XG5cdFx0dmFyIGxlbjtcblxuXHRcdGlmICggYXJyICkge1xuXHRcdFx0aWYgKCBpbmRleE9mICkge1xuXHRcdFx0XHRyZXR1cm4gaW5kZXhPZi5jYWxsKCBhcnIsIGVsZW0sIGkgKTtcblx0XHRcdH1cblxuXHRcdFx0bGVuID0gYXJyLmxlbmd0aDtcblx0XHRcdGkgPSBpID8gaSA8IDAgPyBNYXRoLm1heCggMCwgbGVuICsgaSApIDogaSA6IDA7XG5cblx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXG5cdFx0XHRcdC8vIFNraXAgYWNjZXNzaW5nIGluIHNwYXJzZSBhcnJheXNcblx0XHRcdFx0aWYgKCBpIGluIGFyciAmJiBhcnJbIGkgXSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gaTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiAtMTtcblx0fSxcblxuXHRtZXJnZTogZnVuY3Rpb24oIGZpcnN0LCBzZWNvbmQgKSB7XG5cdFx0dmFyIGxlbiA9ICtzZWNvbmQubGVuZ3RoLFxuXHRcdFx0aiA9IDAsXG5cdFx0XHRpID0gZmlyc3QubGVuZ3RoO1xuXG5cdFx0d2hpbGUgKCBqIDwgbGVuICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqKysgXTtcblx0XHR9XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gV29ya2Fyb3VuZCBjYXN0aW5nIG9mIC5sZW5ndGggdG8gTmFOIG9uIG90aGVyd2lzZSBhcnJheWxpa2Ugb2JqZWN0cyAoZS5nLiwgTm9kZUxpc3RzKVxuXHRcdGlmICggbGVuICE9PSBsZW4gKSB7XG5cdFx0XHR3aGlsZSAoIHNlY29uZFsgaiBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaisrIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXTtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCB0cmFuc2xhdGluZyBlYWNoIG9mIHRoZSBpdGVtcyB0byB0aGVpciBuZXcgdmFsdWVzXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gY29uY2F0LmFwcGx5KCBbXSwgcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG5cdC8vIGFyZ3VtZW50cy5cblx0cHJveHk6IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0XHR2YXIgYXJncywgcHJveHksIHRtcDtcblxuXHRcdGlmICggdHlwZW9mIGNvbnRleHQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdFx0Y29udGV4dCA9IGZuO1xuXHRcdFx0Zm4gPSB0bXA7XG5cdFx0fVxuXG5cdFx0Ly8gUXVpY2sgY2hlY2sgdG8gZGV0ZXJtaW5lIGlmIHRhcmdldCBpcyBjYWxsYWJsZSwgaW4gdGhlIHNwZWNcblx0XHQvLyB0aGlzIHRocm93cyBhIFR5cGVFcnJvciwgYnV0IHdlIHdpbGwganVzdCByZXR1cm4gdW5kZWZpbmVkLlxuXHRcdGlmICggIWpRdWVyeS5pc0Z1bmN0aW9uKCBmbiApICkge1xuXHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBTaW11bGF0ZWQgYmluZFxuXHRcdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0XHRwcm94eSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGZuLmFwcGx5KCBjb250ZXh0IHx8IHRoaXMsIGFyZ3MuY29uY2F0KCBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSApICk7XG5cdFx0fTtcblxuXHRcdC8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZFxuXHRcdHByb3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBqUXVlcnkuZ3VpZCsrO1xuXG5cdFx0cmV0dXJuIHByb3h5O1xuXHR9LFxuXG5cdG5vdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuICsoIG5ldyBEYXRlKCkgKTtcblx0fSxcblxuXHQvLyBqUXVlcnkuc3VwcG9ydCBpcyBub3QgdXNlZCBpbiBDb3JlIGJ1dCBvdGhlciBwcm9qZWN0cyBhdHRhY2ggdGhlaXJcblx0Ly8gcHJvcGVydGllcyB0byBpdCBzbyBpdCBuZWVkcyB0byBleGlzdC5cblx0c3VwcG9ydDogc3VwcG9ydFxufSApO1xuXG4vLyBKU0hpbnQgd291bGQgZXJyb3Igb24gdGhpcyBjb2RlIGR1ZSB0byB0aGUgU3ltYm9sIG5vdCBiZWluZyBkZWZpbmVkIGluIEVTNS5cbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5qc2hpbnRyYyB3b3VsZCBjcmVhdGUgYSBkYW5nZXIgb2YgdXNpbmcgdGhlIGdsb2JhbFxuLy8gdW5ndWFyZGVkIGluIGFub3RoZXIgcGxhY2UsIGl0IHNlZW1zIHNhZmVyIHRvIGp1c3QgZGlzYWJsZSBKU0hpbnQgZm9yIHRoZXNlXG4vLyB0aHJlZSBsaW5lcy5cbi8qIGpzaGludCBpZ25vcmU6IHN0YXJ0ICovXG5pZiAoIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiApIHtcblx0alF1ZXJ5LmZuWyBTeW1ib2wuaXRlcmF0b3IgXSA9IGRlbGV0ZWRJZHNbIFN5bWJvbC5pdGVyYXRvciBdO1xufVxuLyoganNoaW50IGlnbm9yZTogZW5kICovXG5cbi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcFxualF1ZXJ5LmVhY2goIFwiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2xcIi5zcGxpdCggXCIgXCIgKSxcbmZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHRjbGFzczJ0eXBlWyBcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbn0gKTtcblxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcblxuXHQvLyBTdXBwb3J0OiBpT1MgOC4yIChub3QgcmVwcm9kdWNpYmxlIGluIHNpbXVsYXRvcilcblx0Ly8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KVxuXHQvLyBoYXNPd24gaXNuJ3QgdXNlZCBoZXJlIGR1ZSB0byBmYWxzZSBuZWdhdGl2ZXNcblx0Ly8gcmVnYXJkaW5nIE5vZGVsaXN0IGxlbmd0aCBpbiBJRVxuXHR2YXIgbGVuZ3RoID0gISFvYmogJiYgXCJsZW5ndGhcIiBpbiBvYmogJiYgb2JqLmxlbmd0aCxcblx0XHR0eXBlID0galF1ZXJ5LnR5cGUoIG9iaiApO1xuXG5cdGlmICggdHlwZSA9PT0gXCJmdW5jdGlvblwiIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHR5cGUgPT09IFwiYXJyYXlcIiB8fCBsZW5ndGggPT09IDAgfHxcblx0XHR0eXBlb2YgbGVuZ3RoID09PSBcIm51bWJlclwiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqO1xufVxudmFyIFNpenpsZSA9XG4vKiFcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjIuMVxuICogaHR0cDovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlXG4gKlxuICogRGF0ZTogMjAxNS0xMC0xN1xuICovXG4oZnVuY3Rpb24oIHdpbmRvdyApIHtcblxudmFyIGksXG5cdHN1cHBvcnQsXG5cdEV4cHIsXG5cdGdldFRleHQsXG5cdGlzWE1MLFxuXHR0b2tlbml6ZSxcblx0Y29tcGlsZSxcblx0c2VsZWN0LFxuXHRvdXRlcm1vc3RDb250ZXh0LFxuXHRzb3J0SW5wdXQsXG5cdGhhc0R1cGxpY2F0ZSxcblxuXHQvLyBMb2NhbCBkb2N1bWVudCB2YXJzXG5cdHNldERvY3VtZW50LFxuXHRkb2N1bWVudCxcblx0ZG9jRWxlbSxcblx0ZG9jdW1lbnRJc0hUTUwsXG5cdHJidWdneVFTQSxcblx0cmJ1Z2d5TWF0Y2hlcyxcblx0bWF0Y2hlcyxcblx0Y29udGFpbnMsXG5cblx0Ly8gSW5zdGFuY2Utc3BlY2lmaWMgZGF0YVxuXHRleHBhbmRvID0gXCJzaXp6bGVcIiArIDEgKiBuZXcgRGF0ZSgpLFxuXHRwcmVmZXJyZWREb2MgPSB3aW5kb3cuZG9jdW1lbnQsXG5cdGRpcnJ1bnMgPSAwLFxuXHRkb25lID0gMCxcblx0Y2xhc3NDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdHRva2VuQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRjb21waWxlckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0c29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIDA7XG5cdH0sXG5cblx0Ly8gR2VuZXJhbC1wdXJwb3NlIGNvbnN0YW50c1xuXHRNQVhfTkVHQVRJVkUgPSAxIDw8IDMxLFxuXG5cdC8vIEluc3RhbmNlIG1ldGhvZHNcblx0aGFzT3duID0gKHt9KS5oYXNPd25Qcm9wZXJ0eSxcblx0YXJyID0gW10sXG5cdHBvcCA9IGFyci5wb3AsXG5cdHB1c2hfbmF0aXZlID0gYXJyLnB1c2gsXG5cdHB1c2ggPSBhcnIucHVzaCxcblx0c2xpY2UgPSBhcnIuc2xpY2UsXG5cdC8vIFVzZSBhIHN0cmlwcGVkLWRvd24gaW5kZXhPZiBhcyBpdCdzIGZhc3RlciB0aGFuIG5hdGl2ZVxuXHQvLyBodHRwOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzVcblx0aW5kZXhPZiA9IGZ1bmN0aW9uKCBsaXN0LCBlbGVtICkge1xuXHRcdHZhciBpID0gMCxcblx0XHRcdGxlbiA9IGxpc3QubGVuZ3RoO1xuXHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0aWYgKCBsaXN0W2ldID09PSBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gaTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIC0xO1xuXHR9LFxuXG5cdGJvb2xlYW5zID0gXCJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZFwiLFxuXG5cdC8vIFJlZ3VsYXIgZXhwcmVzc2lvbnNcblxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXNlbGVjdG9ycy8jd2hpdGVzcGFjZVxuXHR3aGl0ZXNwYWNlID0gXCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLFxuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCN2YWx1ZS1kZWYtaWRlbnRpZmllclxuXHRpZGVudGlmaWVyID0gXCIoPzpcXFxcXFxcXC58W1xcXFx3LV18W15cXFxceDAwLVxcXFx4YTBdKStcIixcblxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0YXR0cmlidXRlcyA9IFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XCIgKyB3aGl0ZXNwYWNlICtcblx0XHQvLyBPcGVyYXRvciAoY2FwdHVyZSAyKVxuXHRcdFwiKihbKl4kfCF+XT89KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0Ly8gXCJBdHRyaWJ1dGUgdmFsdWVzIG11c3QgYmUgQ1NTIGlkZW50aWZpZXJzIFtjYXB0dXJlIDVdIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdXCJcblx0XHRcIiooPzonKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCJ8KFwiICsgaWRlbnRpZmllciArIFwiKSl8KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCIqXFxcXF1cIixcblxuXHRwc2V1ZG9zID0gXCI6KFwiICsgaWRlbnRpZmllciArIFwiKSg/OlxcXFwoKFwiICtcblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxuXHRcdC8vIDEuIHF1b3RlZCAoY2FwdHVyZSAzOyBjYXB0dXJlIDQgb3IgY2FwdHVyZSA1KVxuXHRcdFwiKCcoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcIil8XCIgK1xuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxuXHRcdFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKClbXFxcXF1dfFwiICsgYXR0cmlidXRlcyArIFwiKSopfFwiICtcblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgKyB3aGl0ZXNwYWNlICsgXCIrJFwiLCBcImdcIiApLFxuXG5cdHJjb21tYSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKixcIiArIHdoaXRlc3BhY2UgKyBcIipcIiApLFxuXHRyY29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiooWz4rfl18XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblxuXHRyYXR0cmlidXRlUXVvdGVzID0gbmV3IFJlZ0V4cCggXCI9XCIgKyB3aGl0ZXNwYWNlICsgXCIqKFteXFxcXF0nXFxcIl0qPylcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcXVwiLCBcImdcIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJDTEFTU1wiOiBuZXcgUmVnRXhwKCBcIl5cXFxcLihcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblx0XHQvLyBGb3IgdXNlIGluIGxpYnJhcmllcyBpbXBsZW1lbnRpbmcgLmlzKClcblx0XHQvLyBXZSB1c2UgdGhpcyBmb3IgUE9TIG1hdGNoaW5nIGluIGBzZWxlY3RgXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cdHJlc2NhcGUgPSAvJ3xcXFxcL2csXG5cblx0Ly8gQ1NTIGVzY2FwZXMgaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcKFtcXFxcZGEtZl17MSw2fVwiICsgd2hpdGVzcGFjZSArIFwiP3woXCIgKyB3aGl0ZXNwYWNlICsgXCIpfC4pXCIsIFwiaWdcIiApLFxuXHRmdW5lc2NhcGUgPSBmdW5jdGlvbiggXywgZXNjYXBlZCwgZXNjYXBlZFdoaXRlc3BhY2UgKSB7XG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGVkIC0gMHgxMDAwMDtcblx0XHQvLyBOYU4gbWVhbnMgbm9uLWNvZGVwb2ludFxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjRcblx0XHQvLyBXb3JrYXJvdW5kIGVycm9uZW91cyBudW1lcmljIGludGVycHJldGF0aW9uIG9mICtcIjB4XCJcblx0XHRyZXR1cm4gaGlnaCAhPT0gaGlnaCB8fCBlc2NhcGVkV2hpdGVzcGFjZSA/XG5cdFx0XHRlc2NhcGVkIDpcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0Ly8gQk1QIGNvZGVwb2ludFxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoICsgMHgxMDAwMCApIDpcblx0XHRcdFx0Ly8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcblx0Ly8gU2VlIHNldERvY3VtZW50KClcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXG5cdC8vIGVycm9yIGluIElFXG5cdHVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRzZXREb2N1bWVudCgpO1xuXHR9O1xuXG4vLyBPcHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKVxudHJ5IHtcblx0cHVzaC5hcHBseShcblx0XHQoYXJyID0gc2xpY2UuY2FsbCggcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMgKSksXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcblx0KTtcblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjBcblx0Ly8gRGV0ZWN0IHNpbGVudGx5IGZhaWxpbmcgcHVzaC5hcHBseVxuXHRhcnJbIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzLmxlbmd0aCBdLm5vZGVUeXBlO1xufSBjYXRjaCAoIGUgKSB7XG5cdHB1c2ggPSB7IGFwcGx5OiBhcnIubGVuZ3RoID9cblxuXHRcdC8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0cHVzaF9uYXRpdmUuYXBwbHkoIHRhcmdldCwgc2xpY2UuY2FsbChlbHMpICk7XG5cdFx0fSA6XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZCBkaXJlY3RseVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHZhciBqID0gdGFyZ2V0Lmxlbmd0aCxcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHQvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGhcblx0XHRcdHdoaWxlICggKHRhcmdldFtqKytdID0gZWxzW2krK10pICkge31cblx0XHRcdHRhcmdldC5sZW5ndGggPSBqIC0gMTtcblx0XHR9XG5cdH07XG59XG5cbmZ1bmN0aW9uIFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBtLCBpLCBlbGVtLCBuaWQsIG5pZHNlbGVjdCwgbWF0Y2gsIGdyb3VwcywgbmV3U2VsZWN0b3IsXG5cdFx0bmV3Q29udGV4dCA9IGNvbnRleHQgJiYgY29udGV4dC5vd25lckRvY3VtZW50LFxuXG5cdFx0Ly8gbm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVudFxuXHRcdG5vZGVUeXBlID0gY29udGV4dCA/IGNvbnRleHQubm9kZVR5cGUgOiA5O1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxpZCBzZWxlY3RvciBvciBjb250ZXh0XG5cdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiIHx8ICFzZWxlY3RvciB8fFxuXHRcdG5vZGVUeXBlICE9PSAxICYmIG5vZGVUeXBlICE9PSA5ICYmIG5vZGVUeXBlICE9PSAxMSApIHtcblxuXHRcdHJldHVybiByZXN1bHRzO1xuXHR9XG5cblx0Ly8gVHJ5IHRvIHNob3J0Y3V0IGZpbmQgb3BlcmF0aW9ucyAoYXMgb3Bwb3NlZCB0byBmaWx0ZXJzKSBpbiBIVE1MIGRvY3VtZW50c1xuXHRpZiAoICFzZWVkICkge1xuXG5cdFx0aWYgKCAoIGNvbnRleHQgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IHByZWZlcnJlZERvYyApICE9PSBkb2N1bWVudCApIHtcblx0XHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdFx0fVxuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdFx0aWYgKCBkb2N1bWVudElzSFRNTCApIHtcblxuXHRcdFx0Ly8gSWYgdGhlIHNlbGVjdG9yIGlzIHN1ZmZpY2llbnRseSBzaW1wbGUsIHRyeSB1c2luZyBhIFwiZ2V0KkJ5KlwiIERPTSBtZXRob2Rcblx0XHRcdC8vIChleGNlcHRpbmcgRG9jdW1lbnRGcmFnbWVudCBjb250ZXh0LCB3aGVyZSB0aGUgbWV0aG9kcyBkb24ndCBleGlzdClcblx0XHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmIChtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKSkgKSB7XG5cblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3Jcblx0XHRcdFx0aWYgKCAobSA9IG1hdGNoWzFdKSApIHtcblxuXHRcdFx0XHRcdC8vIERvY3VtZW50IGNvbnRleHRcblx0XHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkpICYmXG5cdFx0XHRcdFx0XHRcdGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICkgJiZcblx0XHRcdFx0XHRcdFx0ZWxlbS5pZCA9PT0gbSApIHtcblxuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFR5cGUgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbMl0gKSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHRcdC8vIENsYXNzIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoIChtID0gbWF0Y2hbM10pICYmIHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJlxuXHRcdFx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbSApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gVGFrZSBhZHZhbnRhZ2Ugb2YgcXVlcnlTZWxlY3RvckFsbFxuXHRcdFx0aWYgKCBzdXBwb3J0LnFzYSAmJlxuXHRcdFx0XHQhY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdICYmXG5cdFx0XHRcdCghcmJ1Z2d5UVNBIHx8ICFyYnVnZ3lRU0EudGVzdCggc2VsZWN0b3IgKSkgKSB7XG5cblx0XHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gY29udGV4dDtcblx0XHRcdFx0XHRuZXdTZWxlY3RvciA9IHNlbGVjdG9yO1xuXG5cdFx0XHRcdC8vIHFTQSBsb29rcyBvdXRzaWRlIEVsZW1lbnQgY29udGV4dCwgd2hpY2ggaXMgbm90IHdoYXQgd2Ugd2FudFxuXHRcdFx0XHQvLyBUaGFua3MgdG8gQW5kcmV3IER1cG9udCBmb3IgdGhpcyB3b3JrYXJvdW5kIHRlY2huaXF1ZVxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PThcblx0XHRcdFx0Ly8gRXhjbHVkZSBvYmplY3QgZWxlbWVudHNcblx0XHRcdFx0fSBlbHNlIGlmICggY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2FwdHVyZSB0aGUgY29udGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3Nhcnlcblx0XHRcdFx0XHRpZiAoIChuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkpICkge1xuXHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJlc2NhcGUsIFwiXFxcXCQmXCIgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5zZXRBdHRyaWJ1dGUoIFwiaWRcIiwgKG5pZCA9IGV4cGFuZG8pICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdFx0bmlkc2VsZWN0ID0gcmlkZW50aWZpZXIudGVzdCggbmlkICkgPyBcIiNcIiArIG5pZCA6IFwiW2lkPSdcIiArIG5pZCArIFwiJ11cIjtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGdyb3Vwc1tpXSA9IG5pZHNlbGVjdCArIFwiIFwiICsgdG9TZWxlY3RvciggZ3JvdXBzW2ldICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XG5cblx0XHRcdFx0XHQvLyBFeHBhbmQgY29udGV4dCBmb3Igc2libGluZyBzZWxlY3RvcnNcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcblx0XHRcdFx0XHRcdGNvbnRleHQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIG5ld1NlbGVjdG9yICkge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLFxuXHRcdFx0XHRcdFx0XHRuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yIClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHR9IGNhdGNoICggcXNhRXJyb3IgKSB7XG5cdFx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xuXHRcdFx0XHRcdFx0XHRjb250ZXh0LnJlbW92ZUF0dHJpYnV0ZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWxsIG90aGVyc1xuXHRyZXR1cm4gc2VsZWN0KCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUga2V5LXZhbHVlIGNhY2hlcyBvZiBsaW1pdGVkIHNpemVcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGhcbiAqXHRwcm9wZXJ0eSBuYW1lIHRoZSAoc3BhY2Utc3VmZml4ZWQpIHN0cmluZyBhbmQgKGlmIHRoZSBjYWNoZSBpcyBsYXJnZXIgdGhhbiBFeHByLmNhY2hlTGVuZ3RoKVxuICpcdGRlbGV0aW5nIHRoZSBvbGRlc3QgZW50cnlcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2FjaGUoKSB7XG5cdHZhciBrZXlzID0gW107XG5cblx0ZnVuY3Rpb24gY2FjaGUoIGtleSwgdmFsdWUgKSB7XG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSk7XG5cdH1cblx0cmV0dXJuIGNhY2hlO1xufVxuXG4vKipcbiAqIE1hcmsgYSBmdW5jdGlvbiBmb3Igc3BlY2lhbCB1c2UgYnkgU2l6emxlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gbWFya1xuICovXG5mdW5jdGlvbiBtYXJrRnVuY3Rpb24oIGZuICkge1xuXHRmblsgZXhwYW5kbyBdID0gdHJ1ZTtcblx0cmV0dXJuIGZuO1xufVxuXG4vKipcbiAqIFN1cHBvcnQgdGVzdGluZyB1c2luZyBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBQYXNzZWQgdGhlIGNyZWF0ZWQgZGl2IGFuZCBleHBlY3RzIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4gISFmbiggZGl2ICk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBkaXYucGFyZW50Tm9kZSApIHtcblx0XHRcdGRpdi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBkaXYgKTtcblx0XHR9XG5cdFx0Ly8gcmVsZWFzZSBtZW1vcnkgaW4gSUVcblx0XHRkaXYgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdChcInxcIiksXG5cdFx0aSA9IGFyci5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0RXhwci5hdHRySGFuZGxlWyBhcnJbaV0gXSA9IGhhbmRsZXI7XG5cdH1cbn1cblxuLyoqXG4gKiBDaGVja3MgZG9jdW1lbnQgb3JkZXIgb2YgdHdvIHNpYmxpbmdzXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGFcbiAqIEBwYXJhbSB7RWxlbWVudH0gYlxuICogQHJldHVybnMge051bWJlcn0gUmV0dXJucyBsZXNzIHRoYW4gMCBpZiBhIHByZWNlZGVzIGIsIGdyZWF0ZXIgdGhhbiAwIGlmIGEgZm9sbG93cyBiXG4gKi9cbmZ1bmN0aW9uIHNpYmxpbmdDaGVjayggYSwgYiApIHtcblx0dmFyIGN1ciA9IGIgJiYgYSxcblx0XHRkaWZmID0gY3VyICYmIGEubm9kZVR5cGUgPT09IDEgJiYgYi5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0KCB+Yi5zb3VyY2VJbmRleCB8fCBNQVhfTkVHQVRJVkUgKSAtXG5cdFx0XHQoIH5hLnNvdXJjZUluZGV4IHx8IE1BWF9ORUdBVElWRSApO1xuXG5cdC8vIFVzZSBJRSBzb3VyY2VJbmRleCBpZiBhdmFpbGFibGUgb24gYm90aCBub2Rlc1xuXHRpZiAoIGRpZmYgKSB7XG5cdFx0cmV0dXJuIGRpZmY7XG5cdH1cblxuXHQvLyBDaGVjayBpZiBiIGZvbGxvd3MgYVxuXHRpZiAoIGN1ciApIHtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIubmV4dFNpYmxpbmcpICkge1xuXHRcdFx0aWYgKCBjdXIgPT09IGIgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYSA/IDEgOiAtMTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGlucHV0IHR5cGVzXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVJbnB1dFBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgYnV0dG9uc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9uUHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIChuYW1lID09PSBcImlucHV0XCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIikgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBhcmd1bWVudCApIHtcblx0XHRhcmd1bWVudCA9ICthcmd1bWVudDtcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbIChqID0gbWF0Y2hJbmRleGVzW2ldKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbal0gPSAhKG1hdGNoZXNbal0gPSBzZWVkW2pdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgYSBub2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0PX0gY29udGV4dFxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHRlc3RDb250ZXh0KCBjb250ZXh0ICkge1xuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xufVxuXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxuc3VwcG9ydCA9IFNpenpsZS5zdXBwb3J0ID0ge307XG5cbi8qKlxuICogRGV0ZWN0cyBYTUwgbm9kZXNcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IGVsZW0gQW4gZWxlbWVudCBvciBhIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXG4gKi9cbmlzWE1MID0gU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdC8vIGRvY3VtZW50RWxlbWVudCBpcyB2ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3Rcblx0Ly8gKHN1Y2ggYXMgbG9hZGluZyBpZnJhbWVzIGluIElFIC0gIzQ4MzMpXG5cdHZhciBkb2N1bWVudEVsZW1lbnQgPSBlbGVtICYmIChlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSkuZG9jdW1lbnRFbGVtZW50O1xuXHRyZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSBcIkhUTUxcIiA6IGZhbHNlO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBwYXJlbnQsXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdGlmICggZG9jID09PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDktMTEsIEVkZ2Vcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHRpZiAoIChwYXJlbnQgPSBkb2N1bWVudC5kZWZhdWx0VmlldykgJiYgcGFyZW50LnRvcCAhPT0gcGFyZW50ICkge1xuXHRcdC8vIFN1cHBvcnQ6IElFIDExXG5cdFx0aWYgKCBwYXJlbnQuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHBhcmVudC5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBwYXJlbnQuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRwYXJlbnQuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRkaXYuY2xhc3NOYW1lID0gXCJpXCI7XG5cdFx0cmV0dXJuICFkaXYuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xuXHR9KTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcblx0XHRkaXYuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoXCJcIikgKTtcblx0XHRyZXR1cm4gIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBTdXBwb3J0OiBJRTw5XG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDEwXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRCeUlkIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZVxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtYXRpY2FsbHktc2V0IG5hbWVzLFxuXHQvLyBzbyB1c2UgYSByb3VuZGFib3V0IGdldEVsZW1lbnRzQnlOYW1lIHRlc3Rcblx0c3VwcG9ydC5nZXRCeUlkID0gYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZGl2ICkuaWQgPSBleHBhbmRvO1xuXHRcdHJldHVybiAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUgfHwgIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCBleHBhbmRvICkubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBJRCBmaW5kIGFuZCBmaWx0ZXJcblx0aWYgKCBzdXBwb3J0LmdldEJ5SWQgKSB7XG5cdFx0RXhwci5maW5kW1wiSURcIl0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cdFx0XHRcdHJldHVybiBtID8gWyBtIF0gOiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSBmdW5jdGlvbiggaWQgKSB7XG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKFwiaWRcIikgPT09IGF0dHJJZDtcblx0XHRcdH07XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHQvLyBTdXBwb3J0OiBJRTYvN1xuXHRcdC8vIGdldEVsZW1lbnRCeUlkIGlzIG5vdCByZWxpYWJsZSBhcyBhIGZpbmQgc2hvcnRjdXRcblx0XHRkZWxldGUgRXhwci5maW5kW1wiSURcIl07XG5cblx0XHRFeHByLmZpbHRlcltcIklEXCJdID0gIGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09IFwidW5kZWZpbmVkXCIgJiZcblx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtcblx0XHRcdFx0cmV0dXJuIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXHR9XG5cblx0Ly8gVGFnXG5cdEV4cHIuZmluZFtcIlRBR1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgP1xuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgZG9uJ3QgaGF2ZSBnRUJUTlxuXHRcdFx0fSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyApO1xuXHRcdFx0fVxuXHRcdH0gOlxuXG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHR0bXAgPSBbXSxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdC8vIEJ5IGhhcHB5IGNvaW5jaWRlbmNlLCBhIChicm9rZW4pIGdFQlROIGFwcGVhcnMgb24gRG9jdW1lbnRGcmFnbWVudCBub2RlcyB0b29cblx0XHRcdFx0cmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzXG5cdFx0XHRpZiAoIHRhZyA9PT0gXCIqXCIgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSByZXN1bHRzW2krK10pICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdHRtcC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHRtcDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdH07XG5cblx0Ly8gQ2xhc3Ncblx0RXhwci5maW5kW1wiQ0xBU1NcIl0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZnVuY3Rpb24oIGNsYXNzTmFtZSwgY29udGV4dCApIHtcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBjbGFzc05hbWUgKTtcblx0XHR9XG5cdH07XG5cblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxuXG5cdC8vIG1hdGNoZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDExLjUpXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcblxuXHQvLyBxU2EoOmZvY3VzKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoQ2hyb21lIDIxKVxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3Jcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxuXHQvLyBTbywgd2UgYWxsb3cgOmZvY3VzIHRvIHBhc3MgdGhyb3VnaCBRU0EgYWxsIHRoZSB0aW1lIHRvIGF2b2lkIHRoZSBJRSBlcnJvclxuXHQvLyBTZWUgaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSkgKSB7XG5cdFx0Ly8gQnVpbGQgUVNBIHJlZ2V4XG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xuXHRcdFx0Ly8gU2VsZWN0IGlzIHNldCB0byBlbXB0eSBzdHJpbmcgb24gcHVycG9zZVxuXHRcdFx0Ly8gVGhpcyBpcyB0byB0ZXN0IElFJ3MgdHJlYXRtZW50IG9mIG5vdCBleHBsaWNpdGx5XG5cdFx0XHQvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSxcblx0XHRcdC8vIHNpbmNlIGl0cyBwcmVzZW5jZSBzaG91bGQgYmUgZW5vdWdoXG5cdFx0XHQvLyBodHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZGl2ICkuaW5uZXJIVE1MID0gXCI8YSBpZD0nXCIgKyBleHBhbmRvICsgXCInPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBpZD0nXCIgKyBleHBhbmRvICsgXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+XCIgK1xuXHRcdFx0XHRcIjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOCwgT3BlcmEgMTEtMTIuMTZcblx0XHRcdC8vIE5vdGhpbmcgc2hvdWxkIGJlIHNlbGVjdGVkIHdoZW4gZW1wdHkgc3RyaW5ncyBmb2xsb3cgXj0gb3IgJD0gb3IgKj1cblx0XHRcdC8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0IFwic2FmZVwiIGZvciBXaW5SVFxuXHRcdFx0Ly8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlsqXiRdPVwiICsgd2hpdGVzcGFjZSArIFwiKig/OicnfFxcXCJcXFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gQm9vbGVhbiBhdHRyaWJ1dGVzIGFuZCBcInZhbHVlXCIgYXJlIG5vdCB0cmVhdGVkIGNvcnJlY3RseVxuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbc2VsZWN0ZWRdXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXG5cdFx0XHRpZiAoICFkaXYucXVlcnlTZWxlY3RvckFsbCggXCJbaWR+PVwiICsgZXhwYW5kbyArIFwiLV1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCJ+PVwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCI6Y2hlY2tlZFwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiOmNoZWNrZWRcIik7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4KywgaU9TIDgrXG5cdFx0XHQvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxXG5cdFx0XHQvLyBJbi1wYWdlIGBzZWxlY3RvciNpZCBzaWJpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKCBcImEjXCIgKyBleHBhbmRvICsgXCIrKlwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIi4jLitbK35dXCIpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0YXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdFx0XHQvLyBTdXBwb3J0OiBXaW5kb3dzIDggTmF0aXZlIEFwcHNcblx0XHRcdC8vIFRoZSB0eXBlIGFuZCBuYW1lIGF0dHJpYnV0ZXMgYXJlIHJlc3RyaWN0ZWQgZHVyaW5nIC5pbm5lckhUTUwgYXNzaWdubWVudFxuXHRcdFx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJoaWRkZW5cIiApO1xuXHRcdFx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwiRFwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gRW5mb3JjZSBjYXNlLXNlbnNpdGl2aXR5IG9mIG5hbWUgYXR0cmlidXRlXG5cdFx0XHRpZiAoIGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZW5hYmxlZFwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3Ncblx0XHRcdGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKFwiLC4qOlwiKTtcblx0XHR9KTtcblx0fVxuXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUgdG8gZG8gbWF0Y2hlc1NlbGVjdG9yXG5cdFx0XHQvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5KVxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZGl2LCBcImRpdlwiICk7XG5cblx0XHRcdC8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb25cblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcblx0XHRcdG1hdGNoZXMuY2FsbCggZGl2LCBcIltzIT0nJ106eFwiICk7XG5cdFx0XHRyYnVnZ3lNYXRjaGVzLnB1c2goIFwiIT1cIiwgcHNldWRvcyApO1xuXHRcdH0pO1xuXHR9XG5cblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbihcInxcIikgKTtcblx0cmJ1Z2d5TWF0Y2hlcyA9IHJidWdneU1hdGNoZXMubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneU1hdGNoZXMuam9pbihcInxcIikgKTtcblxuXHQvKiBDb250YWluc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cdGhhc0NvbXBhcmUgPSBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29tcGFyZURvY3VtZW50UG9zaXRpb24gKTtcblxuXHQvLyBFbGVtZW50IGNvbnRhaW5zIGFub3RoZXJcblx0Ly8gUHVycG9zZWZ1bGx5IHNlbGYtZXhjbHVzaXZlXG5cdC8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90IGNvbnRhaW4gaXRzZWxmXG5cdGNvbnRhaW5zID0gaGFzQ29tcGFyZSB8fCBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29udGFpbnMgKSA/XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHR2YXIgYWRvd24gPSBhLm5vZGVUeXBlID09PSA5ID8gYS5kb2N1bWVudEVsZW1lbnQgOiBhLFxuXHRcdFx0XHRidXAgPSBiICYmIGIucGFyZW50Tm9kZTtcblx0XHRcdHJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRhZG93bi5jb250YWlucyA/XG5cdFx0XHRcdFx0YWRvd24uY29udGFpbnMoIGJ1cCApIDpcblx0XHRcdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICYmIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGJ1cCApICYgMTZcblx0XHRcdCkpO1xuXHRcdH0gOlxuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0aWYgKCBiICkge1xuXHRcdFx0XHR3aGlsZSAoIChiID0gYi5wYXJlbnROb2RlKSApIHtcblx0XHRcdFx0XHRpZiAoIGIgPT09IGEgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuXG5cdC8qIFNvcnRpbmdcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIERvY3VtZW50IG9yZGVyIHNvcnRpbmdcblx0c29ydE9yZGVyID0gaGFzQ29tcGFyZSA/XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXG5cdFx0Ly8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0Ly8gU29ydCBvbiBtZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3NpdGlvblxuXHRcdHZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtcblx0XHRpZiAoIGNvbXBhcmUgKSB7XG5cdFx0XHRyZXR1cm4gY29tcGFyZTtcblx0XHR9XG5cblx0XHQvLyBDYWxjdWxhdGUgcG9zaXRpb24gaWYgYm90aCBpbnB1dHMgYmVsb25nIHRvIHRoZSBzYW1lIGRvY3VtZW50XG5cdFx0Y29tcGFyZSA9ICggYS5vd25lckRvY3VtZW50IHx8IGEgKSA9PT0gKCBiLm93bmVyRG9jdW1lbnQgfHwgYiApID9cblx0XHRcdGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGIgKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSB3ZSBrbm93IHRoZXkgYXJlIGRpc2Nvbm5lY3RlZFxuXHRcdFx0MTtcblxuXHRcdC8vIERpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdGlmICggY29tcGFyZSAmIDEgfHxcblx0XHRcdCghc3VwcG9ydC5zb3J0RGV0YWNoZWQgJiYgYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYSApID09PSBjb21wYXJlKSApIHtcblxuXHRcdFx0Ly8gQ2hvb3NlIHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgaXMgcmVsYXRlZCB0byBvdXIgcHJlZmVycmVkIGRvY3VtZW50XG5cdFx0XHRpZiAoIGEgPT09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYSkgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHRcdGlmICggYiA9PT0gZG9jdW1lbnQgfHwgYi5vd25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBiKSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1haW50YWluIG9yaWdpbmFsIG9yZGVyXG5cdFx0XHRyZXR1cm4gc29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXHRcdH1cblxuXHRcdHJldHVybiBjb21wYXJlICYgNCA/IC0xIDogMTtcblx0fSA6XG5cdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxuXHRcdFx0YXAgPSBbIGEgXSxcblx0XHRcdGJwID0gWyBiIF07XG5cblx0XHQvLyBQYXJlbnRsZXNzIG5vZGVzIGFyZSBlaXRoZXIgZG9jdW1lbnRzIG9yIGRpc2Nvbm5lY3RlZFxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xuXHRcdFx0cmV0dXJuIGEgPT09IGRvY3VtZW50ID8gLTEgOlxuXHRcdFx0XHRiID09PSBkb2N1bWVudCA/IDEgOlxuXHRcdFx0XHRhdXAgPyAtMSA6XG5cdFx0XHRcdGJ1cCA/IDEgOlxuXHRcdFx0XHRzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHQvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVja1xuXHRcdH0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkge1xuXHRcdFx0cmV0dXJuIHNpYmxpbmdDaGVjayggYSwgYiApO1xuXHRcdH1cblxuXHRcdC8vIE90aGVyd2lzZSB3ZSBuZWVkIGZ1bGwgbGlzdHMgb2YgdGhlaXIgYW5jZXN0b3JzIGZvciBjb21wYXJpc29uXG5cdFx0Y3VyID0gYTtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRhcC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cdFx0Y3VyID0gYjtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRicC51bnNoaWZ0KCBjdXIgKTtcblx0XHR9XG5cblx0XHQvLyBXYWxrIGRvd24gdGhlIHRyZWUgbG9va2luZyBmb3IgYSBkaXNjcmVwYW5jeVxuXHRcdHdoaWxlICggYXBbaV0gPT09IGJwW2ldICkge1xuXHRcdFx0aSsrO1xuXHRcdH1cblxuXHRcdHJldHVybiBpID9cblx0XHRcdC8vIERvIGEgc2libGluZyBjaGVjayBpZiB0aGUgbm9kZXMgaGF2ZSBhIGNvbW1vbiBhbmNlc3RvclxuXHRcdFx0c2libGluZ0NoZWNrKCBhcFtpXSwgYnBbaV0gKSA6XG5cblx0XHRcdC8vIE90aGVyd2lzZSBub2RlcyBpbiBvdXIgZG9jdW1lbnQgc29ydCBmaXJzdFxuXHRcdFx0YXBbaV0gPT09IHByZWZlcnJlZERvYyA/IC0xIDpcblx0XHRcdGJwW2ldID09PSBwcmVmZXJyZWREb2MgPyAxIDpcblx0XHRcdDA7XG5cdH07XG5cblx0cmV0dXJuIGRvY3VtZW50O1xufTtcblxuU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7XG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7XG59O1xuXG5TaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7XG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IGF0dHJpYnV0ZSBzZWxlY3RvcnMgYXJlIHF1b3RlZFxuXHRleHByID0gZXhwci5yZXBsYWNlKCByYXR0cmlidXRlUXVvdGVzLCBcIj0nJDEnXVwiICk7XG5cblx0aWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdCFjb21waWxlckNhY2hlWyBleHByICsgXCIgXCIgXSAmJlxuXHRcdCggIXJidWdneU1hdGNoZXMgfHwgIXJidWdneU1hdGNoZXMudGVzdCggZXhwciApICkgJiZcblx0XHQoICFyYnVnZ3lRU0EgICAgIHx8ICFyYnVnZ3lRU0EudGVzdCggZXhwciApICkgKSB7XG5cblx0XHR0cnkge1xuXHRcdFx0dmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApO1xuXG5cdFx0XHQvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFsc2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0XHRpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8XG5cdFx0XHRcdFx0Ly8gQXMgd2VsbCwgZGlzY29ubmVjdGVkIG5vZGVzIGFyZSBzYWlkIHRvIGJlIGluIGEgZG9jdW1lbnRcblx0XHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XG5cdFx0XHRcdFx0ZWxlbS5kb2N1bWVudCAmJiBlbGVtLmRvY3VtZW50Lm5vZGVUeXBlICE9PSAxMSApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChlKSB7fVxuXHR9XG5cblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcbn07XG5cblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0ICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdH1cblx0cmV0dXJuIGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICk7XG59O1xuXG5TaXp6bGUuYXR0ciA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHR2YXIgZm4gPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUudG9Mb3dlckNhc2UoKSBdLFxuXHRcdC8vIERvbid0IGdldCBmb29sZWQgYnkgT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzIChqUXVlcnkgIzEzODA3KVxuXHRcdHZhbCA9IGZuICYmIGhhc093bi5jYWxsKCBFeHByLmF0dHJIYW5kbGUsIG5hbWUudG9Mb3dlckNhc2UoKSApID9cblx0XHRcdGZuKCBlbGVtLCBuYW1lLCAhZG9jdW1lbnRJc0hUTUwgKSA6XG5cdFx0XHR1bmRlZmluZWQ7XG5cblx0cmV0dXJuIHZhbCAhPT0gdW5kZWZpbmVkID9cblx0XHR2YWwgOlxuXHRcdHN1cHBvcnQuYXR0cmlidXRlcyB8fCAhZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSA6XG5cdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcbn07XG5cblNpenpsZS5lcnJvciA9IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIiArIG1zZyApO1xufTtcblxuLyoqXG4gKiBEb2N1bWVudCBzb3J0aW5nIGFuZCByZW1vdmluZyBkdXBsaWNhdGVzXG4gKiBAcGFyYW0ge0FycmF5TGlrZX0gcmVzdWx0c1xuICovXG5TaXp6bGUudW5pcXVlU29ydCA9IGZ1bmN0aW9uKCByZXN1bHRzICkge1xuXHR2YXIgZWxlbSxcblx0XHRkdXBsaWNhdGVzID0gW10sXG5cdFx0aiA9IDAsXG5cdFx0aSA9IDA7XG5cblx0Ly8gVW5sZXNzIHdlICprbm93KiB3ZSBjYW4gZGV0ZWN0IGR1cGxpY2F0ZXMsIGFzc3VtZSB0aGVpciBwcmVzZW5jZVxuXHRoYXNEdXBsaWNhdGUgPSAhc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzO1xuXHRzb3J0SW5wdXQgPSAhc3VwcG9ydC5zb3J0U3RhYmxlICYmIHJlc3VsdHMuc2xpY2UoIDAgKTtcblx0cmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTtcblxuXHRpZiAoIGhhc0R1cGxpY2F0ZSApIHtcblx0XHR3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHtcblx0XHRcdGlmICggZWxlbSA9PT0gcmVzdWx0c1sgaSBdICkge1xuXHRcdFx0XHRqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0cmVzdWx0cy5zcGxpY2UoIGR1cGxpY2F0ZXNbIGogXSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENsZWFyIGlucHV0IGFmdGVyIHNvcnRpbmcgdG8gcmVsZWFzZSBvYmplY3RzXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNVxuXHRzb3J0SW5wdXQgPSBudWxsO1xuXG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2Rlc1xuICogQHBhcmFtIHtBcnJheXxFbGVtZW50fSBlbGVtXG4gKi9cbmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbm9kZSxcblx0XHRyZXQgPSBcIlwiLFxuXHRcdGkgPSAwLFxuXHRcdG5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRpZiAoICFub2RlVHlwZSApIHtcblx0XHQvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheVxuXHRcdHdoaWxlICggKG5vZGUgPSBlbGVtW2krK10pICkge1xuXHRcdFx0Ly8gRG8gbm90IHRyYXZlcnNlIGNvbW1lbnQgbm9kZXNcblx0XHRcdHJldCArPSBnZXRUZXh0KCBub2RlICk7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMSB8fCBub2RlVHlwZSA9PT0gOSB8fCBub2RlVHlwZSA9PT0gMTEgKSB7XG5cdFx0Ly8gVXNlIHRleHRDb250ZW50IGZvciBlbGVtZW50c1xuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLnRleHRDb250ZW50O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRyZXQgKz0gZ2V0VGV4dCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVZhbHVlO1xuXHR9XG5cdC8vIERvIG5vdCBpbmNsdWRlIGNvbW1lbnQgb3IgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbiBub2Rlc1xuXG5cdHJldHVybiByZXQ7XG59O1xuXG5FeHByID0gU2l6emxlLnNlbGVjdG9ycyA9IHtcblxuXHQvLyBDYW4gYmUgYWRqdXN0ZWQgYnkgdGhlIHVzZXJcblx0Y2FjaGVMZW5ndGg6IDUwLFxuXG5cdGNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLFxuXG5cdG1hdGNoOiBtYXRjaEV4cHIsXG5cblx0YXR0ckhhbmRsZToge30sXG5cblx0ZmluZDoge30sXG5cblx0cmVsYXRpdmU6IHtcblx0XHRcIj5cIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiIFwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIgfSxcblx0XHRcIitcIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCJ+XCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiIH1cblx0fSxcblxuXHRwcmVGaWx0ZXI6IHtcblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHQvLyBNb3ZlIHRoZSBnaXZlbiB2YWx1ZSB0byBtYXRjaFszXSB3aGV0aGVyIHF1b3RlZCBvciB1bnF1b3RlZFxuXHRcdFx0bWF0Y2hbM10gPSAoIG1hdGNoWzNdIHx8IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8IFwiXCIgKS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzJdID09PSBcIn49XCIgKSB7XG5cdFx0XHRcdG1hdGNoWzNdID0gXCIgXCIgKyBtYXRjaFszXSArIFwiIFwiO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDQgKTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cblx0XHRcdFx0MSB0eXBlIChvbmx5fG50aHwuLi4pXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcblx0XHRcdFx0NCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cXGQqbnwpXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ3IHNpZ24gb2YgeS1jb21wb25lbnRcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XG5cdFx0XHQqL1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzFdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XG5cdFx0XHRcdC8vIG50aC0qIHJlcXVpcmVzIGFyZ3VtZW50XG5cdFx0XHRcdGlmICggIW1hdGNoWzNdICkge1xuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxuXHRcdFx0XHQvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xXG5cdFx0XHRcdG1hdGNoWzRdID0gKyggbWF0Y2hbNF0gPyBtYXRjaFs1XSArIChtYXRjaFs2XSB8fCAxKSA6IDIgKiAoIG1hdGNoWzNdID09PSBcImV2ZW5cIiB8fCBtYXRjaFszXSA9PT0gXCJvZGRcIiApICk7XG5cdFx0XHRcdG1hdGNoWzVdID0gKyggKCBtYXRjaFs3XSArIG1hdGNoWzhdICkgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKTtcblxuXHRcdFx0Ly8gb3RoZXIgdHlwZXMgcHJvaGliaXQgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFswXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2g7XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdHZhciBleGNlc3MsXG5cdFx0XHRcdHVucXVvdGVkID0gIW1hdGNoWzZdICYmIG1hdGNoWzJdO1xuXG5cdFx0XHRpZiAoIG1hdGNoRXhwcltcIkNISUxEXCJdLnRlc3QoIG1hdGNoWzBdICkgKSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBY2NlcHQgcXVvdGVkIGFyZ3VtZW50cyBhcy1pc1xuXHRcdFx0aWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0bWF0Y2hbMl0gPSBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiO1xuXG5cdFx0XHQvLyBTdHJpcCBleGNlc3MgY2hhcmFjdGVycyBmcm9tIHVucXVvdGVkIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXG5cdFx0XHRcdC8vIEdldCBleGNlc3MgZnJvbSB0b2tlbml6ZSAocmVjdXJzaXZlbHkpXG5cdFx0XHRcdChleGNlc3MgPSB0b2tlbml6ZSggdW5xdW90ZWQsIHRydWUgKSkgJiZcblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXG5cdFx0XHRcdChleGNlc3MgPSB1bnF1b3RlZC5pbmRleE9mKCBcIilcIiwgdW5xdW90ZWQubGVuZ3RoIC0gZXhjZXNzICkgLSB1bnF1b3RlZC5sZW5ndGgpICkge1xuXG5cdFx0XHRcdC8vIGV4Y2VzcyBpcyBhIG5lZ2F0aXZlIGluZGV4XG5cdFx0XHRcdG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0XHRtYXRjaFsyXSA9IHVucXVvdGVkLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV0dXJuIG9ubHkgY2FwdHVyZXMgbmVlZGVkIGJ5IHRoZSBwc2V1ZG8gZmlsdGVyIG1ldGhvZCAodHlwZSBhbmQgYXJndW1lbnQpXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTtcblx0XHR9XG5cdH0sXG5cblx0ZmlsdGVyOiB7XG5cblx0XHRcIlRBR1wiOiBmdW5jdGlvbiggbm9kZU5hbWVTZWxlY3RvciApIHtcblx0XHRcdHZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5vZGVOYW1lU2VsZWN0b3IgPT09IFwiKlwiID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9IDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBub2RlTmFtZTtcblx0XHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDTEFTU1wiOiBmdW5jdGlvbiggY2xhc3NOYW1lICkge1xuXHRcdFx0dmFyIHBhdHRlcm4gPSBjbGFzc0NhY2hlWyBjbGFzc05hbWUgKyBcIiBcIiBdO1xuXG5cdFx0XHRyZXR1cm4gcGF0dGVybiB8fFxuXHRcdFx0XHQocGF0dGVybiA9IG5ldyBSZWdFeHAoIFwiKF58XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyBjbGFzc05hbWUgKyBcIihcIiArIHdoaXRlc3BhY2UgKyBcInwkKVwiICkpICYmXG5cdFx0XHRcdGNsYXNzQ2FjaGUoIGNsYXNzTmFtZSwgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHBhdHRlcm4udGVzdCggdHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBlbGVtLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIgKTtcblx0XHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdFx0XHRpZiAoIHJlc3VsdCA9PSBudWxsICkge1xuXHRcdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCIhPVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggIW9wZXJhdG9yICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmVzdWx0ICs9IFwiXCI7XG5cblx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIj1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIio9XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ8PVwiID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEgKSA9PT0gY2hlY2sgKyBcIi1cIiA6XG5cdFx0XHRcdFx0ZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBhcmd1bWVudCwgZmlyc3QsIGxhc3QgKSB7XG5cdFx0XHR2YXIgc2ltcGxlID0gdHlwZS5zbGljZSggMCwgMyApICE9PSBcIm50aFwiLFxuXHRcdFx0XHRmb3J3YXJkID0gdHlwZS5zbGljZSggLTQgKSAhPT0gXCJsYXN0XCIsXG5cdFx0XHRcdG9mVHlwZSA9IHdoYXQgPT09IFwib2YtdHlwZVwiO1xuXG5cdFx0XHRyZXR1cm4gZmlyc3QgPT09IDEgJiYgbGFzdCA9PT0gMCA/XG5cblx0XHRcdFx0Ly8gU2hvcnRjdXQgZm9yIDpudGgtKihuKVxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gISFlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRcdH0gOlxuXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGNhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSwgbm9kZSwgbm9kZUluZGV4LCBzdGFydCxcblx0XHRcdFx0XHRcdGRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/IFwibmV4dFNpYmxpbmdcIiA6IFwicHJldmlvdXNTaWJsaW5nXCIsXG5cdFx0XHRcdFx0XHRwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGUsXG5cdFx0XHRcdFx0XHRuYW1lID0gb2ZUeXBlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxcblx0XHRcdFx0XHRcdHVzZUNhY2hlID0gIXhtbCAmJiAhb2ZUeXBlLFxuXHRcdFx0XHRcdFx0ZGlmZiA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIDooZmlyc3R8bGFzdHxvbmx5KS0oY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0XHRcdGlmICggc2ltcGxlICkge1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIGRpciApIHtcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gbm9kZVsgZGlyIF0pICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBvZlR5cGUgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0Ly8gUmV2ZXJzZSBkaXJlY3Rpb24gZm9yIDpvbmx5LSogKGlmIHdlIGhhdmVuJ3QgeWV0IGRvbmUgc28pXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzdGFydCA9IFsgZm9yd2FyZCA/IHBhcmVudC5maXJzdENoaWxkIDogcGFyZW50Lmxhc3RDaGlsZCBdO1xuXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxuXHRcdFx0XHRcdFx0aWYgKCBmb3J3YXJkICYmIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFNlZWsgYGVsZW1gIGZyb20gYSBwcmV2aW91c2x5LWNhY2hlZCBpbmRleFxuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0bm9kZSA9IHBhcmVudDtcblx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcblx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleCAmJiBjYWNoZVsgMiBdO1xuXHRcdFx0XHRcdFx0XHRub2RlID0gbm9kZUluZGV4ICYmIHBhcmVudC5jaGlsZE5vZGVzWyBub2RlSW5kZXggXTtcblxuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRmFsbGJhY2sgdG8gc2Vla2luZyBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcblx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFdoZW4gZm91bmQsIGNhY2hlIGluZGV4ZXMgb24gYHBhcmVudGAgYW5kIGJyZWFrXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlLm5vZGVUeXBlID09PSAxICYmICsrZGlmZiAmJiBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgbm9kZUluZGV4LCBkaWZmIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly8gVXNlIHByZXZpb3VzbHktY2FjaGVkIGVsZW1lbnQgaW5kZXggaWYgYXZhaWxhYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdGNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBbXTtcblx0XHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleDtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdC8vIHhtbCA6bnRoLWNoaWxkKC4uLilcblx0XHRcdFx0XHRcdFx0Ly8gb3IgOm50aC1sYXN0LWNoaWxkKC4uLikgb3IgOm50aCgtbGFzdCk/LW9mLXR5cGUoLi4uKVxuXHRcdFx0XHRcdFx0XHRpZiAoIGRpZmYgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdChkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9wKCkpICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCsrZGlmZiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBDYWNoZSB0aGUgaW5kZXggb2YgZWFjaCBlbmNvdW50ZXJlZCBlbGVtZW50XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQob3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEluY29ycG9yYXRlIHRoZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplXG5cdFx0XHRcdFx0XHRkaWZmIC09IGxhc3Q7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZGlmZiA9PT0gZmlyc3QgfHwgKCBkaWZmICUgZmlyc3QgPT09IDAgJiYgZGlmZiAvIGZpcnN0ID49IDAgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBwc2V1ZG8sIGFyZ3VtZW50ICkge1xuXHRcdFx0Ly8gcHNldWRvLWNsYXNzIG5hbWVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3BzZXVkby1jbGFzc2VzXG5cdFx0XHQvLyBQcmlvcml0aXplIGJ5IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gY2FzZSBjdXN0b20gcHNldWRvcyBhcmUgYWRkZWQgd2l0aCB1cHBlcmNhc2UgbGV0dGVyc1xuXHRcdFx0Ly8gUmVtZW1iZXIgdGhhdCBzZXRGaWx0ZXJzIGluaGVyaXRzIGZyb20gcHNldWRvc1xuXHRcdFx0dmFyIGFyZ3MsXG5cdFx0XHRcdGZuID0gRXhwci5wc2V1ZG9zWyBwc2V1ZG8gXSB8fCBFeHByLnNldEZpbHRlcnNbIHBzZXVkby50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIiArIHBzZXVkbyApO1xuXG5cdFx0XHQvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0byBpbmRpY2F0ZSB0aGF0XG5cdFx0XHQvLyBhcmd1bWVudHMgYXJlIG5lZWRlZCB0byBjcmVhdGUgdGhlIGZpbHRlciBmdW5jdGlvblxuXHRcdFx0Ly8ganVzdCBhcyBTaXp6bGUgZG9lc1xuXHRcdFx0aWYgKCBmblsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRyZXR1cm4gZm4oIGFyZ3VtZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEJ1dCBtYWludGFpbiBzdXBwb3J0IGZvciBvbGQgc2lnbmF0dXJlc1xuXHRcdFx0aWYgKCBmbi5sZW5ndGggPiAxICkge1xuXHRcdFx0XHRhcmdzID0gWyBwc2V1ZG8sIHBzZXVkbywgXCJcIiwgYXJndW1lbnQgXTtcblx0XHRcdFx0cmV0dXJuIEV4cHIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggcHNldWRvLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRcdFx0bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0XHRcdFx0dmFyIGlkeCxcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZCA9IGZuKCBzZWVkLCBhcmd1bWVudCApLFxuXHRcdFx0XHRcdFx0XHRpID0gbWF0Y2hlZC5sZW5ndGg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWR4ID0gaW5kZXhPZiggc2VlZCwgbWF0Y2hlZFtpXSApO1xuXHRcdFx0XHRcdFx0XHRzZWVkWyBpZHggXSA9ICEoIG1hdGNoZXNbIGlkeCBdID0gbWF0Y2hlZFtpXSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pIDpcblx0XHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRcdHJldHVybiBmbiggZWxlbSwgMCwgYXJncyApO1xuXHRcdFx0XHRcdH07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmbjtcblx0XHR9XG5cdH0sXG5cblx0cHNldWRvczoge1xuXHRcdC8vIFBvdGVudGlhbGx5IGNvbXBsZXggcHNldWRvc1xuXHRcdFwibm90XCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHQvLyBUcmltIHRoZSBzZWxlY3RvciBwYXNzZWQgdG8gY29tcGlsZVxuXHRcdFx0Ly8gdG8gYXZvaWQgdHJlYXRpbmcgbGVhZGluZyBhbmQgdHJhaWxpbmdcblx0XHRcdC8vIHNwYWNlcyBhcyBjb21iaW5hdG9yc1xuXHRcdFx0dmFyIGlucHV0ID0gW10sXG5cdFx0XHRcdHJlc3VsdHMgPSBbXSxcblx0XHRcdFx0bWF0Y2hlciA9IGNvbXBpbGUoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSApO1xuXG5cdFx0XHRyZXR1cm4gbWF0Y2hlclsgZXhwYW5kbyBdID9cblx0XHRcdFx0bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQgPSBtYXRjaGVyKCBzZWVkLCBudWxsLCB4bWwsIFtdICksXG5cdFx0XHRcdFx0XHRpID0gc2VlZC5sZW5ndGg7XG5cblx0XHRcdFx0XHQvLyBNYXRjaCBlbGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gdW5tYXRjaGVkW2ldKSApIHtcblx0XHRcdFx0XHRcdFx0c2VlZFtpXSA9ICEobWF0Y2hlc1tpXSA9IGVsZW0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSkgOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdGlucHV0WzBdID0gZWxlbTtcblx0XHRcdFx0XHRtYXRjaGVyKCBpbnB1dCwgbnVsbCwgeG1sLCByZXN1bHRzICk7XG5cdFx0XHRcdFx0Ly8gRG9uJ3Qga2VlcCB0aGUgZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdFx0XHRpbnB1dFswXSA9IG51bGw7XG5cdFx0XHRcdFx0cmV0dXJuICFyZXN1bHRzLnBvcCgpO1xuXHRcdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0XCJoYXNcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIFNpenpsZSggc2VsZWN0b3IsIGVsZW0gKS5sZW5ndGggPiAwO1xuXHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiY29udGFpbnNcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS50ZXh0Q29udGVudCB8fCBlbGVtLmlubmVyVGV4dCB8fCBnZXRUZXh0KCBlbGVtICkgKS5pbmRleE9mKCB0ZXh0ICkgPiAtMTtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHQvLyBcIldoZXRoZXIgYW4gZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3Jcblx0XHQvLyBpcyBiYXNlZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZVxuXHRcdC8vIGJlaW5nIGVxdWFsIHRvIHRoZSBpZGVudGlmaWVyIEMsXG5cdFx0Ly8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZpZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSBcIi1cIi5cblx0XHQvLyBUaGUgbWF0Y2hpbmcgb2YgQyBhZ2FpbnN0IHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWUgaXMgcGVyZm9ybWVkIGNhc2UtaW5zZW5zaXRpdmVseS5cblx0XHQvLyBUaGUgaWRlbnRpZmllciBDIGRvZXMgbm90IGhhdmUgdG8gYmUgYSB2YWxpZCBsYW5ndWFnZSBuYW1lLlwiXG5cdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNsYW5nLXBzZXVkb1xuXHRcdFwibGFuZ1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBsYW5nICkge1xuXHRcdFx0Ly8gbGFuZyB2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgaWRlbnRpZmllclxuXHRcdFx0aWYgKCAhcmlkZW50aWZpZXIudGVzdChsYW5nIHx8IFwiXCIpICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgbGFuZzogXCIgKyBsYW5nICk7XG5cdFx0XHR9XG5cdFx0XHRsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBlbGVtTGFuZztcblx0XHRcdFx0ZG8ge1xuXHRcdFx0XHRcdGlmICggKGVsZW1MYW5nID0gZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0XHRcdFx0ZWxlbS5sYW5nIDpcblx0XHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKFwieG1sOmxhbmdcIikgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoXCJsYW5nXCIpKSApIHtcblxuXHRcdFx0XHRcdFx0ZWxlbUxhbmcgPSBlbGVtTGFuZy50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW1MYW5nID09PSBsYW5nIHx8IGVsZW1MYW5nLmluZGV4T2YoIGxhbmcgKyBcIi1cIiApID09PSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSB3aGlsZSAoIChlbGVtID0gZWxlbS5wYXJlbnROb2RlKSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHQvLyBNaXNjZWxsYW5lb3VzXG5cdFx0XCJ0YXJnZXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaDtcblx0XHRcdHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoIDEgKSA9PT0gZWxlbS5pZDtcblx0XHR9LFxuXG5cdFx0XCJyb290XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY0VsZW07XG5cdFx0fSxcblxuXHRcdFwiZm9jdXNcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiAoIWRvY3VtZW50Lmhhc0ZvY3VzIHx8IGRvY3VtZW50Lmhhc0ZvY3VzKCkpICYmICEhKGVsZW0udHlwZSB8fCBlbGVtLmhyZWYgfHwgfmVsZW0udGFiSW5kZXgpO1xuXHRcdH0sXG5cblx0XHQvLyBCb29sZWFuIHByb3BlcnRpZXNcblx0XHRcImVuYWJsZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2U7XG5cdFx0fSxcblxuXHRcdFwiZGlzYWJsZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0XCJjaGVja2VkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0Ly8gSW4gQ1NTMywgOmNoZWNrZWQgc2hvdWxkIHJldHVybiBib3RoIGNoZWNrZWQgYW5kIHNlbGVjdGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIChub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmICEhZWxlbS5jaGVja2VkKSB8fCAobm9kZU5hbWUgPT09IFwib3B0aW9uXCIgJiYgISFlbGVtLnNlbGVjdGVkKTtcblx0XHR9LFxuXG5cdFx0XCJzZWxlY3RlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEFjY2Vzc2luZyB0aGlzIHByb3BlcnR5IG1ha2VzIHNlbGVjdGVkLWJ5LWRlZmF1bHRcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRlbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7XG5cdFx0fSxcblxuXHRcdC8vIENvbnRlbnRzXG5cdFx0XCJlbXB0eVwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jZW1wdHktcHNldWRvXG5cdFx0XHQvLyA6ZW1wdHkgaXMgbmVnYXRlZCBieSBlbGVtZW50ICgxKSBvciBjb250ZW50IG5vZGVzICh0ZXh0OiAzOyBjZGF0YTogNDsgZW50aXR5IHJlZjogNSksXG5cdFx0XHQvLyAgIGJ1dCBub3QgYnkgb3RoZXJzIChjb21tZW50OiA4OyBwcm9jZXNzaW5nIGluc3RydWN0aW9uOiA3OyBldGMuKVxuXHRcdFx0Ly8gbm9kZVR5cGUgPCA2IHdvcmtzIGJlY2F1c2UgYXR0cmlidXRlcyAoMikgZG8gbm90IGFwcGVhciBhcyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA8IDYgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0XCJwYXJlbnRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gIUV4cHIucHNldWRvc1tcImVtcHR5XCJdKCBlbGVtICk7XG5cdFx0fSxcblxuXHRcdC8vIEVsZW1lbnQvaW5wdXQgdHlwZXNcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaGVhZGVyLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJpbnB1dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaW5wdXRzLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJidXR0b25cIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSBcImJ1dHRvblwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCI7XG5cdFx0fSxcblxuXHRcdFwidGV4dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBhdHRyO1xuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXG5cdFx0XHRcdGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCIgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw4XG5cdFx0XHRcdC8vIE5ldyBIVE1MNSBhdHRyaWJ1dGUgdmFsdWVzIChlLmcuLCBcInNlYXJjaFwiKSBhcHBlYXIgd2l0aCBlbGVtLnR5cGUgPT09IFwidGV4dFwiXG5cdFx0XHRcdCggKGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZShcInR5cGVcIikpID09IG51bGwgfHwgYXR0ci50b0xvd2VyQ2FzZSgpID09PSBcInRleHRcIiApO1xuXHRcdH0sXG5cblx0XHQvLyBQb3NpdGlvbi1pbi1jb2xsZWN0aW9uXG5cdFx0XCJmaXJzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIFsgMCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJsYXN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIFsgbGVuZ3RoIC0gMSBdO1xuXHRcdH0pLFxuXG5cdFx0XCJlcVwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHRyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07XG5cdFx0fSksXG5cblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDA7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcIm9kZFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMTtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwibHRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyAtLWkgPj0gMDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7ICsraSA8IGxlbmd0aDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pXG5cdH1cbn07XG5cbkV4cHIucHNldWRvc1tcIm50aFwiXSA9IEV4cHIucHNldWRvc1tcImVxXCJdO1xuXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xuZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmlsZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlSW5wdXRQc2V1ZG8oIGkgKTtcbn1cbmZvciAoIGkgaW4geyBzdWJtaXQ6IHRydWUsIHJlc2V0OiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNldWRvKCBpICk7XG59XG5cbi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVyc1xuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XG5zZXRGaWx0ZXJzLnByb3RvdHlwZSA9IEV4cHIuZmlsdGVycyA9IEV4cHIucHNldWRvcztcbkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7XG5cbnRva2VuaXplID0gU2l6emxlLnRva2VuaXplID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBwYXJzZU9ubHkgKSB7XG5cdHZhciBtYXRjaGVkLCBtYXRjaCwgdG9rZW5zLCB0eXBlLFxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXG5cdFx0Y2FjaGVkID0gdG9rZW5DYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggY2FjaGVkICkge1xuXHRcdHJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7XG5cdH1cblxuXHRzb0ZhciA9IHNlbGVjdG9yO1xuXHRncm91cHMgPSBbXTtcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xuXG5cdHdoaWxlICggc29GYXIgKSB7XG5cblx0XHQvLyBDb21tYSBhbmQgZmlyc3QgcnVuXG5cdFx0aWYgKCAhbWF0Y2hlZCB8fCAobWF0Y2ggPSByY29tbWEuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRpZiAoIG1hdGNoICkge1xuXHRcdFx0XHQvLyBEb24ndCBjb25zdW1lIHRyYWlsaW5nIGNvbW1hcyBhcyB2YWxpZFxuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaFswXS5sZW5ndGggKSB8fCBzb0Zhcjtcblx0XHRcdH1cblx0XHRcdGdyb3Vwcy5wdXNoKCAodG9rZW5zID0gW10pICk7XG5cdFx0fVxuXG5cdFx0bWF0Y2hlZCA9IGZhbHNlO1xuXG5cdFx0Ly8gQ29tYmluYXRvcnNcblx0XHRpZiAoIChtYXRjaCA9IHJjb21iaW5hdG9ycy5leGVjKCBzb0ZhciApKSApIHtcblx0XHRcdG1hdGNoZWQgPSBtYXRjaC5zaGlmdCgpO1xuXHRcdFx0dG9rZW5zLnB1c2goe1xuXHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0Ly8gQ2FzdCBkZXNjZW5kYW50IGNvbWJpbmF0b3JzIHRvIHNwYWNlXG5cdFx0XHRcdHR5cGU6IG1hdGNoWzBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXG5cdFx0XHR9KTtcblx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmlsdGVyc1xuXHRcdGZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7XG5cdFx0XHRpZiAoIChtYXRjaCA9IG1hdGNoRXhwclsgdHlwZSBdLmV4ZWMoIHNvRmFyICkpICYmICghcHJlRmlsdGVyc1sgdHlwZSBdIHx8XG5cdFx0XHRcdChtYXRjaCA9IHByZUZpbHRlcnNbIHR5cGUgXSggbWF0Y2ggKSkpICkge1xuXHRcdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdFx0dG9rZW5zLnB1c2goe1xuXHRcdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXHRcdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdFx0bWF0Y2hlczogbWF0Y2hcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCAhbWF0Y2hlZCApIHtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xuXHQvLyBpZiB3ZSdyZSBqdXN0IHBhcnNpbmdcblx0Ly8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvciBvciByZXR1cm4gdG9rZW5zXG5cdHJldHVybiBwYXJzZU9ubHkgP1xuXHRcdHNvRmFyLmxlbmd0aCA6XG5cdFx0c29GYXIgP1xuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcblx0XHRcdC8vIENhY2hlIHRoZSB0b2tlbnNcblx0XHRcdHRva2VuQ2FjaGUoIHNlbGVjdG9yLCBncm91cHMgKS5zbGljZSggMCApO1xufTtcblxuZnVuY3Rpb24gdG9TZWxlY3RvciggdG9rZW5zICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRzZWxlY3RvciA9IFwiXCI7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdHNlbGVjdG9yICs9IHRva2Vuc1tpXS52YWx1ZTtcblx0fVxuXHRyZXR1cm4gc2VsZWN0b3I7XG59XG5cbmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7XG5cdHZhciBkaXIgPSBjb21iaW5hdG9yLmRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBkaXIgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8IChlbGVtWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0aWYgKCAob2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsgZGlyIF0pICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBkaXIgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkge1xuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBpID0gbWF0Y2hlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggIW1hdGNoZXJzW2ldKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWzBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzW2ldLCByZXN1bHRzICk7XG5cdH1cblx0cmV0dXJuIHJlc3VsdHM7XG59XG5cbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XG5cdHZhciBlbGVtLFxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGxlbiA9IHVubWF0Y2hlZC5sZW5ndGgsXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8IFwiKlwiLCBjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LCBbXSApLFxuXG5cdFx0XHQvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb25cblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdGVsZW1zLFxuXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoZWxlbSA9IHRlbXBbaV0pICkge1xuXHRcdFx0XHRcdG1hdGNoZXJPdXRbIHBvc3RNYXBbaV0gXSA9ICEobWF0Y2hlckluWyBwb3N0TWFwW2ldIF0gPSBlbGVtKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggc2VlZCApIHtcblx0XHRcdGlmICggcG9zdEZpbmRlciB8fCBwcmVGaWx0ZXIgKSB7XG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goIChtYXRjaGVySW5baV0gPSBlbGVtKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAobWF0Y2hlck91dCA9IFtdKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSAmJlxuXHRcdFx0XHRcdFx0KHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwW2ldKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkW3RlbXBdID0gIShyZXN1bHRzW3RlbXBdID0gZWxlbSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVtcIiBcIl0sXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxuXG5cdFx0Ly8gVGhlIGZvdW5kYXRpb25hbCBtYXRjaGVyIGVuc3VyZXMgdGhhdCBlbGVtZW50cyBhcmUgcmVhY2hhYmxlIGZyb20gdG9wLWxldmVsIGNvbnRleHQocylcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXG5cdFx0XHRcdChjaGVja0NvbnRleHQgPSBjb250ZXh0KS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAobWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1tpXS50eXBlIF0pICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIpIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zW2ldLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zW2ldLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxuXHRcdFx0XHRcdGkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLFxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXG5cdFx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxuXHRcdFx0XHRcdFx0dG9rZW5zLnNsaWNlKCAwLCBpIC0gMSApLmNvbmNhdCh7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gXCIgXCIgPyBcIipcIiA6IFwiXCIgfSlcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSB7XG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0c3VwZXJNYXRjaGVyID0gZnVuY3Rpb24oIHNlZWQsIGNvbnRleHQsIHhtbCwgcmVzdWx0cywgb3V0ZXJtb3N0ICkge1xuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXG5cdFx0XHRcdGkgPSBcIjBcIixcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxuXHRcdFx0XHRjb250ZXh0QmFja3VwID0gb3V0ZXJtb3N0Q29udGV4dCxcblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFtcIlRBR1wiXSggXCIqXCIsIG91dGVybW9zdCApLFxuXHRcdFx0XHQvLyBVc2UgaW50ZWdlciBkaXJydW5zIGlmZiB0aGlzIGlzIHRoZSBvdXRlcm1vc3QgbWF0Y2hlclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwpICkge1xuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xuXHRcdFx0XHRpZiAoIGJ5U2V0ICkge1xuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IHNldE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEodW5tYXRjaGVkW2ldIHx8IHNldE1hdGNoZWRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbaV0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApO1xuXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xuXHRcdFx0XHRpZiAoIG91dGVybW9zdCAmJiAhc2VlZCAmJiBzZXRNYXRjaGVkLmxlbmd0aCA+IDAgJiZcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcblxuXHRcdFx0XHRcdFNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xuXHRcdH07XG5cblx0cmV0dXJuIGJ5U2V0ID9cblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcblx0XHRzdXBlck1hdGNoZXI7XG59XG5cbmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdHZhciBpLFxuXHRcdHNldE1hdGNoZXJzID0gW10sXG5cdFx0ZWxlbWVudE1hdGNoZXJzID0gW10sXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggIWNhY2hlZCApIHtcblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbaV0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoc2VsZWN0b3IgPSBjb21waWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvcikgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAodG9rZW4gPSB0b2tlbnNbMF0pLnR5cGUgPT09IFwiSURcIiAmJlxuXHRcdFx0XHRzdXBwb3J0LmdldEJ5SWQgJiYgY29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdFx0XHRFeHByLnJlbGF0aXZlWyB0b2tlbnNbMV0udHlwZSBdICkge1xuXG5cdFx0XHRjb250ZXh0ID0gKCBFeHByLmZpbmRbXCJJRFwiXSggdG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKHJ1bmVzY2FwZSwgZnVuZXNjYXBlKSwgY29udGV4dCApIHx8IFtdIClbMF07XG5cdFx0XHRpZiAoICFjb250ZXh0ICkge1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0Ly8gUHJlY29tcGlsZWQgbWF0Y2hlcnMgd2lsbCBzdGlsbCB2ZXJpZnkgYW5jZXN0cnksIHNvIHN0ZXAgdXAgYSBsZXZlbFxuXHRcdFx0fSBlbHNlIGlmICggY29tcGlsZWQgKSB7XG5cdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cblx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3Iuc2xpY2UoIHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZldGNoIGEgc2VlZCBzZXQgZm9yIHJpZ2h0LXRvLWxlZnQgbWF0Y2hpbmdcblx0XHRpID0gbWF0Y2hFeHByW1wibmVlZHNDb250ZXh0XCJdLnRlc3QoIHNlbGVjdG9yICkgPyAwIDogdG9rZW5zLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRva2VuID0gdG9rZW5zW2ldO1xuXG5cdFx0XHQvLyBBYm9ydCBpZiB3ZSBoaXQgYSBjb21iaW5hdG9yXG5cdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbICh0eXBlID0gdG9rZW4udHlwZSkgXSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIChmaW5kID0gRXhwci5maW5kWyB0eXBlIF0pICkge1xuXHRcdFx0XHQvLyBTZWFyY2gsIGV4cGFuZGluZyBjb250ZXh0IGZvciBsZWFkaW5nIHNpYmxpbmcgY29tYmluYXRvcnNcblx0XHRcdFx0aWYgKCAoc2VlZCA9IGZpbmQoXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLFxuXHRcdFx0XHRcdHJzaWJsaW5nLnRlc3QoIHRva2Vuc1swXS50eXBlICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0XHRcdFx0KSkgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiBzZWVkIGlzIGVtcHR5IG9yIG5vIHRva2VucyByZW1haW4sIHdlIGNhbiByZXR1cm4gZWFybHlcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcblx0XHRcdFx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXG5cdC8vIFByb3ZpZGUgYG1hdGNoYCB0byBhdm9pZCByZXRva2VuaXphdGlvbiBpZiB3ZSBtb2RpZmllZCB0aGUgc2VsZWN0b3IgYWJvdmVcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxuXHRcdHNlZWQsXG5cdFx0Y29udGV4dCxcblx0XHQhZG9jdW1lbnRJc0hUTUwsXG5cdFx0cmVzdWx0cyxcblx0XHQhY29udGV4dCB8fCByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdCk7XG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcblxuLy8gU29ydCBzdGFiaWxpdHlcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoXCJcIikuc29ydCggc29ydE9yZGVyICkuam9pbihcIlwiKSA9PT0gZXhwYW5kbztcblxuLy8gU3VwcG9ydDogQ2hyb21lIDE0LTM1K1xuLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlmIHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblxuc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzID0gISFoYXNEdXBsaWNhdGU7XG5cbi8vIEluaXRpYWxpemUgYWdhaW5zdCB0aGUgZGVmYXVsdCBkb2N1bWVudFxuc2V0RG9jdW1lbnQoKTtcblxuLy8gU3VwcG9ydDogV2Via2l0PDUzNy4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNylcbi8vIERldGFjaGVkIG5vZGVzIGNvbmZvdW5kaW5nbHkgZm9sbG93ICplYWNoIG90aGVyKlxuc3VwcG9ydC5zb3J0RGV0YWNoZWQgPSBhc3NlcnQoZnVuY3Rpb24oIGRpdjEgKSB7XG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxuXHRyZXR1cm4gZGl2MS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSApICYgMTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBJRTw4XG4vLyBQcmV2ZW50IGF0dHJpYnV0ZS9wcm9wZXJ0eSBcImludGVycG9sYXRpb25cIlxuLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zNTM2NDI5JTI4VlMuODUlMjkuYXNweFxuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdGRpdi5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JyMnPjwvYT5cIjtcblx0cmV0dXJuIGRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZShcImhyZWZcIikgPT09IFwiI1wiIDtcbn0pICkge1xuXHRhZGRIYW5kbGUoIFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJ0eXBlXCIgPyAxIDogMiApO1xuXHRcdH1cblx0fSk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBkZWZhdWx0VmFsdWUgaW4gcGxhY2Ugb2YgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcbmlmICggIXN1cHBvcnQuYXR0cmlidXRlcyB8fCAhYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdGRpdi5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XG5cdGRpdi5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiLCBcIlwiICk7XG5cdHJldHVybiBkaXYuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBcIlwiO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ2YWx1ZVwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XG5cdHJldHVybiBkaXYuZ2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIikgPT0gbnVsbDtcbn0pICkge1xuXHRhZGRIYW5kbGUoIGJvb2xlYW5zLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHZhbDtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtWyBuYW1lIF0gPT09IHRydWUgPyBuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHRcdCh2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKSkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcblx0XHR9XG5cdH0pO1xufVxuXG5yZXR1cm4gU2l6emxlO1xuXG59KSggd2luZG93ICk7XG5cblxuXG5qUXVlcnkuZmluZCA9IFNpenpsZTtcbmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cbnZhciByc2luZ2xlVGFnID0gKCAvXjwoW1xcdy1dKylcXHMqXFwvPz4oPzo8XFwvXFwxPnwpJC8gKTtcblxuXG5cbnZhciByaXNTaW1wbGUgPSAvXi5bXjojXFxbXFwuLF0qJC87XG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdHJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDtcblx0XHR9ICk7XG5cblx0fVxuXG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDtcblx0XHR9ICk7XG5cblx0fVxuXG5cdGlmICggdHlwZW9mIHF1YWxpZmllciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRpZiAoIHJpc1NpbXBsZS50ZXN0KCBxdWFsaWZpZXIgKSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcblx0XHR9XG5cblx0XHRxdWFsaWZpZXIgPSBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzICk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gKCBqUXVlcnkuaW5BcnJheSggZWxlbSwgcXVhbGlmaWVyICkgPiAtMSApICE9PSBub3Q7XG5cdH0gKTtcbn1cblxualF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkge1xuXHR2YXIgZWxlbSA9IGVsZW1zWyAwIF07XG5cblx0aWYgKCBub3QgKSB7XG5cdFx0ZXhwciA9IFwiOm5vdChcIiArIGV4cHIgKyBcIilcIjtcblx0fVxuXG5cdHJldHVybiBlbGVtcy5sZW5ndGggPT09IDEgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSA/XG5cdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBlbGVtLCBleHByICkgPyBbIGVsZW0gXSA6IFtdIDpcblx0XHRqUXVlcnkuZmluZC5tYXRjaGVzKCBleHByLCBqUXVlcnkuZ3JlcCggZWxlbXMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7XG5cdFx0fSApICk7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZpbmQ6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgaSxcblx0XHRcdHJldCA9IFtdLFxuXHRcdFx0c2VsZiA9IHRoaXMsXG5cdFx0XHRsZW4gPSBzZWxmLmxlbmd0aDtcblxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggc2VsZlsgaSBdLCB0aGlzICkgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gKSApO1xuXHRcdH1cblxuXHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRqUXVlcnkuZmluZCggc2VsZWN0b3IsIHNlbGZbIGkgXSwgcmV0ICk7XG5cdFx0fVxuXG5cdFx0Ly8gTmVlZGVkIGJlY2F1c2UgJCggc2VsZWN0b3IsIGNvbnRleHQgKSBiZWNvbWVzICQoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApXG5cdFx0cmV0ID0gdGhpcy5wdXNoU3RhY2soIGxlbiA+IDEgPyBqUXVlcnkudW5pcXVlKCByZXQgKSA6IHJldCApO1xuXHRcdHJldC5zZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IgPyB0aGlzLnNlbGVjdG9yICsgXCIgXCIgKyBzZWxlY3RvciA6IHNlbGVjdG9yO1xuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cdGZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgZmFsc2UgKSApO1xuXHR9LFxuXHRub3Q6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIHRydWUgKSApO1xuXHR9LFxuXHRpczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiAhIXdpbm5vdyhcblx0XHRcdHRoaXMsXG5cblx0XHRcdC8vIElmIHRoaXMgaXMgYSBwb3NpdGlvbmFsL3JlbGF0aXZlIHNlbGVjdG9yLCBjaGVjayBtZW1iZXJzaGlwIGluIHRoZSByZXR1cm5lZCBzZXRcblx0XHRcdC8vIHNvICQoXCJwOmZpcnN0XCIpLmlzKFwicDpsYXN0XCIpIHdvbid0IHJldHVybiB0cnVlIGZvciBhIGRvYyB3aXRoIHR3byBcInBcIi5cblx0XHRcdHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiAmJiBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICkgP1xuXHRcdFx0XHRqUXVlcnkoIHNlbGVjdG9yICkgOlxuXHRcdFx0XHRzZWxlY3RvciB8fCBbXSxcblx0XHRcdGZhbHNlXG5cdFx0KS5sZW5ndGg7XG5cdH1cbn0gKTtcblxuXG4vLyBJbml0aWFsaXplIGEgalF1ZXJ5IG9iamVjdFxuXG5cbi8vIEEgY2VudHJhbCByZWZlcmVuY2UgdG8gdGhlIHJvb3QgalF1ZXJ5KGRvY3VtZW50KVxudmFyIHJvb3RqUXVlcnksXG5cblx0Ly8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Ncblx0Ly8gUHJpb3JpdGl6ZSAjaWQgb3ZlciA8dGFnPiB0byBhdm9pZCBYU1MgdmlhIGxvY2F0aW9uLmhhc2ggKCM5NTIxKVxuXHQvLyBTdHJpY3QgSFRNTCByZWNvZ25pdGlvbiAoIzExMjkwOiBtdXN0IHN0YXJ0IHdpdGggPClcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSopKSQvLFxuXG5cdGluaXQgPSBqUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcm9vdCApIHtcblx0XHR2YXIgbWF0Y2gsIGVsZW07XG5cblx0XHQvLyBIQU5ETEU6ICQoXCJcIiksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcblx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdC8vIGluaXQgYWNjZXB0cyBhbiBhbHRlcm5hdGUgcm9vdGpRdWVyeVxuXHRcdC8vIHNvIG1pZ3JhdGUgY2FuIHN1cHBvcnQgalF1ZXJ5LnN1YiAoZ2gtMjEwMSlcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xuXG5cdFx0Ly8gSGFuZGxlIEhUTUwgc3RyaW5nc1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0aWYgKCBzZWxlY3Rvci5jaGFyQXQoIDAgKSA9PT0gXCI8XCIgJiZcblx0XHRcdFx0c2VsZWN0b3IuY2hhckF0KCBzZWxlY3Rvci5sZW5ndGggLSAxICkgPT09IFwiPlwiICYmXG5cdFx0XHRcdHNlbGVjdG9yLmxlbmd0aCA+PSAzICkge1xuXG5cdFx0XHRcdC8vIEFzc3VtZSB0aGF0IHN0cmluZ3MgdGhhdCBzdGFydCBhbmQgZW5kIHdpdGggPD4gYXJlIEhUTUwgYW5kIHNraXAgdGhlIHJlZ2V4IGNoZWNrXG5cdFx0XHRcdG1hdGNoID0gWyBudWxsLCBzZWxlY3RvciwgbnVsbCBdO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWF0Y2ggaHRtbCBvciBtYWtlIHN1cmUgbm8gY29udGV4dCBpcyBzcGVjaWZpZWQgZm9yICNpZFxuXHRcdFx0aWYgKCBtYXRjaCAmJiAoIG1hdGNoWyAxIF0gfHwgIWNvbnRleHQgKSApIHtcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSlcblx0XHRcdFx0aWYgKCBtYXRjaFsgMSBdICkge1xuXHRcdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0IGluc3RhbmNlb2YgalF1ZXJ5ID8gY29udGV4dFsgMCBdIDogY29udGV4dDtcblxuXHRcdFx0XHRcdC8vIHNjcmlwdHMgaXMgdHJ1ZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0XHQvLyBJbnRlbnRpb25hbGx5IGxldCB0aGUgZXJyb3IgYmUgdGhyb3duIGlmIHBhcnNlSFRNTCBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcblx0XHRcdFx0XHRcdG1hdGNoWyAxIF0sXG5cdFx0XHRcdFx0XHRjb250ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50LFxuXHRcdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHRcdCkgKTtcblxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcblx0XHRcdFx0XHRpZiAoIHJzaW5nbGVUYWcudGVzdCggbWF0Y2hbIDEgXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCBtYXRjaCBpbiBjb250ZXh0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFByb3BlcnRpZXMgb2YgY29udGV4dCBhcmUgY2FsbGVkIGFzIG1ldGhvZHMgaWYgcG9zc2libGVcblx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdGhpc1sgbWF0Y2ggXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXNbIG1hdGNoIF0oIGNvbnRleHRbIG1hdGNoIF0gKTtcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgb3RoZXJ3aXNlIHNldCBhcyBhdHRyaWJ1dGVzXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5hdHRyKCBtYXRjaCwgY29udGV4dFsgbWF0Y2ggXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKCNpZClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIG1hdGNoWyAyIF0gKTtcblxuXHRcdFx0XHRcdC8vIENoZWNrIHBhcmVudE5vZGUgdG8gY2F0Y2ggd2hlbiBCbGFja2JlcnJ5IDQuNiByZXR1cm5zXG5cdFx0XHRcdFx0Ly8gbm9kZXMgdGhhdCBhcmUgbm8gbG9uZ2VyIGluIHRoZSBkb2N1bWVudCAjNjk2M1xuXHRcdFx0XHRcdGlmICggZWxlbSAmJiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cblx0XHRcdFx0XHRcdC8vIEhhbmRsZSB0aGUgY2FzZSB3aGVyZSBJRSBhbmQgT3BlcmEgcmV0dXJuIGl0ZW1zXG5cdFx0XHRcdFx0XHQvLyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCAhPT0gbWF0Y2hbIDIgXSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJvb3RqUXVlcnkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB3ZSBpbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpcy5sZW5ndGggPSAxO1xuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR0aGlzLmNvbnRleHQgPSBkb2N1bWVudDtcblx0XHRcdFx0XHR0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xuXHRcdFx0XHRyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxlY3RvciApO1xuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcblx0XHRcdC8vICh3aGljaCBpcyBqdXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXG5cdFx0fSBlbHNlIGlmICggc2VsZWN0b3Iubm9kZVR5cGUgKSB7XG5cdFx0XHR0aGlzLmNvbnRleHQgPSB0aGlzWyAwIF0gPSBzZWxlY3Rvcjtcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxuXHRcdC8vIFNob3J0Y3V0IGZvciBkb2N1bWVudCByZWFkeVxuXHRcdH0gZWxzZSBpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBzZWxlY3RvciApICkge1xuXHRcdFx0cmV0dXJuIHR5cGVvZiByb290LnJlYWR5ICE9PSBcInVuZGVmaW5lZFwiID9cblx0XHRcdFx0cm9vdC5yZWFkeSggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRzZWxlY3RvciggalF1ZXJ5ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3Rvci5zZWxlY3RvciAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dGhpcy5zZWxlY3RvciA9IHNlbGVjdG9yLnNlbGVjdG9yO1xuXHRcdFx0dGhpcy5jb250ZXh0ID0gc2VsZWN0b3IuY29udGV4dDtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5Lm1ha2VBcnJheSggc2VsZWN0b3IsIHRoaXMgKTtcblx0fTtcblxuLy8gR2l2ZSB0aGUgaW5pdCBmdW5jdGlvbiB0aGUgalF1ZXJ5IHByb3RvdHlwZSBmb3IgbGF0ZXIgaW5zdGFudGlhdGlvblxuaW5pdC5wcm90b3R5cGUgPSBqUXVlcnkuZm47XG5cbi8vIEluaXRpYWxpemUgY2VudHJhbCByZWZlcmVuY2VcbnJvb3RqUXVlcnkgPSBqUXVlcnkoIGRvY3VtZW50ICk7XG5cblxudmFyIHJwYXJlbnRzcHJldiA9IC9eKD86cGFyZW50c3xwcmV2KD86VW50aWx8QWxsKSkvLFxuXG5cdC8vIG1ldGhvZHMgZ3VhcmFudGVlZCB0byBwcm9kdWNlIGEgdW5pcXVlIHNldCB3aGVuIHN0YXJ0aW5nIGZyb20gYSB1bmlxdWUgc2V0XG5cdGd1YXJhbnRlZWRVbmlxdWUgPSB7XG5cdFx0Y2hpbGRyZW46IHRydWUsXG5cdFx0Y29udGVudHM6IHRydWUsXG5cdFx0bmV4dDogdHJ1ZSxcblx0XHRwcmV2OiB0cnVlXG5cdH07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aGFzOiBmdW5jdGlvbiggdGFyZ2V0ICkge1xuXHRcdHZhciBpLFxuXHRcdFx0dGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksXG5cdFx0XHRsZW4gPSB0YXJnZXRzLmxlbmd0aDtcblxuXHRcdHJldHVybiB0aGlzLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Y2xvc2VzdDogZnVuY3Rpb24oIHNlbGVjdG9ycywgY29udGV4dCApIHtcblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRtYXRjaGVkID0gW10sXG5cdFx0XHRwb3MgPSBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApIHx8IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRqUXVlcnkoIHNlbGVjdG9ycywgY29udGV4dCB8fCB0aGlzLmNvbnRleHQgKSA6XG5cdFx0XHRcdDA7XG5cblx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXG5cdFx0XHRcdC8vIEFsd2F5cyBza2lwIGRvY3VtZW50IGZyYWdtZW50c1xuXHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA8IDExICYmICggcG9zID9cblx0XHRcdFx0XHRwb3MuaW5kZXgoIGN1ciApID4gLTEgOlxuXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcGFzcyBub24tZWxlbWVudHMgdG8gU2l6emxlXG5cdFx0XHRcdFx0Y3VyLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGN1ciwgc2VsZWN0b3JzICkgKSApIHtcblxuXHRcdFx0XHRcdG1hdGNoZWQucHVzaCggY3VyICk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQubGVuZ3RoID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICkgOiBtYXRjaGVkICk7XG5cdH0sXG5cblx0Ly8gRGV0ZXJtaW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpblxuXHQvLyB0aGUgbWF0Y2hlZCBzZXQgb2YgZWxlbWVudHNcblx0aW5kZXg6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gTm8gYXJndW1lbnQsIHJldHVybiBpbmRleCBpbiBwYXJlbnRcblx0XHRpZiAoICFlbGVtICkge1xuXHRcdFx0cmV0dXJuICggdGhpc1sgMCBdICYmIHRoaXNbIDAgXS5wYXJlbnROb2RlICkgPyB0aGlzLmZpcnN0KCkucHJldkFsbCgpLmxlbmd0aCA6IC0xO1xuXHRcdH1cblxuXHRcdC8vIGluZGV4IGluIHNlbGVjdG9yXG5cdFx0aWYgKCB0eXBlb2YgZWxlbSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuaW5BcnJheSggdGhpc1sgMCBdLCBqUXVlcnkoIGVsZW0gKSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBqUXVlcnkuaW5BcnJheShcblxuXHRcdFx0Ly8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkXG5cdFx0XHRlbGVtLmpxdWVyeSA/IGVsZW1bIDAgXSA6IGVsZW0sIHRoaXMgKTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0ZG8ge1xuXHRcdGN1ciA9IGN1clsgZGlyIF07XG5cdH0gd2hpbGUgKCBjdXIgJiYgY3VyLm5vZGVUeXBlICE9PSAxICk7XG5cblx0cmV0dXJuIGN1cjtcbn1cblxualF1ZXJ5LmVhY2goIHtcblx0cGFyZW50OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdHJldHVybiBwYXJlbnQgJiYgcGFyZW50Lm5vZGVUeXBlICE9PSAxMSA/IHBhcmVudCA6IG51bGw7XG5cdH0sXG5cdHBhcmVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiICk7XG5cdH0sXG5cdHBhcmVudHNVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiLCB1bnRpbCApO1xuXHR9LFxuXHRuZXh0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXY6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiwgdW50aWwgKTtcblx0fSxcblx0cHJldlVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiwgdW50aWwgKTtcblx0fSxcblx0c2libGluZ3M6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggKCBlbGVtLnBhcmVudE5vZGUgfHwge30gKS5maXJzdENoaWxkLCBlbGVtICk7XG5cdH0sXG5cdGNoaWxkcmVuOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZ3MoIGVsZW0uZmlyc3RDaGlsZCApO1xuXHR9LFxuXHRjb250ZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJpZnJhbWVcIiApID9cblx0XHRcdGVsZW0uY29udGVudERvY3VtZW50IHx8IGVsZW0uY29udGVudFdpbmRvdy5kb2N1bWVudCA6XG5cdFx0XHRqUXVlcnkubWVyZ2UoIFtdLCBlbGVtLmNoaWxkTm9kZXMgKTtcblx0fVxufSwgZnVuY3Rpb24oIG5hbWUsIGZuICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCB1bnRpbCwgc2VsZWN0b3IgKSB7XG5cdFx0dmFyIHJldCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIHJldCApO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5sZW5ndGggPiAxICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgZHVwbGljYXRlc1xuXHRcdFx0aWYgKCAhZ3VhcmFudGVlZFVuaXF1ZVsgbmFtZSBdICkge1xuXHRcdFx0XHRyZXQgPSBqUXVlcnkudW5pcXVlU29ydCggcmV0ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdHJldCA9IHJldC5yZXZlcnNlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCByZXQgKTtcblx0fTtcbn0gKTtcbnZhciBybm90d2hpdGUgPSAoIC9cXFMrL2cgKTtcblxuXG5cbi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRlZCBvcHRpb25zIGludG8gT2JqZWN0LWZvcm1hdHRlZCBvbmVzXG5mdW5jdGlvbiBjcmVhdGVPcHRpb25zKCBvcHRpb25zICkge1xuXHR2YXIgb2JqZWN0ID0ge307XG5cdGpRdWVyeS5lYWNoKCBvcHRpb25zLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IG9wdGlvbnMub25jZTtcblxuXHRcdFx0Ly8gRXhlY3V0ZSBjYWxsYmFja3MgZm9yIGFsbCBwZW5kaW5nIGV4ZWN1dGlvbnMsXG5cdFx0XHQvLyByZXNwZWN0aW5nIGZpcmluZ0luZGV4IG92ZXJyaWRlcyBhbmQgcnVudGltZSBjaGFuZ2VzXG5cdFx0XHRmaXJlZCA9IGZpcmluZyA9IHRydWU7XG5cdFx0XHRmb3IgKCA7IHF1ZXVlLmxlbmd0aDsgZmlyaW5nSW5kZXggPSAtMSApIHtcblx0XHRcdFx0bWVtb3J5ID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdFx0d2hpbGUgKCArK2ZpcmluZ0luZGV4IDwgbGlzdC5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHQvLyBSdW4gY2FsbGJhY2sgYW5kIGNoZWNrIGZvciBlYXJseSB0ZXJtaW5hdGlvblxuXHRcdFx0XHRcdGlmICggbGlzdFsgZmlyaW5nSW5kZXggXS5hcHBseSggbWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICkgPT09IGZhbHNlICYmXG5cdFx0XHRcdFx0XHRvcHRpb25zLnN0b3BPbkZhbHNlICkge1xuXG5cdFx0XHRcdFx0XHQvLyBKdW1wIHRvIGVuZCBhbmQgZm9yZ2V0IHRoZSBkYXRhIHNvIC5hZGQgZG9lc24ndCByZS1maXJlXG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoO1xuXHRcdFx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvcmdldCB0aGUgZGF0YSBpZiB3ZSdyZSBkb25lIHdpdGggaXRcblx0XHRcdGlmICggIW9wdGlvbnMubWVtb3J5ICkge1xuXHRcdFx0XHRtZW1vcnkgPSBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0ZmlyaW5nID0gZmFsc2U7XG5cblx0XHRcdC8vIENsZWFuIHVwIGlmIHdlJ3JlIGRvbmUgZmlyaW5nIGZvciBnb29kXG5cdFx0XHRpZiAoIGxvY2tlZCApIHtcblxuXHRcdFx0XHQvLyBLZWVwIGFuIGVtcHR5IGxpc3QgaWYgd2UgaGF2ZSBkYXRhIGZvciBmdXR1cmUgYWRkIGNhbGxzXG5cdFx0XHRcdGlmICggbWVtb3J5ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIHRoaXMgb2JqZWN0IGlzIHNwZW50XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bGlzdCA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gQWN0dWFsIENhbGxiYWNrcyBvYmplY3Rcblx0XHRzZWxmID0ge1xuXG5cdFx0XHQvLyBBZGQgYSBjYWxsYmFjayBvciBhIGNvbGxlY3Rpb24gb2YgY2FsbGJhY2tzIHRvIHRoZSBsaXN0XG5cdFx0XHRhZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiB3ZSBoYXZlIG1lbW9yeSBmcm9tIGEgcGFzdCBydW4sIHdlIHNob3VsZCBmaXJlIGFmdGVyIGFkZGluZ1xuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoIC0gMTtcblx0XHRcdFx0XHRcdHF1ZXVlLnB1c2goIG1lbW9yeSApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdCggZnVuY3Rpb24gYWRkKCBhcmdzICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3MsIGZ1bmN0aW9uKCBfLCBhcmcgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgalF1ZXJ5LnR5cGUoIGFyZyApICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gSW5zcGVjdCByZWN1cnNpdmVseVxuXHRcdFx0XHRcdFx0XHRcdGFkZCggYXJnICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHR9ICkoIGFyZ3VtZW50cyApO1xuXG5cdFx0XHRcdFx0aWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBSZW1vdmUgYSBjYWxsYmFjayBmcm9tIHRoZSBsaXN0XG5cdFx0XHRyZW1vdmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZWFjaCggYXJndW1lbnRzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdHZhciBpbmRleDtcblx0XHRcdFx0XHR3aGlsZSAoICggaW5kZXggPSBqUXVlcnkuaW5BcnJheSggYXJnLCBsaXN0LCBpbmRleCApICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdGxpc3Quc3BsaWNlKCBpbmRleCwgMSApO1xuXG5cdFx0XHRcdFx0XHQvLyBIYW5kbGUgZmlyaW5nIGluZGV4ZXNcblx0XHRcdFx0XHRcdGlmICggaW5kZXggPD0gZmlyaW5nSW5kZXggKSB7XG5cdFx0XHRcdFx0XHRcdGZpcmluZ0luZGV4LS07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2hlY2sgaWYgYSBnaXZlbiBjYWxsYmFjayBpcyBpbiB0aGUgbGlzdC5cblx0XHRcdC8vIElmIG5vIGFyZ3VtZW50IGlzIGdpdmVuLCByZXR1cm4gd2hldGhlciBvciBub3QgbGlzdCBoYXMgY2FsbGJhY2tzIGF0dGFjaGVkLlxuXHRcdFx0aGFzOiBmdW5jdGlvbiggZm4gKSB7XG5cdFx0XHRcdHJldHVybiBmbiA/XG5cdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGZuLCBsaXN0ICkgPiAtMSA6XG5cdFx0XHRcdFx0bGlzdC5sZW5ndGggPiAwO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdFxuXHRcdFx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cdFx0XHRcdFx0bGlzdCA9IFtdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZSBhbmQgLmFkZFxuXHRcdFx0Ly8gQWJvcnQgYW55IGN1cnJlbnQvcGVuZGluZyBleGVjdXRpb25zXG5cdFx0XHQvLyBDbGVhciBhbGwgY2FsbGJhY2tzIGFuZCB2YWx1ZXNcblx0XHRcdGRpc2FibGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXHRcdFx0ZGlzYWJsZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gIWxpc3Q7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBEaXNhYmxlIC5maXJlXG5cdFx0XHQvLyBBbHNvIGRpc2FibGUgLmFkZCB1bmxlc3Mgd2UgaGF2ZSBtZW1vcnkgKHNpbmNlIGl0IHdvdWxkIGhhdmUgbm8gZWZmZWN0KVxuXHRcdFx0Ly8gQWJvcnQgYW55IHBlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0bG9jazogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGxvY2tlZCA9IHRydWU7XG5cdFx0XHRcdGlmICggIW1lbW9yeSApIHtcblx0XHRcdFx0XHRzZWxmLmRpc2FibGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBsaXN0ZW5lciBsaXN0LCBmaW5hbCBzdGF0ZVxuXHRcdFx0XHRbIFwicmVzb2x2ZVwiLCBcImRvbmVcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIFwicmVzb2x2ZWRcIiBdLFxuXHRcdFx0XHRbIFwicmVqZWN0XCIsIFwiZmFpbFwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSwgXCJyZWplY3RlZFwiIF0sXG5cdFx0XHRcdFsgXCJub3RpZnlcIiwgXCJwcm9ncmVzc1wiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICkgXVxuXHRcdFx0XSxcblx0XHRcdHN0YXRlID0gXCJwZW5kaW5nXCIsXG5cdFx0XHRwcm9taXNlID0ge1xuXHRcdFx0XHRzdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHN0YXRlO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRhbHdheXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGRlZmVycmVkLmRvbmUoIGFyZ3VtZW50cyApLmZhaWwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblx0XHRcdFx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCBmdW5jdGlvbiggbmV3RGVmZXIgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkuZWFjaCggdHVwbGVzLCBmdW5jdGlvbiggaSwgdHVwbGUgKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBmbnNbIGkgXSApICYmIGZuc1sgaSBdO1xuXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkWyBkb25lIHwgZmFpbCB8IHByb2dyZXNzIF0gZm9yIGZvcndhcmRpbmcgYWN0aW9ucyB0byBuZXdEZWZlclxuXHRcdFx0XHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDEgXSBdKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQgPSBmbiAmJiBmbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCAmJiBqUXVlcnkuaXNGdW5jdGlvbiggcmV0dXJuZWQucHJvbWlzZSApICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQucHJvbWlzZSgpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5wcm9ncmVzcyggbmV3RGVmZXIubm90aWZ5IClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmRvbmUoIG5ld0RlZmVyLnJlc29sdmUgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZmFpbCggbmV3RGVmZXIucmVqZWN0ICk7XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXShcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcyA9PT0gcHJvbWlzZSA/IG5ld0RlZmVyLnByb21pc2UoKSA6IHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZuID8gWyByZXR1cm5lZCBdIDogYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWRcblx0XHRcdFx0Ly8gSWYgb2JqIGlzIHByb3ZpZGVkLCB0aGUgcHJvbWlzZSBhc3BlY3QgaXMgYWRkZWQgdG8gdGhlIG9iamVjdFxuXHRcdFx0XHRwcm9taXNlOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdFx0XHRcdHJldHVybiBvYmogIT0gbnVsbCA/IGpRdWVyeS5leHRlbmQoIG9iaiwgcHJvbWlzZSApIDogcHJvbWlzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlZmVycmVkID0ge307XG5cblx0XHQvLyBLZWVwIHBpcGUgZm9yIGJhY2stY29tcGF0XG5cdFx0cHJvbWlzZS5waXBlID0gcHJvbWlzZS50aGVuO1xuXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xuXHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblx0XHRcdHZhciBsaXN0ID0gdHVwbGVbIDIgXSxcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgMyBdO1xuXG5cdFx0XHQvLyBwcm9taXNlWyBkb25lIHwgZmFpbCB8IHByb2dyZXNzIF0gPSBsaXN0LmFkZFxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0Ly8gc3RhdGUgPSBbIHJlc29sdmVkIHwgcmVqZWN0ZWQgXVxuXHRcdFx0XHRcdHN0YXRlID0gc3RhdGVTdHJpbmc7XG5cblx0XHRcdFx0Ly8gWyByZWplY3RfbGlzdCB8IHJlc29sdmVfbGlzdCBdLmRpc2FibGU7IHByb2dyZXNzX2xpc3QubG9ja1xuXHRcdFx0XHR9LCB0dXBsZXNbIGkgXiAxIF1bIDIgXS5kaXNhYmxlLCB0dXBsZXNbIDIgXVsgMiBdLmxvY2sgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gZGVmZXJyZWRbIHJlc29sdmUgfCByZWplY3QgfCBub3RpZnkgXVxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gcHJvbWlzZSA6IHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH07XG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xuXHRcdH0gKTtcblxuXHRcdC8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJvbWlzZVxuXHRcdHByb21pc2UucHJvbWlzZSggZGVmZXJyZWQgKTtcblxuXHRcdC8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnlcblx0XHRpZiAoIGZ1bmMgKSB7XG5cdFx0XHRmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApO1xuXHRcdH1cblxuXHRcdC8vIEFsbCBkb25lIVxuXHRcdHJldHVybiBkZWZlcnJlZDtcblx0fSxcblxuXHQvLyBEZWZlcnJlZCBoZWxwZXJcblx0d2hlbjogZnVuY3Rpb24oIHN1Ym9yZGluYXRlIC8qICwgLi4uLCBzdWJvcmRpbmF0ZU4gKi8gKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxuXHRcdFx0bGVuZ3RoID0gcmVzb2x2ZVZhbHVlcy5sZW5ndGgsXG5cblx0XHRcdC8vIHRoZSBjb3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXNcblx0XHRcdHJlbWFpbmluZyA9IGxlbmd0aCAhPT0gMSB8fFxuXHRcdFx0XHQoIHN1Ym9yZGluYXRlICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBzdWJvcmRpbmF0ZS5wcm9taXNlICkgKSA/IGxlbmd0aCA6IDAsXG5cblx0XHRcdC8vIHRoZSBtYXN0ZXIgRGVmZXJyZWQuXG5cdFx0XHQvLyBJZiByZXNvbHZlVmFsdWVzIGNvbnNpc3Qgb2Ygb25seSBhIHNpbmdsZSBEZWZlcnJlZCwganVzdCB1c2UgdGhhdC5cblx0XHRcdGRlZmVycmVkID0gcmVtYWluaW5nID09PSAxID8gc3Vib3JkaW5hdGUgOiBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gVXBkYXRlIGZ1bmN0aW9uIGZvciBib3RoIHJlc29sdmUgYW5kIHByb2dyZXNzIHZhbHVlc1xuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpLCBjb250ZXh0cywgdmFsdWVzICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdGNvbnRleHRzWyBpIF0gPSB0aGlzO1xuXHRcdFx0XHRcdHZhbHVlc1sgaSBdID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSA6IHZhbHVlO1xuXHRcdFx0XHRcdGlmICggdmFsdWVzID09PSBwcm9ncmVzc1ZhbHVlcyApIHtcblx0XHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGNvbnRleHRzLCB2YWx1ZXMgKTtcblxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoICEoIC0tcmVtYWluaW5nICkgKSB7XG5cdFx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY29udGV4dHMsIHZhbHVlcyApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblx0XHRcdH0sXG5cblx0XHRcdHByb2dyZXNzVmFsdWVzLCBwcm9ncmVzc0NvbnRleHRzLCByZXNvbHZlQ29udGV4dHM7XG5cblx0XHQvLyBhZGQgbGlzdGVuZXJzIHRvIERlZmVycmVkIHN1Ym9yZGluYXRlczsgdHJlYXQgb3RoZXJzIGFzIHJlc29sdmVkXG5cdFx0aWYgKCBsZW5ndGggPiAxICkge1xuXHRcdFx0cHJvZ3Jlc3NWYWx1ZXMgPSBuZXcgQXJyYXkoIGxlbmd0aCApO1xuXHRcdFx0cHJvZ3Jlc3NDb250ZXh0cyA9IG5ldyBBcnJheSggbGVuZ3RoICk7XG5cdFx0XHRyZXNvbHZlQ29udGV4dHMgPSBuZXcgQXJyYXkoIGxlbmd0aCApO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0ucHJvbWlzZSApICkge1xuXHRcdFx0XHRcdHJlc29sdmVWYWx1ZXNbIGkgXS5wcm9taXNlKClcblx0XHRcdFx0XHRcdC5wcm9ncmVzcyggdXBkYXRlRnVuYyggaSwgcHJvZ3Jlc3NDb250ZXh0cywgcHJvZ3Jlc3NWYWx1ZXMgKSApXG5cdFx0XHRcdFx0XHQuZG9uZSggdXBkYXRlRnVuYyggaSwgcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICkgKVxuXHRcdFx0XHRcdFx0LmZhaWwoIGRlZmVycmVkLnJlamVjdCApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC0tcmVtYWluaW5nO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gaWYgd2UncmUgbm90IHdhaXRpbmcgb24gYW55dGhpbmcsIHJlc29sdmUgdGhlIG1hc3RlclxuXHRcdGlmICggIXJlbWFpbmluZyApIHtcblx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCByZXNvbHZlQ29udGV4dHMsIHJlc29sdmVWYWx1ZXMgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZSgpO1xuXHR9XG59ICk7XG5cblxuLy8gVGhlIGRlZmVycmVkIHVzZWQgb24gRE9NIHJlYWR5XG52YXIgcmVhZHlMaXN0O1xuXG5qUXVlcnkuZm4ucmVhZHkgPSBmdW5jdGlvbiggZm4gKSB7XG5cblx0Ly8gQWRkIHRoZSBjYWxsYmFja1xuXHRqUXVlcnkucmVhZHkucHJvbWlzZSgpLmRvbmUoIGZuICk7XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cblx0aXNSZWFkeTogZmFsc2UsXG5cblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxuXHQvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSAjNjc4MVxuXHRyZWFkeVdhaXQ6IDEsXG5cblx0Ly8gSG9sZCAob3IgcmVsZWFzZSkgdGhlIHJlYWR5IGV2ZW50XG5cdGhvbGRSZWFkeTogZnVuY3Rpb24oIGhvbGQgKSB7XG5cdFx0aWYgKCBob2xkICkge1xuXHRcdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqUXVlcnkucmVhZHkoIHRydWUgKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XG5cblx0XHQvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBob2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5XG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XG5cdFx0alF1ZXJ5LmlzUmVhZHkgPSB0cnVlO1xuXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcblx0XHRpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xuXG5cdFx0Ly8gVHJpZ2dlciBhbnkgYm91bmQgcmVhZHkgZXZlbnRzXG5cdFx0aWYgKCBqUXVlcnkuZm4udHJpZ2dlckhhbmRsZXIgKSB7XG5cdFx0XHRqUXVlcnkoIGRvY3VtZW50ICkudHJpZ2dlckhhbmRsZXIoIFwicmVhZHlcIiApO1xuXHRcdFx0alF1ZXJ5KCBkb2N1bWVudCApLm9mZiggXCJyZWFkeVwiICk7XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8qKlxuICogQ2xlYW4tdXAgbWV0aG9kIGZvciBkb20gcmVhZHkgZXZlbnRzXG4gKi9cbmZ1bmN0aW9uIGRldGFjaCgpIHtcblx0aWYgKCBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xuXG5cdH0gZWxzZSB7XG5cdFx0ZG9jdW1lbnQuZGV0YWNoRXZlbnQoIFwib25yZWFkeXN0YXRlY2hhbmdlXCIsIGNvbXBsZXRlZCApO1xuXHRcdHdpbmRvdy5kZXRhY2hFdmVudCggXCJvbmxvYWRcIiwgY29tcGxldGVkICk7XG5cdH1cbn1cblxuLyoqXG4gKiBUaGUgcmVhZHkgZXZlbnQgaGFuZGxlciBhbmQgc2VsZiBjbGVhbnVwIG1ldGhvZFxuICovXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cblx0Ly8gcmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIGlzIGdvb2QgZW5vdWdoIGZvciB1cyB0byBjYWxsIHRoZSBkb20gcmVhZHkgaW4gb2xkSUVcblx0aWYgKCBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyIHx8XG5cdFx0d2luZG93LmV2ZW50LnR5cGUgPT09IFwibG9hZFwiIHx8XG5cdFx0ZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiICkge1xuXG5cdFx0ZGV0YWNoKCk7XG5cdFx0alF1ZXJ5LnJlYWR5KCk7XG5cdH1cbn1cblxualF1ZXJ5LnJlYWR5LnByb21pc2UgPSBmdW5jdGlvbiggb2JqICkge1xuXHRpZiAoICFyZWFkeUxpc3QgKSB7XG5cblx0XHRyZWFkeUxpc3QgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxuXHRcdC8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXG5cdFx0Ly8gYWZ0ZXIgdGhlIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuXG5cdFx0Ly8gd2Ugb25jZSB0cmllZCB0byB1c2UgcmVhZHlTdGF0ZSBcImludGVyYWN0aXZlXCIgaGVyZSxcblx0XHQvLyBidXQgaXQgY2F1c2VkIGlzc3VlcyBsaWtlIHRoZSBvbmVcblx0XHQvLyBkaXNjb3ZlcmVkIGJ5IENocmlzUyBoZXJlOlxuXHRcdC8vIGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEyMjgyI2NvbW1lbnQ6MTVcblx0XHRpZiAoIGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIiApIHtcblxuXHRcdFx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdFx0XHR3aW5kb3cuc2V0VGltZW91dCggalF1ZXJ5LnJlYWR5ICk7XG5cblx0XHQvLyBTdGFuZGFyZHMtYmFzZWQgYnJvd3NlcnMgc3VwcG9ydCBET01Db250ZW50TG9hZGVkXG5cdFx0fSBlbHNlIGlmICggZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciApIHtcblxuXHRcdFx0Ly8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFja1xuXHRcdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCApO1xuXG5cdFx0XHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHRcdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblxuXHRcdC8vIElmIElFIGV2ZW50IG1vZGVsIGlzIHVzZWRcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBFbnN1cmUgZmlyaW5nIGJlZm9yZSBvbmxvYWQsIG1heWJlIGxhdGUgYnV0IHNhZmUgYWxzbyBmb3IgaWZyYW1lc1xuXHRcdFx0ZG9jdW1lbnQuYXR0YWNoRXZlbnQoIFwib25yZWFkeXN0YXRlY2hhbmdlXCIsIGNvbXBsZXRlZCApO1xuXG5cdFx0XHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHRcdFx0d2luZG93LmF0dGFjaEV2ZW50KCBcIm9ubG9hZFwiLCBjb21wbGV0ZWQgKTtcblxuXHRcdFx0Ly8gSWYgSUUgYW5kIG5vdCBhIGZyYW1lXG5cdFx0XHQvLyBjb250aW51YWxseSBjaGVjayB0byBzZWUgaWYgdGhlIGRvY3VtZW50IGlzIHJlYWR5XG5cdFx0XHR2YXIgdG9wID0gZmFsc2U7XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdHRvcCA9IHdpbmRvdy5mcmFtZUVsZW1lbnQgPT0gbnVsbCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdFx0XHR9IGNhdGNoICggZSApIHt9XG5cblx0XHRcdGlmICggdG9wICYmIHRvcC5kb1Njcm9sbCApIHtcblx0XHRcdFx0KCBmdW5jdGlvbiBkb1Njcm9sbENoZWNrKCkge1xuXHRcdFx0XHRcdGlmICggIWpRdWVyeS5pc1JlYWR5ICkge1xuXG5cdFx0XHRcdFx0XHR0cnkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgdHJpY2sgYnkgRGllZ28gUGVyaW5pXG5cdFx0XHRcdFx0XHRcdC8vIGh0dHA6Ly9qYXZhc2NyaXB0Lm53Ym94LmNvbS9JRUNvbnRlbnRMb2FkZWQvXG5cdFx0XHRcdFx0XHRcdHRvcC5kb1Njcm9sbCggXCJsZWZ0XCIgKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gd2luZG93LnNldFRpbWVvdXQoIGRvU2Nyb2xsQ2hlY2ssIDUwICk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIGRldGFjaCBhbGwgZG9tIHJlYWR5IGV2ZW50c1xuXHRcdFx0XHRcdFx0ZGV0YWNoKCk7XG5cblx0XHRcdFx0XHRcdC8vIGFuZCBleGVjdXRlIGFueSB3YWl0aW5nIGZ1bmN0aW9uc1xuXHRcdFx0XHRcdFx0alF1ZXJ5LnJlYWR5KCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICkoKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIHJlYWR5TGlzdC5wcm9taXNlKCBvYmogKTtcbn07XG5cbi8vIEtpY2sgb2ZmIHRoZSBET00gcmVhZHkgY2hlY2sgZXZlbiBpZiB0aGUgdXNlciBkb2VzIG5vdFxualF1ZXJ5LnJlYWR5LnByb21pc2UoKTtcblxuXG5cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gSXRlcmF0aW9uIG92ZXIgb2JqZWN0J3MgaW5oZXJpdGVkIHByb3BlcnRpZXMgYmVmb3JlIGl0cyBvd25cbnZhciBpO1xuZm9yICggaSBpbiBqUXVlcnkoIHN1cHBvcnQgKSApIHtcblx0YnJlYWs7XG59XG5zdXBwb3J0Lm93bkZpcnN0ID0gaSA9PT0gXCIwXCI7XG5cbi8vIE5vdGU6IG1vc3Qgc3VwcG9ydCB0ZXN0cyBhcmUgZGVmaW5lZCBpbiB0aGVpciByZXNwZWN0aXZlIG1vZHVsZXMuXG4vLyBmYWxzZSB1bnRpbCB0aGUgdGVzdCBpcyBydW5cbnN1cHBvcnQuaW5saW5lQmxvY2tOZWVkc0xheW91dCA9IGZhbHNlO1xuXG4vLyBFeGVjdXRlIEFTQVAgaW4gY2FzZSB3ZSBuZWVkIHRvIHNldCBib2R5LnN0eWxlLnpvb21cbmpRdWVyeSggZnVuY3Rpb24oKSB7XG5cblx0Ly8gTWluaWZpZWQ6IHZhciBhLGIsYyxkXG5cdHZhciB2YWwsIGRpdiwgYm9keSwgY29udGFpbmVyO1xuXG5cdGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJib2R5XCIgKVsgMCBdO1xuXHRpZiAoICFib2R5IHx8ICFib2R5LnN0eWxlICkge1xuXG5cdFx0Ly8gUmV0dXJuIGZvciBmcmFtZXNldCBkb2NzIHRoYXQgZG9uJ3QgaGF2ZSBhIGJvZHlcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBTZXR1cFxuXHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcblx0Y29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2JvcmRlcjowO3dpZHRoOjA7aGVpZ2h0OjA7dG9wOjA7bGVmdDotOTk5OXB4XCI7XG5cdGJvZHkuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApLmFwcGVuZENoaWxkKCBkaXYgKTtcblxuXHRpZiAoIHR5cGVvZiBkaXYuc3R5bGUuem9vbSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFPDhcblx0XHQvLyBDaGVjayBpZiBuYXRpdmVseSBibG9jay1sZXZlbCBlbGVtZW50cyBhY3QgbGlrZSBpbmxpbmUtYmxvY2tcblx0XHQvLyBlbGVtZW50cyB3aGVuIHNldHRpbmcgdGhlaXIgZGlzcGxheSB0byAnaW5saW5lJyBhbmQgZ2l2aW5nXG5cdFx0Ly8gdGhlbSBsYXlvdXRcblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9IFwiZGlzcGxheTppbmxpbmU7bWFyZ2luOjA7Ym9yZGVyOjA7cGFkZGluZzoxcHg7d2lkdGg6MXB4O3pvb206MVwiO1xuXG5cdFx0c3VwcG9ydC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0ID0gdmFsID0gZGl2Lm9mZnNldFdpZHRoID09PSAzO1xuXHRcdGlmICggdmFsICkge1xuXG5cdFx0XHQvLyBQcmV2ZW50IElFIDYgZnJvbSBhZmZlY3RpbmcgbGF5b3V0IGZvciBwb3NpdGlvbmVkIGVsZW1lbnRzICMxMTA0OFxuXHRcdFx0Ly8gUHJldmVudCBJRSBmcm9tIHNocmlua2luZyB0aGUgYm9keSBpbiBJRSA3IG1vZGUgIzEyODY5XG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw4XG5cdFx0XHRib2R5LnN0eWxlLnpvb20gPSAxO1xuXHRcdH1cblx0fVxuXG5cdGJvZHkucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xufSApO1xuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHRzdXBwb3J0LmRlbGV0ZUV4cGFuZG8gPSB0cnVlO1xuXHR0cnkge1xuXHRcdGRlbGV0ZSBkaXYudGVzdDtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0c3VwcG9ydC5kZWxldGVFeHBhbmRvID0gZmFsc2U7XG5cdH1cblxuXHQvLyBOdWxsIGVsZW1lbnRzIHRvIGF2b2lkIGxlYWtzIGluIElFLlxuXHRkaXYgPSBudWxsO1xufSApKCk7XG52YXIgYWNjZXB0RGF0YSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbm9EYXRhID0galF1ZXJ5Lm5vRGF0YVsgKCBlbGVtLm5vZGVOYW1lICsgXCIgXCIgKS50b0xvd2VyQ2FzZSgpIF0sXG5cdFx0bm9kZVR5cGUgPSArZWxlbS5ub2RlVHlwZSB8fCAxO1xuXG5cdC8vIERvIG5vdCBzZXQgZGF0YSBvbiBub24tZWxlbWVudCBET00gbm9kZXMgYmVjYXVzZSBpdCB3aWxsIG5vdCBiZSBjbGVhcmVkICgjODMzNSkuXG5cdHJldHVybiBub2RlVHlwZSAhPT0gMSAmJiBub2RlVHlwZSAhPT0gOSA/XG5cdFx0ZmFsc2UgOlxuXG5cdFx0Ly8gTm9kZXMgYWNjZXB0IGRhdGEgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQ7IHJlamVjdGlvbiBjYW4gYmUgY29uZGl0aW9uYWxcblx0XHQhbm9EYXRhIHx8IG5vRGF0YSAhPT0gdHJ1ZSAmJiBlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc2lkXCIgKSA9PT0gbm9EYXRhO1xufTtcblxuXG5cblxudmFyIHJicmFjZSA9IC9eKD86XFx7W1xcd1xcV10qXFx9fFxcW1tcXHdcXFddKlxcXSkkLyxcblx0cm11bHRpRGFzaCA9IC8oW0EtWl0pL2c7XG5cbmZ1bmN0aW9uIGRhdGFBdHRyKCBlbGVtLCBrZXksIGRhdGEgKSB7XG5cblx0Ly8gSWYgbm90aGluZyB3YXMgZm91bmQgaW50ZXJuYWxseSwgdHJ5IHRvIGZldGNoIGFueVxuXHQvLyBkYXRhIGZyb20gdGhlIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGVcblx0aWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdHZhciBuYW1lID0gXCJkYXRhLVwiICsga2V5LnJlcGxhY2UoIHJtdWx0aURhc2gsIFwiLSQxXCIgKS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0ZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7XG5cblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0ZGF0YSA9IGRhdGEgPT09IFwidHJ1ZVwiID8gdHJ1ZSA6XG5cdFx0XHRcdFx0ZGF0YSA9PT0gXCJmYWxzZVwiID8gZmFsc2UgOlxuXHRcdFx0XHRcdGRhdGEgPT09IFwibnVsbFwiID8gbnVsbCA6XG5cblx0XHRcdFx0XHQvLyBPbmx5IGNvbnZlcnQgdG8gYSBudW1iZXIgaWYgaXQgZG9lc24ndCBjaGFuZ2UgdGhlIHN0cmluZ1xuXHRcdFx0XHRcdCtkYXRhICsgXCJcIiA9PT0gZGF0YSA/ICtkYXRhIDpcblx0XHRcdFx0XHRyYnJhY2UudGVzdCggZGF0YSApID8galF1ZXJ5LnBhcnNlSlNPTiggZGF0YSApIDpcblx0XHRcdFx0XHRkYXRhO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgd2Ugc2V0IHRoZSBkYXRhIHNvIGl0IGlzbid0IGNoYW5nZWQgbGF0ZXJcblx0XHRcdGpRdWVyeS5kYXRhKCBlbGVtLCBrZXksIGRhdGEgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBkYXRhO1xufVxuXG4vLyBjaGVja3MgYSBjYWNoZSBvYmplY3QgZm9yIGVtcHRpbmVzc1xuZnVuY3Rpb24gaXNFbXB0eURhdGFPYmplY3QoIG9iaiApIHtcblx0dmFyIG5hbWU7XG5cdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXG5cdFx0Ly8gaWYgdGhlIHB1YmxpYyBkYXRhIG9iamVjdCBpcyBlbXB0eSwgdGhlIHByaXZhdGUgaXMgc3RpbGwgZW1wdHlcblx0XHRpZiAoIG5hbWUgPT09IFwiZGF0YVwiICYmIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBvYmpbIG5hbWUgXSApICkge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXHRcdGlmICggbmFtZSAhPT0gXCJ0b0pTT05cIiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gaW50ZXJuYWxEYXRhKCBlbGVtLCBuYW1lLCBkYXRhLCBwdnQgLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdGlmICggIWFjY2VwdERhdGEoIGVsZW0gKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHR2YXIgcmV0LCB0aGlzQ2FjaGUsXG5cdFx0aW50ZXJuYWxLZXkgPSBqUXVlcnkuZXhwYW5kbyxcblxuXHRcdC8vIFdlIGhhdmUgdG8gaGFuZGxlIERPTSBub2RlcyBhbmQgSlMgb2JqZWN0cyBkaWZmZXJlbnRseSBiZWNhdXNlIElFNi03XG5cdFx0Ly8gY2FuJ3QgR0Mgb2JqZWN0IHJlZmVyZW5jZXMgcHJvcGVybHkgYWNyb3NzIHRoZSBET00tSlMgYm91bmRhcnlcblx0XHRpc05vZGUgPSBlbGVtLm5vZGVUeXBlLFxuXG5cdFx0Ly8gT25seSBET00gbm9kZXMgbmVlZCB0aGUgZ2xvYmFsIGpRdWVyeSBjYWNoZTsgSlMgb2JqZWN0IGRhdGEgaXNcblx0XHQvLyBhdHRhY2hlZCBkaXJlY3RseSB0byB0aGUgb2JqZWN0IHNvIEdDIGNhbiBvY2N1ciBhdXRvbWF0aWNhbGx5XG5cdFx0Y2FjaGUgPSBpc05vZGUgPyBqUXVlcnkuY2FjaGUgOiBlbGVtLFxuXG5cdFx0Ly8gT25seSBkZWZpbmluZyBhbiBJRCBmb3IgSlMgb2JqZWN0cyBpZiBpdHMgY2FjaGUgYWxyZWFkeSBleGlzdHMgYWxsb3dzXG5cdFx0Ly8gdGhlIGNvZGUgdG8gc2hvcnRjdXQgb24gdGhlIHNhbWUgcGF0aCBhcyBhIERPTSBub2RlIHdpdGggbm8gY2FjaGVcblx0XHRpZCA9IGlzTm9kZSA/IGVsZW1bIGludGVybmFsS2V5IF0gOiBlbGVtWyBpbnRlcm5hbEtleSBdICYmIGludGVybmFsS2V5O1xuXG5cdC8vIEF2b2lkIGRvaW5nIGFueSBtb3JlIHdvcmsgdGhhbiB3ZSBuZWVkIHRvIHdoZW4gdHJ5aW5nIHRvIGdldCBkYXRhIG9uIGFuXG5cdC8vIG9iamVjdCB0aGF0IGhhcyBubyBkYXRhIGF0IGFsbFxuXHRpZiAoICggIWlkIHx8ICFjYWNoZVsgaWQgXSB8fCAoICFwdnQgJiYgIWNhY2hlWyBpZCBdLmRhdGEgKSApICYmXG5cdFx0ZGF0YSA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiBuYW1lID09PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGlmICggIWlkICkge1xuXG5cdFx0Ly8gT25seSBET00gbm9kZXMgbmVlZCBhIG5ldyB1bmlxdWUgSUQgZm9yIGVhY2ggZWxlbWVudCBzaW5jZSB0aGVpciBkYXRhXG5cdFx0Ly8gZW5kcyB1cCBpbiB0aGUgZ2xvYmFsIGNhY2hlXG5cdFx0aWYgKCBpc05vZGUgKSB7XG5cdFx0XHRpZCA9IGVsZW1bIGludGVybmFsS2V5IF0gPSBkZWxldGVkSWRzLnBvcCgpIHx8IGpRdWVyeS5ndWlkKys7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlkID0gaW50ZXJuYWxLZXk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhY2FjaGVbIGlkIF0gKSB7XG5cblx0XHQvLyBBdm9pZCBleHBvc2luZyBqUXVlcnkgbWV0YWRhdGEgb24gcGxhaW4gSlMgb2JqZWN0cyB3aGVuIHRoZSBvYmplY3Rcblx0XHQvLyBpcyBzZXJpYWxpemVkIHVzaW5nIEpTT04uc3RyaW5naWZ5XG5cdFx0Y2FjaGVbIGlkIF0gPSBpc05vZGUgPyB7fSA6IHsgdG9KU09OOiBqUXVlcnkubm9vcCB9O1xuXHR9XG5cblx0Ly8gQW4gb2JqZWN0IGNhbiBiZSBwYXNzZWQgdG8galF1ZXJ5LmRhdGEgaW5zdGVhZCBvZiBhIGtleS92YWx1ZSBwYWlyOyB0aGlzIGdldHNcblx0Ly8gc2hhbGxvdyBjb3BpZWQgb3ZlciBvbnRvIHRoZSBleGlzdGluZyBjYWNoZVxuXHRpZiAoIHR5cGVvZiBuYW1lID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBuYW1lID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdFx0aWYgKCBwdnQgKSB7XG5cdFx0XHRjYWNoZVsgaWQgXSA9IGpRdWVyeS5leHRlbmQoIGNhY2hlWyBpZCBdLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNhY2hlWyBpZCBdLmRhdGEgPSBqUXVlcnkuZXh0ZW5kKCBjYWNoZVsgaWQgXS5kYXRhLCBuYW1lICk7XG5cdFx0fVxuXHR9XG5cblx0dGhpc0NhY2hlID0gY2FjaGVbIGlkIF07XG5cblx0Ly8galF1ZXJ5IGRhdGEoKSBpcyBzdG9yZWQgaW4gYSBzZXBhcmF0ZSBvYmplY3QgaW5zaWRlIHRoZSBvYmplY3QncyBpbnRlcm5hbCBkYXRhXG5cdC8vIGNhY2hlIGluIG9yZGVyIHRvIGF2b2lkIGtleSBjb2xsaXNpb25zIGJldHdlZW4gaW50ZXJuYWwgZGF0YSBhbmQgdXNlci1kZWZpbmVkXG5cdC8vIGRhdGEuXG5cdGlmICggIXB2dCApIHtcblx0XHRpZiAoICF0aGlzQ2FjaGUuZGF0YSApIHtcblx0XHRcdHRoaXNDYWNoZS5kYXRhID0ge307XG5cdFx0fVxuXG5cdFx0dGhpc0NhY2hlID0gdGhpc0NhY2hlLmRhdGE7XG5cdH1cblxuXHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHR0aGlzQ2FjaGVbIGpRdWVyeS5jYW1lbENhc2UoIG5hbWUgKSBdID0gZGF0YTtcblx0fVxuXG5cdC8vIENoZWNrIGZvciBib3RoIGNvbnZlcnRlZC10by1jYW1lbCBhbmQgbm9uLWNvbnZlcnRlZCBkYXRhIHByb3BlcnR5IG5hbWVzXG5cdC8vIElmIGEgZGF0YSBwcm9wZXJ0eSB3YXMgc3BlY2lmaWVkXG5cdGlmICggdHlwZW9mIG5hbWUgPT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHQvLyBGaXJzdCBUcnkgdG8gZmluZCBhcy1pcyBwcm9wZXJ0eSBkYXRhXG5cdFx0cmV0ID0gdGhpc0NhY2hlWyBuYW1lIF07XG5cblx0XHQvLyBUZXN0IGZvciBudWxsfHVuZGVmaW5lZCBwcm9wZXJ0eSBkYXRhXG5cdFx0aWYgKCByZXQgPT0gbnVsbCApIHtcblxuXHRcdFx0Ly8gVHJ5IHRvIGZpbmQgdGhlIGNhbWVsQ2FzZWQgcHJvcGVydHlcblx0XHRcdHJldCA9IHRoaXNDYWNoZVsgalF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApIF07XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJldCA9IHRoaXNDYWNoZTtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIGludGVybmFsUmVtb3ZlRGF0YSggZWxlbSwgbmFtZSwgcHZ0ICkge1xuXHRpZiAoICFhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0dmFyIHRoaXNDYWNoZSwgaSxcblx0XHRpc05vZGUgPSBlbGVtLm5vZGVUeXBlLFxuXG5cdFx0Ly8gU2VlIGpRdWVyeS5kYXRhIGZvciBtb3JlIGluZm9ybWF0aW9uXG5cdFx0Y2FjaGUgPSBpc05vZGUgPyBqUXVlcnkuY2FjaGUgOiBlbGVtLFxuXHRcdGlkID0gaXNOb2RlID8gZWxlbVsgalF1ZXJ5LmV4cGFuZG8gXSA6IGpRdWVyeS5leHBhbmRvO1xuXG5cdC8vIElmIHRoZXJlIGlzIGFscmVhZHkgbm8gY2FjaGUgZW50cnkgZm9yIHRoaXMgb2JqZWN0LCB0aGVyZSBpcyBub1xuXHQvLyBwdXJwb3NlIGluIGNvbnRpbnVpbmdcblx0aWYgKCAhY2FjaGVbIGlkIF0gKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0aWYgKCBuYW1lICkge1xuXG5cdFx0dGhpc0NhY2hlID0gcHZ0ID8gY2FjaGVbIGlkIF0gOiBjYWNoZVsgaWQgXS5kYXRhO1xuXG5cdFx0aWYgKCB0aGlzQ2FjaGUgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQgYXJyYXkgb3Igc3BhY2Ugc2VwYXJhdGVkIHN0cmluZyBuYW1lcyBmb3IgZGF0YSBrZXlzXG5cdFx0XHRpZiAoICFqUXVlcnkuaXNBcnJheSggbmFtZSApICkge1xuXG5cdFx0XHRcdC8vIHRyeSB0aGUgc3RyaW5nIGFzIGEga2V5IGJlZm9yZSBhbnkgbWFuaXB1bGF0aW9uXG5cdFx0XHRcdGlmICggbmFtZSBpbiB0aGlzQ2FjaGUgKSB7XG5cdFx0XHRcdFx0bmFtZSA9IFsgbmFtZSBdO1xuXHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0Ly8gc3BsaXQgdGhlIGNhbWVsIGNhc2VkIHZlcnNpb24gYnkgc3BhY2VzIHVubGVzcyBhIGtleSB3aXRoIHRoZSBzcGFjZXMgZXhpc3RzXG5cdFx0XHRcdFx0bmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIG5hbWUgKTtcblx0XHRcdFx0XHRpZiAoIG5hbWUgaW4gdGhpc0NhY2hlICkge1xuXHRcdFx0XHRcdFx0bmFtZSA9IFsgbmFtZSBdO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRuYW1lID0gbmFtZS5zcGxpdCggXCIgXCIgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gSWYgXCJuYW1lXCIgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLlxuXHRcdFx0XHQvLyBXaGVuIGRhdGEgaXMgaW5pdGlhbGx5IGNyZWF0ZWQsIHZpYSAoXCJrZXlcIiwgXCJ2YWxcIikgc2lnbmF0dXJlLFxuXHRcdFx0XHQvLyBrZXlzIHdpbGwgYmUgY29udmVydGVkIHRvIGNhbWVsQ2FzZS5cblx0XHRcdFx0Ly8gU2luY2UgdGhlcmUgaXMgbm8gd2F5IHRvIHRlbGwgX2hvd18gYSBrZXkgd2FzIGFkZGVkLCByZW1vdmVcblx0XHRcdFx0Ly8gYm90aCBwbGFpbiBrZXkgYW5kIGNhbWVsQ2FzZSBrZXkuICMxMjc4NlxuXHRcdFx0XHQvLyBUaGlzIHdpbGwgb25seSBwZW5hbGl6ZSB0aGUgYXJyYXkgYXJndW1lbnQgcGF0aC5cblx0XHRcdFx0bmFtZSA9IG5hbWUuY29uY2F0KCBqUXVlcnkubWFwKCBuYW1lLCBqUXVlcnkuY2FtZWxDYXNlICkgKTtcblx0XHRcdH1cblxuXHRcdFx0aSA9IG5hbWUubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGRlbGV0ZSB0aGlzQ2FjaGVbIG5hbWVbIGkgXSBdO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiB0aGVyZSBpcyBubyBkYXRhIGxlZnQgaW4gdGhlIGNhY2hlLCB3ZSB3YW50IHRvIGNvbnRpbnVlXG5cdFx0XHQvLyBhbmQgbGV0IHRoZSBjYWNoZSBvYmplY3QgaXRzZWxmIGdldCBkZXN0cm95ZWRcblx0XHRcdGlmICggcHZ0ID8gIWlzRW1wdHlEYXRhT2JqZWN0KCB0aGlzQ2FjaGUgKSA6ICFqUXVlcnkuaXNFbXB0eU9iamVjdCggdGhpc0NhY2hlICkgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBTZWUgalF1ZXJ5LmRhdGEgZm9yIG1vcmUgaW5mb3JtYXRpb25cblx0aWYgKCAhcHZ0ICkge1xuXHRcdGRlbGV0ZSBjYWNoZVsgaWQgXS5kYXRhO1xuXG5cdFx0Ly8gRG9uJ3QgZGVzdHJveSB0aGUgcGFyZW50IGNhY2hlIHVubGVzcyB0aGUgaW50ZXJuYWwgZGF0YSBvYmplY3Rcblx0XHQvLyBoYWQgYmVlbiB0aGUgb25seSB0aGluZyBsZWZ0IGluIGl0XG5cdFx0aWYgKCAhaXNFbXB0eURhdGFPYmplY3QoIGNhY2hlWyBpZCBdICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHR9XG5cblx0Ly8gRGVzdHJveSB0aGUgY2FjaGVcblx0aWYgKCBpc05vZGUgKSB7XG5cdFx0alF1ZXJ5LmNsZWFuRGF0YSggWyBlbGVtIF0sIHRydWUgKTtcblxuXHQvLyBVc2UgZGVsZXRlIHdoZW4gc3VwcG9ydGVkIGZvciBleHBhbmRvcyBvciBgY2FjaGVgIGlzIG5vdCBhIHdpbmRvdyBwZXIgaXNXaW5kb3cgKCMxMDA4MClcblx0LyoganNoaW50IGVxZXFlcTogZmFsc2UgKi9cblx0fSBlbHNlIGlmICggc3VwcG9ydC5kZWxldGVFeHBhbmRvIHx8IGNhY2hlICE9IGNhY2hlLndpbmRvdyApIHtcblx0XHQvKiBqc2hpbnQgZXFlcWVxOiB0cnVlICovXG5cdFx0ZGVsZXRlIGNhY2hlWyBpZCBdO1xuXG5cdC8vIFdoZW4gYWxsIGVsc2UgZmFpbHMsIHVuZGVmaW5lZFxuXHR9IGVsc2Uge1xuXHRcdGNhY2hlWyBpZCBdID0gdW5kZWZpbmVkO1xuXHR9XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0Y2FjaGU6IHt9LFxuXG5cdC8vIFRoZSBmb2xsb3dpbmcgZWxlbWVudHMgKHNwYWNlLXN1ZmZpeGVkIHRvIGF2b2lkIE9iamVjdC5wcm90b3R5cGUgY29sbGlzaW9ucylcblx0Ly8gdGhyb3cgdW5jYXRjaGFibGUgZXhjZXB0aW9ucyBpZiB5b3UgYXR0ZW1wdCB0byBzZXQgZXhwYW5kbyBwcm9wZXJ0aWVzXG5cdG5vRGF0YToge1xuXHRcdFwiYXBwbGV0IFwiOiB0cnVlLFxuXHRcdFwiZW1iZWQgXCI6IHRydWUsXG5cblx0XHQvLyAuLi5idXQgRmxhc2ggb2JqZWN0cyAod2hpY2ggaGF2ZSB0aGlzIGNsYXNzaWQpICpjYW4qIGhhbmRsZSBleHBhbmRvc1xuXHRcdFwib2JqZWN0IFwiOiBcImNsc2lkOkQyN0NEQjZFLUFFNkQtMTFjZi05NkI4LTQ0NDU1MzU0MDAwMFwiXG5cdH0sXG5cblx0aGFzRGF0YTogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0ZWxlbSA9IGVsZW0ubm9kZVR5cGUgPyBqUXVlcnkuY2FjaGVbIGVsZW1bIGpRdWVyeS5leHBhbmRvIF0gXSA6IGVsZW1bIGpRdWVyeS5leHBhbmRvIF07XG5cdFx0cmV0dXJuICEhZWxlbSAmJiAhaXNFbXB0eURhdGFPYmplY3QoIGVsZW0gKTtcblx0fSxcblxuXHRkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gaW50ZXJuYWxEYXRhKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0cmV0dXJuIGludGVybmFsUmVtb3ZlRGF0YSggZWxlbSwgbmFtZSApO1xuXHR9LFxuXG5cdC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cblx0X2RhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBpbnRlcm5hbERhdGEoIGVsZW0sIG5hbWUsIGRhdGEsIHRydWUgKTtcblx0fSxcblxuXHRfcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0cmV0dXJuIGludGVybmFsUmVtb3ZlRGF0YSggZWxlbSwgbmFtZSwgdHJ1ZSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGF0YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XG5cdFx0dmFyIGksIG5hbWUsIGRhdGEsXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0YXR0cnMgPSBlbGVtICYmIGVsZW0uYXR0cmlidXRlcztcblxuXHRcdC8vIFNwZWNpYWwgZXhwZWN0aW9ucyBvZiAuZGF0YSBiYXNpY2FsbHkgdGh3YXJ0IGpRdWVyeS5hY2Nlc3MsXG5cdFx0Ly8gc28gaW1wbGVtZW50IHRoZSByZWxldmFudCBiZWhhdmlvciBvdXJzZWx2ZXNcblxuXHRcdC8vIEdldHMgYWxsIHZhbHVlc1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHRoaXMubGVuZ3RoICkge1xuXHRcdFx0XHRkYXRhID0galF1ZXJ5LmRhdGEoIGVsZW0gKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgIWpRdWVyeS5fZGF0YSggZWxlbSwgXCJwYXJzZWRBdHRyc1wiICkgKSB7XG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUxMStcblx0XHRcdFx0XHRcdC8vIFRoZSBhdHRycyBlbGVtZW50cyBjYW4gYmUgbnVsbCAoIzE0ODk0KVxuXHRcdFx0XHRcdFx0aWYgKCBhdHRyc1sgaSBdICkge1xuXHRcdFx0XHRcdFx0XHRuYW1lID0gYXR0cnNbIGkgXS5uYW1lO1xuXHRcdFx0XHRcdFx0XHRpZiAoIG5hbWUuaW5kZXhPZiggXCJkYXRhLVwiICkgPT09IDAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIG5hbWUuc2xpY2UoIDUgKSApO1xuXHRcdFx0XHRcdFx0XHRcdGRhdGFBdHRyKCBlbGVtLCBuYW1lLCBkYXRhWyBuYW1lIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRqUXVlcnkuX2RhdGEoIGVsZW0sIFwicGFyc2VkQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGpRdWVyeS5kYXRhKCB0aGlzLCBrZXkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgP1xuXG5cdFx0XHQvLyBTZXRzIG9uZSB2YWx1ZVxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmRhdGEoIHRoaXMsIGtleSwgdmFsdWUgKTtcblx0XHRcdH0gKSA6XG5cblx0XHRcdC8vIEdldHMgb25lIHZhbHVlXG5cdFx0XHQvLyBUcnkgdG8gZmV0Y2ggYW55IGludGVybmFsbHkgc3RvcmVkIGRhdGEgZmlyc3Rcblx0XHRcdGVsZW0gPyBkYXRhQXR0ciggZWxlbSwga2V5LCBqUXVlcnkuZGF0YSggZWxlbSwga2V5ICkgKSA6IHVuZGVmaW5lZDtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LnJlbW92ZURhdGEoIHRoaXMsIGtleSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBxdWV1ZTtcblxuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHR5cGUgPSAoIHR5cGUgfHwgXCJmeFwiICkgKyBcInF1ZXVlXCI7XG5cdFx0XHRxdWV1ZSA9IGpRdWVyeS5fZGF0YSggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHQvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRpbmcgb3V0IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwXG5cdFx0XHRpZiAoIGRhdGEgKSB7XG5cdFx0XHRcdGlmICggIXF1ZXVlIHx8IGpRdWVyeS5pc0FycmF5KCBkYXRhICkgKSB7XG5cdFx0XHRcdFx0cXVldWUgPSBqUXVlcnkuX2RhdGEoIGVsZW0sIHR5cGUsIGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEgKSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGRhdGEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHF1ZXVlIHx8IFtdO1xuXHRcdH1cblx0fSxcblxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIGVsZW0sIHR5cGUgKSxcblx0XHRcdHN0YXJ0TGVuZ3RoID0gcXVldWUubGVuZ3RoLFxuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpLFxuXHRcdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIHR5cGUgKSxcblx0XHRcdG5leHQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIGVsZW0sIHR5cGUgKTtcblx0XHRcdH07XG5cblx0XHQvLyBJZiB0aGUgZnggcXVldWUgaXMgZGVxdWV1ZWQsIGFsd2F5cyByZW1vdmUgdGhlIHByb2dyZXNzIHNlbnRpbmVsXG5cdFx0aWYgKCBmbiA9PT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRzdGFydExlbmd0aC0tO1xuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cblx0XHRcdC8vIEFkZCBhIHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmdcblx0XHRcdC8vIGF1dG9tYXRpY2FsbHkgZGVxdWV1ZWRcblx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICkge1xuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KCBcImlucHJvZ3Jlc3NcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBjbGVhciB1cCB0aGUgbGFzdCBxdWV1ZSBzdG9wIGZ1bmN0aW9uXG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdGZuLmNhbGwoIGVsZW0sIG5leHQsIGhvb2tzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhc3RhcnRMZW5ndGggJiYgaG9va3MgKSB7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0fVxuXHR9LFxuXG5cdC8vIG5vdCBpbnRlbmRlZCBmb3IgcHVibGljIGNvbnN1bXB0aW9uIC0gZ2VuZXJhdGVzIGEgcXVldWVIb29rcyBvYmplY3QsXG5cdC8vIG9yIHJldHVybnMgdGhlIGN1cnJlbnQgb25lXG5cdF9xdWV1ZUhvb2tzOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR2YXIga2V5ID0gdHlwZSArIFwicXVldWVIb29rc1wiO1xuXHRcdHJldHVybiBqUXVlcnkuX2RhdGEoIGVsZW0sIGtleSApIHx8IGpRdWVyeS5fZGF0YSggZWxlbSwga2V5LCB7XG5cdFx0XHRlbXB0eTogalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICkuYWRkKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5Ll9yZW1vdmVEYXRhKCBlbGVtLCB0eXBlICsgXCJxdWV1ZVwiICk7XG5cdFx0XHRcdGpRdWVyeS5fcmVtb3ZlRGF0YSggZWxlbSwga2V5ICk7XG5cdFx0XHR9IClcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHNldHRlciA9IDI7XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZGF0YSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gXCJmeFwiO1xuXHRcdFx0c2V0dGVyLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoIDwgc2V0dGVyICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1sgMCBdLCB0eXBlICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzIDpcblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgZGF0YSApO1xuXG5cdFx0XHRcdC8vIGVuc3VyZSBhIGhvb2tzIGZvciB0aGlzIHF1ZXVlXG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggdGhpcywgdHlwZSApO1xuXG5cdFx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICYmIHF1ZXVlWyAwIF0gIT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0fSxcblx0ZGVxdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdH0gKTtcblx0fSxcblx0Y2xlYXJRdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHR9LFxuXG5cdC8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGVcblx0Ly8gYXJlIGVtcHRpZWQgKGZ4IGlzIHRoZSB0eXBlIGJ5IGRlZmF1bHQpXG5cdHByb21pc2U6IGZ1bmN0aW9uKCB0eXBlLCBvYmogKSB7XG5cdFx0dmFyIHRtcCxcblx0XHRcdGNvdW50ID0gMSxcblx0XHRcdGRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRlbGVtZW50cyA9IHRoaXMsXG5cdFx0XHRpID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRyZXNvbHZlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggISggLS1jb3VudCApICkge1xuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmVXaXRoKCBlbGVtZW50cywgWyBlbGVtZW50cyBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0b2JqID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG1wID0galF1ZXJ5Ll9kYXRhKCBlbGVtZW50c1sgaSBdLCB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgKTtcblx0XHRcdGlmICggdG1wICYmIHRtcC5lbXB0eSApIHtcblx0XHRcdFx0Y291bnQrKztcblx0XHRcdFx0dG1wLmVtcHR5LmFkZCggcmVzb2x2ZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXNvbHZlKCk7XG5cdFx0cmV0dXJuIGRlZmVyLnByb21pc2UoIG9iaiApO1xuXHR9XG59ICk7XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIHNocmlua1dyYXBCbG9ja3NWYWw7XG5cblx0c3VwcG9ydC5zaHJpbmtXcmFwQmxvY2tzID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBzaHJpbmtXcmFwQmxvY2tzVmFsICE9IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gc2hyaW5rV3JhcEJsb2Nrc1ZhbDtcblx0XHR9XG5cblx0XHQvLyBXaWxsIGJlIGNoYW5nZWQgbGF0ZXIgaWYgbmVlZGVkLlxuXHRcdHNocmlua1dyYXBCbG9ja3NWYWwgPSBmYWxzZTtcblxuXHRcdC8vIE1pbmlmaWVkOiB2YXIgYixjLGRcblx0XHR2YXIgZGl2LCBib2R5LCBjb250YWluZXI7XG5cblx0XHRib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwiYm9keVwiIClbIDAgXTtcblx0XHRpZiAoICFib2R5IHx8ICFib2R5LnN0eWxlICkge1xuXG5cdFx0XHQvLyBUZXN0IGZpcmVkIHRvbyBlYXJseSBvciBpbiBhbiB1bnN1cHBvcnRlZCBlbnZpcm9ubWVudCwgZXhpdC5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBTZXR1cFxuXHRcdGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cdFx0Y29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2JvcmRlcjowO3dpZHRoOjA7aGVpZ2h0OjA7dG9wOjA7bGVmdDotOTk5OXB4XCI7XG5cdFx0Ym9keS5hcHBlbmRDaGlsZCggY29udGFpbmVyICkuYXBwZW5kQ2hpbGQoIGRpdiApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUU2XG5cdFx0Ly8gQ2hlY2sgaWYgZWxlbWVudHMgd2l0aCBsYXlvdXQgc2hyaW5rLXdyYXAgdGhlaXIgY2hpbGRyZW5cblx0XHRpZiAoIHR5cGVvZiBkaXYuc3R5bGUuem9vbSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblxuXHRcdFx0Ly8gUmVzZXQgQ1NTOiBib3gtc2l6aW5nOyBkaXNwbGF5OyBtYXJnaW47IGJvcmRlclxuXHRcdFx0ZGl2LnN0eWxlLmNzc1RleHQgPVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjksIEFuZHJvaWQgMi4zXG5cdFx0XHRcdC8vIFZlbmRvci1wcmVmaXggYm94LXNpemluZ1xuXHRcdFx0XHRcIi13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveDstbW96LWJveC1zaXppbmc6Y29udGVudC1ib3g7XCIgK1xuXHRcdFx0XHRcImJveC1zaXppbmc6Y29udGVudC1ib3g7ZGlzcGxheTpibG9jazttYXJnaW46MDtib3JkZXI6MDtcIiArXG5cdFx0XHRcdFwicGFkZGluZzoxcHg7d2lkdGg6MXB4O3pvb206MVwiO1xuXHRcdFx0ZGl2LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKS5zdHlsZS53aWR0aCA9IFwiNXB4XCI7XG5cdFx0XHRzaHJpbmtXcmFwQmxvY2tzVmFsID0gZGl2Lm9mZnNldFdpZHRoICE9PSAzO1xuXHRcdH1cblxuXHRcdGJvZHkucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXG5cdFx0cmV0dXJuIHNocmlua1dyYXBCbG9ja3NWYWw7XG5cdH07XG5cbn0gKSgpO1xudmFyIHBudW0gPSAoIC9bKy1dPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdWystXT9cXGQrfCkvICkuc291cmNlO1xuXG52YXIgcmNzc051bSA9IG5ldyBSZWdFeHAoIFwiXig/OihbKy1dKT18KShcIiArIHBudW0gKyBcIikoW2EteiVdKikkXCIsIFwiaVwiICk7XG5cblxudmFyIGNzc0V4cGFuZCA9IFsgXCJUb3BcIiwgXCJSaWdodFwiLCBcIkJvdHRvbVwiLCBcIkxlZnRcIiBdO1xuXG52YXIgaXNIaWRkZW4gPSBmdW5jdGlvbiggZWxlbSwgZWwgKSB7XG5cblx0XHQvLyBpc0hpZGRlbiBtaWdodCBiZSBjYWxsZWQgZnJvbSBqUXVlcnkjZmlsdGVyIGZ1bmN0aW9uO1xuXHRcdC8vIGluIHRoYXQgY2FzZSwgZWxlbWVudCB3aWxsIGJlIHNlY29uZCBhcmd1bWVudFxuXHRcdGVsZW0gPSBlbCB8fCBlbGVtO1xuXHRcdHJldHVybiBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApID09PSBcIm5vbmVcIiB8fFxuXHRcdFx0IWpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7XG5cdH07XG5cblxuXG5mdW5jdGlvbiBhZGp1c3RDU1MoIGVsZW0sIHByb3AsIHZhbHVlUGFydHMsIHR3ZWVuICkge1xuXHR2YXIgYWRqdXN0ZWQsXG5cdFx0c2NhbGUgPSAxLFxuXHRcdG1heEl0ZXJhdGlvbnMgPSAyMCxcblx0XHRjdXJyZW50VmFsdWUgPSB0d2VlbiA/XG5cdFx0XHRmdW5jdGlvbigpIHsgcmV0dXJuIHR3ZWVuLmN1cigpOyB9IDpcblx0XHRcdGZ1bmN0aW9uKCkgeyByZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgcHJvcCwgXCJcIiApOyB9LFxuXHRcdGluaXRpYWwgPSBjdXJyZW50VmFsdWUoKSxcblx0XHR1bml0ID0gdmFsdWVQYXJ0cyAmJiB2YWx1ZVBhcnRzWyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICksXG5cblx0XHQvLyBTdGFydGluZyB2YWx1ZSBjb21wdXRhdGlvbiBpcyByZXF1aXJlZCBmb3IgcG90ZW50aWFsIHVuaXQgbWlzbWF0Y2hlc1xuXHRcdGluaXRpYWxJblVuaXQgPSAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSB8fCB1bml0ICE9PSBcInB4XCIgJiYgK2luaXRpYWwgKSAmJlxuXHRcdFx0cmNzc051bS5leGVjKCBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wICkgKTtcblxuXHRpZiAoIGluaXRpYWxJblVuaXQgJiYgaW5pdGlhbEluVW5pdFsgMyBdICE9PSB1bml0ICkge1xuXG5cdFx0Ly8gVHJ1c3QgdW5pdHMgcmVwb3J0ZWQgYnkgalF1ZXJ5LmNzc1xuXHRcdHVuaXQgPSB1bml0IHx8IGluaXRpYWxJblVuaXRbIDMgXTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB3ZSB1cGRhdGUgdGhlIHR3ZWVuIHByb3BlcnRpZXMgbGF0ZXIgb25cblx0XHR2YWx1ZVBhcnRzID0gdmFsdWVQYXJ0cyB8fCBbXTtcblxuXHRcdC8vIEl0ZXJhdGl2ZWx5IGFwcHJveGltYXRlIGZyb20gYSBub256ZXJvIHN0YXJ0aW5nIHBvaW50XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsIHx8IDE7XG5cblx0XHRkbyB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIGl0ZXJhdGlvbiB6ZXJvZWQgb3V0LCBkb3VibGUgdW50aWwgd2UgZ2V0ICpzb21ldGhpbmcqLlxuXHRcdFx0Ly8gVXNlIHN0cmluZyBmb3IgZG91Ymxpbmcgc28gd2UgZG9uJ3QgYWNjaWRlbnRhbGx5IHNlZSBzY2FsZSBhcyB1bmNoYW5nZWQgYmVsb3dcblx0XHRcdHNjYWxlID0gc2NhbGUgfHwgXCIuNVwiO1xuXG5cdFx0XHQvLyBBZGp1c3QgYW5kIGFwcGx5XG5cdFx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAvIHNjYWxlO1xuXHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXG5cdFx0Ly8gVXBkYXRlIHNjYWxlLCB0b2xlcmF0aW5nIHplcm8gb3IgTmFOIGZyb20gdHdlZW4uY3VyKClcblx0XHQvLyBCcmVhayB0aGUgbG9vcCBpZiBzY2FsZSBpcyB1bmNoYW5nZWQgb3IgcGVyZmVjdCwgb3IgaWYgd2UndmUganVzdCBoYWQgZW5vdWdoLlxuXHRcdH0gd2hpbGUgKFxuXHRcdFx0c2NhbGUgIT09ICggc2NhbGUgPSBjdXJyZW50VmFsdWUoKSAvIGluaXRpYWwgKSAmJiBzY2FsZSAhPT0gMSAmJiAtLW1heEl0ZXJhdGlvbnNcblx0XHQpO1xuXHR9XG5cblx0aWYgKCB2YWx1ZVBhcnRzICkge1xuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbEluVW5pdCB8fCAraW5pdGlhbCB8fCAwO1xuXG5cdFx0Ly8gQXBwbHkgcmVsYXRpdmUgb2Zmc2V0ICgrPS8tPSkgaWYgc3BlY2lmaWVkXG5cdFx0YWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gP1xuXHRcdFx0aW5pdGlhbEluVW5pdCArICggdmFsdWVQYXJ0c1sgMSBdICsgMSApICogdmFsdWVQYXJ0c1sgMiBdIDpcblx0XHRcdCt2YWx1ZVBhcnRzWyAyIF07XG5cdFx0aWYgKCB0d2VlbiApIHtcblx0XHRcdHR3ZWVuLnVuaXQgPSB1bml0O1xuXHRcdFx0dHdlZW4uc3RhcnQgPSBpbml0aWFsSW5Vbml0O1xuXHRcdFx0dHdlZW4uZW5kID0gYWRqdXN0ZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBhZGp1c3RlZDtcbn1cblxuXG4vLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb25cbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aCxcblx0XHRidWxrID0ga2V5ID09IG51bGw7XG5cblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xuXHRpZiAoIGpRdWVyeS50eXBlKCBrZXkgKSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXHRcdGZvciAoIGkgaW4ga2V5ICkge1xuXHRcdFx0YWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVsgaSBdLCB0cnVlLCBlbXB0eUdldCwgcmF3ICk7XG5cdFx0fVxuXG5cdC8vIFNldHMgb25lIHZhbHVlXG5cdH0gZWxzZSBpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblxuXHRcdGlmICggIWpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmF3ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGJ1bGsgKSB7XG5cblx0XHRcdC8vIEJ1bGsgb3BlcmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldFxuXHRcdFx0aWYgKCByYXcgKSB7XG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xuXHRcdFx0XHRmbiA9IG51bGw7XG5cblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1bGsgPSBmbjtcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gYnVsay5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGZuKFxuXHRcdFx0XHRcdGVsZW1zWyBpIF0sXG5cdFx0XHRcdFx0a2V5LFxuXHRcdFx0XHRcdHJhdyA/IHZhbHVlIDogdmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY2hhaW5hYmxlID9cblx0XHRlbGVtcyA6XG5cblx0XHQvLyBHZXRzXG5cdFx0YnVsayA/XG5cdFx0XHRmbi5jYWxsKCBlbGVtcyApIDpcblx0XHRcdGxlbmd0aCA/IGZuKCBlbGVtc1sgMCBdLCBrZXkgKSA6IGVtcHR5R2V0O1xufTtcbnZhciByY2hlY2thYmxlVHlwZSA9ICggL14oPzpjaGVja2JveHxyYWRpbykkL2kgKTtcblxudmFyIHJ0YWdOYW1lID0gKCAvPChbXFx3Oi1dKykvICk7XG5cbnZhciByc2NyaXB0VHlwZSA9ICggL14kfFxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSApO1xuXG52YXIgcmxlYWRpbmdXaGl0ZXNwYWNlID0gKCAvXlxccysvICk7XG5cbnZhciBub2RlTmFtZXMgPSBcImFiYnJ8YXJ0aWNsZXxhc2lkZXxhdWRpb3xiZGl8Y2FudmFzfGRhdGF8ZGF0YWxpc3R8XCIgK1xuXHRcdFwiZGV0YWlsc3xkaWFsb2d8ZmlnY2FwdGlvbnxmaWd1cmV8Zm9vdGVyfGhlYWRlcnxoZ3JvdXB8bWFpbnxcIiArXG5cdFx0XCJtYXJrfG1ldGVyfG5hdnxvdXRwdXR8cGljdHVyZXxwcm9ncmVzc3xzZWN0aW9ufHN1bW1hcnl8dGVtcGxhdGV8dGltZXx2aWRlb1wiO1xuXG5cblxuZnVuY3Rpb24gY3JlYXRlU2FmZUZyYWdtZW50KCBkb2N1bWVudCApIHtcblx0dmFyIGxpc3QgPSBub2RlTmFtZXMuc3BsaXQoIFwifFwiICksXG5cdFx0c2FmZUZyYWcgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG5cblx0aWYgKCBzYWZlRnJhZy5jcmVhdGVFbGVtZW50ICkge1xuXHRcdHdoaWxlICggbGlzdC5sZW5ndGggKSB7XG5cdFx0XHRzYWZlRnJhZy5jcmVhdGVFbGVtZW50KFxuXHRcdFx0XHRsaXN0LnBvcCgpXG5cdFx0XHQpO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gc2FmZUZyYWc7XG59XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcblx0XHRmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFNldHVwXG5cdGRpdi5pbm5lckhUTUwgPSBcIiAgPGxpbmsvPjx0YWJsZT48L3RhYmxlPjxhIGhyZWY9Jy9hJz5hPC9hPjxpbnB1dCB0eXBlPSdjaGVja2JveCcvPlwiO1xuXG5cdC8vIElFIHN0cmlwcyBsZWFkaW5nIHdoaXRlc3BhY2Ugd2hlbiAuaW5uZXJIVE1MIGlzIHVzZWRcblx0c3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSA9IGRpdi5maXJzdENoaWxkLm5vZGVUeXBlID09PSAzO1xuXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IHRib2R5IGVsZW1lbnRzIGFyZW4ndCBhdXRvbWF0aWNhbGx5IGluc2VydGVkXG5cdC8vIElFIHdpbGwgaW5zZXJ0IHRoZW0gaW50byBlbXB0eSB0YWJsZXNcblx0c3VwcG9ydC50Ym9keSA9ICFkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwidGJvZHlcIiApLmxlbmd0aDtcblxuXHQvLyBNYWtlIHN1cmUgdGhhdCBsaW5rIGVsZW1lbnRzIGdldCBzZXJpYWxpemVkIGNvcnJlY3RseSBieSBpbm5lckhUTUxcblx0Ly8gVGhpcyByZXF1aXJlcyBhIHdyYXBwZXIgZWxlbWVudCBpbiBJRVxuXHRzdXBwb3J0Lmh0bWxTZXJpYWxpemUgPSAhIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJsaW5rXCIgKS5sZW5ndGg7XG5cblx0Ly8gTWFrZXMgc3VyZSBjbG9uaW5nIGFuIGh0bWw1IGVsZW1lbnQgZG9lcyBub3QgY2F1c2UgcHJvYmxlbXNcblx0Ly8gV2hlcmUgb3V0ZXJIVE1MIGlzIHVuZGVmaW5lZCwgdGhpcyBzdGlsbCB3b3Jrc1xuXHRzdXBwb3J0Lmh0bWw1Q2xvbmUgPVxuXHRcdGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwibmF2XCIgKS5jbG9uZU5vZGUoIHRydWUgKS5vdXRlckhUTUwgIT09IFwiPDpuYXY+PC86bmF2PlwiO1xuXG5cdC8vIENoZWNrIGlmIGEgZGlzY29ubmVjdGVkIGNoZWNrYm94IHdpbGwgcmV0YWluIGl0cyBjaGVja2VkXG5cdC8vIHZhbHVlIG9mIHRydWUgYWZ0ZXIgYXBwZW5kZWQgdG8gdGhlIERPTSAoSUU2LzcpXG5cdGlucHV0LnR5cGUgPSBcImNoZWNrYm94XCI7XG5cdGlucHV0LmNoZWNrZWQgPSB0cnVlO1xuXHRmcmFnbWVudC5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblx0c3VwcG9ydC5hcHBlbmRDaGVja2VkID0gaW5wdXQuY2hlY2tlZDtcblxuXHQvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVsdFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZFxuXHQvLyBTdXBwb3J0OiBJRTYtSUUxMStcblx0ZGl2LmlubmVySFRNTCA9IFwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiO1xuXHRzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gISFkaXYuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTtcblxuXHQvLyAjMTEyMTcgLSBXZWJLaXQgbG9zZXMgY2hlY2sgd2hlbiB0aGUgbmFtZSBpcyBhZnRlciB0aGUgY2hlY2tlZCBhdHRyaWJ1dGVcblx0ZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGRpdiApO1xuXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcblx0Ly8gYG5hbWVgIGFuZCBgdHlwZWAgbXVzdCB1c2UgLnNldEF0dHJpYnV0ZSBmb3IgV1dBICgjMTQ5MDEpXG5cdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwicmFkaW9cIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwiY2hlY2tlZFwiLCBcImNoZWNrZWRcIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcInRcIiApO1xuXG5cdGRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblxuXHQvLyBTdXBwb3J0OiBTYWZhcmkgNS4xLCBpT1MgNS4xLCBBbmRyb2lkIDQueCwgQW5kcm9pZCAyLjNcblx0Ly8gb2xkIFdlYktpdCBkb2Vzbid0IGNsb25lIGNoZWNrZWQgc3RhdGUgY29ycmVjdGx5IGluIGZyYWdtZW50c1xuXHRzdXBwb3J0LmNoZWNrQ2xvbmUgPSBkaXYuY2xvbmVOb2RlKCB0cnVlICkuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmNoZWNrZWQ7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHQvLyBDbG9uZWQgZWxlbWVudHMga2VlcCBhdHRhY2hFdmVudCBoYW5kbGVycywgd2UgdXNlIGFkZEV2ZW50TGlzdGVuZXIgb24gSUU5K1xuXHRzdXBwb3J0Lm5vQ2xvbmVFdmVudCA9ICEhZGl2LmFkZEV2ZW50TGlzdGVuZXI7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHQvLyBTaW5jZSBhdHRyaWJ1dGVzIGFuZCBwcm9wZXJ0aWVzIGFyZSB0aGUgc2FtZSBpbiBJRSxcblx0Ly8gY2xlYW5EYXRhIG11c3Qgc2V0IHByb3BlcnRpZXMgdG8gdW5kZWZpbmVkIHJhdGhlciB0aGFuIHVzZSByZW1vdmVBdHRyaWJ1dGVcblx0ZGl2WyBqUXVlcnkuZXhwYW5kbyBdID0gMTtcblx0c3VwcG9ydC5hdHRyaWJ1dGVzID0gIWRpdi5nZXRBdHRyaWJ1dGUoIGpRdWVyeS5leHBhbmRvICk7XG59ICkoKTtcblxuXG4vLyBXZSBoYXZlIHRvIGNsb3NlIHRoZXNlIHRhZ3MgdG8gc3VwcG9ydCBYSFRNTCAoIzEzMjAwKVxudmFyIHdyYXBNYXAgPSB7XG5cdG9wdGlvbjogWyAxLCBcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIiwgXCI8L3NlbGVjdD5cIiBdLFxuXHRsZWdlbmQ6IFsgMSwgXCI8ZmllbGRzZXQ+XCIsIFwiPC9maWVsZHNldD5cIiBdLFxuXHRhcmVhOiBbIDEsIFwiPG1hcD5cIiwgXCI8L21hcD5cIiBdLFxuXG5cdC8vIFN1cHBvcnQ6IElFOFxuXHRwYXJhbTogWyAxLCBcIjxvYmplY3Q+XCIsIFwiPC9vYmplY3Q+XCIgXSxcblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdGNvbDogWyAyLCBcIjx0YWJsZT48dGJvZHk+PC90Ym9keT48Y29sZ3JvdXA+XCIsIFwiPC9jb2xncm91cD48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHQvLyBJRTYtOCBjYW4ndCBzZXJpYWxpemUgbGluaywgc2NyaXB0LCBzdHlsZSwgb3IgYW55IGh0bWw1IChOb1Njb3BlKSB0YWdzLFxuXHQvLyB1bmxlc3Mgd3JhcHBlZCBpbiBhIGRpdiB3aXRoIG5vbi1icmVha2luZyBjaGFyYWN0ZXJzIGluIGZyb250IG9mIGl0LlxuXHRfZGVmYXVsdDogc3VwcG9ydC5odG1sU2VyaWFsaXplID8gWyAwLCBcIlwiLCBcIlwiIF0gOiBbIDEsIFwiWDxkaXY+XCIsIFwiPC9kaXY+XCIgXVxufTtcblxuLy8gU3VwcG9ydDogSUU4LUlFOVxud3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uO1xuXG53cmFwTWFwLnRib2R5ID0gd3JhcE1hcC50Zm9vdCA9IHdyYXBNYXAuY29sZ3JvdXAgPSB3cmFwTWFwLmNhcHRpb24gPSB3cmFwTWFwLnRoZWFkO1xud3JhcE1hcC50aCA9IHdyYXBNYXAudGQ7XG5cblxuZnVuY3Rpb24gZ2V0QWxsKCBjb250ZXh0LCB0YWcgKSB7XG5cdHZhciBlbGVtcywgZWxlbSxcblx0XHRpID0gMCxcblx0XHRmb3VuZCA9IHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiID9cblx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApIDpcblx0XHRcdHR5cGVvZiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgP1xuXHRcdFx0XHRjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyB8fCBcIipcIiApIDpcblx0XHRcdFx0dW5kZWZpbmVkO1xuXG5cdGlmICggIWZvdW5kICkge1xuXHRcdGZvciAoIGZvdW5kID0gW10sIGVsZW1zID0gY29udGV4dC5jaGlsZE5vZGVzIHx8IGNvbnRleHQ7XG5cdFx0XHQoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT0gbnVsbDtcblx0XHRcdGkrK1xuXHRcdCkge1xuXHRcdFx0aWYgKCAhdGFnIHx8IGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgdGFnICkgKSB7XG5cdFx0XHRcdGZvdW5kLnB1c2goIGVsZW0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggZm91bmQsIGdldEFsbCggZWxlbSwgdGFnICkgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdGFnID09PSB1bmRlZmluZWQgfHwgdGFnICYmIGpRdWVyeS5ub2RlTmFtZSggY29udGV4dCwgdGFnICkgP1xuXHRcdGpRdWVyeS5tZXJnZSggWyBjb250ZXh0IF0sIGZvdW5kICkgOlxuXHRcdGZvdW5kO1xufVxuXG5cbi8vIE1hcmsgc2NyaXB0cyBhcyBoYXZpbmcgYWxyZWFkeSBiZWVuIGV2YWx1YXRlZFxuZnVuY3Rpb24gc2V0R2xvYmFsRXZhbCggZWxlbXMsIHJlZkVsZW1lbnRzICkge1xuXHR2YXIgZWxlbSxcblx0XHRpID0gMDtcblx0Zm9yICggOyAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdGpRdWVyeS5fZGF0YShcblx0XHRcdGVsZW0sXG5cdFx0XHRcImdsb2JhbEV2YWxcIixcblx0XHRcdCFyZWZFbGVtZW50cyB8fCBqUXVlcnkuX2RhdGEoIHJlZkVsZW1lbnRzWyBpIF0sIFwiZ2xvYmFsRXZhbFwiIClcblx0XHQpO1xuXHR9XG59XG5cblxudmFyIHJodG1sID0gLzx8JiM/XFx3KzsvLFxuXHRydGJvZHkgPSAvPHRib2R5L2k7XG5cbmZ1bmN0aW9uIGZpeERlZmF1bHRDaGVja2VkKCBlbGVtICkge1xuXHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsZW0udHlwZSApICkge1xuXHRcdGVsZW0uZGVmYXVsdENoZWNrZWQgPSBlbGVtLmNoZWNrZWQ7XG5cdH1cbn1cblxuZnVuY3Rpb24gYnVpbGRGcmFnbWVudCggZWxlbXMsIGNvbnRleHQsIHNjcmlwdHMsIHNlbGVjdGlvbiwgaWdub3JlZCApIHtcblx0dmFyIGosIGVsZW0sIGNvbnRhaW5zLFxuXHRcdHRtcCwgdGFnLCB0Ym9keSwgd3JhcCxcblx0XHRsID0gZWxlbXMubGVuZ3RoLFxuXG5cdFx0Ly8gRW5zdXJlIGEgc2FmZSBmcmFnbWVudFxuXHRcdHNhZmUgPSBjcmVhdGVTYWZlRnJhZ21lbnQoIGNvbnRleHQgKSxcblxuXHRcdG5vZGVzID0gW10sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGVsZW0gPSBlbGVtc1sgaSBdO1xuXG5cdFx0aWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7XG5cblx0XHRcdC8vIEFkZCBub2RlcyBkaXJlY3RseVxuXHRcdFx0aWYgKCBqUXVlcnkudHlwZSggZWxlbSApID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCBlbGVtLm5vZGVUeXBlID8gWyBlbGVtIF0gOiBlbGVtICk7XG5cblx0XHRcdC8vIENvbnZlcnQgbm9uLWh0bWwgaW50byBhIHRleHQgbm9kZVxuXHRcdFx0fSBlbHNlIGlmICggIXJodG1sLnRlc3QoIGVsZW0gKSApIHtcblx0XHRcdFx0bm9kZXMucHVzaCggY29udGV4dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7XG5cblx0XHRcdC8vIENvbnZlcnQgaHRtbCBpbnRvIERPTSBub2Rlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dG1wID0gdG1wIHx8IHNhZmUuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxuXHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XG5cblx0XHRcdFx0dG1wLmlubmVySFRNTCA9IHdyYXBbIDEgXSArIGpRdWVyeS5odG1sUHJlZmlsdGVyKCBlbGVtICkgKyB3cmFwWyAyIF07XG5cblx0XHRcdFx0Ly8gRGVzY2VuZCB0aHJvdWdoIHdyYXBwZXJzIHRvIHRoZSByaWdodCBjb250ZW50XG5cdFx0XHRcdGogPSB3cmFwWyAwIF07XG5cdFx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRcdHRtcCA9IHRtcC5sYXN0Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNYW51YWxseSBhZGQgbGVhZGluZyB3aGl0ZXNwYWNlIHJlbW92ZWQgYnkgSUVcblx0XHRcdFx0aWYgKCAhc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSAmJiBybGVhZGluZ1doaXRlc3BhY2UudGVzdCggZWxlbSApICkge1xuXHRcdFx0XHRcdG5vZGVzLnB1c2goIGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoIHJsZWFkaW5nV2hpdGVzcGFjZS5leGVjKCBlbGVtIClbIDAgXSApICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZW1vdmUgSUUncyBhdXRvaW5zZXJ0ZWQgPHRib2R5PiBmcm9tIHRhYmxlIGZyYWdtZW50c1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnRib2R5ICkge1xuXG5cdFx0XHRcdFx0Ly8gU3RyaW5nIHdhcyBhIDx0YWJsZT4sICptYXkqIGhhdmUgc3B1cmlvdXMgPHRib2R5PlxuXHRcdFx0XHRcdGVsZW0gPSB0YWcgPT09IFwidGFibGVcIiAmJiAhcnRib2R5LnRlc3QoIGVsZW0gKSA/XG5cdFx0XHRcdFx0XHR0bXAuZmlyc3RDaGlsZCA6XG5cblx0XHRcdFx0XHRcdC8vIFN0cmluZyB3YXMgYSBiYXJlIDx0aGVhZD4gb3IgPHRmb290PlxuXHRcdFx0XHRcdFx0d3JhcFsgMSBdID09PSBcIjx0YWJsZT5cIiAmJiAhcnRib2R5LnRlc3QoIGVsZW0gKSA/XG5cdFx0XHRcdFx0XHRcdHRtcCA6XG5cdFx0XHRcdFx0XHRcdDA7XG5cblx0XHRcdFx0XHRqID0gZWxlbSAmJiBlbGVtLmNoaWxkTm9kZXMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkubm9kZU5hbWUoICggdGJvZHkgPSBlbGVtLmNoaWxkTm9kZXNbIGogXSApLCBcInRib2R5XCIgKSAmJlxuXHRcdFx0XHRcdFx0XHQhdGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHRcdFx0ZWxlbS5yZW1vdmVDaGlsZCggdGJvZHkgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCB0bXAuY2hpbGROb2RlcyApO1xuXG5cdFx0XHRcdC8vIEZpeCAjMTIzOTIgZm9yIFdlYktpdCBhbmQgSUUgPiA5XG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XG5cblx0XHRcdFx0Ly8gRml4ICMxMjM5MiBmb3Igb2xkSUVcblx0XHRcdFx0d2hpbGUgKCB0bXAuZmlyc3RDaGlsZCApIHtcblx0XHRcdFx0XHR0bXAucmVtb3ZlQ2hpbGQoIHRtcC5maXJzdENoaWxkICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgdG9wLWxldmVsIGNvbnRhaW5lciBmb3IgcHJvcGVyIGNsZWFudXBcblx0XHRcdFx0dG1wID0gc2FmZS5sYXN0Q2hpbGQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gRml4ICMxMTM1NjogQ2xlYXIgZWxlbWVudHMgZnJvbSBmcmFnbWVudFxuXHRpZiAoIHRtcCApIHtcblx0XHRzYWZlLnJlbW92ZUNoaWxkKCB0bXAgKTtcblx0fVxuXG5cdC8vIFJlc2V0IGRlZmF1bHRDaGVja2VkIGZvciBhbnkgcmFkaW9zIGFuZCBjaGVja2JveGVzXG5cdC8vIGFib3V0IHRvIGJlIGFwcGVuZGVkIHRvIHRoZSBET00gaW4gSUUgNi83ICgjODA2MClcblx0aWYgKCAhc3VwcG9ydC5hcHBlbmRDaGVja2VkICkge1xuXHRcdGpRdWVyeS5ncmVwKCBnZXRBbGwoIG5vZGVzLCBcImlucHV0XCIgKSwgZml4RGVmYXVsdENoZWNrZWQgKTtcblx0fVxuXG5cdGkgPSAwO1xuXHR3aGlsZSAoICggZWxlbSA9IG5vZGVzWyBpKysgXSApICkge1xuXG5cdFx0Ly8gU2tpcCBlbGVtZW50cyBhbHJlYWR5IGluIHRoZSBjb250ZXh0IGNvbGxlY3Rpb24gKHRyYWMtNDA4Nylcblx0XHRpZiAoIHNlbGVjdGlvbiAmJiBqUXVlcnkuaW5BcnJheSggZWxlbSwgc2VsZWN0aW9uICkgPiAtMSApIHtcblx0XHRcdGlmICggaWdub3JlZCApIHtcblx0XHRcdFx0aWdub3JlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHR9XG5cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5zID0galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblxuXHRcdC8vIEFwcGVuZCB0byBmcmFnbWVudFxuXHRcdHRtcCA9IGdldEFsbCggc2FmZS5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBjb250YWlucyApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHR0bXAgPSBudWxsO1xuXG5cdHJldHVybiBzYWZlO1xufVxuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBpLCBldmVudE5hbWUsXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDkgKGxhY2sgc3VibWl0L2NoYW5nZSBidWJibGUpLCBGaXJlZm94IChsYWNrIGZvY3VzKGluIHwgb3V0KSBldmVudHMpXG5cdGZvciAoIGkgaW4geyBzdWJtaXQ6IHRydWUsIGNoYW5nZTogdHJ1ZSwgZm9jdXNpbjogdHJ1ZSB9ICkge1xuXHRcdGV2ZW50TmFtZSA9IFwib25cIiArIGk7XG5cblx0XHRpZiAoICEoIHN1cHBvcnRbIGkgXSA9IGV2ZW50TmFtZSBpbiB3aW5kb3cgKSApIHtcblxuXHRcdFx0Ly8gQmV3YXJlIG9mIENTUCByZXN0cmljdGlvbnMgKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL1NlY3VyaXR5L0NTUClcblx0XHRcdGRpdi5zZXRBdHRyaWJ1dGUoIGV2ZW50TmFtZSwgXCJ0XCIgKTtcblx0XHRcdHN1cHBvcnRbIGkgXSA9IGRpdi5hdHRyaWJ1dGVzWyBldmVudE5hbWUgXS5leHBhbmRvID09PSBmYWxzZTtcblx0XHR9XG5cdH1cblxuXHQvLyBOdWxsIGVsZW1lbnRzIHRvIGF2b2lkIGxlYWtzIGluIElFLlxuXHRkaXYgPSBudWxsO1xufSApKCk7XG5cblxudmFyIHJmb3JtRWxlbXMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYSkkL2ksXG5cdHJrZXlFdmVudCA9IC9ea2V5Lyxcblx0cm1vdXNlRXZlbnQgPSAvXig/Om1vdXNlfHBvaW50ZXJ8Y29udGV4dG1lbnV8ZHJhZ3xkcm9wKXxjbGljay8sXG5cdHJmb2N1c01vcnBoID0gL14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLFxuXHRydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlxcLiguKyl8KS87XG5cbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcblx0cmV0dXJuIGZhbHNlO1xufVxuXG4vLyBTdXBwb3J0OiBJRTlcbi8vIFNlZSAjMTMzOTMgZm9yIG1vcmUgaW5mb1xuZnVuY3Rpb24gc2FmZUFjdGl2ZUVsZW1lbnQoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG5cdH0gY2F0Y2ggKCBlcnIgKSB7IH1cbn1cblxuZnVuY3Rpb24gb24oIGVsZW0sIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIG9uZSApIHtcblx0dmFyIG9yaWdGbiwgdHlwZTtcblxuXHQvLyBUeXBlcyBjYW4gYmUgYSBtYXAgb2YgdHlwZXMvaGFuZGxlcnNcblx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKVxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLU9iamVjdCwgZGF0YSApXG5cdFx0XHRkYXRhID0gZGF0YSB8fCBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIGRhdGEgPT0gbnVsbCAmJiBmbiA9PSBudWxsICkge1xuXG5cdFx0Ly8gKCB0eXBlcywgZm4gKVxuXHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKCBmbiA9PSBudWxsICkge1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBzZWxlY3RvciwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0fSBlbHNlIGlmICggIWZuICkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBvbmUgPT09IDEgKSB7XG5cdFx0b3JpZ0ZuID0gZm47XG5cdFx0Zm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdC8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mb1xuXHRcdFx0alF1ZXJ5KCkub2ZmKCBldmVudCApO1xuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fTtcblxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXG5cdFx0Zm4uZ3VpZCA9IG9yaWdGbi5ndWlkIHx8ICggb3JpZ0ZuLmd1aWQgPSBqUXVlcnkuZ3VpZCsrICk7XG5cdH1cblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0alF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgdHlwZXMsIGZuLCBkYXRhLCBzZWxlY3RvciApO1xuXHR9ICk7XG59XG5cbi8qXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXG4gKiBQcm9wcyB0byBEZWFuIEVkd2FyZHMnIGFkZEV2ZW50IGxpYnJhcnkgZm9yIG1hbnkgb2YgdGhlIGlkZWFzLlxuICovXG5qUXVlcnkuZXZlbnQgPSB7XG5cblx0Z2xvYmFsOiB7fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgZGF0YSwgc2VsZWN0b3IgKSB7XG5cdFx0dmFyIHRtcCwgZXZlbnRzLCB0LCBoYW5kbGVPYmpJbixcblx0XHRcdHNwZWNpYWwsIGV2ZW50SGFuZGxlLCBoYW5kbGVPYmosXG5cdFx0XHRoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGpRdWVyeS5fZGF0YSggZWxlbSApO1xuXG5cdFx0Ly8gRG9uJ3QgYXR0YWNoIGV2ZW50cyB0byBub0RhdGEgb3IgdGV4dC9jb21tZW50IG5vZGVzIChidXQgYWxsb3cgcGxhaW4gb2JqZWN0cylcblx0XHRpZiAoICFlbGVtRGF0YSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXJcblx0XHRpZiAoIGhhbmRsZXIuaGFuZGxlciApIHtcblx0XHRcdGhhbmRsZU9iakluID0gaGFuZGxlcjtcblx0XHRcdGhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyO1xuXHRcdFx0c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3Rvcjtcblx0XHR9XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB0aGUgaGFuZGxlciBoYXMgYSB1bmlxdWUgSUQsIHVzZWQgdG8gZmluZC9yZW1vdmUgaXQgbGF0ZXJcblx0XHRpZiAoICFoYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRoYW5kbGVyLmd1aWQgPSBqUXVlcnkuZ3VpZCsrO1xuXHRcdH1cblxuXHRcdC8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3Rcblx0XHRpZiAoICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkge1xuXHRcdFx0ZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzID0ge307XG5cdFx0fVxuXHRcdGlmICggISggZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgKSApIHtcblx0XHRcdGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7XG5cblx0XHRcdFx0Ly8gRGlzY2FyZCB0aGUgc2Vjb25kIGV2ZW50IG9mIGEgalF1ZXJ5LmV2ZW50LnRyaWdnZXIoKSBhbmRcblx0XHRcdFx0Ly8gd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZFxuXHRcdFx0XHRyZXR1cm4gdHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdCggIWUgfHwgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCAhPT0gZS50eXBlICkgP1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5kaXNwYXRjaC5hcHBseSggZXZlbnRIYW5kbGUuZWxlbSwgYXJndW1lbnRzICkgOlxuXHRcdFx0XHRcdHVuZGVmaW5lZDtcblx0XHRcdH07XG5cblx0XHRcdC8vIEFkZCBlbGVtIGFzIGEgcHJvcGVydHkgb2YgdGhlIGhhbmRsZSBmbiB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWtcblx0XHRcdC8vIHdpdGggSUUgbm9uLW5hdGl2ZSBldmVudHNcblx0XHRcdGV2ZW50SGFuZGxlLmVsZW0gPSBlbGVtO1xuXHRcdH1cblxuXHRcdC8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2Vcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lci9hdHRhY2hFdmVudCBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0Ly8gQmluZCB0aGUgZ2xvYmFsIGV2ZW50IGhhbmRsZXIgdG8gdGhlIGVsZW1lbnRcblx0XHRcdFx0XHRpZiAoIGVsZW0uYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdFx0XHRcdGVsZW0uYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgZXZlbnRIYW5kbGUsIGZhbHNlICk7XG5cblx0XHRcdFx0XHR9IGVsc2UgaWYgKCBlbGVtLmF0dGFjaEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5hdHRhY2hFdmVudCggXCJvblwiICsgdHlwZSwgZXZlbnRIYW5kbGUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBzcGVjaWFsLmFkZCApIHtcblx0XHRcdFx0c3BlY2lhbC5hZGQuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cblx0XHRcdFx0aWYgKCAhaGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlci5ndWlkID0gaGFuZGxlci5ndWlkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCB0byB0aGUgZWxlbWVudCdzIGhhbmRsZXIgbGlzdCwgZGVsZWdhdGVzIGluIGZyb250XG5cdFx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGhhbmRsZXJzLmRlbGVnYXRlQ291bnQrKywgMCwgaGFuZGxlT2JqICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRoYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gS2VlcCB0cmFjayBvZiB3aGljaCBldmVudHMgaGF2ZSBldmVyIGJlZW4gdXNlZCwgZm9yIGV2ZW50IG9wdGltaXphdGlvblxuXHRcdFx0alF1ZXJ5LmV2ZW50Lmdsb2JhbFsgdHlwZSBdID0gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBOdWxsaWZ5IGVsZW0gdG8gcHJldmVudCBtZW1vcnkgbGVha3MgaW4gSUVcblx0XHRlbGVtID0gbnVsbDtcblx0fSxcblxuXHQvLyBEZXRhY2ggYW4gZXZlbnQgb3Igc2V0IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnRcblx0cmVtb3ZlOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIHNlbGVjdG9yLCBtYXBwZWRUeXBlcyApIHtcblx0XHR2YXIgaiwgaGFuZGxlT2JqLCB0bXAsXG5cdFx0XHRvcmlnQ291bnQsIHQsIGV2ZW50cyxcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLFxuXHRcdFx0bmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGpRdWVyeS5oYXNEYXRhKCBlbGVtICkgJiYgalF1ZXJ5Ll9kYXRhKCBlbGVtICk7XG5cblx0XHRpZiAoICFlbGVtRGF0YSB8fCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBPbmNlIGZvciBlYWNoIHR5cGUubmFtZXNwYWNlIGluIHR5cGVzOyB0eXBlIG1heSBiZSBvbWl0dGVkXG5cdFx0dHlwZXMgPSAoIHR5cGVzIHx8IFwiXCIgKS5tYXRjaCggcm5vdHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVW5iaW5kIGFsbCBldmVudHMgKG9uIHRoaXMgbmFtZXNwYWNlLCBpZiBwcm92aWRlZCkgZm9yIHRoZSBlbGVtZW50XG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICsgdHlwZXNbIHQgXSwgaGFuZGxlciwgc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdO1xuXHRcdFx0dG1wID0gdG1wWyAyIF0gJiZcblx0XHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICk7XG5cblx0XHRcdC8vIFJlbW92ZSBtYXRjaGluZyBldmVudHNcblx0XHRcdG9yaWdDb3VudCA9IGogPSBoYW5kbGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGogXTtcblxuXHRcdFx0XHRpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmXG5cdFx0XHRcdFx0KCAhaGFuZGxlciB8fCBoYW5kbGVyLmd1aWQgPT09IGhhbmRsZU9iai5ndWlkICkgJiZcblx0XHRcdFx0XHQoICF0bXAgfHwgdG1wLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApICYmXG5cdFx0XHRcdFx0KCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fFxuXHRcdFx0XHRcdFx0c2VsZWN0b3IgPT09IFwiKipcIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHtcblx0XHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGosIDEgKTtcblxuXHRcdFx0XHRcdGlmICggaGFuZGxlT2JqLnNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudC0tO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNwZWNpYWwucmVtb3ZlICkge1xuXHRcdFx0XHRcdFx0c3BlY2lhbC5yZW1vdmUuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBnZW5lcmljIGV2ZW50IGhhbmRsZXIgaWYgd2UgcmVtb3ZlZCBzb21ldGhpbmcgYW5kIG5vIG1vcmUgaGFuZGxlcnMgZXhpc3Rcblx0XHRcdC8vIChhdm9pZHMgcG90ZW50aWFsIGZvciBlbmRsZXNzIHJlY3Vyc2lvbiBkdXJpbmcgcmVtb3ZhbCBvZiBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzKVxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC50ZWFyZG93biB8fFxuXHRcdFx0XHRcdHNwZWNpYWwudGVhcmRvd24uY2FsbCggZWxlbSwgbmFtZXNwYWNlcywgZWxlbURhdGEuaGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBlbGVtRGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGRlbGV0ZSBldmVudHNbIHR5cGUgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgaXQncyBubyBsb25nZXIgdXNlZFxuXHRcdGlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkge1xuXHRcdFx0ZGVsZXRlIGVsZW1EYXRhLmhhbmRsZTtcblxuXHRcdFx0Ly8gcmVtb3ZlRGF0YSBhbHNvIGNoZWNrcyBmb3IgZW1wdGluZXNzIGFuZCBjbGVhcnMgdGhlIGV4cGFuZG8gaWYgZW1wdHlcblx0XHRcdC8vIHNvIHVzZSBpdCBpbnN0ZWFkIG9mIGRlbGV0ZVxuXHRcdFx0alF1ZXJ5Ll9yZW1vdmVEYXRhKCBlbGVtLCBcImV2ZW50c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkge1xuXHRcdHZhciBoYW5kbGUsIG9udHlwZSwgY3VyLFxuXHRcdFx0YnViYmxlVHlwZSwgc3BlY2lhbCwgdG1wLCBpLFxuXHRcdFx0ZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRvY3VtZW50IF0sXG5cdFx0XHR0eXBlID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcInR5cGVcIiApID8gZXZlbnQudHlwZSA6IGV2ZW50LFxuXHRcdFx0bmFtZXNwYWNlcyA9IGhhc093bi5jYWxsKCBldmVudCwgXCJuYW1lc3BhY2VcIiApID8gZXZlbnQubmFtZXNwYWNlLnNwbGl0KCBcIi5cIiApIDogW107XG5cblx0XHRjdXIgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXG5cdFx0Ly8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNClcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIXNwZWNpYWwubm9CdWJibGUgJiYgIWpRdWVyeS5pc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRidWJibGVUeXBlID0gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgfHwgdHlwZTtcblx0XHRcdGlmICggIXJmb2N1c01vcnBoLnRlc3QoIGJ1YmJsZVR5cGUgKyB0eXBlICkgKSB7XG5cdFx0XHRcdGN1ciA9IGN1ci5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXHRcdFx0Zm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggY3VyICk7XG5cdFx0XHRcdHRtcCA9IGN1cjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT25seSBhZGQgd2luZG93IGlmIHdlIGdvdCB0byBkb2N1bWVudCAoZS5nLiwgbm90IHBsYWluIG9iaiBvciBkZXRhY2hlZCBET00pXG5cdFx0XHRpZiAoIHRtcCA9PT0gKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQgKSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIHRtcC5kZWZhdWx0VmlldyB8fCB0bXAucGFyZW50V2luZG93IHx8IHdpbmRvdyApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZpcmUgaGFuZGxlcnMgb24gdGhlIGV2ZW50IHBhdGhcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggY3VyID0gZXZlbnRQYXRoWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRldmVudC50eXBlID0gaSA+IDEgP1xuXHRcdFx0XHRidWJibGVUeXBlIDpcblx0XHRcdFx0c3BlY2lhbC5iaW5kVHlwZSB8fCB0eXBlO1xuXG5cdFx0XHQvLyBqUXVlcnkgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gKCBqUXVlcnkuX2RhdGEoIGN1ciwgXCJldmVudHNcIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSAmJlxuXHRcdFx0XHRqUXVlcnkuX2RhdGEoIGN1ciwgXCJoYW5kbGVcIiApO1xuXG5cdFx0XHRpZiAoIGhhbmRsZSApIHtcblx0XHRcdFx0aGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTmF0aXZlIGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9IG9udHlwZSAmJiBjdXJbIG9udHlwZSBdO1xuXHRcdFx0aWYgKCBoYW5kbGUgJiYgaGFuZGxlLmFwcGx5ICYmIGFjY2VwdERhdGEoIGN1ciApICkge1xuXHRcdFx0XHRldmVudC5yZXN1bHQgPSBoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRldmVudC50eXBlID0gdHlwZTtcblxuXHRcdC8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3dcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXG5cdFx0XHRpZiAoXG5cdFx0XHRcdCggIXNwZWNpYWwuX2RlZmF1bHQgfHxcblx0XHRcdFx0IHNwZWNpYWwuX2RlZmF1bHQuYXBwbHkoIGV2ZW50UGF0aC5wb3AoKSwgZGF0YSApID09PSBmYWxzZVxuXHRcdFx0XHQpICYmIGFjY2VwdERhdGEoIGVsZW0gKVxuXHRcdFx0KSB7XG5cblx0XHRcdFx0Ly8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBDYW4ndCB1c2UgYW4gLmlzRnVuY3Rpb24oKSBjaGVjayBoZXJlIGJlY2F1c2UgSUU2LzcgZmFpbHMgdGhhdCB0ZXN0LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGVsZW1bIHR5cGUgXSAmJiAhalF1ZXJ5LmlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlO1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRlbGVtWyB0eXBlIF0oKTtcblx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSUU8OSBkaWVzIG9uIGZvY3VzL2JsdXIgdG8gaGlkZGVuIGVsZW1lbnQgKCMxNDg2LCMxMjUxOClcblx0XHRcdFx0XHRcdC8vIG9ubHkgcmVwcm9kdWNpYmxlIG9uIHdpblhQIElFOCBuYXRpdmUsIG5vdCBJRTkgaW4gSUU4IG1vZGVcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHVuZGVmaW5lZDtcblxuXHRcdFx0XHRcdGlmICggdG1wICkge1xuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSB0bXA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LnJlc3VsdDtcblx0fSxcblxuXHRkaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0Ly8gTWFrZSBhIHdyaXRhYmxlIGpRdWVyeS5FdmVudCBmcm9tIHRoZSBuYXRpdmUgZXZlbnQgb2JqZWN0XG5cdFx0ZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBldmVudCApO1xuXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRhcmdzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzICksXG5cdFx0XHRoYW5kbGVycyA9ICggalF1ZXJ5Ll9kYXRhKCB0aGlzLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8IFtdLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XG5cblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xuXHRcdGV2ZW50LmRlbGVnYXRlVGFyZ2V0ID0gdGhpcztcblxuXHRcdC8vIENhbGwgdGhlIHByZURpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZSwgYW5kIGxldCBpdCBiYWlsIGlmIGRlc2lyZWRcblx0XHRpZiAoIHNwZWNpYWwucHJlRGlzcGF0Y2ggJiYgc3BlY2lhbC5wcmVEaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgaGFuZGxlcnNcblx0XHRoYW5kbGVyUXVldWUgPSBqUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCggdGhpcywgZXZlbnQsIGhhbmRsZXJzICk7XG5cblx0XHQvLyBSdW4gZGVsZWdhdGVzIGZpcnN0OyB0aGV5IG1heSB3YW50IHRvIHN0b3AgcHJvcGFnYXRpb24gYmVuZWF0aCB1c1xuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBtYXRjaGVkID0gaGFuZGxlclF1ZXVlWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0ZXZlbnQuY3VycmVudFRhcmdldCA9IG1hdGNoZWQuZWxlbTtcblxuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggaGFuZGxlT2JqID0gbWF0Y2hlZC5oYW5kbGVyc1sgaisrIF0gKSAmJlxuXHRcdFx0XHQhZXZlbnQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblxuXHRcdFx0XHQvLyBUcmlnZ2VyZWQgZXZlbnQgbXVzdCBlaXRoZXIgMSkgaGF2ZSBubyBuYW1lc3BhY2UsIG9yIDIpIGhhdmUgbmFtZXNwYWNlKHMpXG5cdFx0XHRcdC8vIGEgc3Vic2V0IG9yIGVxdWFsIHRvIHRob3NlIGluIHRoZSBib3VuZCBldmVudCAoYm90aCBjYW4gaGF2ZSBubyBuYW1lc3BhY2UpLlxuXHRcdFx0XHRpZiAoICFldmVudC5ybmFtZXNwYWNlIHx8IGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBtYXRjaGVzLCBzZWwsIGhhbmRsZU9iaixcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxuXHRcdFx0ZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQsXG5cdFx0XHRjdXIgPSBldmVudC50YXJnZXQ7XG5cblx0XHQvLyBTdXBwb3J0IChhdCBsZWFzdCk6IENocm9tZSwgSUU5XG5cdFx0Ly8gRmluZCBkZWxlZ2F0ZSBoYW5kbGVyc1xuXHRcdC8vIEJsYWNrLWhvbGUgU1ZHIDx1c2U+IGluc3RhbmNlIHRyZWVzICgjMTMxODApXG5cdFx0Ly9cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PD00Mitcblx0XHQvLyBBdm9pZCBub24tbGVmdC1jbGljayBpbiBGRiBidXQgZG9uJ3QgYmxvY2sgSUUgcmFkaW8gZXZlbnRzICgjMzg2MSwgZ2gtMjM0Mylcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgJiYgY3VyLm5vZGVUeXBlICYmXG5cdFx0XHQoIGV2ZW50LnR5cGUgIT09IFwiY2xpY2tcIiB8fCBpc05hTiggZXZlbnQuYnV0dG9uICkgfHwgZXZlbnQuYnV0dG9uIDwgMSApICkge1xuXG5cdFx0XHQvKiBqc2hpbnQgZXFlcWVxOiBmYWxzZSAqL1xuXHRcdFx0Zm9yICggOyBjdXIgIT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcblx0XHRcdFx0LyoganNoaW50IGVxZXFlcTogdHJ1ZSAqL1xuXG5cdFx0XHRcdC8vIERvbid0IGNoZWNrIG5vbi1lbGVtZW50cyAoIzEzMjA4KVxuXHRcdFx0XHQvLyBEb24ndCBwcm9jZXNzIGNsaWNrcyBvbiBkaXNhYmxlZCBlbGVtZW50cyAoIzY5MTEsICM4MTY1LCAjMTEzODIsICMxMTc2NClcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgKCBjdXIuZGlzYWJsZWQgIT09IHRydWUgfHwgZXZlbnQudHlwZSAhPT0gXCJjbGlja1wiICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlcyA9IFtdO1xuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTtcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKCMxMzIwMylcblx0XHRcdFx0XHRcdHNlbCA9IGhhbmRsZU9iai5zZWxlY3RvciArIFwiIFwiO1xuXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXNbIHNlbCBdID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZXNbIHNlbCBdID0gaGFuZGxlT2JqLm5lZWRzQ29udGV4dCA/XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5KCBzZWwsIHRoaXMgKS5pbmRleCggY3VyICkgPiAtMSA6XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQoIHNlbCwgdGhpcywgbnVsbCwgWyBjdXIgXSApLmxlbmd0aDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlc1sgc2VsIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZXMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggbWF0Y2hlcy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVzIH0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBZGQgdGhlIHJlbWFpbmluZyAoZGlyZWN0bHktYm91bmQpIGhhbmRsZXJzXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogdGhpcywgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XG5cdH0sXG5cblx0Zml4OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0aWYgKCBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSApIHtcblx0XHRcdHJldHVybiBldmVudDtcblx0XHR9XG5cblx0XHQvLyBDcmVhdGUgYSB3cml0YWJsZSBjb3B5IG9mIHRoZSBldmVudCBvYmplY3QgYW5kIG5vcm1hbGl6ZSBzb21lIHByb3BlcnRpZXNcblx0XHR2YXIgaSwgcHJvcCwgY29weSxcblx0XHRcdHR5cGUgPSBldmVudC50eXBlLFxuXHRcdFx0b3JpZ2luYWxFdmVudCA9IGV2ZW50LFxuXHRcdFx0Zml4SG9vayA9IHRoaXMuZml4SG9va3NbIHR5cGUgXTtcblxuXHRcdGlmICggIWZpeEhvb2sgKSB7XG5cdFx0XHR0aGlzLmZpeEhvb2tzWyB0eXBlIF0gPSBmaXhIb29rID1cblx0XHRcdFx0cm1vdXNlRXZlbnQudGVzdCggdHlwZSApID8gdGhpcy5tb3VzZUhvb2tzIDpcblx0XHRcdFx0cmtleUV2ZW50LnRlc3QoIHR5cGUgKSA/IHRoaXMua2V5SG9va3MgOlxuXHRcdFx0XHR7fTtcblx0XHR9XG5cdFx0Y29weSA9IGZpeEhvb2sucHJvcHMgPyB0aGlzLnByb3BzLmNvbmNhdCggZml4SG9vay5wcm9wcyApIDogdGhpcy5wcm9wcztcblxuXHRcdGV2ZW50ID0gbmV3IGpRdWVyeS5FdmVudCggb3JpZ2luYWxFdmVudCApO1xuXG5cdFx0aSA9IGNvcHkubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0cHJvcCA9IGNvcHlbIGkgXTtcblx0XHRcdGV2ZW50WyBwcm9wIF0gPSBvcmlnaW5hbEV2ZW50WyBwcm9wIF07XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxuXHRcdC8vIEZpeCB0YXJnZXQgcHJvcGVydHkgKCMxOTI1KVxuXHRcdGlmICggIWV2ZW50LnRhcmdldCApIHtcblx0XHRcdGV2ZW50LnRhcmdldCA9IG9yaWdpbmFsRXZlbnQuc3JjRWxlbWVudCB8fCBkb2N1bWVudDtcblx0XHR9XG5cblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgNi04K1xuXHRcdC8vIFRhcmdldCBzaG91bGQgbm90IGJlIGEgdGV4dCBub2RlICgjNTA0LCAjMTMxNDMpXG5cdFx0aWYgKCBldmVudC50YXJnZXQubm9kZVR5cGUgPT09IDMgKSB7XG5cdFx0XHRldmVudC50YXJnZXQgPSBldmVudC50YXJnZXQucGFyZW50Tm9kZTtcblx0XHR9XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gRm9yIG1vdXNlL2tleSBldmVudHMsIG1ldGFLZXk9PWZhbHNlIGlmIGl0J3MgdW5kZWZpbmVkICgjMzM2OCwgIzExMzI4KVxuXHRcdGV2ZW50Lm1ldGFLZXkgPSAhIWV2ZW50Lm1ldGFLZXk7XG5cblx0XHRyZXR1cm4gZml4SG9vay5maWx0ZXIgPyBmaXhIb29rLmZpbHRlciggZXZlbnQsIG9yaWdpbmFsRXZlbnQgKSA6IGV2ZW50O1xuXHR9LFxuXG5cdC8vIEluY2x1ZGVzIHNvbWUgZXZlbnQgcHJvcHMgc2hhcmVkIGJ5IEtleUV2ZW50IGFuZCBNb3VzZUV2ZW50XG5cdHByb3BzOiAoIFwiYWx0S2V5IGJ1YmJsZXMgY2FuY2VsYWJsZSBjdHJsS2V5IGN1cnJlbnRUYXJnZXQgZGV0YWlsIGV2ZW50UGhhc2UgXCIgK1xuXHRcdFwibWV0YUtleSByZWxhdGVkVGFyZ2V0IHNoaWZ0S2V5IHRhcmdldCB0aW1lU3RhbXAgdmlldyB3aGljaFwiICkuc3BsaXQoIFwiIFwiICksXG5cblx0Zml4SG9va3M6IHt9LFxuXG5cdGtleUhvb2tzOiB7XG5cdFx0cHJvcHM6IFwiY2hhciBjaGFyQ29kZSBrZXkga2V5Q29kZVwiLnNwbGl0KCBcIiBcIiApLFxuXHRcdGZpbHRlcjogZnVuY3Rpb24oIGV2ZW50LCBvcmlnaW5hbCApIHtcblxuXHRcdFx0Ly8gQWRkIHdoaWNoIGZvciBrZXkgZXZlbnRzXG5cdFx0XHRpZiAoIGV2ZW50LndoaWNoID09IG51bGwgKSB7XG5cdFx0XHRcdGV2ZW50LndoaWNoID0gb3JpZ2luYWwuY2hhckNvZGUgIT0gbnVsbCA/IG9yaWdpbmFsLmNoYXJDb2RlIDogb3JpZ2luYWwua2V5Q29kZTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGV2ZW50O1xuXHRcdH1cblx0fSxcblxuXHRtb3VzZUhvb2tzOiB7XG5cdFx0cHJvcHM6ICggXCJidXR0b24gYnV0dG9ucyBjbGllbnRYIGNsaWVudFkgZnJvbUVsZW1lbnQgb2Zmc2V0WCBvZmZzZXRZIFwiICtcblx0XHRcdFwicGFnZVggcGFnZVkgc2NyZWVuWCBzY3JlZW5ZIHRvRWxlbWVudFwiICkuc3BsaXQoIFwiIFwiICksXG5cdFx0ZmlsdGVyOiBmdW5jdGlvbiggZXZlbnQsIG9yaWdpbmFsICkge1xuXHRcdFx0dmFyIGJvZHksIGV2ZW50RG9jLCBkb2MsXG5cdFx0XHRcdGJ1dHRvbiA9IG9yaWdpbmFsLmJ1dHRvbixcblx0XHRcdFx0ZnJvbUVsZW1lbnQgPSBvcmlnaW5hbC5mcm9tRWxlbWVudDtcblxuXHRcdFx0Ly8gQ2FsY3VsYXRlIHBhZ2VYL1kgaWYgbWlzc2luZyBhbmQgY2xpZW50WC9ZIGF2YWlsYWJsZVxuXHRcdFx0aWYgKCBldmVudC5wYWdlWCA9PSBudWxsICYmIG9yaWdpbmFsLmNsaWVudFggIT0gbnVsbCApIHtcblx0XHRcdFx0ZXZlbnREb2MgPSBldmVudC50YXJnZXQub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudDtcblx0XHRcdFx0ZG9jID0gZXZlbnREb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0XHRib2R5ID0gZXZlbnREb2MuYm9keTtcblxuXHRcdFx0XHRldmVudC5wYWdlWCA9IG9yaWdpbmFsLmNsaWVudFggK1xuXHRcdFx0XHRcdCggZG9jICYmIGRvYy5zY3JvbGxMZWZ0IHx8IGJvZHkgJiYgYm9keS5zY3JvbGxMZWZ0IHx8IDAgKSAtXG5cdFx0XHRcdFx0KCBkb2MgJiYgZG9jLmNsaWVudExlZnQgfHwgYm9keSAmJiBib2R5LmNsaWVudExlZnQgfHwgMCApO1xuXHRcdFx0XHRldmVudC5wYWdlWSA9IG9yaWdpbmFsLmNsaWVudFkgK1xuXHRcdFx0XHRcdCggZG9jICYmIGRvYy5zY3JvbGxUb3AgIHx8IGJvZHkgJiYgYm9keS5zY3JvbGxUb3AgIHx8IDAgKSAtXG5cdFx0XHRcdFx0KCBkb2MgJiYgZG9jLmNsaWVudFRvcCAgfHwgYm9keSAmJiBib2R5LmNsaWVudFRvcCAgfHwgMCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgcmVsYXRlZFRhcmdldCwgaWYgbmVjZXNzYXJ5XG5cdFx0XHRpZiAoICFldmVudC5yZWxhdGVkVGFyZ2V0ICYmIGZyb21FbGVtZW50ICkge1xuXHRcdFx0XHRldmVudC5yZWxhdGVkVGFyZ2V0ID0gZnJvbUVsZW1lbnQgPT09IGV2ZW50LnRhcmdldCA/XG5cdFx0XHRcdFx0b3JpZ2luYWwudG9FbGVtZW50IDpcblx0XHRcdFx0XHRmcm9tRWxlbWVudDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIHdoaWNoIGZvciBjbGljazogMSA9PT0gbGVmdDsgMiA9PT0gbWlkZGxlOyAzID09PSByaWdodFxuXHRcdFx0Ly8gTm90ZTogYnV0dG9uIGlzIG5vdCBub3JtYWxpemVkLCBzbyBkb24ndCB1c2UgaXRcblx0XHRcdGlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRldmVudC53aGljaCA9ICggYnV0dG9uICYgMSA/IDEgOiAoIGJ1dHRvbiAmIDIgPyAzIDogKCBidXR0b24gJiA0ID8gMiA6IDAgKSApICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBldmVudDtcblx0XHR9XG5cdH0sXG5cblx0c3BlY2lhbDoge1xuXHRcdGxvYWQ6IHtcblxuXHRcdFx0Ly8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZFxuXHRcdFx0bm9CdWJibGU6IHRydWVcblx0XHR9LFxuXHRcdGZvY3VzOiB7XG5cblx0XHRcdC8vIEZpcmUgbmF0aXZlIGV2ZW50IGlmIHBvc3NpYmxlIHNvIGJsdXIvZm9jdXMgc2VxdWVuY2UgaXMgY29ycmVjdFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggdGhpcyAhPT0gc2FmZUFjdGl2ZUVsZW1lbnQoKSAmJiB0aGlzLmZvY3VzICkge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHR0aGlzLmZvY3VzKCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHRcdFx0XHRcdC8vIElmIHdlIGVycm9yIG9uIGZvY3VzIHRvIGhpZGRlbiBlbGVtZW50ICgjMTQ4NiwgIzEyNTE4KSxcblx0XHRcdFx0XHRcdC8vIGxldCAudHJpZ2dlcigpIHJ1biB0aGUgaGFuZGxlcnNcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWxlZ2F0ZVR5cGU6IFwiZm9jdXNpblwiXG5cdFx0fSxcblx0XHRibHVyOiB7XG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzID09PSBzYWZlQWN0aXZlRWxlbWVudCgpICYmIHRoaXMuYmx1ciApIHtcblx0XHRcdFx0XHR0aGlzLmJsdXIoKTtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWxlZ2F0ZVR5cGU6IFwiZm9jdXNvdXRcIlxuXHRcdH0sXG5cdFx0Y2xpY2s6IHtcblxuXHRcdFx0Ly8gRm9yIGNoZWNrYm94LCBmaXJlIG5hdGl2ZSBldmVudCBzbyBjaGVja2VkIHN0YXRlIHdpbGwgYmUgcmlnaHRcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5ub2RlTmFtZSggdGhpcywgXCJpbnB1dFwiICkgJiYgdGhpcy50eXBlID09PSBcImNoZWNrYm94XCIgJiYgdGhpcy5jbGljayApIHtcblx0XHRcdFx0XHR0aGlzLmNsaWNrKCk7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgZG9uJ3QgZmlyZSBuYXRpdmUgLmNsaWNrKCkgb24gbGlua3Ncblx0XHRcdF9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubm9kZU5hbWUoIGV2ZW50LnRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdC8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9uZVxuXHRzaW11bGF0ZTogZnVuY3Rpb24oIHR5cGUsIGVsZW0sIGV2ZW50ICkge1xuXHRcdHZhciBlID0galF1ZXJ5LmV4dGVuZChcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoKSxcblx0XHRcdGV2ZW50LFxuXHRcdFx0e1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRpc1NpbXVsYXRlZDogdHJ1ZVxuXG5cdFx0XHRcdC8vIFByZXZpb3VzbHksIGBvcmlnaW5hbEV2ZW50OiB7fWAgd2FzIHNldCBoZXJlLCBzbyBzdG9wUHJvcGFnYXRpb24gY2FsbFxuXHRcdFx0XHQvLyB3b3VsZCBub3QgYmUgdHJpZ2dlcmVkIG9uIGRvbm9yIGV2ZW50LCBzaW5jZSBpbiBvdXIgb3duXG5cdFx0XHRcdC8vIGpRdWVyeS5ldmVudC5zdG9wUHJvcGFnYXRpb24gZnVuY3Rpb24gd2UgaGFkIGEgY2hlY2sgZm9yIGV4aXN0ZW5jZSBvZlxuXHRcdFx0XHQvLyBvcmlnaW5hbEV2ZW50LnN0b3BQcm9wYWdhdGlvbiBtZXRob2QsIHNvLCBjb25zZXF1ZW50bHkgaXQgd291bGQgYmUgYSBub29wLlxuXHRcdFx0XHQvL1xuXHRcdFx0XHQvLyBHdWFyZCBmb3Igc2ltdWxhdGVkIGV2ZW50cyB3YXMgbW92ZWQgdG8galF1ZXJ5LmV2ZW50LnN0b3BQcm9wYWdhdGlvbiBmdW5jdGlvblxuXHRcdFx0XHQvLyBzaW5jZSBgb3JpZ2luYWxFdmVudGAgc2hvdWxkIHBvaW50IHRvIHRoZSBvcmlnaW5hbCBldmVudCBmb3IgdGhlXG5cdFx0XHRcdC8vIGNvbnN0YW5jeSB3aXRoIG90aGVyIGV2ZW50cyBhbmQgZm9yIG1vcmUgZm9jdXNlZCBsb2dpY1xuXHRcdFx0fVxuXHRcdCk7XG5cblx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggZSwgbnVsbCwgZWxlbSApO1xuXG5cdFx0aWYgKCBlLmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5yZW1vdmVFdmVudCA9IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIgP1xuXHRmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdFx0Ly8gVGhpcyBcImlmXCIgaXMgbmVlZGVkIGZvciBwbGFpbiBvYmplY3RzXG5cdFx0aWYgKCBlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHRcdH1cblx0fSA6XG5cdGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7XG5cdFx0dmFyIG5hbWUgPSBcIm9uXCIgKyB0eXBlO1xuXG5cdFx0aWYgKCBlbGVtLmRldGFjaEV2ZW50ICkge1xuXG5cdFx0XHQvLyAjODU0NSwgIzcwNTQsIHByZXZlbnRpbmcgbWVtb3J5IGxlYWtzIGZvciBjdXN0b20gZXZlbnRzIGluIElFNi04XG5cdFx0XHQvLyBkZXRhY2hFdmVudCBuZWVkZWQgcHJvcGVydHkgb24gZWxlbWVudCwgYnkgbmFtZSBvZiB0aGF0IGV2ZW50LFxuXHRcdFx0Ly8gdG8gcHJvcGVybHkgZXhwb3NlIGl0IHRvIEdDXG5cdFx0XHRpZiAoIHR5cGVvZiBlbGVtWyBuYW1lIF0gPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdGVsZW1bIG5hbWUgXSA9IG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGVsZW0uZGV0YWNoRXZlbnQoIG5hbWUsIGhhbmRsZSApO1xuXHRcdH1cblx0fTtcblxualF1ZXJ5LkV2ZW50ID0gZnVuY3Rpb24oIHNyYywgcHJvcHMgKSB7XG5cblx0Ly8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkXG5cdGlmICggISggdGhpcyBpbnN0YW5jZW9mIGpRdWVyeS5FdmVudCApICkge1xuXHRcdHJldHVybiBuZXcgalF1ZXJ5LkV2ZW50KCBzcmMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBFdmVudCBvYmplY3Rcblx0aWYgKCBzcmMgJiYgc3JjLnR5cGUgKSB7XG5cdFx0dGhpcy5vcmlnaW5hbEV2ZW50ID0gc3JjO1xuXHRcdHRoaXMudHlwZSA9IHNyYy50eXBlO1xuXG5cdFx0Ly8gRXZlbnRzIGJ1YmJsaW5nIHVwIHRoZSBkb2N1bWVudCBtYXkgaGF2ZSBiZWVuIG1hcmtlZCBhcyBwcmV2ZW50ZWRcblx0XHQvLyBieSBhIGhhbmRsZXIgbG93ZXIgZG93biB0aGUgdHJlZTsgcmVmbGVjdCB0aGUgY29ycmVjdCB2YWx1ZS5cblx0XHR0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHNyYy5kZWZhdWx0UHJldmVudGVkIHx8XG5cdFx0XHRcdHNyYy5kZWZhdWx0UHJldmVudGVkID09PSB1bmRlZmluZWQgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8IDksIEFuZHJvaWQgPCA0LjBcblx0XHRcdFx0c3JjLnJldHVyblZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRyZXR1cm5UcnVlIDpcblx0XHRcdHJldHVybkZhbHNlO1xuXG5cdC8vIEV2ZW50IHR5cGVcblx0fSBlbHNlIHtcblx0XHR0aGlzLnR5cGUgPSBzcmM7XG5cdH1cblxuXHQvLyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8gdGhlIGV2ZW50IG9iamVjdFxuXHRpZiAoIHByb3BzICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRoaXMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZVxuXHR0aGlzLnRpbWVTdGFtcCA9IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IGpRdWVyeS5ub3coKTtcblxuXHQvLyBNYXJrIGl0IGFzIGZpeGVkXG5cdHRoaXNbIGpRdWVyeS5leHBhbmRvIF0gPSB0cnVlO1xufTtcblxuLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nXG4vLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXG5cdHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0dXJuVHJ1ZTtcblx0XHRpZiAoICFlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIElmIHByZXZlbnREZWZhdWx0IGV4aXN0cywgcnVuIGl0IG9uIHRoZSBvcmlnaW5hbCBldmVudFxuXHRcdGlmICggZS5wcmV2ZW50RGVmYXVsdCApIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFXG5cdFx0Ly8gT3RoZXJ3aXNlIHNldCB0aGUgcmV0dXJuVmFsdWUgcHJvcGVydHkgb2YgdGhlIG9yaWdpbmFsIGV2ZW50IHRvIGZhbHNlXG5cdFx0fSBlbHNlIHtcblx0XHRcdGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcblx0XHR9XG5cdH0sXG5cdHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggIWUgfHwgdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiBzdG9wUHJvcGFnYXRpb24gZXhpc3RzLCBydW4gaXQgb24gdGhlIG9yaWdpbmFsIGV2ZW50XG5cdFx0aWYgKCBlLnN0b3BQcm9wYWdhdGlvbiApIHtcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUVcblx0XHQvLyBTZXQgdGhlIGNhbmNlbEJ1YmJsZSBwcm9wZXJ0eSBvZiB0aGUgb3JpZ2luYWwgZXZlbnQgdG8gdHJ1ZVxuXHRcdGUuY2FuY2VsQnViYmxlID0gdHJ1ZTtcblx0fSxcblx0c3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uICkge1xuXHRcdFx0ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cblx0XHR0aGlzLnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9XG59O1xuXG4vLyBDcmVhdGUgbW91c2VlbnRlci9sZWF2ZSBldmVudHMgdXNpbmcgbW91c2VvdmVyL291dCBhbmQgZXZlbnQtdGltZSBjaGVja3Ncbi8vIHNvIHRoYXQgZXZlbnQgZGVsZWdhdGlvbiB3b3JrcyBpbiBqUXVlcnkuXG4vLyBEbyB0aGUgc2FtZSBmb3IgcG9pbnRlcmVudGVyL3BvaW50ZXJsZWF2ZSBhbmQgcG9pbnRlcm92ZXIvcG9pbnRlcm91dFxuLy9cbi8vIFN1cHBvcnQ6IFNhZmFyaSA3IG9ubHlcbi8vIFNhZmFyaSBzZW5kcyBtb3VzZWVudGVyIHRvbyBvZnRlbjsgc2VlOlxuLy8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ3MDI1OFxuLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVkIGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS5cbmpRdWVyeS5lYWNoKCB7XG5cdG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG5cdG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIixcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXG5cdHBvaW50ZXJsZWF2ZTogXCJwb2ludGVyb3V0XCJcbn0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XG5cdFx0ZGVsZWdhdGVUeXBlOiBmaXgsXG5cdFx0YmluZFR5cGU6IGZpeCxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIHJldCxcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcblx0XHRcdFx0cmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsXG5cdFx0XHRcdGhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajtcblxuXHRcdFx0Ly8gRm9yIG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7XG5cdFx0XHRcdHJldCA9IGhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXHR9O1xufSApO1xuXG4vLyBJRSBzdWJtaXQgZGVsZWdhdGlvblxuaWYgKCAhc3VwcG9ydC5zdWJtaXQgKSB7XG5cblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWwuc3VibWl0ID0ge1xuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gT25seSBuZWVkIHRoaXMgZm9yIGRlbGVnYXRlZCBmb3JtIHN1Ym1pdCBldmVudHNcblx0XHRcdGlmICggalF1ZXJ5Lm5vZGVOYW1lKCB0aGlzLCBcImZvcm1cIiApICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdC8vIExhenktYWRkIGEgc3VibWl0IGhhbmRsZXIgd2hlbiBhIGRlc2NlbmRhbnQgZm9ybSBtYXkgcG90ZW50aWFsbHkgYmUgc3VibWl0dGVkXG5cdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCBcImNsaWNrLl9zdWJtaXQga2V5cHJlc3MuX3N1Ym1pdFwiLCBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBOb2RlIG5hbWUgY2hlY2sgYXZvaWRzIGEgVk1MLXJlbGF0ZWQgY3Jhc2ggaW4gSUUgKCM5ODA3KVxuXHRcdFx0XHR2YXIgZWxlbSA9IGUudGFyZ2V0LFxuXHRcdFx0XHRcdGZvcm0gPSBqUXVlcnkubm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApIHx8IGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJidXR0b25cIiApID9cblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD04XG5cdFx0XHRcdFx0XHQvLyBXZSB1c2UgalF1ZXJ5LnByb3AgaW5zdGVhZCBvZiBlbGVtLmZvcm1cblx0XHRcdFx0XHRcdC8vIHRvIGFsbG93IGZpeGluZyB0aGUgSUU4IGRlbGVnYXRlZCBzdWJtaXQgaXNzdWUgKGdoLTIzMzIpXG5cdFx0XHRcdFx0XHQvLyBieSAzcmQgcGFydHkgcG9seWZpbGxzL3dvcmthcm91bmRzLlxuXHRcdFx0XHRcdFx0alF1ZXJ5LnByb3AoIGVsZW0sIFwiZm9ybVwiICkgOlxuXHRcdFx0XHRcdFx0dW5kZWZpbmVkO1xuXG5cdFx0XHRcdGlmICggZm9ybSAmJiAhalF1ZXJ5Ll9kYXRhKCBmb3JtLCBcInN1Ym1pdFwiICkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZm9ybSwgXCJzdWJtaXQuX3N1Ym1pdFwiLCBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRldmVudC5fc3VibWl0QnViYmxlID0gdHJ1ZTtcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0alF1ZXJ5Ll9kYXRhKCBmb3JtLCBcInN1Ym1pdFwiLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblxuXHRcdFx0Ly8gcmV0dXJuIHVuZGVmaW5lZCBzaW5jZSB3ZSBkb24ndCBuZWVkIGFuIGV2ZW50IGxpc3RlbmVyXG5cdFx0fSxcblxuXHRcdHBvc3REaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHQvLyBJZiBmb3JtIHdhcyBzdWJtaXR0ZWQgYnkgdGhlIHVzZXIsIGJ1YmJsZSB0aGUgZXZlbnQgdXAgdGhlIHRyZWVcblx0XHRcdGlmICggZXZlbnQuX3N1Ym1pdEJ1YmJsZSApIHtcblx0XHRcdFx0ZGVsZXRlIGV2ZW50Ll9zdWJtaXRCdWJibGU7XG5cdFx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICYmICFldmVudC5pc1RyaWdnZXIgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCBcInN1Ym1pdFwiLCB0aGlzLnBhcmVudE5vZGUsIGV2ZW50ICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBPbmx5IG5lZWQgdGhpcyBmb3IgZGVsZWdhdGVkIGZvcm0gc3VibWl0IGV2ZW50c1xuXHRcdFx0aWYgKCBqUXVlcnkubm9kZU5hbWUoIHRoaXMsIFwiZm9ybVwiICkgKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGRlbGVnYXRlZCBoYW5kbGVyczsgY2xlYW5EYXRhIGV2ZW50dWFsbHkgcmVhcHMgc3VibWl0IGhhbmRsZXJzIGF0dGFjaGVkIGFib3ZlXG5cdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCBcIi5fc3VibWl0XCIgKTtcblx0XHR9XG5cdH07XG59XG5cbi8vIElFIGNoYW5nZSBkZWxlZ2F0aW9uIGFuZCBjaGVja2JveC9yYWRpbyBmaXhcbmlmICggIXN1cHBvcnQuY2hhbmdlICkge1xuXG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsLmNoYW5nZSA9IHtcblxuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblxuXHRcdFx0aWYgKCByZm9ybUVsZW1zLnRlc3QoIHRoaXMubm9kZU5hbWUgKSApIHtcblxuXHRcdFx0XHQvLyBJRSBkb2Vzbid0IGZpcmUgY2hhbmdlIG9uIGEgY2hlY2svcmFkaW8gdW50aWwgYmx1cjsgdHJpZ2dlciBpdCBvbiBjbGlja1xuXHRcdFx0XHQvLyBhZnRlciBhIHByb3BlcnR5Y2hhbmdlLiBFYXQgdGhlIGJsdXItY2hhbmdlIGluIHNwZWNpYWwuY2hhbmdlLmhhbmRsZS5cblx0XHRcdFx0Ly8gVGhpcyBzdGlsbCBmaXJlcyBvbmNoYW5nZSBhIHNlY29uZCB0aW1lIGZvciBjaGVjay9yYWRpbyBhZnRlciBibHVyLlxuXHRcdFx0XHRpZiAoIHRoaXMudHlwZSA9PT0gXCJjaGVja2JveFwiIHx8IHRoaXMudHlwZSA9PT0gXCJyYWRpb1wiICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIFwicHJvcGVydHljaGFuZ2UuX2NoYW5nZVwiLCBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lID09PSBcImNoZWNrZWRcIiApIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5fanVzdENoYW5nZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCBcImNsaWNrLl9jaGFuZ2VcIiwgZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRcdFx0aWYgKCB0aGlzLl9qdXN0Q2hhbmdlZCAmJiAhZXZlbnQuaXNUcmlnZ2VyICkge1xuXHRcdFx0XHRcdFx0XHR0aGlzLl9qdXN0Q2hhbmdlZCA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBBbGxvdyB0cmlnZ2VyZWQsIHNpbXVsYXRlZCBjaGFuZ2UgZXZlbnRzICgjMTE1MDApXG5cdFx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuc2ltdWxhdGUoIFwiY2hhbmdlXCIsIHRoaXMsIGV2ZW50ICk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRGVsZWdhdGVkIGV2ZW50OyBsYXp5LWFkZCBhIGNoYW5nZSBoYW5kbGVyIG9uIGRlc2NlbmRhbnQgaW5wdXRzXG5cdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCBcImJlZm9yZWFjdGl2YXRlLl9jaGFuZ2VcIiwgZnVuY3Rpb24oIGUgKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gZS50YXJnZXQ7XG5cblx0XHRcdFx0aWYgKCByZm9ybUVsZW1zLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSAmJiAhalF1ZXJ5Ll9kYXRhKCBlbGVtLCBcImNoYW5nZVwiICkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWxlbSwgXCJjaGFuZ2UuX2NoYW5nZVwiLCBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSAmJiAhZXZlbnQuaXNTaW11bGF0ZWQgJiYgIWV2ZW50LmlzVHJpZ2dlciApIHtcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCBcImNoYW5nZVwiLCB0aGlzLnBhcmVudE5vZGUsIGV2ZW50ICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdGpRdWVyeS5fZGF0YSggZWxlbSwgXCJjaGFuZ2VcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIGVsZW0gPSBldmVudC50YXJnZXQ7XG5cblx0XHRcdC8vIFN3YWxsb3cgbmF0aXZlIGNoYW5nZSBldmVudHMgZnJvbSBjaGVja2JveC9yYWRpbywgd2UgYWxyZWFkeSB0cmlnZ2VyZWQgdGhlbSBhYm92ZVxuXHRcdFx0aWYgKCB0aGlzICE9PSBlbGVtIHx8IGV2ZW50LmlzU2ltdWxhdGVkIHx8IGV2ZW50LmlzVHJpZ2dlciB8fFxuXHRcdFx0XHQoIGVsZW0udHlwZSAhPT0gXCJyYWRpb1wiICYmIGVsZW0udHlwZSAhPT0gXCJjaGVja2JveFwiICkgKSB7XG5cblx0XHRcdFx0cmV0dXJuIGV2ZW50LmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgXCIuX2NoYW5nZVwiICk7XG5cblx0XHRcdHJldHVybiAhcmZvcm1FbGVtcy50ZXN0KCB0aGlzLm5vZGVOYW1lICk7XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBTdXBwb3J0OiBGaXJlZm94XG4vLyBGaXJlZm94IGRvZXNuJ3QgaGF2ZSBmb2N1cyhpbiB8IG91dCkgZXZlbnRzXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY4Nzc4N1xuLy9cbi8vIFN1cHBvcnQ6IENocm9tZSwgU2FmYXJpXG4vLyBmb2N1cyhpbiB8IG91dCkgZXZlbnRzIGZpcmUgYWZ0ZXIgZm9jdXMgJiBibHVyIGV2ZW50cyxcbi8vIHdoaWNoIGlzIHNwZWMgdmlvbGF0aW9uIC0gaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudHMtZm9jdXNldmVudC1ldmVudC1vcmRlclxuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDQ5ODU3XG5pZiAoICFzdXBwb3J0LmZvY3VzaW4gKSB7XG5cdGpRdWVyeS5lYWNoKCB7IGZvY3VzOiBcImZvY3VzaW5cIiwgYmx1cjogXCJmb2N1c291dFwiIH0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cblx0XHQvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhhbmRsZXIgb24gdGhlIGRvY3VtZW50IHdoaWxlIHNvbWVvbmUgd2FudHMgZm9jdXNpbi9mb2N1c291dFxuXHRcdHZhciBoYW5kbGVyID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCBmaXgsIGV2ZW50LnRhcmdldCwgalF1ZXJ5LmV2ZW50LmZpeCggZXZlbnQgKSApO1xuXHRcdH07XG5cblx0XHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZml4IF0gPSB7XG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcyxcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGpRdWVyeS5fZGF0YSggZG9jLCBmaXggKTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MuYWRkRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGpRdWVyeS5fZGF0YSggZG9jLCBmaXgsICggYXR0YWNoZXMgfHwgMCApICsgMSApO1xuXHRcdFx0fSxcblx0XHRcdHRlYXJkb3duOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0galF1ZXJ5Ll9kYXRhKCBkb2MsIGZpeCApIC0gMTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHRcdGpRdWVyeS5fcmVtb3ZlRGF0YSggZG9jLCBmaXggKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRqUXVlcnkuX2RhdGEoIGRvYywgZml4LCBhdHRhY2hlcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fSApO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApO1xuXHR9LFxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xuXHRcdHZhciBoYW5kbGVPYmosIHR5cGU7XG5cdFx0aWYgKCB0eXBlcyAmJiB0eXBlcy5wcmV2ZW50RGVmYXVsdCAmJiB0eXBlcy5oYW5kbGVPYmogKSB7XG5cblx0XHRcdC8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnRcblx0XHRcdGhhbmRsZU9iaiA9IHR5cGVzLmhhbmRsZU9iajtcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXG5cdFx0XHRcdGhhbmRsZU9iai5uYW1lc3BhY2UgP1xuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxuXHRcdFx0XHRoYW5kbGVPYmouc2VsZWN0b3IsXG5cdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKVxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdFx0dGhpcy5vZmYoIHR5cGUsIHNlbGVjdG9yLCB0eXBlc1sgdHlwZSBdICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbnZhciByaW5saW5lalF1ZXJ5ID0gLyBqUXVlcnlcXGQrPVwiKD86bnVsbHxcXGQrKVwiL2csXG5cdHJub3NoaW1jYWNoZSA9IG5ldyBSZWdFeHAoIFwiPCg/OlwiICsgbm9kZU5hbWVzICsgXCIpW1xcXFxzLz5dXCIsIFwiaVwiICksXG5cdHJ4aHRtbFRhZyA9IC88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFtcXHc6LV0rKVtePl0qKVxcLz4vZ2ksXG5cblx0Ly8gU3VwcG9ydDogSUUgMTAtMTEsIEVkZ2UgMTAyNDArXG5cdC8vIEluIElFL0VkZ2UgdXNpbmcgcmVnZXggZ3JvdXBzIGhlcmUgY2F1c2VzIHNldmVyZSBzbG93ZG93bnMuXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxuXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXG5cdHJzY3JpcHRUeXBlTWFza2VkID0gL150cnVlXFwvKC4qKS8sXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZyxcblx0c2FmZUZyYWdtZW50ID0gY3JlYXRlU2FmZUZyYWdtZW50KCBkb2N1bWVudCApLFxuXHRmcmFnbWVudERpdiA9IHNhZmVGcmFnbWVudC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cbi8vIFN1cHBvcnQ6IElFPDhcbi8vIE1hbmlwdWxhdGluZyB0YWJsZXMgcmVxdWlyZXMgYSB0Ym9keVxuZnVuY3Rpb24gbWFuaXB1bGF0aW9uVGFyZ2V0KCBlbGVtLCBjb250ZW50ICkge1xuXHRyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCBcInRhYmxlXCIgKSAmJlxuXHRcdGpRdWVyeS5ub2RlTmFtZSggY29udGVudC5ub2RlVHlwZSAhPT0gMTEgPyBjb250ZW50IDogY29udGVudC5maXJzdENoaWxkLCBcInRyXCIgKSA/XG5cblx0XHRlbGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInRib2R5XCIgKVsgMCBdIHx8XG5cdFx0XHRlbGVtLmFwcGVuZENoaWxkKCBlbGVtLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJ0Ym9keVwiICkgKSA6XG5cdFx0ZWxlbTtcbn1cblxuLy8gUmVwbGFjZS9yZXN0b3JlIHRoZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxhdGlvblxuZnVuY3Rpb24gZGlzYWJsZVNjcmlwdCggZWxlbSApIHtcblx0ZWxlbS50eXBlID0gKCBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInR5cGVcIiApICE9PSBudWxsICkgKyBcIi9cIiArIGVsZW0udHlwZTtcblx0cmV0dXJuIGVsZW07XG59XG5mdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkge1xuXHR2YXIgbWF0Y2ggPSByc2NyaXB0VHlwZU1hc2tlZC5leGVjKCBlbGVtLnR5cGUgKTtcblx0aWYgKCBtYXRjaCApIHtcblx0XHRlbGVtLnR5cGUgPSBtYXRjaFsgMSBdO1xuXHR9IGVsc2Uge1xuXHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBcInR5cGVcIiApO1xuXHR9XG5cdHJldHVybiBlbGVtO1xufVxuXG5mdW5jdGlvbiBjbG9uZUNvcHlFdmVudCggc3JjLCBkZXN0ICkge1xuXHRpZiAoIGRlc3Qubm9kZVR5cGUgIT09IDEgfHwgIWpRdWVyeS5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHR2YXIgdHlwZSwgaSwgbCxcblx0XHRvbGREYXRhID0galF1ZXJ5Ll9kYXRhKCBzcmMgKSxcblx0XHRjdXJEYXRhID0galF1ZXJ5Ll9kYXRhKCBkZXN0LCBvbGREYXRhICksXG5cdFx0ZXZlbnRzID0gb2xkRGF0YS5ldmVudHM7XG5cblx0aWYgKCBldmVudHMgKSB7XG5cdFx0ZGVsZXRlIGN1ckRhdGEuaGFuZGxlO1xuXHRcdGN1ckRhdGEuZXZlbnRzID0ge307XG5cblx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCBkZXN0LCB0eXBlLCBldmVudHNbIHR5cGUgXVsgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gbWFrZSB0aGUgY2xvbmVkIHB1YmxpYyBkYXRhIG9iamVjdCBhIGNvcHkgZnJvbSB0aGUgb3JpZ2luYWxcblx0aWYgKCBjdXJEYXRhLmRhdGEgKSB7XG5cdFx0Y3VyRGF0YS5kYXRhID0galF1ZXJ5LmV4dGVuZCgge30sIGN1ckRhdGEuZGF0YSApO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGZpeENsb25lTm9kZUlzc3Vlcyggc3JjLCBkZXN0ICkge1xuXHR2YXIgbm9kZU5hbWUsIGUsIGRhdGE7XG5cblx0Ly8gV2UgZG8gbm90IG5lZWQgdG8gZG8gYW55dGhpbmcgZm9yIG5vbi1FbGVtZW50c1xuXHRpZiAoIGRlc3Qubm9kZVR5cGUgIT09IDEgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0bm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0Ly8gSUU2LTggY29waWVzIGV2ZW50cyBib3VuZCB2aWEgYXR0YWNoRXZlbnQgd2hlbiB1c2luZyBjbG9uZU5vZGUuXG5cdGlmICggIXN1cHBvcnQubm9DbG9uZUV2ZW50ICYmIGRlc3RbIGpRdWVyeS5leHBhbmRvIF0gKSB7XG5cdFx0ZGF0YSA9IGpRdWVyeS5fZGF0YSggZGVzdCApO1xuXG5cdFx0Zm9yICggZSBpbiBkYXRhLmV2ZW50cyApIHtcblx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZGVzdCwgZSwgZGF0YS5oYW5kbGUgKTtcblx0XHR9XG5cblx0XHQvLyBFdmVudCBkYXRhIGdldHMgcmVmZXJlbmNlZCBpbnN0ZWFkIG9mIGNvcGllZCBpZiB0aGUgZXhwYW5kbyBnZXRzIGNvcGllZCB0b29cblx0XHRkZXN0LnJlbW92ZUF0dHJpYnV0ZSggalF1ZXJ5LmV4cGFuZG8gKTtcblx0fVxuXG5cdC8vIElFIGJsYW5rcyBjb250ZW50cyB3aGVuIGNsb25pbmcgc2NyaXB0cywgYW5kIHRyaWVzIHRvIGV2YWx1YXRlIG5ld2x5LXNldCB0ZXh0XG5cdGlmICggbm9kZU5hbWUgPT09IFwic2NyaXB0XCIgJiYgZGVzdC50ZXh0ICE9PSBzcmMudGV4dCApIHtcblx0XHRkaXNhYmxlU2NyaXB0KCBkZXN0ICkudGV4dCA9IHNyYy50ZXh0O1xuXHRcdHJlc3RvcmVTY3JpcHQoIGRlc3QgKTtcblxuXHQvLyBJRTYtMTAgaW1wcm9wZXJseSBjbG9uZXMgY2hpbGRyZW4gb2Ygb2JqZWN0IGVsZW1lbnRzIHVzaW5nIGNsYXNzaWQuXG5cdC8vIElFMTAgdGhyb3dzIE5vTW9kaWZpY2F0aW9uQWxsb3dlZEVycm9yIGlmIHBhcmVudCBpcyBudWxsLCAjMTIxMzIuXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcIm9iamVjdFwiICkge1xuXHRcdGlmICggZGVzdC5wYXJlbnROb2RlICkge1xuXHRcdFx0ZGVzdC5vdXRlckhUTUwgPSBzcmMub3V0ZXJIVE1MO1xuXHRcdH1cblxuXHRcdC8vIFRoaXMgcGF0aCBhcHBlYXJzIHVuYXZvaWRhYmxlIGZvciBJRTkuIFdoZW4gY2xvbmluZyBhbiBvYmplY3Rcblx0XHQvLyBlbGVtZW50IGluIElFOSwgdGhlIG91dGVySFRNTCBzdHJhdGVneSBhYm92ZSBpcyBub3Qgc3VmZmljaWVudC5cblx0XHQvLyBJZiB0aGUgc3JjIGhhcyBpbm5lckhUTUwgYW5kIHRoZSBkZXN0aW5hdGlvbiBkb2VzIG5vdCxcblx0XHQvLyBjb3B5IHRoZSBzcmMuaW5uZXJIVE1MIGludG8gdGhlIGRlc3QuaW5uZXJIVE1MLiAjMTAzMjRcblx0XHRpZiAoIHN1cHBvcnQuaHRtbDVDbG9uZSAmJiAoIHNyYy5pbm5lckhUTUwgJiYgIWpRdWVyeS50cmltKCBkZXN0LmlubmVySFRNTCApICkgKSB7XG5cdFx0XHRkZXN0LmlubmVySFRNTCA9IHNyYy5pbm5lckhUTUw7XG5cdFx0fVxuXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgcmNoZWNrYWJsZVR5cGUudGVzdCggc3JjLnR5cGUgKSApIHtcblxuXHRcdC8vIElFNi04IGZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3hcblx0XHQvLyBvciByYWRpbyBidXR0b24uIFdvcnNlLCBJRTYtNyBmYWlsIHRvIGdpdmUgdGhlIGNsb25lZCBlbGVtZW50XG5cdFx0Ly8gYSBjaGVja2VkIGFwcGVhcmFuY2UgaWYgdGhlIGRlZmF1bHRDaGVja2VkIHZhbHVlIGlzbid0IGFsc28gc2V0XG5cblx0XHRkZXN0LmRlZmF1bHRDaGVja2VkID0gZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7XG5cblx0XHQvLyBJRTYtNyBnZXQgY29uZnVzZWQgYW5kIGVuZCB1cCBzZXR0aW5nIHRoZSB2YWx1ZSBvZiBhIGNsb25lZFxuXHRcdC8vIGNoZWNrYm94L3JhZGlvIGJ1dHRvbiB0byBhbiBlbXB0eSBzdHJpbmcgaW5zdGVhZCBvZiBcIm9uXCJcblx0XHRpZiAoIGRlc3QudmFsdWUgIT09IHNyYy52YWx1ZSApIHtcblx0XHRcdGRlc3QudmFsdWUgPSBzcmMudmFsdWU7XG5cdFx0fVxuXG5cdC8vIElFNi04IGZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkXG5cdC8vIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcIm9wdGlvblwiICkge1xuXHRcdGRlc3QuZGVmYXVsdFNlbGVjdGVkID0gZGVzdC5zZWxlY3RlZCA9IHNyYy5kZWZhdWx0U2VsZWN0ZWQ7XG5cblx0Ly8gSUU2LTggZmFpbHMgdG8gc2V0IHRoZSBkZWZhdWx0VmFsdWUgdG8gdGhlIGNvcnJlY3QgdmFsdWUgd2hlblxuXHQvLyBjbG9uaW5nIG90aGVyIHR5cGVzIG9mIGlucHV0IGZpZWxkc1xuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5vZGVOYW1lID09PSBcInRleHRhcmVhXCIgKSB7XG5cdFx0ZGVzdC5kZWZhdWx0VmFsdWUgPSBzcmMuZGVmYXVsdFZhbHVlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGRvbU1hbmlwKCBjb2xsZWN0aW9uLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApIHtcblxuXHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdGFyZ3MgPSBjb25jYXQuYXBwbHkoIFtdLCBhcmdzICk7XG5cblx0dmFyIGZpcnN0LCBub2RlLCBoYXNTY3JpcHRzLFxuXHRcdHNjcmlwdHMsIGRvYywgZnJhZ21lbnQsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuXHRcdGlOb0Nsb25lID0gbCAtIDEsXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXG5cdFx0aXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxuXHRpZiAoIGlzRnVuY3Rpb24gfHxcblx0XHRcdCggbCA+IDEgJiYgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xuXHRcdHJldHVybiBjb2xsZWN0aW9uLmVhY2goIGZ1bmN0aW9uKCBpbmRleCApIHtcblx0XHRcdHZhciBzZWxmID0gY29sbGVjdGlvbi5lcSggaW5kZXggKTtcblx0XHRcdGlmICggaXNGdW5jdGlvbiApIHtcblx0XHRcdFx0YXJnc1sgMCBdID0gdmFsdWUuY2FsbCggdGhpcywgaW5kZXgsIHNlbGYuaHRtbCgpICk7XG5cdFx0XHR9XG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoIGwgKSB7XG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHR9XG5cblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcblx0XHRpZiAoIGZpcnN0IHx8IGlnbm9yZWQgKSB7XG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxuXHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xuXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xuXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjEsIFBoYW50b21KUzwyXG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcblxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBzY3JpcHRzWyBpIF07XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHQhalF1ZXJ5Ll9kYXRhKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkge1xuXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5fZXZhbFVybCggbm9kZS5zcmMgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoXG5cdFx0XHRcdFx0XHRcdFx0KCBub2RlLnRleHQgfHwgbm9kZS50ZXh0Q29udGVudCB8fCBub2RlLmlubmVySFRNTCB8fCBcIlwiIClcblx0XHRcdFx0XHRcdFx0XHRcdC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKVxuXHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGaXggIzExODA5OiBBdm9pZCBsZWFraW5nIG1lbW9yeVxuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdCA9IG51bGw7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xuXHR2YXIgbm9kZSxcblx0XHRlbGVtcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyAoIG5vZGUgPSBlbGVtc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXG5cdFx0aWYgKCAha2VlcERhdGEgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGpRdWVyeS5jb250YWlucyggbm9kZS5vd25lckRvY3VtZW50LCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbC5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKTtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBkZXN0RWxlbWVudHMsIG5vZGUsIGNsb25lLCBpLCBzcmNFbGVtZW50cyxcblx0XHRcdGluUGFnZSA9IGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7XG5cblx0XHRpZiAoIHN1cHBvcnQuaHRtbDVDbG9uZSB8fCBqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSB8fFxuXHRcdFx0IXJub3NoaW1jYWNoZS50ZXN0KCBcIjxcIiArIGVsZW0ubm9kZU5hbWUgKyBcIj5cIiApICkge1xuXG5cdFx0XHRjbG9uZSA9IGVsZW0uY2xvbmVOb2RlKCB0cnVlICk7XG5cblx0XHQvLyBJRTw9OCBkb2VzIG5vdCBwcm9wZXJseSBjbG9uZSBkZXRhY2hlZCwgdW5rbm93biBlbGVtZW50IG5vZGVzXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZyYWdtZW50RGl2LmlubmVySFRNTCA9IGVsZW0ub3V0ZXJIVE1MO1xuXHRcdFx0ZnJhZ21lbnREaXYucmVtb3ZlQ2hpbGQoIGNsb25lID0gZnJhZ21lbnREaXYuZmlyc3RDaGlsZCApO1xuXHRcdH1cblxuXHRcdGlmICggKCAhc3VwcG9ydC5ub0Nsb25lRXZlbnQgfHwgIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgKSAmJlxuXHRcdFx0XHQoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJiAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cDovL2pzcGVyZi5jb20vZ2V0YWxsLXZzLXNpenpsZS8yXG5cdFx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7XG5cdFx0XHRzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApO1xuXG5cdFx0XHQvLyBGaXggYWxsIElFIGNsb25pbmcgaXNzdWVzXG5cdFx0XHRmb3IgKCBpID0gMDsgKCBub2RlID0gc3JjRWxlbWVudHNbIGkgXSApICE9IG51bGw7ICsraSApIHtcblxuXHRcdFx0XHQvLyBFbnN1cmUgdGhhdCB0aGUgZGVzdGluYXRpb24gbm9kZSBpcyBub3QgbnVsbDsgRml4ZXMgIzk1ODdcblx0XHRcdFx0aWYgKCBkZXN0RWxlbWVudHNbIGkgXSApIHtcblx0XHRcdFx0XHRmaXhDbG9uZU5vZGVJc3N1ZXMoIG5vZGUsIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDb3B5IHRoZSBldmVudHMgZnJvbSB0aGUgb3JpZ2luYWwgdG8gdGhlIGNsb25lXG5cdFx0aWYgKCBkYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0aWYgKCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdFx0c3JjRWxlbWVudHMgPSBzcmNFbGVtZW50cyB8fCBnZXRBbGwoIGVsZW0gKTtcblx0XHRcdFx0ZGVzdEVsZW1lbnRzID0gZGVzdEVsZW1lbnRzIHx8IGdldEFsbCggY2xvbmUgKTtcblxuXHRcdFx0XHRmb3IgKCBpID0gMDsgKCBub2RlID0gc3JjRWxlbWVudHNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0XHRjbG9uZUNvcHlFdmVudCggbm9kZSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIGVsZW0sIGNsb25lICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUsIFwic2NyaXB0XCIgKTtcblx0XHRpZiAoIGRlc3RFbGVtZW50cy5sZW5ndGggPiAwICkge1xuXHRcdFx0c2V0R2xvYmFsRXZhbCggZGVzdEVsZW1lbnRzLCAhaW5QYWdlICYmIGdldEFsbCggZWxlbSwgXCJzY3JpcHRcIiApICk7XG5cdFx0fVxuXG5cdFx0ZGVzdEVsZW1lbnRzID0gc3JjRWxlbWVudHMgPSBub2RlID0gbnVsbDtcblxuXHRcdC8vIFJldHVybiB0aGUgY2xvbmVkIHNldFxuXHRcdHJldHVybiBjbG9uZTtcblx0fSxcblxuXHRjbGVhbkRhdGE6IGZ1bmN0aW9uKCBlbGVtcywgLyogaW50ZXJuYWwgKi8gZm9yY2VBY2NlcHREYXRhICkge1xuXHRcdHZhciBlbGVtLCB0eXBlLCBpZCwgZGF0YSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0aW50ZXJuYWxLZXkgPSBqUXVlcnkuZXhwYW5kbyxcblx0XHRcdGNhY2hlID0galF1ZXJ5LmNhY2hlLFxuXHRcdFx0YXR0cmlidXRlcyA9IHN1cHBvcnQuYXR0cmlidXRlcyxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdGlmICggZm9yY2VBY2NlcHREYXRhIHx8IGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblxuXHRcdFx0XHRpZCA9IGVsZW1bIGludGVybmFsS2V5IF07XG5cdFx0XHRcdGRhdGEgPSBpZCAmJiBjYWNoZVsgaWQgXTtcblxuXHRcdFx0XHRpZiAoIGRhdGEgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdGZvciAoIHR5cGUgaW4gZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbFsgdHlwZSBdICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGEgc2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBkYXRhLmhhbmRsZSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUmVtb3ZlIGNhY2hlIG9ubHkgaWYgaXQgd2FzIG5vdCBhbHJlYWR5IHJlbW92ZWQgYnkgalF1ZXJ5LmV2ZW50LnJlbW92ZVxuXHRcdFx0XHRcdGlmICggY2FjaGVbIGlkIF0gKSB7XG5cblx0XHRcdFx0XHRcdGRlbGV0ZSBjYWNoZVsgaWQgXTtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OVxuXHRcdFx0XHRcdFx0Ly8gSUUgZG9lcyBub3QgYWxsb3cgdXMgdG8gZGVsZXRlIGV4cGFuZG8gcHJvcGVydGllcyBmcm9tIG5vZGVzXG5cdFx0XHRcdFx0XHQvLyBJRSBjcmVhdGVzIGV4cGFuZG8gYXR0cmlidXRlcyBhbG9uZyB3aXRoIHRoZSBwcm9wZXJ0eVxuXHRcdFx0XHRcdFx0Ly8gSUUgZG9lcyBub3QgaGF2ZSBhIHJlbW92ZUF0dHJpYnV0ZSBmdW5jdGlvbiBvbiBEb2N1bWVudCBub2Rlc1xuXHRcdFx0XHRcdFx0aWYgKCAhYXR0cmlidXRlcyAmJiB0eXBlb2YgZWxlbS5yZW1vdmVBdHRyaWJ1dGUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdFx0XHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBpbnRlcm5hbEtleSApO1xuXG5cdFx0XHRcdFx0XHQvLyBXZWJraXQgJiBCbGluayBwZXJmb3JtYW5jZSBzdWZmZXJzIHdoZW4gZGVsZXRpbmcgcHJvcGVydGllc1xuXHRcdFx0XHRcdFx0Ly8gZnJvbSBET00gbm9kZXMsIHNvIHNldCB0byB1bmRlZmluZWQgaW5zdGVhZFxuXHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3ODYwN1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0ZWxlbVsgaW50ZXJuYWxLZXkgXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0ZGVsZXRlZElkcy5wdXNoKCBpZCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0Ly8gS2VlcCBkb21NYW5pcCBleHBvc2VkIHVudGlsIDMuMCAoZ2gtMjIyNSlcblx0ZG9tTWFuaXA6IGRvbU1hbmlwLFxuXG5cdGRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IgKTtcblx0fSxcblxuXHR0ZXh0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkudGV4dCggdGhpcyApIDpcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZChcblx0XHRcdFx0XHQoIHRoaXNbIDAgXSAmJiB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCApLmNyZWF0ZVRleHROb2RlKCB2YWx1ZSApXG5cdFx0XHRcdCk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRhcHBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0YXJnZXQuZmlyc3RDaGlsZCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRiZWZvcmU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGFmdGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcy5uZXh0U2libGluZyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRlbXB0eTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gdGhpc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBhbmQgcHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBhbnkgcmVtYWluaW5nIG5vZGVzXG5cdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RDaGlsZCApIHtcblx0XHRcdFx0ZWxlbS5yZW1vdmVDaGlsZCggZWxlbS5maXJzdENoaWxkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoaXMgaXMgYSBzZWxlY3QsIGVuc3VyZSB0aGF0IGl0IGRpc3BsYXlzIGVtcHR5ICgjMTIzMzYpXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0XHRpZiAoIGVsZW0ub3B0aW9ucyAmJiBqUXVlcnkubm9kZU5hbWUoIGVsZW0sIFwic2VsZWN0XCIgKSApIHtcblx0XHRcdFx0ZWxlbS5vcHRpb25zLmxlbmd0aCA9IDA7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzO1xuXHRcdGRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50cztcblxuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNsb25lKCB0aGlzLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApO1xuXHRcdH0gKTtcblx0fSxcblxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF0gfHwge30sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDEgP1xuXHRcdFx0XHRcdGVsZW0uaW5uZXJIVE1MLnJlcGxhY2UoIHJpbmxpbmVqUXVlcnksIFwiXCIgKSA6XG5cdFx0XHRcdFx0dW5kZWZpbmVkO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZWUgaWYgd2UgY2FuIHRha2UgYSBzaG9ydGN1dCBhbmQganVzdCB1c2UgaW5uZXJIVE1MXG5cdFx0XHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiAhcm5vSW5uZXJodG1sLnRlc3QoIHZhbHVlICkgJiZcblx0XHRcdFx0KCBzdXBwb3J0Lmh0bWxTZXJpYWxpemUgfHwgIXJub3NoaW1jYWNoZS50ZXN0KCB2YWx1ZSApICApICYmXG5cdFx0XHRcdCggc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSB8fCAhcmxlYWRpbmdXaGl0ZXNwYWNlLnRlc3QoIHZhbHVlICkgKSAmJlxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XG5cblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlciggdmFsdWUgKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlIGVsZW1lbnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdFx0XHRlbGVtID0gdGhpc1sgaSBdIHx8IHt9O1xuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtID0gMDtcblxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2Rcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5hcHBlbmQoIHZhbHVlICk7XG5cdFx0XHR9XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGlnbm9yZWQgPSBbXTtcblxuXHRcdC8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1pZ25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudFxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG5cblx0XHRcdGlmICggalF1ZXJ5LmluQXJyYXkoIHRoaXMsIGlnbm9yZWQgKSA8IDAgKSB7XG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7XG5cdFx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRcdHBhcmVudC5yZXBsYWNlQ2hpbGQoIGVsZW0sIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvblxuXHRcdH0sIGlnbm9yZWQgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCgge1xuXHRhcHBlbmRUbzogXCJhcHBlbmRcIixcblx0cHJlcGVuZFRvOiBcInByZXBlbmRcIixcblx0aW5zZXJ0QmVmb3JlOiBcImJlZm9yZVwiLFxuXHRpbnNlcnRBZnRlcjogXCJhZnRlclwiLFxuXHRyZXBsYWNlQWxsOiBcInJlcGxhY2VXaXRoXCJcbn0sIGZ1bmN0aW9uKCBuYW1lLCBvcmlnaW5hbCApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGVsZW1zLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXSxcblx0XHRcdGluc2VydCA9IGpRdWVyeSggc2VsZWN0b3IgKSxcblx0XHRcdGxhc3QgPSBpbnNlcnQubGVuZ3RoIC0gMTtcblxuXHRcdGZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7XG5cdFx0XHRlbGVtcyA9IGkgPT09IGxhc3QgPyB0aGlzIDogdGhpcy5jbG9uZSggdHJ1ZSApO1xuXHRcdFx0alF1ZXJ5KCBpbnNlcnRbIGkgXSApWyBvcmlnaW5hbCBdKCBlbGVtcyApO1xuXG5cdFx0XHQvLyBNb2Rlcm4gYnJvd3NlcnMgY2FuIGFwcGx5IGpRdWVyeSBjb2xsZWN0aW9ucyBhcyBhcnJheXMsIGJ1dCBvbGRJRSBuZWVkcyBhIC5nZXQoKVxuXHRcdFx0cHVzaC5hcHBseSggcmV0LCBlbGVtcy5nZXQoKSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7XG5cdH07XG59ICk7XG5cblxudmFyIGlmcmFtZSxcblx0ZWxlbWRpc3BsYXkgPSB7XG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94XG5cdFx0Ly8gV2UgaGF2ZSB0byBwcmUtZGVmaW5lIHRoZXNlIHZhbHVlcyBmb3IgRkYgKCMxMDIyNylcblx0XHRIVE1MOiBcImJsb2NrXCIsXG5cdFx0Qk9EWTogXCJibG9ja1wiXG5cdH07XG5cbi8qKlxuICogUmV0cmlldmUgdGhlIGFjdHVhbCBkaXNwbGF5IG9mIGEgZWxlbWVudFxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWUgbm9kZU5hbWUgb2YgdGhlIGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkb2MgRG9jdW1lbnQgb2JqZWN0XG4gKi9cblxuLy8gQ2FsbGVkIG9ubHkgZnJvbSB3aXRoaW4gZGVmYXVsdERpc3BsYXlcbmZ1bmN0aW9uIGFjdHVhbERpc3BsYXkoIG5hbWUsIGRvYyApIHtcblx0dmFyIGVsZW0gPSBqUXVlcnkoIGRvYy5jcmVhdGVFbGVtZW50KCBuYW1lICkgKS5hcHBlbmRUbyggZG9jLmJvZHkgKSxcblxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtWyAwIF0sIFwiZGlzcGxheVwiICk7XG5cblx0Ly8gV2UgZG9uJ3QgaGF2ZSBhbnkgZGF0YSBzdG9yZWQgb24gdGhlIGVsZW1lbnQsXG5cdC8vIHNvIHVzZSBcImRldGFjaFwiIG1ldGhvZCBhcyBmYXN0IHdheSB0byBnZXQgcmlkIG9mIHRoZSBlbGVtZW50XG5cdGVsZW0uZGV0YWNoKCk7XG5cblx0cmV0dXJuIGRpc3BsYXk7XG59XG5cbi8qKlxuICogVHJ5IHRvIGRldGVybWluZSB0aGUgZGVmYXVsdCBkaXNwbGF5IHZhbHVlIG9mIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBub2RlTmFtZVxuICovXG5mdW5jdGlvbiBkZWZhdWx0RGlzcGxheSggbm9kZU5hbWUgKSB7XG5cdHZhciBkb2MgPSBkb2N1bWVudCxcblx0XHRkaXNwbGF5ID0gZWxlbWRpc3BsYXlbIG5vZGVOYW1lIF07XG5cblx0aWYgKCAhZGlzcGxheSApIHtcblx0XHRkaXNwbGF5ID0gYWN0dWFsRGlzcGxheSggbm9kZU5hbWUsIGRvYyApO1xuXG5cdFx0Ly8gSWYgdGhlIHNpbXBsZSB3YXkgZmFpbHMsIHJlYWQgZnJvbSBpbnNpZGUgYW4gaWZyYW1lXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiB8fCAhZGlzcGxheSApIHtcblxuXHRcdFx0Ly8gVXNlIHRoZSBhbHJlYWR5LWNyZWF0ZWQgaWZyYW1lIGlmIHBvc3NpYmxlXG5cdFx0XHRpZnJhbWUgPSAoIGlmcmFtZSB8fCBqUXVlcnkoIFwiPGlmcmFtZSBmcmFtZWJvcmRlcj0nMCcgd2lkdGg9JzAnIGhlaWdodD0nMCcvPlwiICkgKVxuXHRcdFx0XHQuYXBwZW5kVG8oIGRvYy5kb2N1bWVudEVsZW1lbnQgKTtcblxuXHRcdFx0Ly8gQWx3YXlzIHdyaXRlIGEgbmV3IEhUTUwgc2tlbGV0b24gc28gV2Via2l0IGFuZCBGaXJlZm94IGRvbid0IGNob2tlIG9uIHJldXNlXG5cdFx0XHRkb2MgPSAoIGlmcmFtZVsgMCBdLmNvbnRlbnRXaW5kb3cgfHwgaWZyYW1lWyAwIF0uY29udGVudERvY3VtZW50ICkuZG9jdW1lbnQ7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFXG5cdFx0XHRkb2Mud3JpdGUoKTtcblx0XHRcdGRvYy5jbG9zZSgpO1xuXG5cdFx0XHRkaXNwbGF5ID0gYWN0dWFsRGlzcGxheSggbm9kZU5hbWUsIGRvYyApO1xuXHRcdFx0aWZyYW1lLmRldGFjaCgpO1xuXHRcdH1cblxuXHRcdC8vIFN0b3JlIHRoZSBjb3JyZWN0IGRlZmF1bHQgZGlzcGxheVxuXHRcdGVsZW1kaXNwbGF5WyBub2RlTmFtZSBdID0gZGlzcGxheTtcblx0fVxuXG5cdHJldHVybiBkaXNwbGF5O1xufVxudmFyIHJtYXJnaW4gPSAoIC9ebWFyZ2luLyApO1xuXG52YXIgcm51bW5vbnB4ID0gbmV3IFJlZ0V4cCggXCJeKFwiICsgcG51bSArIFwiKSg/IXB4KVthLXolXSskXCIsIFwiaVwiICk7XG5cbnZhciBzd2FwID0gZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGNhbGxiYWNrLCBhcmdzICkge1xuXHR2YXIgcmV0LCBuYW1lLFxuXHRcdG9sZCA9IHt9O1xuXG5cdC8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0b2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdO1xuXHR9XG5cblx0cmV0ID0gY2FsbGJhY2suYXBwbHkoIGVsZW0sIGFyZ3MgfHwgW10gKTtcblxuXHQvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9sZFsgbmFtZSBdO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn07XG5cblxudmFyIGRvY3VtZW50RWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBwaXhlbFBvc2l0aW9uVmFsLCBwaXhlbE1hcmdpblJpZ2h0VmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCxcblx0XHRyZWxpYWJsZUhpZGRlbk9mZnNldHNWYWwsIHJlbGlhYmxlTWFyZ2luUmlnaHRWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCxcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdC8vIEZpbmlzaCBlYXJseSBpbiBsaW1pdGVkIChub24tYnJvd3NlcikgZW52aXJvbm1lbnRzXG5cdGlmICggIWRpdi5zdHlsZSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRkaXYuc3R5bGUuY3NzVGV4dCA9IFwiZmxvYXQ6bGVmdDtvcGFjaXR5Oi41XCI7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHQvLyBNYWtlIHN1cmUgdGhhdCBlbGVtZW50IG9wYWNpdHkgZXhpc3RzIChhcyBvcHBvc2VkIHRvIGZpbHRlcilcblx0c3VwcG9ydC5vcGFjaXR5ID0gZGl2LnN0eWxlLm9wYWNpdHkgPT09IFwiMC41XCI7XG5cblx0Ly8gVmVyaWZ5IHN0eWxlIGZsb2F0IGV4aXN0ZW5jZVxuXHQvLyAoSUUgdXNlcyBzdHlsZUZsb2F0IGluc3RlYWQgb2YgY3NzRmxvYXQpXG5cdHN1cHBvcnQuY3NzRmxvYXQgPSAhIWRpdi5zdHlsZS5jc3NGbG9hdDtcblxuXHRkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcImNvbnRlbnQtYm94XCI7XG5cdGRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiXCI7XG5cdHN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSBcImNvbnRlbnQtYm94XCI7XG5cblx0Y29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFwiYm9yZGVyOjA7d2lkdGg6OHB4O2hlaWdodDowO3RvcDowO2xlZnQ6LTk5OTlweDtcIiArXG5cdFx0XCJwYWRkaW5nOjA7bWFyZ2luLXRvcDoxcHg7cG9zaXRpb246YWJzb2x1dGVcIjtcblx0ZGl2LmlubmVySFRNTCA9IFwiXCI7XG5cdGNvbnRhaW5lci5hcHBlbmRDaGlsZCggZGl2ICk7XG5cblx0Ly8gU3VwcG9ydDogRmlyZWZveDwyOSwgQW5kcm9pZCAyLjNcblx0Ly8gVmVuZG9yLXByZWZpeCBib3gtc2l6aW5nXG5cdHN1cHBvcnQuYm94U2l6aW5nID0gZGl2LnN0eWxlLmJveFNpemluZyA9PT0gXCJcIiB8fCBkaXYuc3R5bGUuTW96Qm94U2l6aW5nID09PSBcIlwiIHx8XG5cdFx0ZGl2LnN0eWxlLldlYmtpdEJveFNpemluZyA9PT0gXCJcIjtcblxuXHRqUXVlcnkuZXh0ZW5kKCBzdXBwb3J0LCB7XG5cdFx0cmVsaWFibGVIaWRkZW5PZmZzZXRzOiBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggcGl4ZWxQb3NpdGlvblZhbCA9PSBudWxsICkge1xuXHRcdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlSGlkZGVuT2Zmc2V0c1ZhbDtcblx0XHR9LFxuXG5cdFx0Ym94U2l6aW5nUmVsaWFibGU6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBXZSdyZSBjaGVja2luZyBmb3IgcGl4ZWxQb3NpdGlvblZhbCBoZXJlIGluc3RlYWQgb2YgYm94U2l6aW5nUmVsaWFibGVWYWxcblx0XHRcdC8vIHNpbmNlIHRoYXQgY29tcHJlc3NlcyBiZXR0ZXIgYW5kIHRoZXkncmUgY29tcHV0ZWQgdG9nZXRoZXIgYW55d2F5LlxuXHRcdFx0aWYgKCBwaXhlbFBvc2l0aW9uVmFsID09IG51bGwgKSB7XG5cdFx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblxuXHRcdHBpeGVsTWFyZ2luUmlnaHQ6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMC00LjNcblx0XHRcdGlmICggcGl4ZWxQb3NpdGlvblZhbCA9PSBudWxsICkge1xuXHRcdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHBpeGVsTWFyZ2luUmlnaHRWYWw7XG5cdFx0fSxcblxuXHRcdHBpeGVsUG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBwaXhlbFBvc2l0aW9uVmFsID09IG51bGwgKSB7XG5cdFx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcGl4ZWxQb3NpdGlvblZhbDtcblx0XHR9LFxuXG5cdFx0cmVsaWFibGVNYXJnaW5SaWdodDogZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXG5cdFx0XHRpZiAoIHBpeGVsUG9zaXRpb25WYWwgPT0gbnVsbCApIHtcblx0XHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZWxpYWJsZU1hcmdpblJpZ2h0VmFsO1xuXHRcdH0sXG5cblx0XHRyZWxpYWJsZU1hcmdpbkxlZnQ6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggb25seSwgQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSAzN1xuXHRcdFx0aWYgKCBwaXhlbFBvc2l0aW9uVmFsID09IG51bGwgKSB7XG5cdFx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVNYXJnaW5MZWZ0VmFsO1xuXHRcdH1cblx0fSApO1xuXG5cdGZ1bmN0aW9uIGNvbXB1dGVTdHlsZVRlc3RzKCkge1xuXHRcdHZhciBjb250ZW50cywgZGl2U3R5bGUsXG5cdFx0XHRkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHQvLyBTZXR1cFxuXHRcdGRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXG5cdFx0XHQvLyBWZW5kb3ItcHJlZml4IGJveC1zaXppbmdcblx0XHRcdFwiLXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O1wiICtcblx0XHRcdFwicG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztcIiArXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xuXHRcdFx0XCJ0b3A6MSU7d2lkdGg6NTAlXCI7XG5cblx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0Ly8gQXNzdW1lIHJlYXNvbmFibGUgdmFsdWVzIGluIHRoZSBhYnNlbmNlIG9mIGdldENvbXB1dGVkU3R5bGVcblx0XHRwaXhlbFBvc2l0aW9uVmFsID0gYm94U2l6aW5nUmVsaWFibGVWYWwgPSByZWxpYWJsZU1hcmdpbkxlZnRWYWwgPSBmYWxzZTtcblx0XHRwaXhlbE1hcmdpblJpZ2h0VmFsID0gcmVsaWFibGVNYXJnaW5SaWdodFZhbCA9IHRydWU7XG5cblx0XHQvLyBDaGVjayBmb3IgZ2V0Q29tcHV0ZWRTdHlsZSBzbyB0aGF0IHRoaXMgY29kZSBpcyBub3QgcnVuIGluIElFPDkuXG5cdFx0aWYgKCB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSApIHtcblx0XHRcdGRpdlN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIGRpdiApO1xuXHRcdFx0cGl4ZWxQb3NpdGlvblZhbCA9ICggZGl2U3R5bGUgfHwge30gKS50b3AgIT09IFwiMSVcIjtcblx0XHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9ICggZGl2U3R5bGUgfHwge30gKS5tYXJnaW5MZWZ0ID09PSBcIjJweFwiO1xuXHRcdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSAoIGRpdlN0eWxlIHx8IHsgd2lkdGg6IFwiNHB4XCIgfSApLndpZHRoID09PSBcIjRweFwiO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5XG5cdFx0XHQvLyBTb21lIHN0eWxlcyBjb21lIGJhY2sgd2l0aCBwZXJjZW50YWdlIHZhbHVlcywgZXZlbiB0aG91Z2ggdGhleSBzaG91bGRuJ3Rcblx0XHRcdGRpdi5zdHlsZS5tYXJnaW5SaWdodCA9IFwiNTAlXCI7XG5cdFx0XHRwaXhlbE1hcmdpblJpZ2h0VmFsID0gKCBkaXZTdHlsZSB8fCB7IG1hcmdpblJpZ2h0OiBcIjRweFwiIH0gKS5tYXJnaW5SaWdodCA9PT0gXCI0cHhcIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCAyLjMgb25seVxuXHRcdFx0Ly8gRGl2IHdpdGggZXhwbGljaXQgd2lkdGggYW5kIG5vIG1hcmdpbi1yaWdodCBpbmNvcnJlY3RseVxuXHRcdFx0Ly8gZ2V0cyBjb21wdXRlZCBtYXJnaW4tcmlnaHQgYmFzZWQgb24gd2lkdGggb2YgY29udGFpbmVyICgjMzMzMylcblx0XHRcdC8vIFdlYktpdCBCdWcgMTMzNDMgLSBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgd3JvbmcgdmFsdWUgZm9yIG1hcmdpbi1yaWdodFxuXHRcdFx0Y29udGVudHMgPSBkaXYuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xuXG5cdFx0XHQvLyBSZXNldCBDU1M6IGJveC1zaXppbmc7IGRpc3BsYXk7IG1hcmdpbjsgYm9yZGVyOyBwYWRkaW5nXG5cdFx0XHRjb250ZW50cy5zdHlsZS5jc3NUZXh0ID0gZGl2LnN0eWxlLmNzc1RleHQgPVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXG5cdFx0XHRcdC8vIFZlbmRvci1wcmVmaXggYm94LXNpemluZ1xuXHRcdFx0XHRcIi13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveDstbW96LWJveC1zaXppbmc6Y29udGVudC1ib3g7XCIgK1xuXHRcdFx0XHRcImJveC1zaXppbmc6Y29udGVudC1ib3g7ZGlzcGxheTpibG9jazttYXJnaW46MDtib3JkZXI6MDtwYWRkaW5nOjBcIjtcblx0XHRcdGNvbnRlbnRzLnN0eWxlLm1hcmdpblJpZ2h0ID0gY29udGVudHMuc3R5bGUud2lkdGggPSBcIjBcIjtcblx0XHRcdGRpdi5zdHlsZS53aWR0aCA9IFwiMXB4XCI7XG5cblx0XHRcdHJlbGlhYmxlTWFyZ2luUmlnaHRWYWwgPVxuXHRcdFx0XHQhcGFyc2VGbG9hdCggKCB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggY29udGVudHMgKSB8fCB7fSApLm1hcmdpblJpZ2h0ICk7XG5cblx0XHRcdGRpdi5yZW1vdmVDaGlsZCggY29udGVudHMgKTtcblx0XHR9XG5cblx0XHQvLyBTdXBwb3J0OiBJRTYtOFxuXHRcdC8vIEZpcnN0IGNoZWNrIHRoYXQgZ2V0Q2xpZW50UmVjdHMgd29ya3MgYXMgZXhwZWN0ZWRcblx0XHQvLyBDaGVjayBpZiB0YWJsZSBjZWxscyBzdGlsbCBoYXZlIG9mZnNldFdpZHRoL0hlaWdodCB3aGVuIHRoZXkgYXJlIHNldFxuXHRcdC8vIHRvIGRpc3BsYXk6bm9uZSBhbmQgdGhlcmUgYXJlIHN0aWxsIG90aGVyIHZpc2libGUgdGFibGUgY2VsbHMgaW4gYVxuXHRcdC8vIHRhYmxlIHJvdzsgaWYgc28sIG9mZnNldFdpZHRoL0hlaWdodCBhcmUgbm90IHJlbGlhYmxlIGZvciB1c2Ugd2hlblxuXHRcdC8vIGRldGVybWluaW5nIGlmIGFuIGVsZW1lbnQgaGFzIGJlZW4gaGlkZGVuIGRpcmVjdGx5IHVzaW5nXG5cdFx0Ly8gZGlzcGxheTpub25lIChpdCBpcyBzdGlsbCBzYWZlIHRvIHVzZSBvZmZzZXRzIGlmIGEgcGFyZW50IGVsZW1lbnQgaXNcblx0XHQvLyBoaWRkZW47IGRvbiBzYWZldHkgZ29nZ2xlcyBhbmQgc2VlIGJ1ZyAjNDUxMiBmb3IgbW9yZSBpbmZvcm1hdGlvbikuXG5cdFx0ZGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblx0XHRyZWxpYWJsZUhpZGRlbk9mZnNldHNWYWwgPSBkaXYuZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggPT09IDA7XG5cdFx0aWYgKCByZWxpYWJsZUhpZGRlbk9mZnNldHNWYWwgKSB7XG5cdFx0XHRkaXYuc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHRkaXYuaW5uZXJIVE1MID0gXCI8dGFibGU+PHRyPjx0ZD48L3RkPjx0ZD50PC90ZD48L3RyPjwvdGFibGU+XCI7XG5cdFx0XHRjb250ZW50cyA9IGRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJ0ZFwiICk7XG5cdFx0XHRjb250ZW50c1sgMCBdLnN0eWxlLmNzc1RleHQgPSBcIm1hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MDtkaXNwbGF5Om5vbmVcIjtcblx0XHRcdHJlbGlhYmxlSGlkZGVuT2Zmc2V0c1ZhbCA9IGNvbnRlbnRzWyAwIF0ub2Zmc2V0SGVpZ2h0ID09PSAwO1xuXHRcdFx0aWYgKCByZWxpYWJsZUhpZGRlbk9mZnNldHNWYWwgKSB7XG5cdFx0XHRcdGNvbnRlbnRzWyAwIF0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHRcdGNvbnRlbnRzWyAxIF0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXHRcdFx0XHRyZWxpYWJsZUhpZGRlbk9mZnNldHNWYWwgPSBjb250ZW50c1sgMCBdLm9mZnNldEhlaWdodCA9PT0gMDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBUZWFyZG93blxuXHRcdGRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cdH1cblxufSApKCk7XG5cblxudmFyIGdldFN0eWxlcywgY3VyQ1NTLFxuXHRycG9zaXRpb24gPSAvXih0b3B8cmlnaHR8Ym90dG9tfGxlZnQpJC87XG5cbmlmICggd2luZG93LmdldENvbXB1dGVkU3R5bGUgKSB7XG5cdGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUU8PTExKywgRmlyZWZveDw9MzArICgjMTUwOTgsICMxNDE1MClcblx0XHQvLyBJRSB0aHJvd3Mgb24gZWxlbWVudHMgY3JlYXRlZCBpbiBwb3B1cHNcblx0XHQvLyBGRiBtZWFud2hpbGUgdGhyb3dzIG9uIGZyYW1lIGVsZW1lbnRzIHRocm91Z2ggXCJkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlXCJcblx0XHR2YXIgdmlldyA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcblxuXHRcdGlmICggIXZpZXcub3BlbmVyICkge1xuXHRcdFx0dmlldyA9IHdpbmRvdztcblx0XHR9XG5cblx0XHRyZXR1cm4gdmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtICk7XG5cdH07XG5cblx0Y3VyQ1NTID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGNvbXB1dGVkICkge1xuXHRcdHZhciB3aWR0aCwgbWluV2lkdGgsIG1heFdpZHRoLCByZXQsXG5cdFx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0XHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xuXG5cdFx0Ly8gZ2V0UHJvcGVydHlWYWx1ZSBpcyBvbmx5IG5lZWRlZCBmb3IgLmNzcygnZmlsdGVyJykgaW4gSUU5LCBzZWUgIzEyNTM3XG5cdFx0cmV0ID0gY29tcHV0ZWQgPyBjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCBuYW1lICkgfHwgY29tcHV0ZWRbIG5hbWUgXSA6IHVuZGVmaW5lZDtcblxuXHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdGlmICggcmV0ID09PSBcIlwiICYmICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApICkge1xuXHRcdFx0XHRyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdFx0Ly8gQ2hyb21lIDwgMTcgYW5kIFNhZmFyaSA1LjAgdXNlcyBcImNvbXB1dGVkIHZhbHVlXCJcblx0XHRcdC8vIGluc3RlYWQgb2YgXCJ1c2VkIHZhbHVlXCIgZm9yIG1hcmdpbi1yaWdodFxuXHRcdFx0Ly8gU2FmYXJpIDUuMS43IChhdCBsZWFzdCkgcmV0dXJucyBwZXJjZW50YWdlIGZvciBhIGxhcmdlciBzZXQgb2YgdmFsdWVzLFxuXHRcdFx0Ly8gYnV0IHdpZHRoIHNlZW1zIHRvIGJlIHJlbGlhYmx5IHBpeGVsc1xuXHRcdFx0Ly8gdGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdFx0Ly8gaHR0cDovL2Rldi53My5vcmcvY3Nzd2cvY3Nzb20vI3Jlc29sdmVkLXZhbHVlc1xuXHRcdFx0aWYgKCAhc3VwcG9ydC5waXhlbE1hcmdpblJpZ2h0KCkgJiYgcm51bW5vbnB4LnRlc3QoIHJldCApICYmIHJtYXJnaW4udGVzdCggbmFtZSApICkge1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHRoZSBvcmlnaW5hbCB2YWx1ZXNcblx0XHRcdFx0d2lkdGggPSBzdHlsZS53aWR0aDtcblx0XHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdFx0bWF4V2lkdGggPSBzdHlsZS5tYXhXaWR0aDtcblxuXHRcdFx0XHQvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0XG5cdFx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdFx0cmV0ID0gY29tcHV0ZWQud2lkdGg7XG5cblx0XHRcdFx0Ly8gUmV2ZXJ0IHRoZSBjaGFuZ2VkIHZhbHVlc1xuXHRcdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0XHRzdHlsZS5taW5XaWR0aCA9IG1pbldpZHRoO1xuXHRcdFx0XHRzdHlsZS5tYXhXaWR0aCA9IG1heFdpZHRoO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFXG5cdFx0Ly8gSUUgcmV0dXJucyB6SW5kZXggdmFsdWUgYXMgYW4gaW50ZWdlci5cblx0XHRyZXR1cm4gcmV0ID09PSB1bmRlZmluZWQgP1xuXHRcdFx0cmV0IDpcblx0XHRcdHJldCArIFwiXCI7XG5cdH07XG59IGVsc2UgaWYgKCBkb2N1bWVudEVsZW1lbnQuY3VycmVudFN0eWxlICkge1xuXHRnZXRTdHlsZXMgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5jdXJyZW50U3R5bGU7XG5cdH07XG5cblx0Y3VyQ1NTID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGNvbXB1dGVkICkge1xuXHRcdHZhciBsZWZ0LCBycywgcnNMZWZ0LCByZXQsXG5cdFx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0XHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xuXHRcdHJldCA9IGNvbXB1dGVkID8gY29tcHV0ZWRbIG5hbWUgXSA6IHVuZGVmaW5lZDtcblxuXHRcdC8vIEF2b2lkIHNldHRpbmcgcmV0IHRvIGVtcHR5IHN0cmluZyBoZXJlXG5cdFx0Ly8gc28gd2UgZG9uJ3QgZGVmYXVsdCB0byBhdXRvXG5cdFx0aWYgKCByZXQgPT0gbnVsbCAmJiBzdHlsZSAmJiBzdHlsZVsgbmFtZSBdICkge1xuXHRcdFx0cmV0ID0gc3R5bGVbIG5hbWUgXTtcblx0XHR9XG5cblx0XHQvLyBGcm9tIHRoZSBhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXG5cdFx0Ly8gaHR0cDovL2VyaWsuZWFlLm5ldC9hcmNoaXZlcy8yMDA3LzA3LzI3LzE4LjU0LjE1LyNjb21tZW50LTEwMjI5MVxuXG5cdFx0Ly8gSWYgd2UncmUgbm90IGRlYWxpbmcgd2l0aCBhIHJlZ3VsYXIgcGl4ZWwgbnVtYmVyXG5cdFx0Ly8gYnV0IGEgbnVtYmVyIHRoYXQgaGFzIGEgd2VpcmQgZW5kaW5nLCB3ZSBuZWVkIHRvIGNvbnZlcnQgaXQgdG8gcGl4ZWxzXG5cdFx0Ly8gYnV0IG5vdCBwb3NpdGlvbiBjc3MgYXR0cmlidXRlcywgYXMgdGhvc2UgYXJlXG5cdFx0Ly8gcHJvcG9ydGlvbmFsIHRvIHRoZSBwYXJlbnQgZWxlbWVudCBpbnN0ZWFkXG5cdFx0Ly8gYW5kIHdlIGNhbid0IG1lYXN1cmUgdGhlIHBhcmVudCBpbnN0ZWFkIGJlY2F1c2UgaXRcblx0XHQvLyBtaWdodCB0cmlnZ2VyIGEgXCJzdGFja2luZyBkb2xsc1wiIHByb2JsZW1cblx0XHRpZiAoIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiAhcnBvc2l0aW9uLnRlc3QoIG5hbWUgKSApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIG9yaWdpbmFsIHZhbHVlc1xuXHRcdFx0bGVmdCA9IHN0eWxlLmxlZnQ7XG5cdFx0XHRycyA9IGVsZW0ucnVudGltZVN0eWxlO1xuXHRcdFx0cnNMZWZ0ID0gcnMgJiYgcnMubGVmdDtcblxuXHRcdFx0Ly8gUHV0IGluIHRoZSBuZXcgdmFsdWVzIHRvIGdldCBhIGNvbXB1dGVkIHZhbHVlIG91dFxuXHRcdFx0aWYgKCByc0xlZnQgKSB7XG5cdFx0XHRcdHJzLmxlZnQgPSBlbGVtLmN1cnJlbnRTdHlsZS5sZWZ0O1xuXHRcdFx0fVxuXHRcdFx0c3R5bGUubGVmdCA9IG5hbWUgPT09IFwiZm9udFNpemVcIiA/IFwiMWVtXCIgOiByZXQ7XG5cdFx0XHRyZXQgPSBzdHlsZS5waXhlbExlZnQgKyBcInB4XCI7XG5cblx0XHRcdC8vIFJldmVydCB0aGUgY2hhbmdlZCB2YWx1ZXNcblx0XHRcdHN0eWxlLmxlZnQgPSBsZWZ0O1xuXHRcdFx0aWYgKCByc0xlZnQgKSB7XG5cdFx0XHRcdHJzLmxlZnQgPSByc0xlZnQ7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUVcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldHVybiByZXQgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRyZXQgOlxuXHRcdFx0cmV0ICsgXCJcIiB8fCBcImF1dG9cIjtcblx0fTtcbn1cblxuXG5cblxuZnVuY3Rpb24gYWRkR2V0SG9va0lmKCBjb25kaXRpb25GbiwgaG9va0ZuICkge1xuXG5cdC8vIERlZmluZSB0aGUgaG9vaywgd2UnbGwgY2hlY2sgb24gdGhlIGZpcnN0IHJ1biBpZiBpdCdzIHJlYWxseSBuZWVkZWQuXG5cdHJldHVybiB7XG5cdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggY29uZGl0aW9uRm4oKSApIHtcblxuXHRcdFx0XHQvLyBIb29rIG5vdCBuZWVkZWQgKG9yIGl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBpdCBkdWVcblx0XHRcdFx0Ly8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LlxuXHRcdFx0XHRkZWxldGUgdGhpcy5nZXQ7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSG9vayBuZWVkZWQ7IHJlZGVmaW5lIGl0IHNvIHRoYXQgdGhlIHN1cHBvcnQgdGVzdCBpcyBub3QgZXhlY3V0ZWQgYWdhaW4uXG5cdFx0XHRyZXR1cm4gKCB0aGlzLmdldCA9IGhvb2tGbiApLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9XG5cdH07XG59XG5cblxudmFyXG5cblx0XHRyYWxwaGEgPSAvYWxwaGFcXChbXildKlxcKS9pLFxuXHRyb3BhY2l0eSA9IC9vcGFjaXR5XFxzKj1cXHMqKFteKV0qKS9pLFxuXG5cdC8vIHN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGUgZXhjZXB0XG5cdC8vIFwidGFibGVcIiwgXCJ0YWJsZS1jZWxsXCIsIG9yIFwidGFibGUtY2FwdGlvblwiXG5cdC8vIHNlZSBoZXJlIGZvciBkaXNwbGF5IHZhbHVlczpcblx0Ly8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9DU1MvZGlzcGxheVxuXHRyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sXG5cdHJudW1zcGxpdCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoLiopJFwiLCBcImlcIiApLFxuXG5cdGNzc1Nob3cgPSB7IHBvc2l0aW9uOiBcImFic29sdXRlXCIsIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIGRpc3BsYXk6IFwiYmxvY2tcIiB9LFxuXHRjc3NOb3JtYWxUcmFuc2Zvcm0gPSB7XG5cdFx0bGV0dGVyU3BhY2luZzogXCIwXCIsXG5cdFx0Zm9udFdlaWdodDogXCI0MDBcIlxuXHR9LFxuXG5cdGNzc1ByZWZpeGVzID0gWyBcIldlYmtpdFwiLCBcIk9cIiwgXCJNb3pcIiwgXCJtc1wiIF0sXG5cdGVtcHR5U3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkuc3R5bGU7XG5cblxuLy8gcmV0dXJuIGEgY3NzIHByb3BlcnR5IG1hcHBlZCB0byBhIHBvdGVudGlhbGx5IHZlbmRvciBwcmVmaXhlZCBwcm9wZXJ0eVxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XG5cblx0Ly8gc2hvcnRjdXQgZm9yIG5hbWVzIHRoYXQgYXJlIG5vdCB2ZW5kb3IgcHJlZml4ZWRcblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cblxuXHQvLyBjaGVjayBmb3IgdmVuZG9yIHByZWZpeGVkIG5hbWVzXG5cdHZhciBjYXBOYW1lID0gbmFtZS5jaGFyQXQoIDAgKS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHNob3dIaWRlKCBlbGVtZW50cywgc2hvdyApIHtcblx0dmFyIGRpc3BsYXksIGVsZW0sIGhpZGRlbixcblx0XHR2YWx1ZXMgPSBbXSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHR2YWx1ZXNbIGluZGV4IF0gPSBqUXVlcnkuX2RhdGEoIGVsZW0sIFwib2xkZGlzcGxheVwiICk7XG5cdFx0ZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheTtcblx0XHRpZiAoIHNob3cgKSB7XG5cblx0XHRcdC8vIFJlc2V0IHRoZSBpbmxpbmUgZGlzcGxheSBvZiB0aGlzIGVsZW1lbnQgdG8gbGVhcm4gaWYgaXQgaXNcblx0XHRcdC8vIGJlaW5nIGhpZGRlbiBieSBjYXNjYWRlZCBydWxlcyBvciBub3Rcblx0XHRcdGlmICggIXZhbHVlc1sgaW5kZXggXSAmJiBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IGVsZW1lbnRzIHdoaWNoIGhhdmUgYmVlbiBvdmVycmlkZGVuIHdpdGggZGlzcGxheTogbm9uZVxuXHRcdFx0Ly8gaW4gYSBzdHlsZXNoZWV0IHRvIHdoYXRldmVyIHRoZSBkZWZhdWx0IGJyb3dzZXIgc3R5bGUgaXNcblx0XHRcdC8vIGZvciBzdWNoIGFuIGVsZW1lbnRcblx0XHRcdGlmICggZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmIGlzSGlkZGVuKCBlbGVtICkgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9XG5cdFx0XHRcdFx0alF1ZXJ5Ll9kYXRhKCBlbGVtLCBcIm9sZGRpc3BsYXlcIiwgZGVmYXVsdERpc3BsYXkoIGVsZW0ubm9kZU5hbWUgKSApO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRoaWRkZW4gPSBpc0hpZGRlbiggZWxlbSApO1xuXG5cdFx0XHRpZiAoIGRpc3BsYXkgJiYgZGlzcGxheSAhPT0gXCJub25lXCIgfHwgIWhpZGRlbiApIHtcblx0XHRcdFx0alF1ZXJ5Ll9kYXRhKFxuXHRcdFx0XHRcdGVsZW0sXG5cdFx0XHRcdFx0XCJvbGRkaXNwbGF5XCIsXG5cdFx0XHRcdFx0aGlkZGVuID8gZGlzcGxheSA6IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBTZXQgdGhlIGRpc3BsYXkgb2YgbW9zdCBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcFxuXHQvLyB0byBhdm9pZCB0aGUgY29uc3RhbnQgcmVmbG93XG5cdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cdFx0aWYgKCAhc2hvdyB8fCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiIHx8IGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IHNob3cgPyB2YWx1ZXNbIGluZGV4IF0gfHwgXCJcIiA6IFwibm9uZVwiO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50cztcbn1cblxuZnVuY3Rpb24gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApIHtcblx0dmFyIG1hdGNoZXMgPSBybnVtc3BsaXQuZXhlYyggdmFsdWUgKTtcblx0cmV0dXJuIG1hdGNoZXMgP1xuXG5cdFx0Ly8gR3VhcmQgYWdhaW5zdCB1bmRlZmluZWQgXCJzdWJ0cmFjdFwiLCBlLmcuLCB3aGVuIHVzZWQgYXMgaW4gY3NzSG9va3Ncblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMSBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMiBdIHx8IFwicHhcIiApIDpcblx0XHR2YWx1ZTtcbn1cblxuZnVuY3Rpb24gYXVnbWVudFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhLCBpc0JvcmRlckJveCwgc3R5bGVzICkge1xuXHR2YXIgaSA9IGV4dHJhID09PSAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICkgP1xuXG5cdFx0Ly8gSWYgd2UgYWxyZWFkeSBoYXZlIHRoZSByaWdodCBtZWFzdXJlbWVudCwgYXZvaWQgYXVnbWVudGF0aW9uXG5cdFx0NCA6XG5cblx0XHQvLyBPdGhlcndpc2UgaW5pdGlhbGl6ZSBmb3IgaG9yaXpvbnRhbCBvciB2ZXJ0aWNhbCBwcm9wZXJ0aWVzXG5cdFx0bmFtZSA9PT0gXCJ3aWR0aFwiID8gMSA6IDAsXG5cblx0XHR2YWwgPSAwO1xuXG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHtcblxuXHRcdC8vIGJvdGggYm94IG1vZGVscyBleGNsdWRlIG1hcmdpbiwgc28gYWRkIGl0IGlmIHdlIHdhbnQgaXRcblx0XHRpZiAoIGV4dHJhID09PSBcIm1hcmdpblwiICkge1xuXHRcdFx0dmFsICs9IGpRdWVyeS5jc3MoIGVsZW0sIGV4dHJhICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdGlmICggaXNCb3JkZXJCb3ggKSB7XG5cblx0XHRcdC8vIGJvcmRlci1ib3ggaW5jbHVkZXMgcGFkZGluZywgc28gcmVtb3ZlIGl0IGlmIHdlIHdhbnQgY29udGVudFxuXHRcdFx0aWYgKCBleHRyYSA9PT0gXCJjb250ZW50XCIgKSB7XG5cdFx0XHRcdHZhbCAtPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBhZGRpbmdcIiArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYXQgdGhpcyBwb2ludCwgZXh0cmEgaXNuJ3QgYm9yZGVyIG5vciBtYXJnaW4sIHNvIHJlbW92ZSBib3JkZXJcblx0XHRcdGlmICggZXh0cmEgIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRcdHZhbCAtPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIGF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGNvbnRlbnQsIHNvIGFkZCBwYWRkaW5nXG5cdFx0XHR2YWwgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIGF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGNvbnRlbnQgbm9yIHBhZGRpbmcsIHNvIGFkZCBib3JkZXJcblx0XHRcdGlmICggZXh0cmEgIT09IFwicGFkZGluZ1wiICkge1xuXHRcdFx0XHR2YWwgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdmFsO1xufVxuXG5mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBuYW1lLCBleHRyYSApIHtcblxuXHQvLyBTdGFydCB3aXRoIG9mZnNldCBwcm9wZXJ0eSwgd2hpY2ggaXMgZXF1aXZhbGVudCB0byB0aGUgYm9yZGVyLWJveCB2YWx1ZVxuXHR2YXIgdmFsdWVJc0JvcmRlckJveCA9IHRydWUsXG5cdFx0dmFsID0gbmFtZSA9PT0gXCJ3aWR0aFwiID8gZWxlbS5vZmZzZXRXaWR0aCA6IGVsZW0ub2Zmc2V0SGVpZ2h0LFxuXHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLFxuXHRcdGlzQm9yZGVyQm94ID0gc3VwcG9ydC5ib3hTaXppbmcgJiZcblx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCI7XG5cblx0Ly8gU3VwcG9ydDogSUUxMSBvbmx5XG5cdC8vIEluIElFIDExIGZ1bGxzY3JlZW4gZWxlbWVudHMgaW5zaWRlIG9mIGFuIGlmcmFtZSBoYXZlXG5cdC8vIDEwMHggdG9vIHNtYWxsIGRpbWVuc2lvbnMgKGdoLTE3NjQpLlxuXHRpZiAoIGRvY3VtZW50Lm1zRnVsbHNjcmVlbkVsZW1lbnQgJiYgd2luZG93LnRvcCAhPT0gd2luZG93ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUxMSBvbmx5XG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYSBkaXNjb25uZWN0ZWQgbm9kZVxuXHRcdC8vIGluIElFIHRocm93cyBhbiBlcnJvci5cblx0XHRpZiAoIGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0XHR2YWwgPSBNYXRoLnJvdW5kKCBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpWyBuYW1lIF0gKiAxMDAgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBzb21lIG5vbi1odG1sIGVsZW1lbnRzIHJldHVybiB1bmRlZmluZWQgZm9yIG9mZnNldFdpZHRoLCBzbyBjaGVjayBmb3IgbnVsbC91bmRlZmluZWRcblx0Ly8gc3ZnIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NjQ5Mjg1XG5cdC8vIE1hdGhNTCAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTQ5MTY2OFxuXHRpZiAoIHZhbCA8PSAwIHx8IHZhbCA9PSBudWxsICkge1xuXG5cdFx0Ly8gRmFsbCBiYWNrIHRvIGNvbXB1dGVkIHRoZW4gdW5jb21wdXRlZCBjc3MgaWYgbmVjZXNzYXJ5XG5cdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHRpZiAoIHZhbCA8IDAgfHwgdmFsID09IG51bGwgKSB7XG5cdFx0XHR2YWwgPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0Ly8gQ29tcHV0ZWQgdW5pdCBpcyBub3QgcGl4ZWxzLiBTdG9wIGhlcmUgYW5kIHJldHVybi5cblx0XHRpZiAoIHJudW1ub25weC50ZXN0KCB2YWwgKSApIHtcblx0XHRcdHJldHVybiB2YWw7XG5cdFx0fVxuXG5cdFx0Ly8gd2UgbmVlZCB0aGUgY2hlY2sgZm9yIHN0eWxlIGluIGNhc2UgYSBicm93c2VyIHdoaWNoIHJldHVybnMgdW5yZWxpYWJsZSB2YWx1ZXNcblx0XHQvLyBmb3IgZ2V0Q29tcHV0ZWRTdHlsZSBzaWxlbnRseSBmYWxscyBiYWNrIHRvIHRoZSByZWxpYWJsZSBlbGVtLnN0eWxlXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IGlzQm9yZGVyQm94ICYmXG5cdFx0XHQoIHN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCB2YWwgPT09IGVsZW0uc3R5bGVbIG5hbWUgXSApO1xuXG5cdFx0Ly8gTm9ybWFsaXplIFwiXCIsIGF1dG8sIGFuZCBwcmVwYXJlIGZvciBleHRyYVxuXHRcdHZhbCA9IHBhcnNlRmxvYXQoIHZhbCApIHx8IDA7XG5cdH1cblxuXHQvLyB1c2UgdGhlIGFjdGl2ZSBib3gtc2l6aW5nIG1vZGVsIHRvIGFkZC9zdWJ0cmFjdCBpcnJlbGV2YW50IHN0eWxlc1xuXHRyZXR1cm4gKCB2YWwgK1xuXHRcdGF1Z21lbnRXaWR0aE9ySGVpZ2h0KFxuXHRcdFx0ZWxlbSxcblx0XHRcdG5hbWUsXG5cdFx0XHRleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICksXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxuXHRcdFx0c3R5bGVzXG5cdFx0KVxuXHQpICsgXCJweFwiO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQWRkIGluIHN0eWxlIHByb3BlcnR5IGhvb2tzIGZvciBvdmVycmlkaW5nIHRoZSBkZWZhdWx0XG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxuXHRjc3NIb29rczoge1xuXHRcdG9wYWNpdHk6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcblx0XHRcdFx0XHR2YXIgcmV0ID0gY3VyQ1NTKCBlbGVtLCBcIm9wYWNpdHlcIiApO1xuXHRcdFx0XHRcdHJldHVybiByZXQgPT09IFwiXCIgPyBcIjFcIiA6IHJldDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBEb24ndCBhdXRvbWF0aWNhbGx5IGFkZCBcInB4XCIgdG8gdGhlc2UgcG9zc2libHktdW5pdGxlc3MgcHJvcGVydGllc1xuXHRjc3NOdW1iZXI6IHtcblx0XHRcImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50XCI6IHRydWUsXG5cdFx0XCJjb2x1bW5Db3VudFwiOiB0cnVlLFxuXHRcdFwiZmlsbE9wYWNpdHlcIjogdHJ1ZSxcblx0XHRcImZsZXhHcm93XCI6IHRydWUsXG5cdFx0XCJmbGV4U2hyaW5rXCI6IHRydWUsXG5cdFx0XCJmb250V2VpZ2h0XCI6IHRydWUsXG5cdFx0XCJsaW5lSGVpZ2h0XCI6IHRydWUsXG5cdFx0XCJvcGFjaXR5XCI6IHRydWUsXG5cdFx0XCJvcmRlclwiOiB0cnVlLFxuXHRcdFwib3JwaGFuc1wiOiB0cnVlLFxuXHRcdFwid2lkb3dzXCI6IHRydWUsXG5cdFx0XCJ6SW5kZXhcIjogdHJ1ZSxcblx0XHRcInpvb21cIjogdHJ1ZVxuXHR9LFxuXG5cdC8vIEFkZCBpbiBwcm9wZXJ0aWVzIHdob3NlIG5hbWVzIHlvdSB3aXNoIHRvIGZpeCBiZWZvcmVcblx0Ly8gc2V0dGluZyBvciBnZXR0aW5nIHRoZSB2YWx1ZVxuXHRjc3NQcm9wczoge1xuXG5cdFx0Ly8gbm9ybWFsaXplIGZsb2F0IGNzcyBwcm9wZXJ0eVxuXHRcdFwiZmxvYXRcIjogc3VwcG9ydC5jc3NGbG9hdCA/IFwiY3NzRmxvYXRcIiA6IFwic3R5bGVGbG9hdFwiXG5cdH0sXG5cblx0Ly8gR2V0IGFuZCBzZXQgdGhlIHN0eWxlIHByb3BlcnR5IG9uIGEgRE9NIE5vZGVcblx0c3R5bGU6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSwgZXh0cmEgKSB7XG5cblx0XHQvLyBEb24ndCBzZXQgc3R5bGVzIG9uIHRleHQgYW5kIGNvbW1lbnQgbm9kZXNcblx0XHRpZiAoICFlbGVtIHx8IGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCB8fCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWVcblx0XHR2YXIgcmV0LCB0eXBlLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdFx0bmFtZSA9IGpRdWVyeS5jc3NQcm9wc1sgb3JpZ05hbWUgXSB8fFxuXHRcdFx0KCBqUXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggb3JpZ05hbWUgKSB8fCBvcmlnTmFtZSApO1xuXG5cdFx0Ly8gZ2V0cyBob29rIGZvciB0aGUgcHJlZml4ZWQgdmVyc2lvblxuXHRcdC8vIGZvbGxvd2VkIGJ5IHRoZSB1bnByZWZpeGVkIHZlcnNpb25cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcblxuXHRcdC8vIENoZWNrIGlmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZVxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cblx0XHRcdC8vIENvbnZlcnQgXCIrPVwiIG9yIFwiLT1cIiB0byByZWxhdGl2ZSBudW1iZXJzICgjNzM0NSlcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiAoIHJldCA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmIHJldFsgMSBdICkge1xuXHRcdFx0XHR2YWx1ZSA9IGFkanVzdENTUyggZWxlbSwgbmFtZSwgcmV0ICk7XG5cblx0XHRcdFx0Ly8gRml4ZXMgYnVnICM5MjM3XG5cdFx0XHRcdHR5cGUgPSBcIm51bWJlclwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCBudWxsIGFuZCBOYU4gdmFsdWVzIGFyZW4ndCBzZXQuIFNlZTogIzcxMTZcblx0XHRcdGlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBudW1iZXIgd2FzIHBhc3NlZCBpbiwgYWRkIHRoZSB1bml0IChleGNlcHQgZm9yIGNlcnRhaW4gQ1NTIHByb3BlcnRpZXMpXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZpeGVzICM4OTA4LCBpdCBjYW4gYmUgZG9uZSBtb3JlIGNvcnJlY3RseSBieSBzcGVjaWZpbmcgc2V0dGVycyBpbiBjc3NIb29rcyxcblx0XHRcdC8vIGJ1dCBpdCB3b3VsZCBtZWFuIHRvIGRlZmluZSBlaWdodFxuXHRcdFx0Ly8gKGZvciBldmVyeSBwcm9ibGVtYXRpYyBwcm9wZXJ0eSkgaWRlbnRpY2FsIGZ1bmN0aW9uc1xuXHRcdFx0aWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09IFwiXCIgJiYgbmFtZS5pbmRleE9mKCBcImJhY2tncm91bmRcIiApID09PSAwICkge1xuXHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gXCJpbmhlcml0XCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQsIHVzZSB0aGF0IHZhbHVlLCBvdGhlcndpc2UganVzdCBzZXQgdGhlIHNwZWNpZmllZCB2YWx1ZVxuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8XG5cdFx0XHRcdCggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRVxuXHRcdFx0XHQvLyBTd2FsbG93IGVycm9ycyBmcm9tICdpbnZhbGlkJyBDU1MgdmFsdWVzICgjNTUwOSlcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge31cblx0XHRcdH1cblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBub24tY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBmYWxzZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIGp1c3QgZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBzdHlsZSBvYmplY3Rcblx0XHRcdHJldHVybiBzdHlsZVsgbmFtZSBdO1xuXHRcdH1cblx0fSxcblxuXHRjc3M6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBleHRyYSwgc3R5bGVzICkge1xuXHRcdHZhciBudW0sIHZhbCwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIG5hbWUgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxuXHRcdG5hbWUgPSBqUXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gfHxcblx0XHRcdCggalF1ZXJ5LmNzc1Byb3BzWyBvcmlnTmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG9yaWdOYW1lICkgfHwgb3JpZ05hbWUgKTtcblxuXHRcdC8vIGdldHMgaG9vayBmb3IgdGhlIHByZWZpeGVkIHZlcnNpb25cblx0XHQvLyBmb2xsb3dlZCBieSB0aGUgdW5wcmVmaXhlZCB2ZXJzaW9uXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbCA9IGhvb2tzLmdldCggZWxlbSwgdHJ1ZSwgZXh0cmEgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2UsIGlmIGEgd2F5IHRvIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZXhpc3RzLCB1c2UgdGhhdFxuXHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vY29udmVydCBcIm5vcm1hbFwiIHRvIGNvbXB1dGVkIHZhbHVlXG5cdFx0aWYgKCB2YWwgPT09IFwibm9ybWFsXCIgJiYgbmFtZSBpbiBjc3NOb3JtYWxUcmFuc2Zvcm0gKSB7XG5cdFx0XHR2YWwgPSBjc3NOb3JtYWxUcmFuc2Zvcm1bIG5hbWUgXTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4sIGNvbnZlcnRpbmcgdG8gbnVtYmVyIGlmIGZvcmNlZCBvciBhIHF1YWxpZmllciB3YXMgcHJvdmlkZWQgYW5kIHZhbCBsb29rcyBudW1lcmljXG5cdFx0aWYgKCBleHRyYSA9PT0gXCJcIiB8fCBleHRyYSApIHtcblx0XHRcdG51bSA9IHBhcnNlRmxvYXQoIHZhbCApO1xuXHRcdFx0cmV0dXJuIGV4dHJhID09PSB0cnVlIHx8IGlzRmluaXRlKCBudW0gKSA/IG51bSB8fCAwIDogdmFsO1xuXHRcdH1cblx0XHRyZXR1cm4gdmFsO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiaGVpZ2h0XCIsIFwid2lkdGhcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBjZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gaG93ZXZlciwgaXQgbXVzdCBoYXZlIGEgY3VycmVudCBkaXNwbGF5IHN0eWxlIHRoYXQgd291bGQgYmVuZWZpdCBmcm9tIHRoaXNcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcblx0XHRcdFx0XHRlbGVtLm9mZnNldFdpZHRoID09PSAwID9cblx0XHRcdFx0XHRcdHN3YXAoIGVsZW0sIGNzc1Nob3csIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgbmFtZSwgZXh0cmEgKTtcblx0XHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0XHRnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBuYW1lLCBleHRyYSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSB7XG5cdFx0XHR2YXIgc3R5bGVzID0gZXh0cmEgJiYgZ2V0U3R5bGVzKCBlbGVtICk7XG5cdFx0XHRyZXR1cm4gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBleHRyYSA/XG5cdFx0XHRcdGF1Z21lbnRXaWR0aE9ySGVpZ2h0KFxuXHRcdFx0XHRcdGVsZW0sXG5cdFx0XHRcdFx0bmFtZSxcblx0XHRcdFx0XHRleHRyYSxcblx0XHRcdFx0XHRzdXBwb3J0LmJveFNpemluZyAmJlxuXHRcdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHRcdFx0XHRzdHlsZXNcblx0XHRcdFx0KSA6IDBcblx0XHRcdCk7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5pZiAoICFzdXBwb3J0Lm9wYWNpdHkgKSB7XG5cdGpRdWVyeS5jc3NIb29rcy5vcGFjaXR5ID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXG5cdFx0XHQvLyBJRSB1c2VzIGZpbHRlcnMgZm9yIG9wYWNpdHlcblx0XHRcdHJldHVybiByb3BhY2l0eS50ZXN0KCAoIGNvbXB1dGVkICYmIGVsZW0uY3VycmVudFN0eWxlID9cblx0XHRcdFx0ZWxlbS5jdXJyZW50U3R5bGUuZmlsdGVyIDpcblx0XHRcdFx0ZWxlbS5zdHlsZS5maWx0ZXIgKSB8fCBcIlwiICkgP1xuXHRcdFx0XHRcdCggMC4wMSAqIHBhcnNlRmxvYXQoIFJlZ0V4cC4kMSApICkgKyBcIlwiIDpcblx0XHRcdFx0XHRjb21wdXRlZCA/IFwiMVwiIDogXCJcIjtcblx0XHR9LFxuXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgc3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdFx0XHRjdXJyZW50U3R5bGUgPSBlbGVtLmN1cnJlbnRTdHlsZSxcblx0XHRcdFx0b3BhY2l0eSA9IGpRdWVyeS5pc051bWVyaWMoIHZhbHVlICkgPyBcImFscGhhKG9wYWNpdHk9XCIgKyB2YWx1ZSAqIDEwMCArIFwiKVwiIDogXCJcIixcblx0XHRcdFx0ZmlsdGVyID0gY3VycmVudFN0eWxlICYmIGN1cnJlbnRTdHlsZS5maWx0ZXIgfHwgc3R5bGUuZmlsdGVyIHx8IFwiXCI7XG5cblx0XHRcdC8vIElFIGhhcyB0cm91YmxlIHdpdGggb3BhY2l0eSBpZiBpdCBkb2VzIG5vdCBoYXZlIGxheW91dFxuXHRcdFx0Ly8gRm9yY2UgaXQgYnkgc2V0dGluZyB0aGUgem9vbSBsZXZlbFxuXHRcdFx0c3R5bGUuem9vbSA9IDE7XG5cblx0XHRcdC8vIGlmIHNldHRpbmcgb3BhY2l0eSB0byAxLCBhbmQgbm8gb3RoZXIgZmlsdGVycyBleGlzdCAtXG5cdFx0XHQvLyBhdHRlbXB0IHRvIHJlbW92ZSBmaWx0ZXIgYXR0cmlidXRlICM2NjUyXG5cdFx0XHQvLyBpZiB2YWx1ZSA9PT0gXCJcIiwgdGhlbiByZW1vdmUgaW5saW5lIG9wYWNpdHkgIzEyNjg1XG5cdFx0XHRpZiAoICggdmFsdWUgPj0gMSB8fCB2YWx1ZSA9PT0gXCJcIiApICYmXG5cdFx0XHRcdFx0alF1ZXJ5LnRyaW0oIGZpbHRlci5yZXBsYWNlKCByYWxwaGEsIFwiXCIgKSApID09PSBcIlwiICYmXG5cdFx0XHRcdFx0c3R5bGUucmVtb3ZlQXR0cmlidXRlICkge1xuXG5cdFx0XHRcdC8vIFNldHRpbmcgc3R5bGUuZmlsdGVyIHRvIG51bGwsIFwiXCIgJiBcIiBcIiBzdGlsbCBsZWF2ZSBcImZpbHRlcjpcIiBpbiB0aGUgY3NzVGV4dFxuXHRcdFx0XHQvLyBpZiBcImZpbHRlcjpcIiBpcyBwcmVzZW50IGF0IGFsbCwgY2xlYXJUeXBlIGlzIGRpc2FibGVkLCB3ZSB3YW50IHRvIGF2b2lkIHRoaXNcblx0XHRcdFx0Ly8gc3R5bGUucmVtb3ZlQXR0cmlidXRlIGlzIElFIE9ubHksIGJ1dCBzbyBhcHBhcmVudGx5IGlzIHRoaXMgY29kZSBwYXRoLi4uXG5cdFx0XHRcdHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSggXCJmaWx0ZXJcIiApO1xuXG5cdFx0XHRcdC8vIGlmIHRoZXJlIGlzIG5vIGZpbHRlciBzdHlsZSBhcHBsaWVkIGluIGEgY3NzIHJ1bGVcblx0XHRcdFx0Ly8gb3IgdW5zZXQgaW5saW5lIG9wYWNpdHksIHdlIGFyZSBkb25lXG5cdFx0XHRcdGlmICggdmFsdWUgPT09IFwiXCIgfHwgY3VycmVudFN0eWxlICYmICFjdXJyZW50U3R5bGUuZmlsdGVyICkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBvdGhlcndpc2UsIHNldCBuZXcgZmlsdGVyIHZhbHVlc1xuXHRcdFx0c3R5bGUuZmlsdGVyID0gcmFscGhhLnRlc3QoIGZpbHRlciApID9cblx0XHRcdFx0ZmlsdGVyLnJlcGxhY2UoIHJhbHBoYSwgb3BhY2l0eSApIDpcblx0XHRcdFx0ZmlsdGVyICsgXCIgXCIgKyBvcGFjaXR5O1xuXHRcdH1cblx0fTtcbn1cblxualF1ZXJ5LmNzc0hvb2tzLm1hcmdpblJpZ2h0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuIHN3YXAoIGVsZW0sIHsgXCJkaXNwbGF5XCI6IFwiaW5saW5lLWJsb2NrXCIgfSxcblx0XHRcdFx0Y3VyQ1NTLCBbIGVsZW0sIFwibWFyZ2luUmlnaHRcIiBdICk7XG5cdFx0fVxuXHR9XG4pO1xuXG5qUXVlcnkuY3NzSG9va3MubWFyZ2luTGVmdCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpbkxlZnQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0cGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw9MTErXG5cdFx0XHRcdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFOCBvbmx5XG5cdFx0XHRcdC8vIGdldENsaWVudFJlY3RzKCkgZXJyb3JzIG9uIGRpc2Nvbm5lY3RlZCBlbGVtc1xuXHRcdFx0XHQoIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgP1xuXHRcdFx0XHRcdGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCAtXG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XG5cdFx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdDBcblx0XHRcdFx0KVxuXHRcdFx0KSArIFwicHhcIjtcblx0XHR9XG5cdH1cbik7XG5cbi8vIFRoZXNlIGhvb2tzIGFyZSB1c2VkIGJ5IGFuaW1hdGUgdG8gZXhwYW5kIHByb3BlcnRpZXNcbmpRdWVyeS5lYWNoKCB7XG5cdG1hcmdpbjogXCJcIixcblx0cGFkZGluZzogXCJcIixcblx0Ym9yZGVyOiBcIldpZHRoXCJcbn0sIGZ1bmN0aW9uKCBwcmVmaXgsIHN1ZmZpeCApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXSA9IHtcblx0XHRleHBhbmQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBpID0gMCxcblx0XHRcdFx0ZXhwYW5kZWQgPSB7fSxcblxuXHRcdFx0XHQvLyBhc3N1bWVzIGEgc2luZ2xlIG51bWJlciBpZiBub3QgYSBzdHJpbmdcblx0XHRcdFx0cGFydHMgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyB2YWx1ZS5zcGxpdCggXCIgXCIgKSA6IFsgdmFsdWUgXTtcblxuXHRcdFx0Zm9yICggOyBpIDwgNDsgaSsrICkge1xuXHRcdFx0XHRleHBhbmRlZFsgcHJlZml4ICsgY3NzRXhwYW5kWyBpIF0gKyBzdWZmaXggXSA9XG5cdFx0XHRcdFx0cGFydHNbIGkgXSB8fCBwYXJ0c1sgaSAtIDIgXSB8fCBwYXJ0c1sgMCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZXhwYW5kZWQ7XG5cdFx0fVxuXHR9O1xuXG5cdGlmICggIXJtYXJnaW4udGVzdCggcHJlZml4ICkgKSB7XG5cdFx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXS5zZXQgPSBzZXRQb3NpdGl2ZU51bWJlcjtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGNzczogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdHZhciBzdHlsZXMsIGxlbixcblx0XHRcdFx0bWFwID0ge30sXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCBuYW1lICkgKSB7XG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApO1xuXHRcdFx0XHRsZW4gPSBuYW1lLmxlbmd0aDtcblxuXHRcdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRtYXBbIG5hbWVbIGkgXSBdID0galF1ZXJ5LmNzcyggZWxlbSwgbmFtZVsgaSBdLCBmYWxzZSwgc3R5bGVzICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gbWFwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSwgdmFsdWUgKSA6XG5cdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIG5hbWUgKTtcblx0XHR9LCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzLCB0cnVlICk7XG5cdH0sXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcyApO1xuXHR9LFxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcblx0XHRpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBpc0hpZGRlbiggdGhpcyApICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5zaG93KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5oaWRlKCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxuZnVuY3Rpb24gVHdlZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkge1xuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xufVxualF1ZXJ5LlR3ZWVuID0gVHdlZW47XG5cblR3ZWVuLnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IFR3ZWVuLFxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcblx0XHR0aGlzLnByb3AgPSBwcm9wO1xuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHQ7XG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblx0XHR0aGlzLnN0YXJ0ID0gdGhpcy5ub3cgPSB0aGlzLmN1cigpO1xuXHRcdHRoaXMuZW5kID0gZW5kO1xuXHRcdHRoaXMudW5pdCA9IHVuaXQgfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdH0sXG5cdGN1cjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdHJldHVybiBob29rcyAmJiBob29rcy5nZXQgP1xuXHRcdFx0aG9va3MuZ2V0KCB0aGlzICkgOlxuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LmdldCggdGhpcyApO1xuXHR9LFxuXHRydW46IGZ1bmN0aW9uKCBwZXJjZW50ICkge1xuXHRcdHZhciBlYXNlZCxcblx0XHRcdGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmR1cmF0aW9uICkge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IGpRdWVyeS5lYXNpbmdbIHRoaXMuZWFzaW5nIF0oXG5cdFx0XHRcdHBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAsIDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvblxuXHRcdFx0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7XG5cdFx0fVxuXHRcdHRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnN0ZXAgKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7XG5cdFx0XHRob29rcy5zZXQoIHRoaXMgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCggdGhpcyApO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fVxufTtcblxuVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4ucHJvdG90eXBlO1xuXG5Ud2Vlbi5wcm9wSG9va3MgPSB7XG5cdF9kZWZhdWx0OiB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0XHR2YXIgcmVzdWx0O1xuXG5cdFx0XHQvLyBVc2UgYSBwcm9wZXJ0eSBvbiB0aGUgZWxlbWVudCBkaXJlY3RseSB3aGVuIGl0IGlzIG5vdCBhIERPTSBlbGVtZW50LFxuXHRcdFx0Ly8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy5cblx0XHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gcGFzc2luZyBhbiBlbXB0eSBzdHJpbmcgYXMgYSAzcmQgcGFyYW1ldGVyIHRvIC5jc3Mgd2lsbCBhdXRvbWF0aWNhbGx5XG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzXG5cdFx0XHQvLyBzbywgc2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQuXG5cdFx0XHQvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzIFwicm90YXRlKDFyYWQpXCIgYXJlIHJldHVybmVkIGFzIGlzLlxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xuXG5cdFx0XHQvLyBFbXB0eSBzdHJpbmdzLCBudWxsLCB1bmRlZmluZWQgYW5kIFwiYXV0b1wiIGFyZSBjb252ZXJ0ZWQgdG8gMC5cblx0XHRcdHJldHVybiAhcmVzdWx0IHx8IHJlc3VsdCA9PT0gXCJhdXRvXCIgPyAwIDogcmVzdWx0O1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cblx0XHRcdC8vIHVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0IC0gdXNlIGNzc0hvb2sgaWYgaXRzIHRoZXJlIC0gdXNlIC5zdHlsZSBpZiBpdHNcblx0XHRcdC8vIGF2YWlsYWJsZSBhbmQgdXNlIHBsYWluIHByb3BlcnRpZXMgd2hlcmUgYXZhaWxhYmxlXG5cdFx0XHRpZiAoIGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0oIHR3ZWVuICk7XG5cdFx0XHR9IGVsc2UgaWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdCggdHdlZW4uZWxlbS5zdHlsZVsgalF1ZXJ5LmNzc1Byb3BzWyB0d2Vlbi5wcm9wIF0gXSAhPSBudWxsIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gKSApIHtcblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCB0d2Vlbi5ub3cgKyB0d2Vlbi51bml0ICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBTdXBwb3J0OiBJRSA8PTlcbi8vIFBhbmljIGJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuXG5Ud2Vlbi5wcm9wSG9va3Muc2Nyb2xsVG9wID0gVHdlZW4ucHJvcEhvb2tzLnNjcm9sbExlZnQgPSB7XG5cdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAmJiB0d2Vlbi5lbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZWFzaW5nID0ge1xuXHRsaW5lYXI6IGZ1bmN0aW9uKCBwICkge1xuXHRcdHJldHVybiBwO1xuXHR9LFxuXHRzd2luZzogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIDAuNSAtIE1hdGguY29zKCBwICogTWF0aC5QSSApIC8gMjtcblx0fSxcblx0X2RlZmF1bHQ6IFwic3dpbmdcIlxufTtcblxualF1ZXJ5LmZ4ID0gVHdlZW4ucHJvdG90eXBlLmluaXQ7XG5cbi8vIEJhY2sgQ29tcGF0IDwxLjggZXh0ZW5zaW9uIHBvaW50XG5qUXVlcnkuZnguc3RlcCA9IHt9O1xuXG5cblxuXG52YXJcblx0ZnhOb3csIHRpbWVySWQsXG5cdHJmeHR5cGVzID0gL14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLFxuXHRycnVuID0gL3F1ZXVlSG9va3MkLztcblxuLy8gQW5pbWF0aW9ucyBjcmVhdGVkIHN5bmNocm9ub3VzbHkgd2lsbCBydW4gc3luY2hyb25vdXNseVxuZnVuY3Rpb24gY3JlYXRlRnhOb3coKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRmeE5vdyA9IHVuZGVmaW5lZDtcblx0fSApO1xuXHRyZXR1cm4gKCBmeE5vdyA9IGpRdWVyeS5ub3coKSApO1xufVxuXG4vLyBHZW5lcmF0ZSBwYXJhbWV0ZXJzIHRvIGNyZWF0ZSBhIHN0YW5kYXJkIGFuaW1hdGlvblxuZnVuY3Rpb24gZ2VuRngoIHR5cGUsIGluY2x1ZGVXaWR0aCApIHtcblx0dmFyIHdoaWNoLFxuXHRcdGF0dHJzID0geyBoZWlnaHQ6IHR5cGUgfSxcblx0XHRpID0gMDtcblxuXHQvLyBpZiB3ZSBpbmNsdWRlIHdpZHRoLCBzdGVwIHZhbHVlIGlzIDEgdG8gZG8gYWxsIGNzc0V4cGFuZCB2YWx1ZXMsXG5cdC8vIGlmIHdlIGRvbid0IGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQgOyBpICs9IDIgLSBpbmNsdWRlV2lkdGggKSB7XG5cdFx0d2hpY2ggPSBjc3NFeHBhbmRbIGkgXTtcblx0XHRhdHRyc1sgXCJtYXJnaW5cIiArIHdoaWNoIF0gPSBhdHRyc1sgXCJwYWRkaW5nXCIgKyB3aGljaCBdID0gdHlwZTtcblx0fVxuXG5cdGlmICggaW5jbHVkZVdpZHRoICkge1xuXHRcdGF0dHJzLm9wYWNpdHkgPSBhdHRycy53aWR0aCA9IHR5cGU7XG5cdH1cblxuXHRyZXR1cm4gYXR0cnM7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVR3ZWVuKCB2YWx1ZSwgcHJvcCwgYW5pbWF0aW9uICkge1xuXHR2YXIgdHdlZW4sXG5cdFx0Y29sbGVjdGlvbiA9ICggQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW10gKS5jb25jYXQoIEFuaW1hdGlvbi50d2VlbmVyc1sgXCIqXCIgXSApLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aDtcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRpZiAoICggdHdlZW4gPSBjb2xsZWN0aW9uWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgcHJvcCwgdmFsdWUgKSApICkge1xuXG5cdFx0XHQvLyB3ZSdyZSBkb25lIHdpdGggdGhpcyBwcm9wZXJ0eVxuXHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBkZWZhdWx0UHJlZmlsdGVyKCBlbGVtLCBwcm9wcywgb3B0cyApIHtcblx0LyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuXHR2YXIgcHJvcCwgdmFsdWUsIHRvZ2dsZSwgdHdlZW4sIGhvb2tzLCBvbGRmaXJlLCBkaXNwbGF5LCBjaGVja0Rpc3BsYXksXG5cdFx0YW5pbSA9IHRoaXMsXG5cdFx0b3JpZyA9IHt9LFxuXHRcdHN0eWxlID0gZWxlbS5zdHlsZSxcblx0XHRoaWRkZW4gPSBlbGVtLm5vZGVUeXBlICYmIGlzSGlkZGVuKCBlbGVtICksXG5cdFx0ZGF0YVNob3cgPSBqUXVlcnkuX2RhdGEoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBoYW5kbGUgcXVldWU6IGZhbHNlIHByb21pc2VzXG5cdGlmICggIW9wdHMucXVldWUgKSB7XG5cdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIFwiZnhcIiApO1xuXHRcdGlmICggaG9va3MudW5xdWV1ZWQgPT0gbnVsbCApIHtcblx0XHRcdGhvb2tzLnVucXVldWVkID0gMDtcblx0XHRcdG9sZGZpcmUgPSBob29rcy5lbXB0eS5maXJlO1xuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoICFob29rcy51bnF1ZXVlZCApIHtcblx0XHRcdFx0XHRvbGRmaXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fVxuXHRcdGhvb2tzLnVucXVldWVkKys7XG5cblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIGRvaW5nIHRoaXMgbWFrZXMgc3VyZSB0aGF0IHRoZSBjb21wbGV0ZSBoYW5kbGVyIHdpbGwgYmUgY2FsbGVkXG5cdFx0XHQvLyBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gaGVpZ2h0L3dpZHRoIG92ZXJmbG93IHBhc3Ncblx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCJoZWlnaHRcIiBpbiBwcm9wcyB8fCBcIndpZHRoXCIgaW4gcHJvcHMgKSApIHtcblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG5vdGhpbmcgc25lYWtzIG91dFxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3Rcblx0XHQvLyBjaGFuZ2UgdGhlIG92ZXJmbG93IGF0dHJpYnV0ZSB3aGVuIG92ZXJmbG93WCBhbmRcblx0XHQvLyBvdmVyZmxvd1kgYXJlIHNldCB0byB0aGUgc2FtZSB2YWx1ZVxuXHRcdG9wdHMub3ZlcmZsb3cgPSBbIHN0eWxlLm92ZXJmbG93LCBzdHlsZS5vdmVyZmxvd1gsIHN0eWxlLm92ZXJmbG93WSBdO1xuXG5cdFx0Ly8gU2V0IGRpc3BsYXkgcHJvcGVydHkgdG8gaW5saW5lLWJsb2NrIGZvciBoZWlnaHQvd2lkdGhcblx0XHQvLyBhbmltYXRpb25zIG9uIGlubGluZSBlbGVtZW50cyB0aGF0IGFyZSBoYXZpbmcgd2lkdGgvaGVpZ2h0IGFuaW1hdGVkXG5cdFx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cblx0XHQvLyBUZXN0IGRlZmF1bHQgZGlzcGxheSBpZiBkaXNwbGF5IGlzIGN1cnJlbnRseSBcIm5vbmVcIlxuXHRcdGNoZWNrRGlzcGxheSA9IGRpc3BsYXkgPT09IFwibm9uZVwiID9cblx0XHRcdGpRdWVyeS5fZGF0YSggZWxlbSwgXCJvbGRkaXNwbGF5XCIgKSB8fCBkZWZhdWx0RGlzcGxheSggZWxlbS5ub2RlTmFtZSApIDogZGlzcGxheTtcblxuXHRcdGlmICggY2hlY2tEaXNwbGF5ID09PSBcImlubGluZVwiICYmIGpRdWVyeS5jc3MoIGVsZW0sIFwiZmxvYXRcIiApID09PSBcIm5vbmVcIiApIHtcblxuXHRcdFx0Ly8gaW5saW5lLWxldmVsIGVsZW1lbnRzIGFjY2VwdCBpbmxpbmUtYmxvY2s7XG5cdFx0XHQvLyBibG9jay1sZXZlbCBlbGVtZW50cyBuZWVkIHRvIGJlIGlubGluZSB3aXRoIGxheW91dFxuXHRcdFx0aWYgKCAhc3VwcG9ydC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0IHx8IGRlZmF1bHREaXNwbGF5KCBlbGVtLm5vZGVOYW1lICkgPT09IFwiaW5saW5lXCIgKSB7XG5cdFx0XHRcdHN0eWxlLmRpc3BsYXkgPSBcImlubGluZS1ibG9ja1wiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0c3R5bGUuem9vbSA9IDE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRpZiAoICFzdXBwb3J0LnNocmlua1dyYXBCbG9ja3MoKSApIHtcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0c3R5bGUub3ZlcmZsb3cgPSBvcHRzLm92ZXJmbG93WyAwIF07XG5cdFx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdFx0c3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdO1xuXHRcdFx0fSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIHNob3cvaGlkZSBwYXNzXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XG5cdFx0dmFsdWUgPSBwcm9wc1sgcHJvcCBdO1xuXHRcdGlmICggcmZ4dHlwZXMuZXhlYyggdmFsdWUgKSApIHtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xuXHRcdFx0dG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVlID09PSBcInRvZ2dsZVwiO1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgZGF0YVNob3cgbGVmdCBvdmVyIGZyb20gYSBzdG9wcGVkIGhpZGUgb3Igc2hvd1xuXHRcdFx0XHQvLyBhbmQgd2UgYXJlIGdvaW5nIHRvIHByb2NlZWQgd2l0aCBzaG93LCB3ZSBzaG91bGQgcHJldGVuZCB0byBiZSBoaWRkZW5cblx0XHRcdFx0aWYgKCB2YWx1ZSA9PT0gXCJzaG93XCIgJiYgZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IHRydWU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gfHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7XG5cblx0XHQvLyBBbnkgbm9uLWZ4IHZhbHVlIHN0b3BzIHVzIGZyb20gcmVzdG9yaW5nIHRoZSBvcmlnaW5hbCBkaXNwbGF5IHZhbHVlXG5cdFx0fSBlbHNlIHtcblx0XHRcdGRpc3BsYXkgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcblx0XHRpZiAoIGRhdGFTaG93ICkge1xuXHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xuXHRcdFx0XHRoaWRkZW4gPSBkYXRhU2hvdy5oaWRkZW47XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRhdGFTaG93ID0galF1ZXJ5Ll9kYXRhKCBlbGVtLCBcImZ4c2hvd1wiLCB7fSApO1xuXHRcdH1cblxuXHRcdC8vIHN0b3JlIHN0YXRlIGlmIGl0cyB0b2dnbGUgLSBlbmFibGVzIC5zdG9wKCkudG9nZ2xlKCkgdG8gXCJyZXZlcnNlXCJcblx0XHRpZiAoIHRvZ2dsZSApIHtcblx0XHRcdGRhdGFTaG93LmhpZGRlbiA9ICFoaWRkZW47XG5cdFx0fVxuXHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0alF1ZXJ5KCBlbGVtICkuc2hvdygpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5oaWRlKCk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgcHJvcDtcblx0XHRcdGpRdWVyeS5fcmVtb3ZlRGF0YSggZWxlbSwgXCJmeHNob3dcIiApO1xuXHRcdFx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cdFx0XHR0d2VlbiA9IGNyZWF0ZVR3ZWVuKCBoaWRkZW4gPyBkYXRhU2hvd1sgcHJvcCBdIDogMCwgcHJvcCwgYW5pbSApO1xuXG5cdFx0XHRpZiAoICEoIHByb3AgaW4gZGF0YVNob3cgKSApIHtcblx0XHRcdFx0ZGF0YVNob3dbIHByb3AgXSA9IHR3ZWVuLnN0YXJ0O1xuXHRcdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0XHR0d2Vlbi5lbmQgPSB0d2Vlbi5zdGFydDtcblx0XHRcdFx0XHR0d2Vlbi5zdGFydCA9IHByb3AgPT09IFwid2lkdGhcIiB8fCBwcm9wID09PSBcImhlaWdodFwiID8gMSA6IDA7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0Ly8gSWYgdGhpcyBpcyBhIG5vb3AgbGlrZSAuaGlkZSgpLmhpZGUoKSwgcmVzdG9yZSBhbiBvdmVyd3JpdHRlbiBkaXNwbGF5IHZhbHVlXG5cdH0gZWxzZSBpZiAoICggZGlzcGxheSA9PT0gXCJub25lXCIgPyBkZWZhdWx0RGlzcGxheSggZWxlbS5ub2RlTmFtZSApIDogZGlzcGxheSApID09PSBcImlubGluZVwiICkge1xuXHRcdHN0eWxlLmRpc3BsYXkgPSBkaXNwbGF5O1xuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0ZWFzaW5nID0gdmFsdWVbIDEgXTtcblx0XHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdO1xuXHRcdH1cblxuXHRcdGlmICggaW5kZXggIT09IG5hbWUgKSB7XG5cdFx0XHRwcm9wc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRkZWxldGUgcHJvcHNbIGluZGV4IF07XG5cdFx0fVxuXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXTtcblx0XHRpZiAoIGhvb2tzICYmIFwiZXhwYW5kXCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWx1ZSA9IGhvb2tzLmV4cGFuZCggdmFsdWUgKTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgbmFtZSBdO1xuXG5cdFx0XHQvLyBub3QgcXVpdGUgJC5leHRlbmQsIHRoaXMgd29udCBvdmVyd3JpdGUga2V5cyBhbHJlYWR5IHByZXNlbnQuXG5cdFx0XHQvLyBhbHNvIC0gcmV1c2luZyAnaW5kZXgnIGZyb20gYWJvdmUgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0IFwibmFtZVwiXG5cdFx0XHRmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhKCBpbmRleCBpbiBwcm9wcyApICkge1xuXHRcdFx0XHRcdHByb3BzWyBpbmRleCBdID0gdmFsdWVbIGluZGV4IF07XG5cdFx0XHRcdFx0c3BlY2lhbEVhc2luZ1sgaW5kZXggXSA9IGVhc2luZztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzcGVjaWFsRWFzaW5nWyBuYW1lIF0gPSBlYXNpbmc7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIEFuaW1hdGlvbiggZWxlbSwgcHJvcGVydGllcywgb3B0aW9ucyApIHtcblx0dmFyIHJlc3VsdCxcblx0XHRzdG9wcGVkLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBBbmltYXRpb24ucHJlZmlsdGVycy5sZW5ndGgsXG5cdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBkb24ndCBtYXRjaCBlbGVtIGluIHRoZSA6YW5pbWF0ZWQgc2VsZWN0b3Jcblx0XHRcdGRlbGV0ZSB0aWNrLmVsZW07XG5cdFx0fSApLFxuXHRcdHRpY2sgPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGN1cnJlbnRUaW1lID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdFx0cmVtYWluaW5nID0gTWF0aC5tYXgoIDAsIGFuaW1hdGlvbi5zdGFydFRpbWUgKyBhbmltYXRpb24uZHVyYXRpb24gLSBjdXJyZW50VGltZSApLFxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXG5cdFx0XHRcdC8vIEFyY2hhaWMgY3Jhc2ggYnVnIHdvbid0IGFsbG93IHVzIHRvIHVzZSBgMSAtICggMC41IHx8IDAgKWAgKCMxMjQ5Nylcblx0XHRcdFx0dGVtcCA9IHJlbWFpbmluZyAvIGFuaW1hdGlvbi5kdXJhdGlvbiB8fCAwLFxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXG5cdFx0XHRcdGluZGV4ID0gMCxcblx0XHRcdFx0bGVuZ3RoID0gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg7XG5cblx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGggOyBpbmRleCsrICkge1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTtcblxuXHRcdFx0aWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7XG5cdFx0XHRcdHJldHVybiByZW1haW5pbmc7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24gXSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0cHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxuXHRcdFx0XHRlYXNpbmc6IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHRcblx0XHRcdH0sIG9wdGlvbnMgKSxcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcblx0XHRcdG9yaWdpbmFsT3B0aW9uczogb3B0aW9ucyxcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0dHdlZW5zOiBbXSxcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXG5cdFx0XHRcdFx0XHRhbmltYXRpb24ub3B0cy5zcGVjaWFsRWFzaW5nWyBwcm9wIF0gfHwgYW5pbWF0aW9uLm9wdHMuZWFzaW5nICk7XG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnMucHVzaCggdHdlZW4gKTtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdFx0fSxcblx0XHRcdHN0b3A6IGZ1bmN0aW9uKCBnb3RvRW5kICkge1xuXHRcdFx0XHR2YXIgaW5kZXggPSAwLFxuXG5cdFx0XHRcdFx0Ly8gaWYgd2UgYXJlIGdvaW5nIHRvIHRoZSBlbmQsIHdlIHdhbnQgdG8gcnVuIGFsbCB0aGUgdHdlZW5zXG5cdFx0XHRcdFx0Ly8gb3RoZXJ3aXNlIHdlIHNraXAgdGhpcyBwYXJ0XG5cdFx0XHRcdFx0bGVuZ3RoID0gZ290b0VuZCA/IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoIDogMDtcblx0XHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN0b3BwZWQgPSB0cnVlO1xuXHRcdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoIDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gcmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZVxuXHRcdFx0XHQvLyBvdGhlcndpc2UsIHJlamVjdFxuXHRcdFx0XHRpZiAoIGdvdG9FbmQgKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIDEsIDAgXSApO1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgZ290b0VuZCBdICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fVxuXHRcdH0gKSxcblx0XHRwcm9wcyA9IGFuaW1hdGlvbi5wcm9wcztcblxuXHRwcm9wRmlsdGVyKCBwcm9wcywgYW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZyApO1xuXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGggOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCByZXN1bHQuc3RvcCApICkge1xuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIGFuaW1hdGlvbi5lbGVtLCBhbmltYXRpb24ub3B0cy5xdWV1ZSApLnN0b3AgPVxuXHRcdFx0XHRcdGpRdWVyeS5wcm94eSggcmVzdWx0LnN0b3AsIHJlc3VsdCApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHR9XG5cdH1cblxuXHRqUXVlcnkubWFwKCBwcm9wcywgY3JlYXRlVHdlZW4sIGFuaW1hdGlvbiApO1xuXG5cdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGFuaW1hdGlvbi5vcHRzLnN0YXJ0ICkgKSB7XG5cdFx0YW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbCggZWxlbSwgYW5pbWF0aW9uICk7XG5cdH1cblxuXHRqUXVlcnkuZngudGltZXIoXG5cdFx0alF1ZXJ5LmV4dGVuZCggdGljaywge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdGFuaW06IGFuaW1hdGlvbixcblx0XHRcdHF1ZXVlOiBhbmltYXRpb24ub3B0cy5xdWV1ZVxuXHRcdH0gKVxuXHQpO1xuXG5cdC8vIGF0dGFjaCBjYWxsYmFja3MgZnJvbSBvcHRpb25zXG5cdHJldHVybiBhbmltYXRpb24ucHJvZ3Jlc3MoIGFuaW1hdGlvbi5vcHRzLnByb2dyZXNzIClcblx0XHQuZG9uZSggYW5pbWF0aW9uLm9wdHMuZG9uZSwgYW5pbWF0aW9uLm9wdHMuY29tcGxldGUgKVxuXHRcdC5mYWlsKCBhbmltYXRpb24ub3B0cy5mYWlsIClcblx0XHQuYWx3YXlzKCBhbmltYXRpb24ub3B0cy5hbHdheXMgKTtcbn1cblxualF1ZXJ5LkFuaW1hdGlvbiA9IGpRdWVyeS5leHRlbmQoIEFuaW1hdGlvbiwge1xuXG5cdHR3ZWVuZXJzOiB7XG5cdFx0XCIqXCI6IFsgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkge1xuXHRcdFx0dmFyIHR3ZWVuID0gdGhpcy5jcmVhdGVUd2VlbiggcHJvcCwgdmFsdWUgKTtcblx0XHRcdGFkanVzdENTUyggdHdlZW4uZWxlbSwgcHJvcCwgcmNzc051bS5leGVjKCB2YWx1ZSApLCB0d2VlbiApO1xuXHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdH0gXVxuXHR9LFxuXG5cdHR3ZWVuZXI6IGZ1bmN0aW9uKCBwcm9wcywgY2FsbGJhY2sgKSB7XG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcHJvcHMgKSApIHtcblx0XHRcdGNhbGxiYWNrID0gcHJvcHM7XG5cdFx0XHRwcm9wcyA9IFsgXCIqXCIgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cHJvcHMgPSBwcm9wcy5tYXRjaCggcm5vdHdoaXRlICk7XG5cdFx0fVxuXG5cdFx0dmFyIHByb3AsXG5cdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoIDsgaW5kZXgrKyApIHtcblx0XHRcdHByb3AgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdID0gQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW107XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXS51bnNoaWZ0KCBjYWxsYmFjayApO1xuXHRcdH1cblx0fSxcblxuXHRwcmVmaWx0ZXJzOiBbIGRlZmF1bHRQcmVmaWx0ZXIgXSxcblxuXHRwcmVmaWx0ZXI6IGZ1bmN0aW9uKCBjYWxsYmFjaywgcHJlcGVuZCApIHtcblx0XHRpZiAoIHByZXBlbmQgKSB7XG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy51bnNoaWZ0KCBjYWxsYmFjayApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy5wdXNoKCBjYWxsYmFjayApO1xuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuc3BlZWQgPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgZm4gKSB7XG5cdHZhciBvcHQgPSBzcGVlZCAmJiB0eXBlb2Ygc3BlZWQgPT09IFwib2JqZWN0XCIgPyBqUXVlcnkuZXh0ZW5kKCB7fSwgc3BlZWQgKSA6IHtcblx0XHRjb21wbGV0ZTogZm4gfHwgIWZuICYmIGVhc2luZyB8fFxuXHRcdFx0alF1ZXJ5LmlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhalF1ZXJ5LmlzRnVuY3Rpb24oIGVhc2luZyApICYmIGVhc2luZ1xuXHR9O1xuXG5cdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5vZmYgPyAwIDogdHlwZW9mIG9wdC5kdXJhdGlvbiA9PT0gXCJudW1iZXJcIiA/IG9wdC5kdXJhdGlvbiA6XG5cdFx0b3B0LmR1cmF0aW9uIGluIGpRdWVyeS5meC5zcGVlZHMgP1xuXHRcdFx0alF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF0gOiBqUXVlcnkuZnguc3BlZWRzLl9kZWZhdWx0O1xuXG5cdC8vIG5vcm1hbGl6ZSBvcHQucXVldWUgLSB0cnVlL3VuZGVmaW5lZC9udWxsIC0+IFwiZnhcIlxuXHRpZiAoIG9wdC5xdWV1ZSA9PSBudWxsIHx8IG9wdC5xdWV1ZSA9PT0gdHJ1ZSApIHtcblx0XHRvcHQucXVldWUgPSBcImZ4XCI7XG5cdH1cblxuXHQvLyBRdWV1ZWluZ1xuXHRvcHQub2xkID0gb3B0LmNvbXBsZXRlO1xuXG5cdG9wdC5jb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIG9wdC5vbGQgKSApIHtcblx0XHRcdG9wdC5vbGQuY2FsbCggdGhpcyApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0LnF1ZXVlICkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIG9wdC5xdWV1ZSApO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gb3B0O1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRmYWRlVG86IGZ1bmN0aW9uKCBzcGVlZCwgdG8sIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cblx0XHQvLyBzaG93IGFueSBoaWRkZW4gZWxlbWVudHMgYWZ0ZXIgc2V0dGluZyBvcGFjaXR5IHRvIDBcblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGlzSGlkZGVuICkuY3NzKCBcIm9wYWNpdHlcIiwgMCApLnNob3coKVxuXG5cdFx0XHQvLyBhbmltYXRlIHRvIHRoZSB2YWx1ZSBzcGVjaWZpZWRcblx0XHRcdC5lbmQoKS5hbmltYXRlKCB7IG9wYWNpdHk6IHRvIH0sIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH0sXG5cdGFuaW1hdGU6IGZ1bmN0aW9uKCBwcm9wLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHR2YXIgZW1wdHkgPSBqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcCApLFxuXHRcdFx0b3B0YWxsID0galF1ZXJ5LnNwZWVkKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApLFxuXHRcdFx0ZG9BbmltYXRpb24gPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvLyBPcGVyYXRlIG9uIGEgY29weSBvZiBwcm9wIHNvIHBlci1wcm9wZXJ0eSBlYXNpbmcgd29uJ3QgYmUgbG9zdFxuXHRcdFx0XHR2YXIgYW5pbSA9IEFuaW1hdGlvbiggdGhpcywgalF1ZXJ5LmV4dGVuZCgge30sIHByb3AgKSwgb3B0YWxsICk7XG5cblx0XHRcdFx0Ly8gRW1wdHkgYW5pbWF0aW9ucywgb3IgZmluaXNoaW5nIHJlc29sdmVzIGltbWVkaWF0ZWx5XG5cdFx0XHRcdGlmICggZW1wdHkgfHwgalF1ZXJ5Ll9kYXRhKCB0aGlzLCBcImZpbmlzaFwiICkgKSB7XG5cdFx0XHRcdFx0YW5pbS5zdG9wKCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHRkb0FuaW1hdGlvbi5maW5pc2ggPSBkb0FuaW1hdGlvbjtcblxuXHRcdHJldHVybiBlbXB0eSB8fCBvcHRhbGwucXVldWUgPT09IGZhbHNlID9cblx0XHRcdHRoaXMuZWFjaCggZG9BbmltYXRpb24gKSA6XG5cdFx0XHR0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7XG5cdH0sXG5cdHN0b3A6IGZ1bmN0aW9uKCB0eXBlLCBjbGVhclF1ZXVlLCBnb3RvRW5kICkge1xuXHRcdHZhciBzdG9wUXVldWUgPSBmdW5jdGlvbiggaG9va3MgKSB7XG5cdFx0XHR2YXIgc3RvcCA9IGhvb2tzLnN0b3A7XG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdHN0b3AoIGdvdG9FbmQgKTtcblx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGdvdG9FbmQgPSBjbGVhclF1ZXVlO1xuXHRcdFx0Y2xlYXJRdWV1ZSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGNsZWFyUXVldWUgJiYgdHlwZSAhPT0gZmFsc2UgKSB7XG5cdFx0XHR0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBkZXF1ZXVlID0gdHJ1ZSxcblx0XHRcdFx0aW5kZXggPSB0eXBlICE9IG51bGwgJiYgdHlwZSArIFwicXVldWVIb29rc1wiLFxuXHRcdFx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzLFxuXHRcdFx0XHRkYXRhID0galF1ZXJ5Ll9kYXRhKCB0aGlzICk7XG5cblx0XHRcdGlmICggaW5kZXggKSB7XG5cdFx0XHRcdGlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgKSB7XG5cdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZvciAoIGluZGV4IGluIGRhdGEgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCAmJiBycnVuLnRlc3QoIGluZGV4ICkgKSB7XG5cdFx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJlxuXHRcdFx0XHRcdCggdHlwZSA9PSBudWxsIHx8IHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSApICkge1xuXG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggZ290b0VuZCApO1xuXHRcdFx0XHRcdGRlcXVldWUgPSBmYWxzZTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIHN0YXJ0IHRoZSBuZXh0IGluIHRoZSBxdWV1ZSBpZiB0aGUgbGFzdCBzdGVwIHdhc24ndCBmb3JjZWRcblx0XHRcdC8vIHRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2ggd2lsbCBkZXF1ZXVlXG5cdFx0XHQvLyBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZFxuXHRcdFx0aWYgKCBkZXF1ZXVlIHx8ICFnb3RvRW5kICkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblx0ZmluaXNoOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRpZiAoIHR5cGUgIT09IGZhbHNlICkge1xuXHRcdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpbmRleCxcblx0XHRcdFx0ZGF0YSA9IGpRdWVyeS5fZGF0YSggdGhpcyApLFxuXHRcdFx0XHRxdWV1ZSA9IGRhdGFbIHR5cGUgKyBcInF1ZXVlXCIgXSxcblx0XHRcdFx0aG9va3MgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgXSxcblx0XHRcdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcblx0XHRcdFx0bGVuZ3RoID0gcXVldWUgPyBxdWV1ZS5sZW5ndGggOiAwO1xuXG5cdFx0XHQvLyBlbmFibGUgZmluaXNoaW5nIGZsYWcgb24gcHJpdmF0ZSBkYXRhXG5cdFx0XHRkYXRhLmZpbmlzaCA9IHRydWU7XG5cblx0XHRcdC8vIGVtcHR5IHRoZSBxdWV1ZSBmaXJzdFxuXHRcdFx0alF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBbXSApO1xuXG5cdFx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnN0b3AgKSB7XG5cdFx0XHRcdGhvb2tzLnN0b3AuY2FsbCggdGhpcywgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBsb29rIGZvciBhbnkgYWN0aXZlIGFuaW1hdGlvbnMsIGFuZCBmaW5pc2ggdGhlbVxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJiB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSB7XG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggdHJ1ZSApO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gbG9vayBmb3IgYW55IGFuaW1hdGlvbnMgaW4gdGhlIG9sZCBxdWV1ZSBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdGlmICggcXVldWVbIGluZGV4IF0gJiYgcXVldWVbIGluZGV4IF0uZmluaXNoICkge1xuXHRcdFx0XHRcdHF1ZXVlWyBpbmRleCBdLmZpbmlzaC5jYWxsKCB0aGlzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gdHVybiBvZmYgZmluaXNoaW5nIGZsYWdcblx0XHRcdGRlbGV0ZSBkYXRhLmZpbmlzaDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJ0b2dnbGVcIiwgXCJzaG93XCIsIFwiaGlkZVwiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHR2YXIgY3NzRm4gPSBqUXVlcnkuZm5bIG5hbWUgXTtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHNwZWVkID09IG51bGwgfHwgdHlwZW9mIHNwZWVkID09PSBcImJvb2xlYW5cIiA/XG5cdFx0XHRjc3NGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICkgOlxuXHRcdFx0dGhpcy5hbmltYXRlKCBnZW5GeCggbmFtZSwgdHJ1ZSApLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApO1xuXHR9O1xufSApO1xuXG4vLyBHZW5lcmF0ZSBzaG9ydGN1dHMgZm9yIGN1c3RvbSBhbmltYXRpb25zXG5qUXVlcnkuZWFjaCgge1xuXHRzbGlkZURvd246IGdlbkZ4KCBcInNob3dcIiApLFxuXHRzbGlkZVVwOiBnZW5GeCggXCJoaWRlXCIgKSxcblx0c2xpZGVUb2dnbGU6IGdlbkZ4KCBcInRvZ2dsZVwiICksXG5cdGZhZGVJbjogeyBvcGFjaXR5OiBcInNob3dcIiB9LFxuXHRmYWRlT3V0OiB7IG9wYWNpdHk6IFwiaGlkZVwiIH0sXG5cdGZhZGVUb2dnbGU6IHsgb3BhY2l0eTogXCJ0b2dnbGVcIiB9XG59LCBmdW5jdGlvbiggbmFtZSwgcHJvcHMgKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiB0aGlzLmFuaW1hdGUoIHByb3BzLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApO1xuXHR9O1xufSApO1xuXG5qUXVlcnkudGltZXJzID0gW107XG5qUXVlcnkuZngudGljayA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgdGltZXIsXG5cdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcblx0XHRpID0gMDtcblxuXHRmeE5vdyA9IGpRdWVyeS5ub3coKTtcblxuXHRmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7XG5cdFx0dGltZXIgPSB0aW1lcnNbIGkgXTtcblxuXHRcdC8vIENoZWNrcyB0aGUgdGltZXIgaGFzIG5vdCBhbHJlYWR5IGJlZW4gcmVtb3ZlZFxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xuXHRcdFx0dGltZXJzLnNwbGljZSggaS0tLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhdGltZXJzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xuXHR9XG5cdGZ4Tm93ID0gdW5kZWZpbmVkO1xufTtcblxualF1ZXJ5LmZ4LnRpbWVyID0gZnVuY3Rpb24oIHRpbWVyICkge1xuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XG5cdGlmICggdGltZXIoKSApIHtcblx0XHRqUXVlcnkuZnguc3RhcnQoKTtcblx0fSBlbHNlIHtcblx0XHRqUXVlcnkudGltZXJzLnBvcCgpO1xuXHR9XG59O1xuXG5qUXVlcnkuZnguaW50ZXJ2YWwgPSAxMztcblxualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG5cdGlmICggIXRpbWVySWQgKSB7XG5cdFx0dGltZXJJZCA9IHdpbmRvdy5zZXRJbnRlcnZhbCggalF1ZXJ5LmZ4LnRpY2ssIGpRdWVyeS5meC5pbnRlcnZhbCApO1xuXHR9XG59O1xuXG5qUXVlcnkuZnguc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHR3aW5kb3cuY2xlYXJJbnRlcnZhbCggdGltZXJJZCApO1xuXHR0aW1lcklkID0gbnVsbDtcbn07XG5cbmpRdWVyeS5meC5zcGVlZHMgPSB7XG5cdHNsb3c6IDYwMCxcblx0ZmFzdDogMjAwLFxuXG5cdC8vIERlZmF1bHQgc3BlZWRcblx0X2RlZmF1bHQ6IDQwMFxufTtcblxuXG4vLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRoIHBlcm1pc3Npb24uXG4vLyBodHRwOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDEwMDMyNDAxNDc0Ny9odHRwOi8vYmxpbmRzaWduYWxzLmNvbS9pbmRleC5waHAvMjAwOS8wNy9qcXVlcnktZGVsYXkvXG5qUXVlcnkuZm4uZGVsYXkgPSBmdW5jdGlvbiggdGltZSwgdHlwZSApIHtcblx0dGltZSA9IGpRdWVyeS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTtcblx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7XG5cdFx0dmFyIHRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCggbmV4dCwgdGltZSApO1xuXHRcdGhvb2tzLnN0b3AgPSBmdW5jdGlvbigpIHtcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoIHRpbWVvdXQgKTtcblx0XHR9O1xuXHR9ICk7XG59O1xuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBhLFxuXHRcdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLFxuXHRcdHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2VsZWN0XCIgKSxcblx0XHRvcHQgPSBzZWxlY3QuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib3B0aW9uXCIgKSApO1xuXG5cdC8vIFNldHVwXG5cdGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcblx0ZGl2LnNldEF0dHJpYnV0ZSggXCJjbGFzc05hbWVcIiwgXCJ0XCIgKTtcblx0ZGl2LmlubmVySFRNTCA9IFwiICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+XCI7XG5cdGEgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwiYVwiIClbIDAgXTtcblxuXHQvLyBTdXBwb3J0OiBXaW5kb3dzIFdlYiBBcHBzIChXV0EpXG5cdC8vIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJjaGVja2JveFwiICk7XG5cdGRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblxuXHRhID0gZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcImFcIiApWyAwIF07XG5cblx0Ly8gRmlyc3QgYmF0Y2ggb2YgdGVzdHMuXG5cdGEuc3R5bGUuY3NzVGV4dCA9IFwidG9wOjFweFwiO1xuXG5cdC8vIFRlc3Qgc2V0QXR0cmlidXRlIG9uIGNhbWVsQ2FzZSBjbGFzcy5cblx0Ly8gSWYgaXQgd29ya3MsIHdlIG5lZWQgYXR0ckZpeGVzIHdoZW4gZG9pbmcgZ2V0L3NldEF0dHJpYnV0ZSAoaWU2LzcpXG5cdHN1cHBvcnQuZ2V0U2V0QXR0cmlidXRlID0gZGl2LmNsYXNzTmFtZSAhPT0gXCJ0XCI7XG5cblx0Ly8gR2V0IHRoZSBzdHlsZSBpbmZvcm1hdGlvbiBmcm9tIGdldEF0dHJpYnV0ZVxuXHQvLyAoSUUgdXNlcyAuY3NzVGV4dCBpbnN0ZWFkKVxuXHRzdXBwb3J0LnN0eWxlID0gL3RvcC8udGVzdCggYS5nZXRBdHRyaWJ1dGUoIFwic3R5bGVcIiApICk7XG5cblx0Ly8gTWFrZSBzdXJlIHRoYXQgVVJMcyBhcmVuJ3QgbWFuaXB1bGF0ZWRcblx0Ly8gKElFIG5vcm1hbGl6ZXMgaXQgYnkgZGVmYXVsdClcblx0c3VwcG9ydC5ocmVmTm9ybWFsaXplZCA9IGEuZ2V0QXR0cmlidXRlKCBcImhyZWZcIiApID09PSBcIi9hXCI7XG5cblx0Ly8gQ2hlY2sgdGhlIGRlZmF1bHQgY2hlY2tib3gvcmFkaW8gdmFsdWUgKFwiXCIgb24gV2ViS2l0OyBcIm9uXCIgZWxzZXdoZXJlKVxuXHRzdXBwb3J0LmNoZWNrT24gPSAhIWlucHV0LnZhbHVlO1xuXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IGEgc2VsZWN0ZWQtYnktZGVmYXVsdCBvcHRpb24gaGFzIGEgd29ya2luZyBzZWxlY3RlZCBwcm9wZXJ0eS5cblx0Ly8gKFdlYktpdCBkZWZhdWx0cyB0byBmYWxzZSBpbnN0ZWFkIG9mIHRydWUsIElFIHRvbywgaWYgaXQncyBpbiBhbiBvcHRncm91cClcblx0c3VwcG9ydC5vcHRTZWxlY3RlZCA9IG9wdC5zZWxlY3RlZDtcblxuXHQvLyBUZXN0cyBmb3IgZW5jdHlwZSBzdXBwb3J0IG9uIGEgZm9ybSAoIzY3NDMpXG5cdHN1cHBvcnQuZW5jdHlwZSA9ICEhZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJmb3JtXCIgKS5lbmN0eXBlO1xuXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBvcHRpb25zIGluc2lkZSBkaXNhYmxlZCBzZWxlY3RzIGFyZW4ndCBtYXJrZWQgYXMgZGlzYWJsZWRcblx0Ly8gKFdlYktpdCBtYXJrcyB0aGVtIGFzIGRpc2FibGVkKVxuXHRzZWxlY3QuZGlzYWJsZWQgPSB0cnVlO1xuXHRzdXBwb3J0Lm9wdERpc2FibGVkID0gIW9wdC5kaXNhYmxlZDtcblxuXHQvLyBTdXBwb3J0OiBJRTggb25seVxuXHQvLyBDaGVjayBpZiB3ZSBjYW4gdHJ1c3QgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcblx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcblx0c3VwcG9ydC5pbnB1dCA9IGlucHV0LmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IFwiXCI7XG5cblx0Ly8gQ2hlY2sgaWYgYW4gaW5wdXQgbWFpbnRhaW5zIGl0cyB2YWx1ZSBhZnRlciBiZWNvbWluZyBhIHJhZGlvXG5cdGlucHV0LnZhbHVlID0gXCJ0XCI7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwicmFkaW9cIiApO1xuXHRzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gXCJ0XCI7XG59ICkoKTtcblxuXG52YXIgcnJldHVybiA9IC9cXHIvZztcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHR2YWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgaG9va3MsIHJldCwgaXNGdW5jdGlvbixcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF07XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBlIF0gfHxcblx0XHRcdFx0XHRqUXVlcnkudmFsSG9va3NbIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xuXG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHRob29rcyAmJlxuXHRcdFx0XHRcdFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgXCJ2YWx1ZVwiICkgKSAhPT0gdW5kZWZpbmVkXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXQgPSBlbGVtLnZhbHVlO1xuXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgcmV0ID09PSBcInN0cmluZ1wiID9cblxuXHRcdFx0XHRcdC8vIGhhbmRsZSBtb3N0IGNvbW1vbiBzdHJpbmcgY2FzZXNcblx0XHRcdFx0XHRyZXQucmVwbGFjZSggcnJldHVybiwgXCJcIiApIDpcblxuXHRcdFx0XHRcdC8vIGhhbmRsZSBjYXNlcyB3aGVyZSB2YWx1ZSBpcyBudWxsL3VuZGVmIG9yIG51bWJlclxuXHRcdFx0XHRcdHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlzRnVuY3Rpb24gPSBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0dmFyIHZhbDtcblxuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlICE9PSAxICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXHRcdFx0fSBlbHNlIGlmICggdHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0dmFsICs9IFwiXCI7XG5cdFx0XHR9IGVsc2UgaWYgKCBqUXVlcnkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHZhbCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidmFsdWVcIiApO1xuXHRcdFx0XHRyZXR1cm4gdmFsICE9IG51bGwgP1xuXHRcdFx0XHRcdHZhbCA6XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTEwLTExK1xuXHRcdFx0XHRcdC8vIG9wdGlvbi50ZXh0IHRocm93cyBleGNlcHRpb25zICgjMTQ2ODYsICMxNDg1OClcblx0XHRcdFx0XHRqUXVlcnkudHJpbSggalF1ZXJ5LnRleHQoIGVsZW0gKSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0c2VsZWN0OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgdmFsdWUsIG9wdGlvbixcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdGluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LFxuXHRcdFx0XHRcdG9uZSA9IGVsZW0udHlwZSA9PT0gXCJzZWxlY3Qtb25lXCIgfHwgaW5kZXggPCAwLFxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcblx0XHRcdFx0XHRtYXggPSBvbmUgPyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aCxcblx0XHRcdFx0XHRpID0gaW5kZXggPCAwID9cblx0XHRcdFx0XHRcdG1heCA6XG5cdFx0XHRcdFx0XHRvbmUgPyBpbmRleCA6IDA7XG5cblx0XHRcdFx0Ly8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgc2VsZWN0ZWQgb3B0aW9uc1xuXHRcdFx0XHRmb3IgKCA7IGkgPCBtYXg7IGkrKyApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHQvLyBvbGRJRSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICgjMjU1MSlcblx0XHRcdFx0XHRpZiAoICggb3B0aW9uLnNlbGVjdGVkIHx8IGkgPT09IGluZGV4ICkgJiZcblxuXHRcdFx0XHRcdFx0XHQvLyBEb24ndCByZXR1cm4gb3B0aW9ucyB0aGF0IGFyZSBkaXNhYmxlZCBvciBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHRcdFx0XHRcdCggc3VwcG9ydC5vcHREaXNhYmxlZCA/XG5cdFx0XHRcdFx0XHRcdFx0IW9wdGlvbi5kaXNhYmxlZCA6XG5cdFx0XHRcdFx0XHRcdFx0b3B0aW9uLmdldEF0dHJpYnV0ZSggXCJkaXNhYmxlZFwiICkgPT09IG51bGwgKSAmJlxuXHRcdFx0XHRcdFx0XHQoICFvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCB8fFxuXHRcdFx0XHRcdFx0XHRcdCFqUXVlcnkubm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCBcIm9wdGdyb3VwXCIgKSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBHZXQgdGhlIHNwZWNpZmljIHZhbHVlIGZvciB0aGUgb3B0aW9uXG5cdFx0XHRcdFx0XHR2YWx1ZSA9IGpRdWVyeSggb3B0aW9uICkudmFsKCk7XG5cblx0XHRcdFx0XHRcdC8vIFdlIGRvbid0IG5lZWQgYW4gYXJyYXkgZm9yIG9uZSBzZWxlY3RzXG5cdFx0XHRcdFx0XHRpZiAoIG9uZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBNdWx0aS1TZWxlY3RzIHJldHVybiBhbiBhcnJheVxuXHRcdFx0XHRcdFx0dmFsdWVzLnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH0sXG5cblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHR2YXIgb3B0aW9uU2V0LCBvcHRpb24sXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHR2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLFxuXHRcdFx0XHRcdGkgPSBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID49IDAgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFNlxuXHRcdFx0XHRcdFx0Ly8gV2hlbiBuZXcgb3B0aW9uIGVsZW1lbnQgaXMgYWRkZWQgdG8gc2VsZWN0IGJveCB3ZSBuZWVkIHRvXG5cdFx0XHRcdFx0XHQvLyBmb3JjZSByZWZsb3cgb2YgbmV3bHkgYWRkZWQgbm9kZSBpbiBvcmRlciB0byB3b3JrYXJvdW5kIGRlbGF5XG5cdFx0XHRcdFx0XHQvLyBvZiBpbml0aWFsaXphdGlvbiBwcm9wZXJ0aWVzXG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRvcHRpb24uc2VsZWN0ZWQgPSBvcHRpb25TZXQgPSB0cnVlO1xuXG5cdFx0XHRcdFx0XHR9IGNhdGNoICggXyApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBXaWxsIGJlIGV4ZWN1dGVkIG9ubHkgaW4gSUU2XG5cdFx0XHRcdFx0XHRcdG9wdGlvbi5zY3JvbGxIZWlnaHQ7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0b3B0aW9uLnNlbGVjdGVkID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xuXHRcdFx0XHRcdGVsZW0uc2VsZWN0ZWRJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIG9wdGlvbnM7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIFJhZGlvcyBhbmQgY2hlY2tib3hlcyBnZXR0ZXIvc2V0dGVyXG5qUXVlcnkuZWFjaCggWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLmNoZWNrZWQgPSBqUXVlcnkuaW5BcnJheSggalF1ZXJ5KCBlbGVtICkudmFsKCksIHZhbHVlICkgPiAtMSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0aWYgKCAhc3VwcG9ydC5jaGVja09uICkge1xuXHRcdGpRdWVyeS52YWxIb29rc1sgdGhpcyBdLmdldCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gbnVsbCA/IFwib25cIiA6IGVsZW0udmFsdWU7XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgbm9kZUhvb2ssIGJvb2xIb29rLFxuXHRhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZSxcblx0cnVzZURlZmF1bHQgPSAvXig/OmNoZWNrZWR8c2VsZWN0ZWQpJC9pLFxuXHRnZXRTZXRBdHRyaWJ1dGUgPSBzdXBwb3J0LmdldFNldEF0dHJpYnV0ZSxcblx0Z2V0U2V0SW5wdXQgPSBzdXBwb3J0LmlucHV0O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsIGF0dHJpYnV0ZXMgYXJlIGxvd2VyY2FzZVxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblx0XHRcdG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5hdHRySG9va3NbIG5hbWUgXSB8fFxuXHRcdFx0XHQoIGpRdWVyeS5leHByLm1hdGNoLmJvb2wudGVzdCggbmFtZSApID8gYm9vbEhvb2sgOiBub2RlSG9vayApO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdC8vIE5vbi1leGlzdGVudCBhdHRyaWJ1dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkXG5cdFx0cmV0dXJuIHJldCA9PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xuXHR9LFxuXG5cdGF0dHJIb29rczoge1xuXHRcdHR5cGU6IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxuXHRcdFx0XHRcdGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHQvLyBTZXR0aW5nIHRoZSB0eXBlIG9uIGEgcmFkaW8gYnV0dG9uIGFmdGVyIHRoZSB2YWx1ZSByZXNldHMgdGhlIHZhbHVlIGluIElFOC05XG5cdFx0XHRcdFx0Ly8gUmVzZXQgdmFsdWUgdG8gZGVmYXVsdCBpbiBjYXNlIHR5cGUgaXMgc2V0IGFmdGVyIHZhbHVlIGR1cmluZyBjcmVhdGlvblxuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsIHByb3BOYW1lLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdHdoaXRlICk7XG5cblx0XHRpZiAoIGF0dHJOYW1lcyAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0d2hpbGUgKCAoIG5hbWUgPSBhdHRyTmFtZXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdHByb3BOYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXG5cdFx0XHRcdC8vIEJvb2xlYW4gYXR0cmlidXRlcyBnZXQgc3BlY2lhbCB0cmVhdG1lbnQgKCMxMDg3MClcblx0XHRcdFx0aWYgKCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSApIHtcblxuXHRcdFx0XHRcdC8vIFNldCBjb3JyZXNwb25kaW5nIHByb3BlcnR5IHRvIGZhbHNlXG5cdFx0XHRcdFx0aWYgKCBnZXRTZXRJbnB1dCAmJiBnZXRTZXRBdHRyaWJ1dGUgfHwgIXJ1c2VEZWZhdWx0LnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0XHRcdGVsZW1bIHByb3BOYW1lIF0gPSBmYWxzZTtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHRcdFx0XHQvLyBBbHNvIGNsZWFyIGRlZmF1bHRDaGVja2VkL2RlZmF1bHRTZWxlY3RlZCAoaWYgYXBwcm9wcmlhdGUpXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGVsZW1bIGpRdWVyeS5jYW1lbENhc2UoIFwiZGVmYXVsdC1cIiArIG5hbWUgKSBdID1cblx0XHRcdFx0XHRcdFx0ZWxlbVsgcHJvcE5hbWUgXSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTZWUgIzk2OTkgZm9yIGV4cGxhbmF0aW9uIG9mIHRoaXMgYXBwcm9hY2ggKHNldHRpbmcgZmlyc3QsIHRoZW4gcmVtb3ZhbClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRqUXVlcnkuYXR0ciggZWxlbSwgbmFtZSwgXCJcIiApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIGdldFNldEF0dHJpYnV0ZSA/IG5hbWUgOiBwcm9wTmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIGlmICggZ2V0U2V0SW5wdXQgJiYgZ2V0U2V0QXR0cmlidXRlIHx8ICFydXNlRGVmYXVsdC50ZXN0KCBuYW1lICkgKSB7XG5cblx0XHRcdC8vIElFPDggbmVlZHMgdGhlICpwcm9wZXJ0eSogbmFtZVxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoICFnZXRTZXRBdHRyaWJ1dGUgJiYgalF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lLCBuYW1lICk7XG5cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0XHQvLyBVc2UgZGVmYXVsdENoZWNrZWQgYW5kIGRlZmF1bHRTZWxlY3RlZCBmb3Igb2xkSUVcblx0XHRcdGVsZW1bIGpRdWVyeS5jYW1lbENhc2UoIFwiZGVmYXVsdC1cIiArIG5hbWUgKSBdID0gZWxlbVsgbmFtZSBdID0gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cbn07XG5cbmpRdWVyeS5lYWNoKCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnNvdXJjZS5tYXRjaCggL1xcdysvZyApLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0dmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyO1xuXG5cdGlmICggZ2V0U2V0SW5wdXQgJiYgZ2V0U2V0QXR0cmlidXRlIHx8ICFydXNlRGVmYXVsdC50ZXN0KCBuYW1lICkgKSB7XG5cdFx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdFx0dmFyIHJldCwgaGFuZGxlO1xuXHRcdFx0aWYgKCAhaXNYTUwgKSB7XG5cblx0XHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0XHRoYW5kbGUgPSBhdHRySGFuZGxlWyBuYW1lIF07XG5cdFx0XHRcdGF0dHJIYW5kbGVbIG5hbWUgXSA9IHJldDtcblx0XHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRcdG5hbWUudG9Mb3dlckNhc2UoKSA6XG5cdFx0XHRcdFx0bnVsbDtcblx0XHRcdFx0YXR0ckhhbmRsZVsgbmFtZSBdID0gaGFuZGxlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdGF0dHJIYW5kbGVbIG5hbWUgXSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbVsgalF1ZXJ5LmNhbWVsQ2FzZSggXCJkZWZhdWx0LVwiICsgbmFtZSApIF0gP1xuXHRcdFx0XHRcdG5hbWUudG9Mb3dlckNhc2UoKSA6XG5cdFx0XHRcdFx0bnVsbDtcblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cbi8vIGZpeCBvbGRJRSBhdHRyb3BlcnRpZXNcbmlmICggIWdldFNldElucHV0IHx8ICFnZXRTZXRBdHRyaWJ1dGUgKSB7XG5cdGpRdWVyeS5hdHRySG9va3MudmFsdWUgPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0Ly8gRG9lcyBub3QgcmV0dXJuIHNvIHRoYXQgc2V0QXR0cmlidXRlIGlzIGFsc28gdXNlZFxuXHRcdFx0XHRlbGVtLmRlZmF1bHRWYWx1ZSA9IHZhbHVlO1xuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBVc2Ugbm9kZUhvb2sgaWYgZGVmaW5lZCAoIzE5NTQpOyBvdGhlcndpc2Ugc2V0QXR0cmlidXRlIGlzIGZpbmVcblx0XHRcdFx0cmV0dXJuIG5vZGVIb29rICYmIG5vZGVIb29rLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbi8vIElFNi83IGRvIG5vdCBzdXBwb3J0IGdldHRpbmcvc2V0dGluZyBzb21lIGF0dHJpYnV0ZXMgd2l0aCBnZXQvc2V0QXR0cmlidXRlXG5pZiAoICFnZXRTZXRBdHRyaWJ1dGUgKSB7XG5cblx0Ly8gVXNlIHRoaXMgZm9yIGFueSBhdHRyaWJ1dGUgaW4gSUU2Lzdcblx0Ly8gVGhpcyBmaXhlcyBhbG1vc3QgZXZlcnkgSUU2LzcgaXNzdWVcblx0bm9kZUhvb2sgPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cblx0XHRcdC8vIFNldCB0aGUgZXhpc3Rpbmcgb3IgY3JlYXRlIGEgbmV3IGF0dHJpYnV0ZSBub2RlXG5cdFx0XHR2YXIgcmV0ID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICk7XG5cdFx0XHRpZiAoICFyZXQgKSB7XG5cdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlTm9kZShcblx0XHRcdFx0XHQoIHJldCA9IGVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVBdHRyaWJ1dGUoIG5hbWUgKSApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdHJldC52YWx1ZSA9IHZhbHVlICs9IFwiXCI7XG5cblx0XHRcdC8vIEJyZWFrIGFzc29jaWF0aW9uIHdpdGggY2xvbmVkIGVsZW1lbnRzIGJ5IGFsc28gdXNpbmcgc2V0QXR0cmlidXRlICgjOTY0Nilcblx0XHRcdGlmICggbmFtZSA9PT0gXCJ2YWx1ZVwiIHx8IHZhbHVlID09PSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApICkge1xuXHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXG5cdC8vIFNvbWUgYXR0cmlidXRlcyBhcmUgY29uc3RydWN0ZWQgd2l0aCBlbXB0eS1zdHJpbmcgdmFsdWVzIHdoZW4gbm90IGRlZmluZWRcblx0YXR0ckhhbmRsZS5pZCA9IGF0dHJIYW5kbGUubmFtZSA9IGF0dHJIYW5kbGUuY29vcmRzID1cblx0XHRmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0XHR2YXIgcmV0O1xuXHRcdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRcdHJldHVybiAoIHJldCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApICkgJiYgcmV0LnZhbHVlICE9PSBcIlwiID9cblx0XHRcdFx0XHRyZXQudmFsdWUgOlxuXHRcdFx0XHRcdG51bGw7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHQvLyBGaXhpbmcgdmFsdWUgcmV0cmlldmFsIG9uIGEgYnV0dG9uIHJlcXVpcmVzIHRoaXMgbW9kdWxlXG5cdGpRdWVyeS52YWxIb29rcy5idXR0b24gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRcdHZhciByZXQgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKTtcblx0XHRcdGlmICggcmV0ICYmIHJldC5zcGVjaWZpZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQudmFsdWU7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzZXQ6IG5vZGVIb29rLnNldFxuXHR9O1xuXG5cdC8vIFNldCBjb250ZW50ZWRpdGFibGUgdG8gZmFsc2Ugb24gcmVtb3ZhbHMoIzEwNDI5KVxuXHQvLyBTZXR0aW5nIHRvIGVtcHR5IHN0cmluZyB0aHJvd3MgYW4gZXJyb3IgYXMgYW4gaW52YWxpZCB2YWx1ZVxuXHRqUXVlcnkuYXR0ckhvb2tzLmNvbnRlbnRlZGl0YWJsZSA9IHtcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgbmFtZSApIHtcblx0XHRcdG5vZGVIb29rLnNldCggZWxlbSwgdmFsdWUgPT09IFwiXCIgPyBmYWxzZSA6IHZhbHVlLCBuYW1lICk7XG5cdFx0fVxuXHR9O1xuXG5cdC8vIFNldCB3aWR0aCBhbmQgaGVpZ2h0IHRvIGF1dG8gaW5zdGVhZCBvZiAwIG9uIGVtcHR5IHN0cmluZyggQnVnICM4MTUwIClcblx0Ly8gVGhpcyBpcyBmb3IgcmVtb3ZhbHNcblx0alF1ZXJ5LmVhY2goIFsgXCJ3aWR0aFwiLCBcImhlaWdodFwiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHRcdGpRdWVyeS5hdHRySG9va3NbIG5hbWUgXSA9IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcIlwiICkge1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBcImF1dG9cIiApO1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0gKTtcbn1cblxuaWYgKCAhc3VwcG9ydC5zdHlsZSApIHtcblx0alF1ZXJ5LmF0dHJIb29rcy5zdHlsZSA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvLyBSZXR1cm4gdW5kZWZpbmVkIGluIHRoZSBjYXNlIG9mIGVtcHR5IHN0cmluZ1xuXHRcdFx0Ly8gTm90ZTogSUUgdXBwZXJjYXNlcyBjc3MgcHJvcGVydHkgbmFtZXMsIGJ1dCBpZiB3ZSB3ZXJlIHRvIC50b0xvd2VyQ2FzZSgpXG5cdFx0XHQvLyAuY3NzVGV4dCwgdGhhdCB3b3VsZCBkZXN0cm95IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gVVJMJ3MsIGxpa2UgaW4gXCJiYWNrZ3JvdW5kXCJcblx0XHRcdHJldHVybiBlbGVtLnN0eWxlLmNzc1RleHQgfHwgdW5kZWZpbmVkO1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gKCBlbGVtLnN0eWxlLmNzc1RleHQgPSB2YWx1ZSArIFwiXCIgKTtcblx0XHR9XG5cdH07XG59XG5cblxuXG5cbnZhciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdCkkL2ksXG5cdHJjbGlja2FibGUgPSAvXig/OmF8YXJlYSkkL2k7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5wcm9wLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVQcm9wOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyB0cnkvY2F0Y2ggaGFuZGxlcyBjYXNlcyB3aGVyZSBJRSBiYWxrcyAoc3VjaCBhcyByZW1vdmluZyBhIHByb3BlcnR5IG9uIHdpbmRvdylcblx0XHRcdHRyeSB7XG5cdFx0XHRcdHRoaXNbIG5hbWUgXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0ZGVsZXRlIHRoaXNbIG5hbWUgXTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge31cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rc1xuXHRcdFx0bmFtZSA9IGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZTtcblx0XHRcdGhvb2tzID0galF1ZXJ5LnByb3BIb29rc1sgbmFtZSBdO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAoIGVsZW1bIG5hbWUgXSA9IHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVsZW1bIG5hbWUgXTtcblx0fSxcblxuXHRwcm9wSG9va3M6IHtcblx0XHR0YWJJbmRleDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcblx0XHRcdFx0Ly8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0XG5cdFx0XHRcdC8vIGh0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXG5cdFx0XHRcdC8vIFVzZSBwcm9wZXIgYXR0cmlidXRlIHJldHJpZXZhbCgjMTIwNzIpXG5cdFx0XHRcdHZhciB0YWJpbmRleCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidGFiaW5kZXhcIiApO1xuXG5cdFx0XHRcdHJldHVybiB0YWJpbmRleCA/XG5cdFx0XHRcdFx0cGFyc2VJbnQoIHRhYmluZGV4LCAxMCApIDpcblx0XHRcdFx0XHRyZm9jdXNhYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSB8fFxuXHRcdFx0XHRcdFx0cmNsaWNrYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYgZWxlbS5ocmVmID9cblx0XHRcdFx0XHRcdFx0MCA6XG5cdFx0XHRcdFx0XHRcdC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRwcm9wRml4OiB7XG5cdFx0XCJmb3JcIjogXCJodG1sRm9yXCIsXG5cdFx0XCJjbGFzc1wiOiBcImNsYXNzTmFtZVwiXG5cdH1cbn0gKTtcblxuLy8gU29tZSBhdHRyaWJ1dGVzIHJlcXVpcmUgYSBzcGVjaWFsIGNhbGwgb24gSUVcbi8vIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNjQyOSUyOFZTLjg1JTI5LmFzcHhcbmlmICggIXN1cHBvcnQuaHJlZk5vcm1hbGl6ZWQgKSB7XG5cblx0Ly8gaHJlZi9zcmMgcHJvcGVydHkgc2hvdWxkIGdldCB0aGUgZnVsbCBub3JtYWxpemVkIFVSTCAoIzEwMjk5LyMxMjkxNSlcblx0alF1ZXJ5LmVhY2goIFsgXCJocmVmXCIsIFwic3JjXCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdFx0alF1ZXJ5LnByb3BIb29rc1sgbmFtZSBdID0ge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lLCA0ICk7XG5cdFx0XHR9XG5cdFx0fTtcblx0fSApO1xufVxuXG4vLyBTdXBwb3J0OiBTYWZhcmksIElFOStcbi8vIG1pcy1yZXBvcnRzIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHByb3BlcnR5IG9mIGFuIG9wdGlvblxuLy8gQWNjZXNzaW5nIHRoZSBwYXJlbnQncyBzZWxlY3RlZEluZGV4IHByb3BlcnR5IGZpeGVzIGl0XG5pZiAoICFzdXBwb3J0Lm9wdFNlbGVjdGVkICkge1xuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXG5cdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0cGFyZW50LnNlbGVjdGVkSW5kZXg7XG5cblx0XHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgaXQgYWxzbyB3b3JrcyB3aXRoIG9wdGdyb3Vwcywgc2VlICM1NzAxXG5cdFx0XHRcdGlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fVxuXHR9O1xufVxuXG5qUXVlcnkuZWFjaCggW1xuXHRcInRhYkluZGV4XCIsXG5cdFwicmVhZE9ubHlcIixcblx0XCJtYXhMZW5ndGhcIixcblx0XCJjZWxsU3BhY2luZ1wiLFxuXHRcImNlbGxQYWRkaW5nXCIsXG5cdFwicm93U3BhblwiLFxuXHRcImNvbFNwYW5cIixcblx0XCJ1c2VNYXBcIixcblx0XCJmcmFtZUJvcmRlclwiLFxuXHRcImNvbnRlbnRFZGl0YWJsZVwiXG5dLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpcztcbn0gKTtcblxuLy8gSUU2LzcgY2FsbCBlbmN0eXBlIGVuY29kaW5nXG5pZiAoICFzdXBwb3J0LmVuY3R5cGUgKSB7XG5cdGpRdWVyeS5wcm9wRml4LmVuY3R5cGUgPSBcImVuY29kaW5nXCI7XG59XG5cblxuXG5cbnZhciByY2xhc3MgPSAvW1xcdFxcclxcblxcZl0vZztcblxuZnVuY3Rpb24gZ2V0Q2xhc3MoIGVsZW0gKSB7XG5cdHJldHVybiBqUXVlcnkuYXR0ciggZWxlbSwgXCJjbGFzc1wiICkgfHwgXCJcIjtcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUgKSB7XG5cdFx0XHRjbGFzc2VzID0gdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xuXG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdCggXCIgXCIgKyBjdXJWYWx1ZSArIFwiIFwiICkucmVwbGFjZSggcmNsYXNzLCBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA8IDAgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciArPSBjbGF6eiArIFwiIFwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIG9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IGpRdWVyeS50cmltKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmF0dHIoIGVsZW0sIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuYXR0ciggXCJjbGFzc1wiLCBcIlwiICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUgKSB7XG5cdFx0XHRjbGFzc2VzID0gdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xuXG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblxuXHRcdFx0XHQvLyBUaGlzIGV4cHJlc3Npb24gaXMgaGVyZSBmb3IgYmV0dGVyIGNvbXByZXNzaWJpbGl0eSAoc2VlIGFkZENsYXNzKVxuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0KCBcIiBcIiArIGN1clZhbHVlICsgXCIgXCIgKS5yZXBsYWNlKCByY2xhc3MsIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlICphbGwqIGluc3RhbmNlc1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdFx0Y3VyID0gY3VyLnJlcGxhY2UoIFwiIFwiICsgY2xhenogKyBcIiBcIiwgXCIgXCIgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBqUXVlcnkudHJpbSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5hdHRyKCBlbGVtLCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHtcblx0XHR2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdGlmICggdHlwZW9mIHN0YXRlVmFsID09PSBcImJvb2xlYW5cIiAmJiB0eXBlID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlVmFsID8gdGhpcy5hZGRDbGFzcyggdmFsdWUgKSA6IHRoaXMucmVtb3ZlQ2xhc3MoIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS50b2dnbGVDbGFzcyhcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCB0aGlzLCBpLCBnZXRDbGFzcyggdGhpcyApLCBzdGF0ZVZhbCApLFxuXHRcdFx0XHRcdHN0YXRlVmFsXG5cdFx0XHRcdCk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgY2xhc3NOYW1lLCBpLCBzZWxmLCBjbGFzc05hbWVzO1xuXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdFx0Ly8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXNcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblx0XHRcdFx0Y2xhc3NOYW1lcyA9IHZhbHVlLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXTtcblxuXHRcdFx0XHR3aGlsZSAoICggY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSsrIF0gKSApIHtcblxuXHRcdFx0XHRcdC8vIENoZWNrIGVhY2ggY2xhc3NOYW1lIGdpdmVuLCBzcGFjZSBzZXBhcmF0ZWQgbGlzdFxuXHRcdFx0XHRcdGlmICggc2VsZi5oYXNDbGFzcyggY2xhc3NOYW1lICkgKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnJlbW92ZUNsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2VsZi5hZGRDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdC8vIFRvZ2dsZSB3aG9sZSBjbGFzcyBuYW1lXG5cdFx0XHR9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0XHRjbGFzc05hbWUgPSBnZXRDbGFzcyggdGhpcyApO1xuXHRcdFx0XHRpZiAoIGNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdC8vIHN0b3JlIGNsYXNzTmFtZSBpZiBzZXRcblx0XHRcdFx0XHRqUXVlcnkuX2RhdGEoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiLCBjbGFzc05hbWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIElmIHRoZSBlbGVtZW50IGhhcyBhIGNsYXNzIG5hbWUgb3IgaWYgd2UncmUgcGFzc2VkIFwiZmFsc2VcIixcblx0XHRcdFx0Ly8gdGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFib3ZlIHNhdmVkIGl0KS5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcblx0XHRcdFx0Ly8gZmFsbGluZyBiYWNrIHRvIHRoZSBlbXB0eSBzdHJpbmcgaWYgbm90aGluZyB3YXMgc3RvcmVkLlxuXHRcdFx0XHRqUXVlcnkuYXR0ciggdGhpcywgXCJjbGFzc1wiLFxuXHRcdFx0XHRcdGNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0XHRcdFwiXCIgOlxuXHRcdFx0XHRcdGpRdWVyeS5fZGF0YSggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGhhc0NsYXNzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGNsYXNzTmFtZSwgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Y2xhc3NOYW1lID0gXCIgXCIgKyBzZWxlY3RvciArIFwiIFwiO1xuXHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHQoIFwiIFwiICsgZ2V0Q2xhc3MoIGVsZW0gKSArIFwiIFwiICkucmVwbGFjZSggcmNsYXNzLCBcIiBcIiApXG5cdFx0XHRcdFx0LmluZGV4T2YoIGNsYXNzTmFtZSApID4gLTFcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUmV0dXJuIGpRdWVyeSBmb3IgYXR0cmlidXRlcy1vbmx5IGluY2x1c2lvblxuXG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGVycm9yIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0dGhpcy50cmlnZ2VyKCBuYW1lICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cblxudmFyIGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uO1xuXG52YXIgbm9uY2UgPSBqUXVlcnkubm93KCk7XG5cbnZhciBycXVlcnkgPSAoIC9cXD8vICk7XG5cblxuXG52YXIgcnZhbGlkdG9rZW5zID0gLygsKXwoXFxbfHspfCh9fF0pfFwiKD86W15cIlxcXFxcXHJcXG5dfFxcXFxbXCJcXFxcXFwvYmZucnRdfFxcXFx1W1xcZGEtZkEtRl17NH0pKlwiXFxzKjo/fHRydWV8ZmFsc2V8bnVsbHwtPyg/ITBcXGQpXFxkKyg/OlxcLlxcZCt8KSg/OltlRV1bKy1dP1xcZCt8KS9nO1xuXG5qUXVlcnkucGFyc2VKU09OID0gZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0Ly8gQXR0ZW1wdCB0byBwYXJzZSB1c2luZyB0aGUgbmF0aXZlIEpTT04gcGFyc2VyIGZpcnN0XG5cdGlmICggd2luZG93LkpTT04gJiYgd2luZG93LkpTT04ucGFyc2UgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuM1xuXHRcdC8vIFdvcmthcm91bmQgZmFpbHVyZSB0byBzdHJpbmctY2FzdCBudWxsIGlucHV0XG5cdFx0cmV0dXJuIHdpbmRvdy5KU09OLnBhcnNlKCBkYXRhICsgXCJcIiApO1xuXHR9XG5cblx0dmFyIHJlcXVpcmVOb25Db21tYSxcblx0XHRkZXB0aCA9IG51bGwsXG5cdFx0c3RyID0galF1ZXJ5LnRyaW0oIGRhdGEgKyBcIlwiICk7XG5cblx0Ly8gR3VhcmQgYWdhaW5zdCBpbnZhbGlkIChhbmQgcG9zc2libHkgZGFuZ2Vyb3VzKSBpbnB1dCBieSBlbnN1cmluZyB0aGF0IG5vdGhpbmcgcmVtYWluc1xuXHQvLyBhZnRlciByZW1vdmluZyB2YWxpZCB0b2tlbnNcblx0cmV0dXJuIHN0ciAmJiAhalF1ZXJ5LnRyaW0oIHN0ci5yZXBsYWNlKCBydmFsaWR0b2tlbnMsIGZ1bmN0aW9uKCB0b2tlbiwgY29tbWEsIG9wZW4sIGNsb3NlICkge1xuXG5cdFx0Ly8gRm9yY2UgdGVybWluYXRpb24gaWYgd2Ugc2VlIGEgbWlzcGxhY2VkIGNvbW1hXG5cdFx0aWYgKCByZXF1aXJlTm9uQ29tbWEgJiYgY29tbWEgKSB7XG5cdFx0XHRkZXB0aCA9IDA7XG5cdFx0fVxuXG5cdFx0Ly8gUGVyZm9ybSBubyBtb3JlIHJlcGxhY2VtZW50cyBhZnRlciByZXR1cm5pbmcgdG8gb3V0ZXJtb3N0IGRlcHRoXG5cdFx0aWYgKCBkZXB0aCA9PT0gMCApIHtcblx0XHRcdHJldHVybiB0b2tlbjtcblx0XHR9XG5cblx0XHQvLyBDb21tYXMgbXVzdCBub3QgZm9sbG93IFwiW1wiLCBcIntcIiwgb3IgXCIsXCJcblx0XHRyZXF1aXJlTm9uQ29tbWEgPSBvcGVuIHx8IGNvbW1hO1xuXG5cdFx0Ly8gRGV0ZXJtaW5lIG5ldyBkZXB0aFxuXHRcdC8vIGFycmF5L29iamVjdCBvcGVuIChcIltcIiBvciBcIntcIik6IGRlcHRoICs9IHRydWUgLSBmYWxzZSAoaW5jcmVtZW50KVxuXHRcdC8vIGFycmF5L29iamVjdCBjbG9zZSAoXCJdXCIgb3IgXCJ9XCIpOiBkZXB0aCArPSBmYWxzZSAtIHRydWUgKGRlY3JlbWVudClcblx0XHQvLyBvdGhlciBjYXNlcyAoXCIsXCIgb3IgcHJpbWl0aXZlKTogZGVwdGggKz0gdHJ1ZSAtIHRydWUgKG51bWVyaWMgY2FzdClcblx0XHRkZXB0aCArPSAhY2xvc2UgLSAhb3BlbjtcblxuXHRcdC8vIFJlbW92ZSB0aGlzIHRva2VuXG5cdFx0cmV0dXJuIFwiXCI7XG5cdH0gKSApID9cblx0XHQoIEZ1bmN0aW9uKCBcInJldHVybiBcIiArIHN0ciApICkoKSA6XG5cdFx0alF1ZXJ5LmVycm9yKCBcIkludmFsaWQgSlNPTjogXCIgKyBkYXRhICk7XG59O1xuXG5cbi8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmdcbmpRdWVyeS5wYXJzZVhNTCA9IGZ1bmN0aW9uKCBkYXRhICkge1xuXHR2YXIgeG1sLCB0bXA7XG5cdGlmICggIWRhdGEgfHwgdHlwZW9mIGRhdGEgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblx0dHJ5IHtcblx0XHRpZiAoIHdpbmRvdy5ET01QYXJzZXIgKSB7IC8vIFN0YW5kYXJkXG5cdFx0XHR0bXAgPSBuZXcgd2luZG93LkRPTVBhcnNlcigpO1xuXHRcdFx0eG1sID0gdG1wLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdFx0fSBlbHNlIHsgLy8gSUVcblx0XHRcdHhtbCA9IG5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdCggXCJNaWNyb3NvZnQuWE1MRE9NXCIgKTtcblx0XHRcdHhtbC5hc3luYyA9IFwiZmFsc2VcIjtcblx0XHRcdHhtbC5sb2FkWE1MKCBkYXRhICk7XG5cdFx0fVxuXHR9IGNhdGNoICggZSApIHtcblx0XHR4bWwgPSB1bmRlZmluZWQ7XG5cdH1cblx0aWYgKCAheG1sIHx8ICF4bWwuZG9jdW1lbnRFbGVtZW50IHx8IHhtbC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJwYXJzZXJlcnJvclwiICkubGVuZ3RoICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyBkYXRhICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cblxudmFyXG5cdHJoYXNoID0gLyMuKiQvLFxuXHRydHMgPSAvKFs/Jl0pXz1bXiZdKi8sXG5cblx0Ly8gSUUgbGVhdmVzIGFuIFxcciBjaGFyYWN0ZXIgYXQgRU9MXG5cdHJoZWFkZXJzID0gL14oLio/KTpbIFxcdF0qKFteXFxyXFxuXSopXFxyPyQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cdHJ1cmwgPSAvXihbXFx3ListXSs6KSg/OlxcL1xcLyg/OlteXFwvPyNdKkB8KShbXlxcLz8jOl0qKSg/OjooXFxkKyl8KXwpLyxcblxuXHQvKiBQcmVmaWx0ZXJzXG5cdCAqIDEpIFRoZXkgYXJlIHVzZWZ1bCB0byBpbnRyb2R1Y2UgY3VzdG9tIGRhdGFUeXBlcyAoc2VlIGFqYXgvanNvbnAuanMgZm9yIGFuIGV4YW1wbGUpXG5cdCAqIDIpIFRoZXNlIGFyZSBjYWxsZWQ6XG5cdCAqICAgIC0gQkVGT1JFIGFza2luZyBmb3IgYSB0cmFuc3BvcnRcblx0ICogICAgLSBBRlRFUiBwYXJhbSBzZXJpYWxpemF0aW9uIChzLmRhdGEgaXMgYSBzdHJpbmcgaWYgcy5wcm9jZXNzRGF0YSBpcyB0cnVlKVxuXHQgKiAzKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDQpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogNSkgZXhlY3V0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gY29udGludWUgZG93biB0byBcIipcIiBpZiBuZWVkZWRcblx0ICovXG5cdHByZWZpbHRlcnMgPSB7fSxcblxuXHQvKiBUcmFuc3BvcnRzIGJpbmRpbmdzXG5cdCAqIDEpIGtleSBpcyB0aGUgZGF0YVR5cGVcblx0ICogMikgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxuXHQgKiAzKSBzZWxlY3Rpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBnbyB0byBcIipcIiBpZiBuZWVkZWRcblx0ICovXG5cdHRyYW5zcG9ydHMgPSB7fSxcblxuXHQvLyBBdm9pZCBjb21tZW50LXByb2xvZyBjaGFyIHNlcXVlbmNlICgjMTAwOTgpOyBtdXN0IGFwcGVhc2UgbGludCBhbmQgZXZhZGUgY29tcHJlc3Npb25cblx0YWxsVHlwZXMgPSBcIiovXCIuY29uY2F0KCBcIipcIiApLFxuXG5cdC8vIERvY3VtZW50IGxvY2F0aW9uXG5cdGFqYXhMb2NhdGlvbiA9IGxvY2F0aW9uLmhyZWYsXG5cblx0Ly8gU2VnbWVudCBsb2NhdGlvbiBpbnRvIHBhcnRzXG5cdGFqYXhMb2NQYXJ0cyA9IHJ1cmwuZXhlYyggYWpheExvY2F0aW9uLnRvTG93ZXJDYXNlKCkgKSB8fCBbXTtcblxuLy8gQmFzZSBcImNvbnN0cnVjdG9yXCIgZm9yIGpRdWVyeS5hamF4UHJlZmlsdGVyIGFuZCBqUXVlcnkuYWpheFRyYW5zcG9ydFxuZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUgKSB7XG5cblx0Ly8gZGF0YVR5cGVFeHByZXNzaW9uIGlzIG9wdGlvbmFsIGFuZCBkZWZhdWx0cyB0byBcIipcIlxuXHRyZXR1cm4gZnVuY3Rpb24oIGRhdGFUeXBlRXhwcmVzc2lvbiwgZnVuYyApIHtcblxuXHRcdGlmICggdHlwZW9mIGRhdGFUeXBlRXhwcmVzc2lvbiAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247XG5cdFx0XHRkYXRhVHlwZUV4cHJlc3Npb24gPSBcIipcIjtcblx0XHR9XG5cblx0XHR2YXIgZGF0YVR5cGUsXG5cdFx0XHRpID0gMCxcblx0XHRcdGRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXTtcblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGZ1bmMgKSApIHtcblxuXHRcdFx0Ly8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lvblxuXHRcdFx0d2hpbGUgKCAoIGRhdGFUeXBlID0gZGF0YVR5cGVzWyBpKysgXSApICkge1xuXG5cdFx0XHRcdC8vIFByZXBlbmQgaWYgcmVxdWVzdGVkXG5cdFx0XHRcdGlmICggZGF0YVR5cGUuY2hhckF0KCAwICkgPT09IFwiK1wiICkge1xuXHRcdFx0XHRcdGRhdGFUeXBlID0gZGF0YVR5cGUuc2xpY2UoIDEgKSB8fCBcIipcIjtcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnVuc2hpZnQoIGZ1bmMgKTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYXBwZW5kXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS5wdXNoKCBmdW5jICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbi8vIEJhc2UgaW5zcGVjdGlvbiBmdW5jdGlvbiBmb3IgcHJlZmlsdGVycyBhbmQgdHJhbnNwb3J0c1xuZnVuY3Rpb24gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApIHtcblxuXHR2YXIgaW5zcGVjdGVkID0ge30sXG5cdFx0c2Vla2luZ1RyYW5zcG9ydCA9ICggc3RydWN0dXJlID09PSB0cmFuc3BvcnRzICk7XG5cblx0ZnVuY3Rpb24gaW5zcGVjdCggZGF0YVR5cGUgKSB7XG5cdFx0dmFyIHNlbGVjdGVkO1xuXHRcdGluc3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7XG5cdFx0alF1ZXJ5LmVhY2goIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSwgZnVuY3Rpb24oIF8sIHByZWZpbHRlck9yRmFjdG9yeSApIHtcblx0XHRcdHZhciBkYXRhVHlwZU9yVHJhbnNwb3J0ID0gcHJlZmlsdGVyT3JGYWN0b3J5KCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICk7XG5cdFx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZU9yVHJhbnNwb3J0ID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzZWVraW5nVHJhbnNwb3J0ICYmICFpbnNwZWN0ZWRbIGRhdGFUeXBlT3JUcmFuc3BvcnQgXSApIHtcblxuXHRcdFx0XHRvcHRpb25zLmRhdGFUeXBlcy51bnNoaWZ0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdGluc3BlY3QoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fSBlbHNlIGlmICggc2Vla2luZ1RyYW5zcG9ydCApIHtcblx0XHRcdFx0cmV0dXJuICEoIHNlbGVjdGVkID0gZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0XHRyZXR1cm4gc2VsZWN0ZWQ7XG5cdH1cblxuXHRyZXR1cm4gaW5zcGVjdCggb3B0aW9ucy5kYXRhVHlwZXNbIDAgXSApIHx8ICFpbnNwZWN0ZWRbIFwiKlwiIF0gJiYgaW5zcGVjdCggXCIqXCIgKTtcbn1cblxuLy8gQSBzcGVjaWFsIGV4dGVuZCBmb3IgYWpheCBvcHRpb25zXG4vLyB0aGF0IHRha2VzIFwiZmxhdFwiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKVxuLy8gRml4ZXMgIzk4ODdcbmZ1bmN0aW9uIGFqYXhFeHRlbmQoIHRhcmdldCwgc3JjICkge1xuXHR2YXIgZGVlcCwga2V5LFxuXHRcdGZsYXRPcHRpb25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTtcblxuXHRmb3IgKCBrZXkgaW4gc3JjICkge1xuXHRcdGlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0KCBmbGF0T3B0aW9uc1sga2V5IF0gPyB0YXJnZXQgOiAoIGRlZXAgfHwgKCBkZWVwID0ge30gKSApIClbIGtleSBdID0gc3JjWyBrZXkgXTtcblx0XHR9XG5cdH1cblx0aWYgKCBkZWVwICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRydWUsIHRhcmdldCwgZGVlcCApO1xuXHR9XG5cblx0cmV0dXJuIHRhcmdldDtcbn1cblxuLyogSGFuZGxlcyByZXNwb25zZXMgdG8gYW4gYWpheCByZXF1ZXN0OlxuICogLSBmaW5kcyB0aGUgcmlnaHQgZGF0YVR5cGUgKG1lZGlhdGVzIGJldHdlZW4gY29udGVudC10eXBlIGFuZCBleHBlY3RlZCBkYXRhVHlwZSlcbiAqIC0gcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxuICovXG5mdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICkge1xuXHR2YXIgZmlyc3REYXRhVHlwZSwgY3QsIGZpbmFsRGF0YVR5cGUsIHR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENvbmRlbnNlIGVxdWl2YWxlbmNlIGNvbnZlcnRlcnNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y3VycmVudCA9IHRtcFsgMCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXBwbHkgY29udmVydGVyIChpZiBub3QgYW4gZXF1aXZhbGVuY2UpXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcblxuXHRcdFx0XHRcdC8vIFVubGVzcyBlcnJvcnMgYXJlIGFsbG93ZWQgdG8gYnViYmxlLCBjYXRjaCBhbmQgcmV0dXJuIHRoZW1cblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgc1sgXCJ0aHJvd3NcIiBdICkgeyAvLyBqc2NzOmlnbm9yZSByZXF1aXJlRG90Tm90YXRpb25cblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdGU6IFwicGFyc2VyZXJyb3JcIixcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogY29udiA/IGUgOiBcIk5vIGNvbnZlcnNpb24gZnJvbSBcIiArIHByZXYgKyBcIiB0byBcIiArIGN1cnJlbnRcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4geyBzdGF0ZTogXCJzdWNjZXNzXCIsIGRhdGE6IHJlc3BvbnNlIH07XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBDb3VudGVyIGZvciBob2xkaW5nIHRoZSBudW1iZXIgb2YgYWN0aXZlIHF1ZXJpZXNcblx0YWN0aXZlOiAwLFxuXG5cdC8vIExhc3QtTW9kaWZpZWQgaGVhZGVyIGNhY2hlIGZvciBuZXh0IHJlcXVlc3Rcblx0bGFzdE1vZGlmaWVkOiB7fSxcblx0ZXRhZzoge30sXG5cblx0YWpheFNldHRpbmdzOiB7XG5cdFx0dXJsOiBhamF4TG9jYXRpb24sXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBhamF4TG9jUGFydHNbIDEgXSApLFxuXHRcdGdsb2JhbDogdHJ1ZSxcblx0XHRwcm9jZXNzRGF0YTogdHJ1ZSxcblx0XHRhc3luYzogdHJ1ZSxcblx0XHRjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLThcIixcblx0XHQvKlxuXHRcdHRpbWVvdXQ6IDAsXG5cdFx0ZGF0YTogbnVsbCxcblx0XHRkYXRhVHlwZTogbnVsbCxcblx0XHR1c2VybmFtZTogbnVsbCxcblx0XHRwYXNzd29yZDogbnVsbCxcblx0XHRjYWNoZTogbnVsbCxcblx0XHR0aHJvd3M6IGZhbHNlLFxuXHRcdHRyYWRpdGlvbmFsOiBmYWxzZSxcblx0XHRoZWFkZXJzOiB7fSxcblx0XHQqL1xuXG5cdFx0YWNjZXB0czoge1xuXHRcdFx0XCIqXCI6IGFsbFR5cGVzLFxuXHRcdFx0dGV4dDogXCJ0ZXh0L3BsYWluXCIsXG5cdFx0XHRodG1sOiBcInRleHQvaHRtbFwiLFxuXHRcdFx0eG1sOiBcImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWxcIixcblx0XHRcdGpzb246IFwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0XCJcblx0XHR9LFxuXG5cdFx0Y29udGVudHM6IHtcblx0XHRcdHhtbDogL1xcYnhtbFxcYi8sXG5cdFx0XHRodG1sOiAvXFxiaHRtbC8sXG5cdFx0XHRqc29uOiAvXFxianNvblxcYi9cblx0XHR9LFxuXG5cdFx0cmVzcG9uc2VGaWVsZHM6IHtcblx0XHRcdHhtbDogXCJyZXNwb25zZVhNTFwiLFxuXHRcdFx0dGV4dDogXCJyZXNwb25zZVRleHRcIixcblx0XHRcdGpzb246IFwicmVzcG9uc2VKU09OXCJcblx0XHR9LFxuXG5cdFx0Ly8gRGF0YSBjb252ZXJ0ZXJzXG5cdFx0Ly8gS2V5cyBzZXBhcmF0ZSBzb3VyY2UgKG9yIGNhdGNoYWxsIFwiKlwiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmdsZSBzcGFjZVxuXHRcdGNvbnZlcnRlcnM6IHtcblxuXHRcdFx0Ly8gQ29udmVydCBhbnl0aGluZyB0byB0ZXh0XG5cdFx0XHRcIiogdGV4dFwiOiBTdHJpbmcsXG5cblx0XHRcdC8vIFRleHQgdG8gaHRtbCAodHJ1ZSA9IG5vIHRyYW5zZm9ybWF0aW9uKVxuXHRcdFx0XCJ0ZXh0IGh0bWxcIjogdHJ1ZSxcblxuXHRcdFx0Ly8gRXZhbHVhdGUgdGV4dCBhcyBhIGpzb24gZXhwcmVzc2lvblxuXHRcdFx0XCJ0ZXh0IGpzb25cIjogalF1ZXJ5LnBhcnNlSlNPTixcblxuXHRcdFx0Ly8gUGFyc2UgdGV4dCBhcyB4bWxcblx0XHRcdFwidGV4dCB4bWxcIjogalF1ZXJ5LnBhcnNlWE1MXG5cdFx0fSxcblxuXHRcdC8vIEZvciBvcHRpb25zIHRoYXQgc2hvdWxkbid0IGJlIGRlZXAgZXh0ZW5kZWQ6XG5cdFx0Ly8geW91IGNhbiBhZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZlxuXHRcdC8vIGFuZCB3aGVuIHlvdSBjcmVhdGUgb25lIHRoYXQgc2hvdWxkbid0IGJlXG5cdFx0Ly8gZGVlcCBleHRlbmRlZCAoc2VlIGFqYXhFeHRlbmQpXG5cdFx0ZmxhdE9wdGlvbnM6IHtcblx0XHRcdHVybDogdHJ1ZSxcblx0XHRcdGNvbnRleHQ6IHRydWVcblx0XHR9XG5cdH0sXG5cblx0Ly8gQ3JlYXRlcyBhIGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXRcblx0Ly8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLlxuXHQvLyBJZiB0YXJnZXQgaXMgb21pdHRlZCwgd3JpdGVzIGludG8gYWpheFNldHRpbmdzLlxuXHRhamF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkge1xuXHRcdHJldHVybiBzZXR0aW5ncyA/XG5cblx0XHRcdC8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0XG5cdFx0XHRhamF4RXh0ZW5kKCBhamF4RXh0ZW5kKCB0YXJnZXQsIGpRdWVyeS5hamF4U2V0dGluZ3MgKSwgc2V0dGluZ3MgKSA6XG5cblx0XHRcdC8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3Ncblx0XHRcdGFqYXhFeHRlbmQoIGpRdWVyeS5hamF4U2V0dGluZ3MsIHRhcmdldCApO1xuXHR9LFxuXG5cdGFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLFxuXHRhamF4VHJhbnNwb3J0OiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMgKSxcblxuXHQvLyBNYWluIG1ldGhvZFxuXHRhamF4OiBmdW5jdGlvbiggdXJsLCBvcHRpb25zICkge1xuXG5cdFx0Ly8gSWYgdXJsIGlzIGFuIG9iamVjdCwgc2ltdWxhdGUgcHJlLTEuNSBzaWduYXR1cmVcblx0XHRpZiAoIHR5cGVvZiB1cmwgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRvcHRpb25zID0gdXJsO1xuXHRcdFx0dXJsID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIEZvcmNlIG9wdGlvbnMgdG8gYmUgYW4gb2JqZWN0XG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0XHR2YXJcblxuXHRcdFx0Ly8gQ3Jvc3MtZG9tYWluIGRldGVjdGlvbiB2YXJzXG5cdFx0XHRwYXJ0cyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gVVJMIHdpdGhvdXQgYW50aS1jYWNoZSBwYXJhbVxuXHRcdFx0Y2FjaGVVUkwsXG5cblx0XHRcdC8vIFJlc3BvbnNlIGhlYWRlcnMgYXMgc3RyaW5nXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcsXG5cblx0XHRcdC8vIHRpbWVvdXQgaGFuZGxlXG5cdFx0XHR0aW1lb3V0VGltZXIsXG5cblx0XHRcdC8vIFRvIGtub3cgaWYgZ2xvYmFsIGV2ZW50cyBhcmUgdG8gYmUgZGlzcGF0Y2hlZFxuXHRcdFx0ZmlyZUdsb2JhbHMsXG5cblx0XHRcdHRyYW5zcG9ydCxcblxuXHRcdFx0Ly8gUmVzcG9uc2UgaGVhZGVyc1xuXHRcdFx0cmVzcG9uc2VIZWFkZXJzLFxuXG5cdFx0XHQvLyBDcmVhdGUgdGhlIGZpbmFsIG9wdGlvbnMgb2JqZWN0XG5cdFx0XHRzID0galF1ZXJ5LmFqYXhTZXR1cCgge30sIG9wdGlvbnMgKSxcblxuXHRcdFx0Ly8gQ2FsbGJhY2tzIGNvbnRleHRcblx0XHRcdGNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLFxuXG5cdFx0XHQvLyBDb250ZXh0IGZvciBnbG9iYWwgZXZlbnRzIGlzIGNhbGxiYWNrQ29udGV4dCBpZiBpdCBpcyBhIERPTSBub2RlIG9yIGpRdWVyeSBjb2xsZWN0aW9uXG5cdFx0XHRnbG9iYWxFdmVudENvbnRleHQgPSBzLmNvbnRleHQgJiZcblx0XHRcdFx0KCBjYWxsYmFja0NvbnRleHQubm9kZVR5cGUgfHwgY2FsbGJhY2tDb250ZXh0LmpxdWVyeSApID9cblx0XHRcdFx0XHRqUXVlcnkoIGNhbGxiYWNrQ29udGV4dCApIDpcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQsXG5cblx0XHRcdC8vIERlZmVycmVkc1xuXHRcdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXG5cblx0XHRcdC8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0IG9uY2UpXG5cdFx0XHRyZXF1ZXN0SGVhZGVycyA9IHt9LFxuXHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lcyA9IHt9LFxuXG5cdFx0XHQvLyBUaGUganFYSFIgc3RhdGVcblx0XHRcdHN0YXRlID0gMCxcblxuXHRcdFx0Ly8gRGVmYXVsdCBhYm9ydCBtZXNzYWdlXG5cdFx0XHRzdHJBYm9ydCA9IFwiY2FuY2VsZWRcIixcblxuXHRcdFx0Ly8gRmFrZSB4aHJcblx0XHRcdGpxWEhSID0ge1xuXHRcdFx0XHRyZWFkeVN0YXRlOiAwLFxuXG5cdFx0XHRcdC8vIEJ1aWxkcyBoZWFkZXJzIGhhc2h0YWJsZSBpZiBuZWVkZWRcblx0XHRcdFx0Z2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0XHRcdFx0dmFyIG1hdGNoO1xuXHRcdFx0XHRcdGlmICggc3RhdGUgPT09IDIgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICFyZXNwb25zZUhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVycyA9IHt9O1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNwb25zZUhlYWRlcnNTdHJpbmcgKSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpIF0gPSBtYXRjaFsgMiBdO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtYXRjaCA9IHJlc3BvbnNlSGVhZGVyc1sga2V5LnRvTG93ZXJDYXNlKCkgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoID09IG51bGwgPyBudWxsIDogbWF0Y2g7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gUmF3IHN0cmluZ1xuXHRcdFx0XHRnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBzdGF0ZSA9PT0gMiA/IHJlc3BvbnNlSGVhZGVyc1N0cmluZyA6IG51bGw7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FjaGVzIHRoZSBoZWFkZXJcblx0XHRcdFx0c2V0UmVxdWVzdEhlYWRlcjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0XHRcdHZhciBsbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRpZiAoICFzdGF0ZSApIHtcblx0XHRcdFx0XHRcdG5hbWUgPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBsbmFtZSBdID0gcmVxdWVzdEhlYWRlcnNOYW1lc1sgbG5hbWUgXSB8fCBuYW1lO1xuXHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBPdmVycmlkZXMgcmVzcG9uc2UgY29udGVudC10eXBlIGhlYWRlclxuXHRcdFx0XHRvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRpZiAoICFzdGF0ZSApIHtcblx0XHRcdFx0XHRcdHMubWltZVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0XHRzdGF0dXNDb2RlOiBmdW5jdGlvbiggbWFwICkge1xuXHRcdFx0XHRcdHZhciBjb2RlO1xuXHRcdFx0XHRcdGlmICggbWFwICkge1xuXHRcdFx0XHRcdFx0aWYgKCBzdGF0ZSA8IDIgKSB7XG5cdFx0XHRcdFx0XHRcdGZvciAoIGNvZGUgaW4gbWFwICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gTGF6eS1hZGQgdGhlIG5ldyBjYWxsYmFjayBpbiBhIHdheSB0aGF0IHByZXNlcnZlcyBvbGQgb25lc1xuXHRcdFx0XHRcdFx0XHRcdHN0YXR1c0NvZGVbIGNvZGUgXSA9IFsgc3RhdHVzQ29kZVsgY29kZSBdLCBtYXBbIGNvZGUgXSBdO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNhbGxiYWNrc1xuXHRcdFx0XHRcdFx0XHRqcVhIUi5hbHdheXMoIG1hcFsganFYSFIuc3RhdHVzIF0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FuY2VsIHRoZSByZXF1ZXN0XG5cdFx0XHRcdGFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHR2YXIgZmluYWxUZXh0ID0gc3RhdHVzVGV4dCB8fCBzdHJBYm9ydDtcblx0XHRcdFx0XHRpZiAoIHRyYW5zcG9ydCApIHtcblx0XHRcdFx0XHRcdHRyYW5zcG9ydC5hYm9ydCggZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRvbmUoIDAsIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0Ly8gQXR0YWNoIGRlZmVycmVkc1xuXHRcdGRlZmVycmVkLnByb21pc2UoIGpxWEhSICkuY29tcGxldGUgPSBjb21wbGV0ZURlZmVycmVkLmFkZDtcblx0XHRqcVhIUi5zdWNjZXNzID0ganFYSFIuZG9uZTtcblx0XHRqcVhIUi5lcnJvciA9IGpxWEhSLmZhaWw7XG5cblx0XHQvLyBSZW1vdmUgaGFzaCBjaGFyYWN0ZXIgKCM3NTMxOiBhbmQgc3RyaW5nIHByb21vdGlvbilcblx0XHQvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkICgjNTg2NjogSUU3IGlzc3VlIHdpdGggcHJvdG9jb2wtbGVzcyB1cmxzKVxuXHRcdC8vIEhhbmRsZSBmYWxzeSB1cmwgaW4gdGhlIHNldHRpbmdzIG9iamVjdCAoIzEwMDkzOiBjb25zaXN0ZW5jeSB3aXRoIG9sZCBzaWduYXR1cmUpXG5cdFx0Ly8gV2UgYWxzbyB1c2UgdGhlIHVybCBwYXJhbWV0ZXIgaWYgYXZhaWxhYmxlXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGFqYXhMb2NhdGlvbiApICsgXCJcIiApXG5cdFx0XHQucmVwbGFjZSggcmhhc2gsIFwiXCIgKVxuXHRcdFx0LnJlcGxhY2UoIHJwcm90b2NvbCwgYWpheExvY1BhcnRzWyAxIF0gKyBcIi8vXCIgKTtcblxuXHRcdC8vIEFsaWFzIG1ldGhvZCBvcHRpb24gdG8gdHlwZSBhcyBwZXIgdGlja2V0ICMxMjAwNFxuXHRcdHMudHlwZSA9IG9wdGlvbnMubWV0aG9kIHx8IG9wdGlvbnMudHlwZSB8fCBzLm1ldGhvZCB8fCBzLnR5cGU7XG5cblx0XHQvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0XG5cdFx0cy5kYXRhVHlwZXMgPSBqUXVlcnkudHJpbSggcy5kYXRhVHlwZSB8fCBcIipcIiApLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3R3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXG5cdFx0Ly8gQSBjcm9zcy1kb21haW4gcmVxdWVzdCBpcyBpbiBvcmRlciB3aGVuIHdlIGhhdmUgYSBwcm90b2NvbDpob3N0OnBvcnQgbWlzbWF0Y2hcblx0XHRpZiAoIHMuY3Jvc3NEb21haW4gPT0gbnVsbCApIHtcblx0XHRcdHBhcnRzID0gcnVybC5leGVjKCBzLnVybC50b0xvd2VyQ2FzZSgpICk7XG5cdFx0XHRzLmNyb3NzRG9tYWluID0gISEoIHBhcnRzICYmXG5cdFx0XHRcdCggcGFydHNbIDEgXSAhPT0gYWpheExvY1BhcnRzWyAxIF0gfHwgcGFydHNbIDIgXSAhPT0gYWpheExvY1BhcnRzWyAyIF0gfHxcblx0XHRcdFx0XHQoIHBhcnRzWyAzIF0gfHwgKCBwYXJ0c1sgMSBdID09PSBcImh0dHA6XCIgPyBcIjgwXCIgOiBcIjQ0M1wiICkgKSAhPT1cblx0XHRcdFx0XHRcdCggYWpheExvY1BhcnRzWyAzIF0gfHwgKCBhamF4TG9jUGFydHNbIDEgXSA9PT0gXCJodHRwOlwiID8gXCI4MFwiIDogXCI0NDNcIiApICkgKVxuXHRcdFx0KTtcblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IGRhdGEgaWYgbm90IGFscmVhZHkgYSBzdHJpbmdcblx0XHRpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmIHR5cGVvZiBzLmRhdGEgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRzLmRhdGEgPSBqUXVlcnkucGFyYW0oIHMuZGF0YSwgcy50cmFkaXRpb25hbCApO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHByZWZpbHRlcnNcblx0XHRpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGEgcHJlZmlsdGVyLCBzdG9wIHRoZXJlXG5cdFx0aWYgKCBzdGF0ZSA9PT0gMiApIHtcblx0XHRcdHJldHVybiBqcVhIUjtcblx0XHR9XG5cblx0XHQvLyBXZSBjYW4gZmlyZSBnbG9iYWwgZXZlbnRzIGFzIG9mIG5vdyBpZiBhc2tlZCB0b1xuXHRcdC8vIERvbid0IGZpcmUgZXZlbnRzIGlmIGpRdWVyeS5ldmVudCBpcyB1bmRlZmluZWQgaW4gYW4gQU1ELXVzYWdlIHNjZW5hcmlvICgjMTUxMTgpXG5cdFx0ZmlyZUdsb2JhbHMgPSBqUXVlcnkuZXZlbnQgJiYgcy5nbG9iYWw7XG5cblx0XHQvLyBXYXRjaCBmb3IgYSBuZXcgc2V0IG9mIHJlcXVlc3RzXG5cdFx0aWYgKCBmaXJlR2xvYmFscyAmJiBqUXVlcnkuYWN0aXZlKysgPT09IDAgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RhcnRcIiApO1xuXHRcdH1cblxuXHRcdC8vIFVwcGVyY2FzZSB0aGUgdHlwZVxuXHRcdHMudHlwZSA9IHMudHlwZS50b1VwcGVyQ2FzZSgpO1xuXG5cdFx0Ly8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRlbnRcblx0XHRzLmhhc0NvbnRlbnQgPSAhcm5vQ29udGVudC50ZXN0KCBzLnR5cGUgKTtcblxuXHRcdC8vIFNhdmUgdGhlIFVSTCBpbiBjYXNlIHdlJ3JlIHRveWluZyB3aXRoIHRoZSBJZi1Nb2RpZmllZC1TaW5jZVxuXHRcdC8vIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciBsYXRlciBvblxuXHRcdGNhY2hlVVJMID0gcy51cmw7XG5cblx0XHQvLyBNb3JlIG9wdGlvbnMgaGFuZGxpbmcgZm9yIHJlcXVlc3RzIHdpdGggbm8gY29udGVudFxuXHRcdGlmICggIXMuaGFzQ29udGVudCApIHtcblxuXHRcdFx0Ly8gSWYgZGF0YSBpcyBhdmFpbGFibGUsIGFwcGVuZCBkYXRhIHRvIHVybFxuXHRcdFx0aWYgKCBzLmRhdGEgKSB7XG5cdFx0XHRcdGNhY2hlVVJMID0gKCBzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgcy5kYXRhICk7XG5cblx0XHRcdFx0Ly8gIzk2ODI6IHJlbW92ZSBkYXRhIHNvIHRoYXQgaXQncyBub3QgdXNlZCBpbiBhbiBldmVudHVhbCByZXRyeVxuXHRcdFx0XHRkZWxldGUgcy5kYXRhO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgYW50aS1jYWNoZSBpbiB1cmwgaWYgbmVlZGVkXG5cdFx0XHRpZiAoIHMuY2FjaGUgPT09IGZhbHNlICkge1xuXHRcdFx0XHRzLnVybCA9IHJ0cy50ZXN0KCBjYWNoZVVSTCApID9cblxuXHRcdFx0XHRcdC8vIElmIHRoZXJlIGlzIGFscmVhZHkgYSAnXycgcGFyYW1ldGVyLCBzZXQgaXRzIHZhbHVlXG5cdFx0XHRcdFx0Y2FjaGVVUkwucmVwbGFjZSggcnRzLCBcIiQxXz1cIiArIG5vbmNlKysgKSA6XG5cblx0XHRcdFx0XHQvLyBPdGhlcndpc2UgYWRkIG9uZSB0byB0aGUgZW5kXG5cdFx0XHRcdFx0Y2FjaGVVUkwgKyAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgXCJfPVwiICsgbm9uY2UrKztcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0aWYgKCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU1vZGlmaWVkLVNpbmNlXCIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHRcdGlmICggalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKSB7XG5cdFx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiSWYtTm9uZS1NYXRjaFwiLCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgY29ycmVjdCBoZWFkZXIsIGlmIGRhdGEgaXMgYmVpbmcgc2VudFxuXHRcdGlmICggcy5kYXRhICYmIHMuaGFzQ29udGVudCAmJiBzLmNvbnRlbnRUeXBlICE9PSBmYWxzZSB8fCBvcHRpb25zLmNvbnRlbnRUeXBlICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJDb250ZW50LVR5cGVcIiwgcy5jb250ZW50VHlwZSApO1xuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgQWNjZXB0cyBoZWFkZXIgZm9yIHRoZSBzZXJ2ZXIsIGRlcGVuZGluZyBvbiB0aGUgZGF0YVR5cGVcblx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKFxuXHRcdFx0XCJBY2NlcHRcIixcblx0XHRcdHMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gP1xuXHRcdFx0XHRzLmFjY2VwdHNbIHMuZGF0YVR5cGVzWyAwIF0gXSArXG5cdFx0XHRcdFx0KCBzLmRhdGFUeXBlc1sgMCBdICE9PSBcIipcIiA/IFwiLCBcIiArIGFsbFR5cGVzICsgXCI7IHE9MC4wMVwiIDogXCJcIiApIDpcblx0XHRcdFx0cy5hY2NlcHRzWyBcIipcIiBdXG5cdFx0KTtcblxuXHRcdC8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvblxuXHRcdGZvciAoIGkgaW4gcy5oZWFkZXJzICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggaSwgcy5oZWFkZXJzWyBpIF0gKTtcblx0XHR9XG5cblx0XHQvLyBBbGxvdyBjdXN0b20gaGVhZGVycy9taW1ldHlwZXMgYW5kIGVhcmx5IGFib3J0XG5cdFx0aWYgKCBzLmJlZm9yZVNlbmQgJiZcblx0XHRcdCggcy5iZWZvcmVTZW5kLmNhbGwoIGNhbGxiYWNrQ29udGV4dCwganFYSFIsIHMgKSA9PT0gZmFsc2UgfHwgc3RhdGUgPT09IDIgKSApIHtcblxuXHRcdFx0Ly8gQWJvcnQgaWYgbm90IGRvbmUgYWxyZWFkeSBhbmQgcmV0dXJuXG5cdFx0XHRyZXR1cm4ganFYSFIuYWJvcnQoKTtcblx0XHR9XG5cblx0XHQvLyBhYm9ydGluZyBpcyBubyBsb25nZXIgYSBjYW5jZWxsYXRpb25cblx0XHRzdHJBYm9ydCA9IFwiYWJvcnRcIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tzIG9uIGRlZmVycmVkc1xuXHRcdGZvciAoIGkgaW4geyBzdWNjZXNzOiAxLCBlcnJvcjogMSwgY29tcGxldGU6IDEgfSApIHtcblx0XHRcdGpxWEhSWyBpIF0oIHNbIGkgXSApO1xuXHRcdH1cblxuXHRcdC8vIEdldCB0cmFuc3BvcnRcblx0XHR0cmFuc3BvcnQgPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIG5vIHRyYW5zcG9ydCwgd2UgYXV0by1hYm9ydFxuXHRcdGlmICggIXRyYW5zcG9ydCApIHtcblx0XHRcdGRvbmUoIC0xLCBcIk5vIFRyYW5zcG9ydFwiICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSAxO1xuXG5cdFx0XHQvLyBTZW5kIGdsb2JhbCBldmVudFxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheFNlbmRcIiwgWyBqcVhIUiwgcyBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGFqYXhTZW5kLCBzdG9wIHRoZXJlXG5cdFx0XHRpZiAoIHN0YXRlID09PSAyICkge1xuXHRcdFx0XHRyZXR1cm4ganFYSFI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRpbWVvdXRcblx0XHRcdGlmICggcy5hc3luYyAmJiBzLnRpbWVvdXQgPiAwICkge1xuXHRcdFx0XHR0aW1lb3V0VGltZXIgPSB3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0anFYSFIuYWJvcnQoIFwidGltZW91dFwiICk7XG5cdFx0XHRcdH0sIHMudGltZW91dCApO1xuXHRcdFx0fVxuXG5cdFx0XHR0cnkge1xuXHRcdFx0XHRzdGF0ZSA9IDE7XG5cdFx0XHRcdHRyYW5zcG9ydC5zZW5kKCByZXF1ZXN0SGVhZGVycywgZG9uZSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gUHJvcGFnYXRlIGV4Y2VwdGlvbiBhcyBlcnJvciBpZiBub3QgZG9uZVxuXHRcdFx0XHRpZiAoIHN0YXRlIDwgMiApIHtcblx0XHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXG5cdFx0XHRcdC8vIFNpbXBseSByZXRocm93IG90aGVyd2lzZVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRocm93IGU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDYWxsYmFjayBmb3Igd2hlbiBldmVyeXRoaW5nIGlzIGRvbmVcblx0XHRmdW5jdGlvbiBkb25lKCBzdGF0dXMsIG5hdGl2ZVN0YXR1c1RleHQsIHJlc3BvbnNlcywgaGVhZGVycyApIHtcblx0XHRcdHZhciBpc1N1Y2Nlc3MsIHN1Y2Nlc3MsIGVycm9yLCByZXNwb25zZSwgbW9kaWZpZWQsXG5cdFx0XHRcdHN0YXR1c1RleHQgPSBuYXRpdmVTdGF0dXNUZXh0O1xuXG5cdFx0XHQvLyBDYWxsZWQgb25jZVxuXHRcdFx0aWYgKCBzdGF0ZSA9PT0gMiApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0ZSBpcyBcImRvbmVcIiBub3dcblx0XHRcdHN0YXRlID0gMjtcblxuXHRcdFx0Ly8gQ2xlYXIgdGltZW91dCBpZiBpdCBleGlzdHNcblx0XHRcdGlmICggdGltZW91dFRpbWVyICkge1xuXHRcdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGltZXIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJseSBnYXJiYWdlIGNvbGxlY3Rpb25cblx0XHRcdC8vIChubyBtYXR0ZXIgaG93IGxvbmcgdGhlIGpxWEhSIG9iamVjdCB3aWxsIGJlIHVzZWQpXG5cdFx0XHR0cmFuc3BvcnQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdC8vIENhY2hlIHJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyA9IGhlYWRlcnMgfHwgXCJcIjtcblxuXHRcdFx0Ly8gU2V0IHJlYWR5U3RhdGVcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSBzdGF0dXMgPiAwID8gNCA6IDA7XG5cblx0XHRcdC8vIERldGVybWluZSBpZiBzdWNjZXNzZnVsXG5cdFx0XHRpc1N1Y2Nlc3MgPSBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMCB8fCBzdGF0dXMgPT09IDMwNDtcblxuXHRcdFx0Ly8gR2V0IHJlc3BvbnNlIGRhdGFcblx0XHRcdGlmICggcmVzcG9uc2VzICkge1xuXHRcdFx0XHRyZXNwb25zZSA9IGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCBubyBtYXR0ZXIgd2hhdCAodGhhdCB3YXkgcmVzcG9uc2VYWFggZmllbGRzIGFyZSBhbHdheXMgc2V0KVxuXHRcdFx0cmVzcG9uc2UgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKTtcblxuXHRcdFx0Ly8gSWYgc3VjY2Vzc2Z1bCwgaGFuZGxlIHR5cGUgY2hhaW5pbmdcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXG5cdFx0XHRcdC8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuXG5cdFx0XHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiTGFzdC1Nb2RpZmllZFwiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJldGFnXCIgKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBpZiBubyBjb250ZW50XG5cdFx0XHRcdGlmICggc3RhdHVzID09PSAyMDQgfHwgcy50eXBlID09PSBcIkhFQURcIiApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJub2NvbnRlbnRcIjtcblxuXHRcdFx0XHQvLyBpZiBub3QgbW9kaWZpZWRcblx0XHRcdFx0fSBlbHNlIGlmICggc3RhdHVzID09PSAzMDQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm90bW9kaWZpZWRcIjtcblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGRhdGEsIGxldCdzIGNvbnZlcnQgaXRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7XG5cdFx0XHRcdFx0c3VjY2VzcyA9IHJlc3BvbnNlLmRhdGE7XG5cdFx0XHRcdFx0ZXJyb3IgPSByZXNwb25zZS5lcnJvcjtcblx0XHRcdFx0XHRpc1N1Y2Nlc3MgPSAhZXJyb3I7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gV2UgZXh0cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHRcblx0XHRcdFx0Ly8gdGhlbiBub3JtYWxpemUgc3RhdHVzVGV4dCBhbmQgc3RhdHVzIGZvciBub24tYWJvcnRzXG5cdFx0XHRcdGVycm9yID0gc3RhdHVzVGV4dDtcblx0XHRcdFx0aWYgKCBzdGF0dXMgfHwgIXN0YXR1c1RleHQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwiZXJyb3JcIjtcblx0XHRcdFx0XHRpZiAoIHN0YXR1cyA8IDAgKSB7XG5cdFx0XHRcdFx0XHRzdGF0dXMgPSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgZGF0YSBmb3IgdGhlIGZha2UgeGhyIG9iamVjdFxuXHRcdFx0anFYSFIuc3RhdHVzID0gc3RhdHVzO1xuXHRcdFx0anFYSFIuc3RhdHVzVGV4dCA9ICggbmF0aXZlU3RhdHVzVGV4dCB8fCBzdGF0dXNUZXh0ICkgKyBcIlwiO1xuXG5cdFx0XHQvLyBTdWNjZXNzL0Vycm9yXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBzdWNjZXNzLCBzdGF0dXNUZXh0LCBqcVhIUiBdICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsganFYSFIsIHN0YXR1c1RleHQsIGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdGpxWEhSLnN0YXR1c0NvZGUoIHN0YXR1c0NvZGUgKTtcblx0XHRcdHN0YXR1c0NvZGUgPSB1bmRlZmluZWQ7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBpc1N1Y2Nlc3MgPyBcImFqYXhTdWNjZXNzXCIgOiBcImFqYXhFcnJvclwiLFxuXHRcdFx0XHRcdFsganFYSFIsIHMsIGlzU3VjY2VzcyA/IHN1Y2Nlc3MgOiBlcnJvciBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbXBsZXRlXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkLmZpcmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsganFYSFIsIHN0YXR1c1RleHQgXSApO1xuXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggXCJhamF4Q29tcGxldGVcIiwgWyBqcVhIUiwgcyBdICk7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBnbG9iYWwgQUpBWCBjb3VudGVyXG5cdFx0XHRcdGlmICggISggLS1qUXVlcnkuYWN0aXZlICkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIFwiYWpheFN0b3BcIiApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpxWEhSO1xuXHR9LFxuXG5cdGdldEpTT046IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIGRhdGEsIGNhbGxiYWNrLCBcImpzb25cIiApO1xuXHR9LFxuXG5cdGdldFNjcmlwdDogZnVuY3Rpb24oIHVybCwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgdW5kZWZpbmVkLCBjYWxsYmFjaywgXCJzY3JpcHRcIiApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiZ2V0XCIsIFwicG9zdFwiIF0sIGZ1bmN0aW9uKCBpLCBtZXRob2QgKSB7XG5cdGpRdWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywgdHlwZSApIHtcblxuXHRcdC8vIHNoaWZ0IGFyZ3VtZW50cyBpZiBkYXRhIGFyZ3VtZW50IHdhcyBvbWl0dGVkXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggZGF0YSApICkge1xuXHRcdFx0dHlwZSA9IHR5cGUgfHwgY2FsbGJhY2s7XG5cdFx0XHRjYWxsYmFjayA9IGRhdGE7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIFRoZSB1cmwgY2FuIGJlIGFuIG9wdGlvbnMgb2JqZWN0ICh3aGljaCB0aGVuIG11c3QgaGF2ZSAudXJsKVxuXHRcdHJldHVybiBqUXVlcnkuYWpheCggalF1ZXJ5LmV4dGVuZCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cdFx0XHR0eXBlOiBtZXRob2QsXG5cdFx0XHRkYXRhVHlwZTogdHlwZSxcblx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRzdWNjZXNzOiBjYWxsYmFja1xuXHRcdH0sIGpRdWVyeS5pc1BsYWluT2JqZWN0KCB1cmwgKSAmJiB1cmwgKSApO1xuXHR9O1xufSApO1xuXG5cbmpRdWVyeS5fZXZhbFVybCA9IGZ1bmN0aW9uKCB1cmwgKSB7XG5cdHJldHVybiBqUXVlcnkuYWpheCgge1xuXHRcdHVybDogdXJsLFxuXG5cdFx0Ly8gTWFrZSB0aGlzIGV4cGxpY2l0LCBzaW5jZSB1c2VyIGNhbiBvdmVycmlkZSB0aGlzIHRocm91Z2ggYWpheFNldHVwICgjMTEyNjQpXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRkYXRhVHlwZTogXCJzY3JpcHRcIixcblx0XHRjYWNoZTogdHJ1ZSxcblx0XHRhc3luYzogZmFsc2UsXG5cdFx0Z2xvYmFsOiBmYWxzZSxcblx0XHRcInRocm93c1wiOiB0cnVlXG5cdH0gKTtcbn07XG5cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHR3cmFwQWxsOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXNbIDAgXSApIHtcblxuXHRcdFx0Ly8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmRcblx0XHRcdHZhciB3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcblxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHR3cmFwLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gdGhpcztcblxuXHRcdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RDaGlsZCAmJiBlbGVtLmZpcnN0Q2hpbGQubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBlbGVtO1xuXHRcdFx0fSApLmFwcGVuZCggdGhpcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHdyYXBJbm5lcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBJbm5lciggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0galF1ZXJ5KCB0aGlzICksXG5cdFx0XHRcdGNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpO1xuXG5cdFx0XHRpZiAoIGNvbnRlbnRzLmxlbmd0aCApIHtcblx0XHRcdFx0Y29udGVudHMud3JhcEFsbCggaHRtbCApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZWxmLmFwcGVuZCggaHRtbCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHR3cmFwOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgaXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGlzRnVuY3Rpb24gPyBodG1sLmNhbGwoIHRoaXMsIGkgKSA6IGh0bWwgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0dW53cmFwOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wYXJlbnQoKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggIWpRdWVyeS5ub2RlTmFtZSggdGhpcywgXCJib2R5XCIgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkucmVwbGFjZVdpdGgoIHRoaXMuY2hpbGROb2RlcyApO1xuXHRcdFx0fVxuXHRcdH0gKS5lbmQoKTtcblx0fVxufSApO1xuXG5cbmZ1bmN0aW9uIGdldERpc3BsYXkoIGVsZW0gKSB7XG5cdHJldHVybiBlbGVtLnN0eWxlICYmIGVsZW0uc3R5bGUuZGlzcGxheSB8fCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xufVxuXG5mdW5jdGlvbiBmaWx0ZXJIaWRkZW4oIGVsZW0gKSB7XG5cdHdoaWxlICggZWxlbSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdGlmICggZ2V0RGlzcGxheSggZWxlbSApID09PSBcIm5vbmVcIiB8fCBlbGVtLnR5cGUgPT09IFwiaGlkZGVuXCIgKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cdFx0ZWxlbSA9IGVsZW0ucGFyZW50Tm9kZTtcblx0fVxuXHRyZXR1cm4gZmFsc2U7XG59XG5cbmpRdWVyeS5leHByLmZpbHRlcnMuaGlkZGVuID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0Ly8gU3VwcG9ydDogT3BlcmEgPD0gMTIuMTJcblx0Ly8gT3BlcmEgcmVwb3J0cyBvZmZzZXRXaWR0aHMgYW5kIG9mZnNldEhlaWdodHMgbGVzcyB0aGFuIHplcm8gb24gc29tZSBlbGVtZW50c1xuXHRyZXR1cm4gc3VwcG9ydC5yZWxpYWJsZUhpZGRlbk9mZnNldHMoKSA/XG5cdFx0KCBlbGVtLm9mZnNldFdpZHRoIDw9IDAgJiYgZWxlbS5vZmZzZXRIZWlnaHQgPD0gMCAmJlxuXHRcdFx0IWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSA6XG5cdFx0XHRmaWx0ZXJIaWRkZW4oIGVsZW0gKTtcbn07XG5cbmpRdWVyeS5leHByLmZpbHRlcnMudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gIWpRdWVyeS5leHByLmZpbHRlcnMuaGlkZGVuKCBlbGVtICk7XG59O1xuXG5cblxuXG52YXIgcjIwID0gLyUyMC9nLFxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcblx0ckNSTEYgPSAvXFxyP1xcbi9nLFxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcblxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xuXHR2YXIgbmFtZTtcblxuXHRpZiAoIGpRdWVyeS5pc0FycmF5KCBvYmogKSApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBhcnJheSBpdGVtLlxuXHRcdGpRdWVyeS5lYWNoKCBvYmosIGZ1bmN0aW9uKCBpLCB2ICkge1xuXHRcdFx0aWYgKCB0cmFkaXRpb25hbCB8fCByYnJhY2tldC50ZXN0KCBwcmVmaXggKSApIHtcblxuXHRcdFx0XHQvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuXG5cdFx0XHRcdGFkZCggcHJlZml4LCB2ICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gSXRlbSBpcyBub24tc2NhbGFyIChhcnJheSBvciBvYmplY3QpLCBlbmNvZGUgaXRzIG51bWVyaWMgaW5kZXguXG5cdFx0XHRcdGJ1aWxkUGFyYW1zKFxuXHRcdFx0XHRcdHByZWZpeCArIFwiW1wiICsgKCB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIiAmJiB2ICE9IG51bGwgPyBpIDogXCJcIiApICsgXCJdXCIsXG5cdFx0XHRcdFx0dixcblx0XHRcdFx0XHR0cmFkaXRpb25hbCxcblx0XHRcdFx0XHRhZGRcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9ICk7XG5cblx0fSBlbHNlIGlmICggIXRyYWRpdGlvbmFsICYmIGpRdWVyeS50eXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBvYmplY3QgaXRlbS5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XG5cdH1cbn1cblxuLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2Zcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xuXHR2YXIgcHJlZml4LFxuXHRcdHMgPSBbXSxcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCByZXR1cm4gaXRzIHZhbHVlXG5cdFx0XHR2YWx1ZSA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApID8gdmFsdWUoKSA6ICggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgKTtcblx0XHR9O1xuXG5cdC8vIFNldCB0cmFkaXRpb25hbCB0byB0cnVlIGZvciBqUXVlcnkgPD0gMS4zLjIgYmVoYXZpb3IuXG5cdGlmICggdHJhZGl0aW9uYWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHR0cmFkaXRpb25hbCA9IGpRdWVyeS5hamF4U2V0dGluZ3MgJiYgalF1ZXJ5LmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbDtcblx0fVxuXG5cdC8vIElmIGFuIGFycmF5IHdhcyBwYXNzZWQgaW4sIGFzc3VtZSB0aGF0IGl0IGlzIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMuXG5cdGlmICggalF1ZXJ5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHNcblx0XHRqUXVlcnkuZWFjaCggYSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApO1xuXHRcdH0gKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gSWYgdHJhZGl0aW9uYWwsIGVuY29kZSB0aGUgXCJvbGRcIiB3YXkgKHRoZSB3YXkgMS4zLjIgb3Igb2xkZXJcblx0XHQvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS5cblx0XHRmb3IgKCBwcmVmaXggaW4gYSApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXgsIGFbIHByZWZpeCBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvblxuXHRyZXR1cm4gcy5qb2luKCBcIiZcIiApLnJlcGxhY2UoIHIyMCwgXCIrXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoXCI6ZGlzYWJsZWRcIikgc28gdGhhdCBmaWVsZHNldFtkaXNhYmxlZF0gd29ya3Ncblx0XHRcdHJldHVybiB0aGlzLm5hbWUgJiYgIWpRdWVyeSggdGhpcyApLmlzKCBcIjpkaXNhYmxlZFwiICkgJiZcblx0XHRcdFx0cnN1Ym1pdHRhYmxlLnRlc3QoIHRoaXMubm9kZU5hbWUgKSAmJiAhcnN1Ym1pdHRlclR5cGVzLnRlc3QoIHR5cGUgKSAmJlxuXHRcdFx0XHQoIHRoaXMuY2hlY2tlZCB8fCAhcmNoZWNrYWJsZVR5cGUudGVzdCggdHlwZSApICk7XG5cdFx0fSApXG5cdFx0Lm1hcCggZnVuY3Rpb24oIGksIGVsZW0gKSB7XG5cdFx0XHR2YXIgdmFsID0galF1ZXJ5KCB0aGlzICkudmFsKCk7XG5cblx0XHRcdHJldHVybiB2YWwgPT0gbnVsbCA/XG5cdFx0XHRcdG51bGwgOlxuXHRcdFx0XHRqUXVlcnkuaXNBcnJheSggdmFsICkgP1xuXHRcdFx0XHRcdGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbCApIHtcblx0XHRcdFx0XHRcdHJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XG5cdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHR7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XG5cdFx0fSApLmdldCgpO1xuXHR9XG59ICk7XG5cblxuLy8gQ3JlYXRlIHRoZSByZXF1ZXN0IG9iamVjdFxuLy8gKFRoaXMgaXMgc3RpbGwgYXR0YWNoZWQgdG8gYWpheFNldHRpbmdzIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5KVxualF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIgPSB3aW5kb3cuQWN0aXZlWE9iamVjdCAhPT0gdW5kZWZpbmVkID9cblxuXHQvLyBTdXBwb3J0OiBJRTYtSUU4XG5cdGZ1bmN0aW9uKCkge1xuXG5cdFx0Ly8gWEhSIGNhbm5vdCBhY2Nlc3MgbG9jYWwgZmlsZXMsIGFsd2F5cyB1c2UgQWN0aXZlWCBmb3IgdGhhdCBjYXNlXG5cdFx0aWYgKCB0aGlzLmlzTG9jYWwgKSB7XG5cdFx0XHRyZXR1cm4gY3JlYXRlQWN0aXZlWEhSKCk7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOS0xMVxuXHRcdC8vIElFIHNlZW1zIHRvIGVycm9yIG9uIGNyb3NzLWRvbWFpbiBQQVRDSCByZXF1ZXN0cyB3aGVuIEFjdGl2ZVggWEhSXG5cdFx0Ly8gaXMgdXNlZC4gSW4gSUUgOSsgYWx3YXlzIHVzZSB0aGUgbmF0aXZlIFhIUi5cblx0XHQvLyBOb3RlOiB0aGlzIGNvbmRpdGlvbiB3b24ndCBjYXRjaCBFZGdlIGFzIGl0IGRvZXNuJ3QgZGVmaW5lXG5cdFx0Ly8gZG9jdW1lbnQuZG9jdW1lbnRNb2RlIGJ1dCBpdCBhbHNvIGRvZXNuJ3Qgc3VwcG9ydCBBY3RpdmVYIHNvIGl0IHdvbid0XG5cdFx0Ly8gcmVhY2ggdGhpcyBjb2RlLlxuXHRcdGlmICggZG9jdW1lbnQuZG9jdW1lbnRNb2RlID4gOCApIHtcblx0XHRcdHJldHVybiBjcmVhdGVTdGFuZGFyZFhIUigpO1xuXHRcdH1cblxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHQvLyBvbGRJRSBYSFIgZG9lcyBub3Qgc3VwcG9ydCBub24tUkZDMjYxNiBtZXRob2RzICgjMTMyNDApXG5cdFx0Ly8gU2VlIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9tczUzNjY0OCh2PXZzLjg1KS5hc3B4XG5cdFx0Ly8gYW5kIGh0dHA6Ly93d3cudzMub3JnL1Byb3RvY29scy9yZmMyNjE2L3JmYzI2MTYtc2VjOS5odG1sI3NlYzlcblx0XHQvLyBBbHRob3VnaCB0aGlzIGNoZWNrIGZvciBzaXggbWV0aG9kcyBpbnN0ZWFkIG9mIGVpZ2h0XG5cdFx0Ly8gc2luY2UgSUUgYWxzbyBkb2VzIG5vdCBzdXBwb3J0IFwidHJhY2VcIiBhbmQgXCJjb25uZWN0XCJcblx0XHRyZXR1cm4gL14oZ2V0fHBvc3R8aGVhZHxwdXR8ZGVsZXRlfG9wdGlvbnMpJC9pLnRlc3QoIHRoaXMudHlwZSApICYmXG5cdFx0XHRjcmVhdGVTdGFuZGFyZFhIUigpIHx8IGNyZWF0ZUFjdGl2ZVhIUigpO1xuXHR9IDpcblxuXHQvLyBGb3IgYWxsIG90aGVyIGJyb3dzZXJzLCB1c2UgdGhlIHN0YW5kYXJkIFhNTEh0dHBSZXF1ZXN0IG9iamVjdFxuXHRjcmVhdGVTdGFuZGFyZFhIUjtcblxudmFyIHhocklkID0gMCxcblx0eGhyQ2FsbGJhY2tzID0ge30sXG5cdHhoclN1cHBvcnRlZCA9IGpRdWVyeS5hamF4U2V0dGluZ3MueGhyKCk7XG5cbi8vIFN1cHBvcnQ6IElFPDEwXG4vLyBPcGVuIHJlcXVlc3RzIG11c3QgYmUgbWFudWFsbHkgYWJvcnRlZCBvbiB1bmxvYWQgKCM1MjgwKVxuLy8gU2VlIGh0dHBzOi8vc3VwcG9ydC5taWNyb3NvZnQuY29tL2tiLzI4NTY3NDYgZm9yIG1vcmUgaW5mb1xuaWYgKCB3aW5kb3cuYXR0YWNoRXZlbnQgKSB7XG5cdHdpbmRvdy5hdHRhY2hFdmVudCggXCJvbnVubG9hZFwiLCBmdW5jdGlvbigpIHtcblx0XHRmb3IgKCB2YXIga2V5IGluIHhockNhbGxiYWNrcyApIHtcblx0XHRcdHhockNhbGxiYWNrc1sga2V5IF0oIHVuZGVmaW5lZCwgdHJ1ZSApO1xuXHRcdH1cblx0fSApO1xufVxuXG4vLyBEZXRlcm1pbmUgc3VwcG9ydCBwcm9wZXJ0aWVzXG5zdXBwb3J0LmNvcnMgPSAhIXhoclN1cHBvcnRlZCAmJiAoIFwid2l0aENyZWRlbnRpYWxzXCIgaW4geGhyU3VwcG9ydGVkICk7XG54aHJTdXBwb3J0ZWQgPSBzdXBwb3J0LmFqYXggPSAhIXhoclN1cHBvcnRlZDtcblxuLy8gQ3JlYXRlIHRyYW5zcG9ydCBpZiB0aGUgYnJvd3NlciBjYW4gcHJvdmlkZSBhbiB4aHJcbmlmICggeGhyU3VwcG9ydGVkICkge1xuXG5cdGpRdWVyeS5hamF4VHJhbnNwb3J0KCBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHRcdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3Rcblx0XHRpZiAoICFvcHRpb25zLmNyb3NzRG9tYWluIHx8IHN1cHBvcnQuY29ycyApIHtcblxuXHRcdFx0dmFyIGNhbGxiYWNrO1xuXG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XG5cdFx0XHRcdFx0dmFyIGksXG5cdFx0XHRcdFx0XHR4aHIgPSBvcHRpb25zLnhocigpLFxuXHRcdFx0XHRcdFx0aWQgPSArK3hocklkO1xuXG5cdFx0XHRcdFx0Ly8gT3BlbiB0aGUgc29ja2V0XG5cdFx0XHRcdFx0eGhyLm9wZW4oXG5cdFx0XHRcdFx0XHRvcHRpb25zLnR5cGUsXG5cdFx0XHRcdFx0XHRvcHRpb25zLnVybCxcblx0XHRcdFx0XHRcdG9wdGlvbnMuYXN5bmMsXG5cdFx0XHRcdFx0XHRvcHRpb25zLnVzZXJuYW1lLFxuXHRcdFx0XHRcdFx0b3B0aW9ucy5wYXNzd29yZFxuXHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHQvLyBBcHBseSBjdXN0b20gZmllbGRzIGlmIHByb3ZpZGVkXG5cdFx0XHRcdFx0aWYgKCBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRcdGZvciAoIGkgaW4gb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0XHRcdHhoclsgaSBdID0gb3B0aW9ucy54aHJGaWVsZHNbIGkgXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPdmVycmlkZSBtaW1lIHR5cGUgaWYgbmVlZGVkXG5cdFx0XHRcdFx0aWYgKCBvcHRpb25zLm1pbWVUeXBlICYmIHhoci5vdmVycmlkZU1pbWVUeXBlICkge1xuXHRcdFx0XHRcdFx0eGhyLm92ZXJyaWRlTWltZVR5cGUoIG9wdGlvbnMubWltZVR5cGUgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBYLVJlcXVlc3RlZC1XaXRoIGhlYWRlclxuXHRcdFx0XHRcdC8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWluZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmVcblx0XHRcdFx0XHQvLyBha2luIHRvIGEgamlnc2F3IHB1enpsZSwgd2Ugc2ltcGx5IG5ldmVyIHNldCBpdCB0byBiZSBzdXJlLlxuXHRcdFx0XHRcdC8vIChpdCBjYW4gYWx3YXlzIGJlIHNldCBvbiBhIHBlci1yZXF1ZXN0IGJhc2lzIG9yIGV2ZW4gdXNpbmcgYWpheFNldHVwKVxuXHRcdFx0XHRcdC8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhlYWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLlxuXHRcdFx0XHRcdGlmICggIW9wdGlvbnMuY3Jvc3NEb21haW4gJiYgIWhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gKSB7XG5cdFx0XHRcdFx0XHRoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdID0gXCJYTUxIdHRwUmVxdWVzdFwiO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFNldCBoZWFkZXJzXG5cdFx0XHRcdFx0Zm9yICggaSBpbiBoZWFkZXJzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw5XG5cdFx0XHRcdFx0XHQvLyBJRSdzIEFjdGl2ZVhPYmplY3QgdGhyb3dzIGEgJ1R5cGUgTWlzbWF0Y2gnIGV4Y2VwdGlvbiB3aGVuIHNldHRpbmdcblx0XHRcdFx0XHRcdC8vIHJlcXVlc3QgaGVhZGVyIHRvIGEgbnVsbC12YWx1ZS5cblx0XHRcdFx0XHRcdC8vXG5cdFx0XHRcdFx0XHQvLyBUbyBrZWVwIGNvbnNpc3RlbnQgd2l0aCBvdGhlciBYSFIgaW1wbGVtZW50YXRpb25zLCBjYXN0IHRoZSB2YWx1ZVxuXHRcdFx0XHRcdFx0Ly8gdG8gc3RyaW5nIGFuZCBpZ25vcmUgYHVuZGVmaW5lZGAuXG5cdFx0XHRcdFx0XHRpZiAoIGhlYWRlcnNbIGkgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlciggaSwgaGVhZGVyc1sgaSBdICsgXCJcIiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3Rcblx0XHRcdFx0XHQvLyBUaGlzIG1heSByYWlzZSBhbiBleGNlcHRpb24gd2hpY2ggaXMgYWN0dWFsbHlcblx0XHRcdFx0XHQvLyBoYW5kbGVkIGluIGpRdWVyeS5hamF4IChzbyBubyB0cnkvY2F0Y2ggaGVyZSlcblx0XHRcdFx0XHR4aHIuc2VuZCggKCBvcHRpb25zLmhhc0NvbnRlbnQgJiYgb3B0aW9ucy5kYXRhICkgfHwgbnVsbCApO1xuXG5cdFx0XHRcdFx0Ly8gTGlzdGVuZXJcblx0XHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCBfLCBpc0Fib3J0ICkge1xuXHRcdFx0XHRcdFx0dmFyIHN0YXR1cywgc3RhdHVzVGV4dCwgcmVzcG9uc2VzO1xuXG5cdFx0XHRcdFx0XHQvLyBXYXMgbmV2ZXIgY2FsbGVkIGFuZCBpcyBhYm9ydGVkIG9yIGNvbXBsZXRlXG5cdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICYmICggaXNBYm9ydCB8fCB4aHIucmVhZHlTdGF0ZSA9PT0gNCApICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIENsZWFuIHVwXG5cdFx0XHRcdFx0XHRcdGRlbGV0ZSB4aHJDYWxsYmFja3NbIGlkIF07XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0galF1ZXJ5Lm5vb3A7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQWJvcnQgbWFudWFsbHkgaWYgbmVlZGVkXG5cdFx0XHRcdFx0XHRcdGlmICggaXNBYm9ydCApIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHhoci5yZWFkeVN0YXRlICE9PSA0ICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLmFib3J0KCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlcyA9IHt9O1xuXHRcdFx0XHRcdFx0XHRcdHN0YXR1cyA9IHhoci5zdGF0dXM7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTwxMFxuXHRcdFx0XHRcdFx0XHRcdC8vIEFjY2Vzc2luZyBiaW5hcnktZGF0YSByZXNwb25zZVRleHQgdGhyb3dzIGFuIGV4Y2VwdGlvblxuXHRcdFx0XHRcdFx0XHRcdC8vICgjMTE0MjYpXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlcy50ZXh0ID0geGhyLnJlc3BvbnNlVGV4dDtcblx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBGaXJlZm94IHRocm93cyBhbiBleGNlcHRpb24gd2hlbiBhY2Nlc3Npbmdcblx0XHRcdFx0XHRcdFx0XHQvLyBzdGF0dXNUZXh0IGZvciBmYXVsdHkgY3Jvc3MtZG9tYWluIHJlcXVlc3RzXG5cdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdHN0YXR1c1RleHQgPSB4aHIuc3RhdHVzVGV4dDtcblx0XHRcdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gV2Ugbm9ybWFsaXplIHdpdGggV2Via2l0IGdpdmluZyBhbiBlbXB0eSBzdGF0dXNUZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJcIjtcblx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBGaWx0ZXIgc3RhdHVzIGZvciBub24gc3RhbmRhcmQgYmVoYXZpb3JzXG5cblx0XHRcdFx0XHRcdFx0XHQvLyBJZiB0aGUgcmVxdWVzdCBpcyBsb2NhbCBhbmQgd2UgaGF2ZSBkYXRhOiBhc3N1bWUgYSBzdWNjZXNzXG5cdFx0XHRcdFx0XHRcdFx0Ly8gKHN1Y2Nlc3Mgd2l0aCBubyBkYXRhIHdvbid0IGdldCBub3RpZmllZCwgdGhhdCdzIHRoZSBiZXN0IHdlXG5cdFx0XHRcdFx0XHRcdFx0Ly8gY2FuIGRvIGdpdmVuIGN1cnJlbnQgaW1wbGVtZW50YXRpb25zKVxuXHRcdFx0XHRcdFx0XHRcdGlmICggIXN0YXR1cyAmJiBvcHRpb25zLmlzTG9jYWwgJiYgIW9wdGlvbnMuY3Jvc3NEb21haW4gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRzdGF0dXMgPSByZXNwb25zZXMudGV4dCA/IDIwMCA6IDQwNDtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIElFIC0gIzE0NTA6IHNvbWV0aW1lcyByZXR1cm5zIDEyMjMgd2hlbiBpdCBzaG91bGQgYmUgMjA0XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggc3RhdHVzID09PSAxMjIzICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0c3RhdHVzID0gMjA0O1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBDYWxsIGNvbXBsZXRlIGlmIG5lZWRlZFxuXHRcdFx0XHRcdFx0aWYgKCByZXNwb25zZXMgKSB7XG5cdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCBzdGF0dXMsIHN0YXR1c1RleHQsIHJlc3BvbnNlcywgeGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3Rcblx0XHRcdFx0XHQvLyBgeGhyLnNlbmRgIG1heSByYWlzZSBhbiBleGNlcHRpb24sIGJ1dCBpdCB3aWxsIGJlXG5cdFx0XHRcdFx0Ly8gaGFuZGxlZCBpbiBqUXVlcnkuYWpheCAoc28gbm8gdHJ5L2NhdGNoIGhlcmUpXG5cdFx0XHRcdFx0aWYgKCAhb3B0aW9ucy5hc3luYyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSWYgd2UncmUgaW4gc3luYyBtb2RlIHdlIGZpcmUgdGhlIGNhbGxiYWNrXG5cdFx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoIHhoci5yZWFkeVN0YXRlID09PSA0ICkge1xuXG5cdFx0XHRcdFx0XHQvLyAoSUU2ICYgSUU3KSBpZiBpdCdzIGluIGNhY2hlIGFuZCBoYXMgYmVlblxuXHRcdFx0XHRcdFx0Ly8gcmV0cmlldmVkIGRpcmVjdGx5IHdlIG5lZWQgdG8gZmlyZSB0aGUgY2FsbGJhY2tcblx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBjYWxsYmFjayApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdC8vIFJlZ2lzdGVyIHRoZSBjYWxsYmFjaywgYnV0IGRlbGF5IGl0IGluIGNhc2UgYHhoci5zZW5kYCB0aHJvd3Ncblx0XHRcdFx0XHRcdC8vIEFkZCB0byB0aGUgbGlzdCBvZiBhY3RpdmUgeGhyIGNhbGxiYWNrc1xuXHRcdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IHhockNhbGxiYWNrc1sgaWQgXSA9IGNhbGxiYWNrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblxuXHRcdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdGNhbGxiYWNrKCB1bmRlZmluZWQsIHRydWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fVxuXHR9ICk7XG59XG5cbi8vIEZ1bmN0aW9ucyB0byBjcmVhdGUgeGhyc1xuZnVuY3Rpb24gY3JlYXRlU3RhbmRhcmRYSFIoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3QoKTtcblx0fSBjYXRjaCAoIGUgKSB7fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVBY3RpdmVYSFIoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIG5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdCggXCJNaWNyb3NvZnQuWE1MSFRUUFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge31cbn1cblxuXG5cblxuLy8gUHJldmVudCBhdXRvLWV4ZWN1dGlvbiBvZiBzY3JpcHRzIHdoZW4gbm8gZXhwbGljaXQgZGF0YVR5cGUgd2FzIHByb3ZpZGVkIChTZWUgZ2gtMjQzMilcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHMuY29udGVudHMuc2NyaXB0ID0gZmFsc2U7XG5cdH1cbn0gKTtcblxuLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGVcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0YWNjZXB0czoge1xuXHRcdHNjcmlwdDogXCJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIFwiICtcblx0XHRcdFwiYXBwbGljYXRpb24vZWNtYXNjcmlwdCwgYXBwbGljYXRpb24veC1lY21hc2NyaXB0XCJcblx0fSxcblx0Y29udGVudHM6IHtcblx0XHRzY3JpcHQ6IC9cXGIoPzpqYXZhfGVjbWEpc2NyaXB0XFxiL1xuXHR9LFxuXHRjb252ZXJ0ZXJzOiB7XG5cdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCB0ZXh0ICk7XG5cdFx0XHRyZXR1cm4gdGV4dDtcblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSGFuZGxlIGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBnbG9iYWxcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0cy5jYWNoZSA9IGZhbHNlO1xuXHR9XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLnR5cGUgPSBcIkdFVFwiO1xuXHRcdHMuZ2xvYmFsID0gZmFsc2U7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBzY3JpcHQgdGFnIGhhY2sgdHJhbnNwb3J0XG5qUXVlcnkuYWpheFRyYW5zcG9ydCggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cblx0Ly8gVGhpcyB0cmFuc3BvcnQgb25seSBkZWFscyB3aXRoIGNyb3NzIGRvbWFpbiByZXF1ZXN0c1xuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cblx0XHR2YXIgc2NyaXB0LFxuXHRcdFx0aGVhZCA9IGRvY3VtZW50LmhlYWQgfHwgalF1ZXJ5KCBcImhlYWRcIiApWyAwIF0gfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cdFx0cmV0dXJuIHtcblxuXHRcdFx0c2VuZDogZnVuY3Rpb24oIF8sIGNhbGxiYWNrICkge1xuXG5cdFx0XHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2NyaXB0XCIgKTtcblxuXHRcdFx0XHRzY3JpcHQuYXN5bmMgPSB0cnVlO1xuXG5cdFx0XHRcdGlmICggcy5zY3JpcHRDaGFyc2V0ICkge1xuXHRcdFx0XHRcdHNjcmlwdC5jaGFyc2V0ID0gcy5zY3JpcHRDaGFyc2V0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0c2NyaXB0LnNyYyA9IHMudXJsO1xuXG5cdFx0XHRcdC8vIEF0dGFjaCBoYW5kbGVycyBmb3IgYWxsIGJyb3dzZXJzXG5cdFx0XHRcdHNjcmlwdC5vbmxvYWQgPSBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oIF8sIGlzQWJvcnQgKSB7XG5cblx0XHRcdFx0XHRpZiAoIGlzQWJvcnQgfHwgIXNjcmlwdC5yZWFkeVN0YXRlIHx8IC9sb2FkZWR8Y29tcGxldGUvLnRlc3QoIHNjcmlwdC5yZWFkeVN0YXRlICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIEhhbmRsZSBtZW1vcnkgbGVhayBpbiBJRVxuXHRcdFx0XHRcdFx0c2NyaXB0Lm9ubG9hZCA9IHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgdGhlIHNjcmlwdFxuXHRcdFx0XHRcdFx0aWYgKCBzY3JpcHQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRcdFx0c2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHNjcmlwdCApO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBEZXJlZmVyZW5jZSB0aGUgc2NyaXB0XG5cdFx0XHRcdFx0XHRzY3JpcHQgPSBudWxsO1xuXG5cdFx0XHRcdFx0XHQvLyBDYWxsYmFjayBpZiBub3QgYWJvcnRcblx0XHRcdFx0XHRcdGlmICggIWlzQWJvcnQgKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrKCAyMDAsIFwic3VjY2Vzc1wiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdC8vIENpcmN1bXZlbnQgSUU2IGJ1Z3Mgd2l0aCBiYXNlIGVsZW1lbnRzICgjMjcwOSBhbmQgIzQzNzgpIGJ5IHByZXBlbmRpbmdcblx0XHRcdFx0Ly8gVXNlIG5hdGl2ZSBET00gbWFuaXB1bGF0aW9uIHRvIGF2b2lkIG91ciBkb21NYW5pcCBBSkFYIHRyaWNrZXJ5XG5cdFx0XHRcdGhlYWQuaW5zZXJ0QmVmb3JlKCBzY3JpcHQsIGhlYWQuZmlyc3RDaGlsZCApO1xuXHRcdFx0fSxcblxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIHNjcmlwdCApIHtcblx0XHRcdFx0XHRzY3JpcHQub25sb2FkKCB1bmRlZmluZWQsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIG9sZENhbGxiYWNrcyA9IFtdLFxuXHRyanNvbnAgPSAvKD0pXFw/KD89JnwkKXxcXD9cXD8vO1xuXG4vLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXG5cdGpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjYWxsYmFjayA9IG9sZENhbGxiYWNrcy5wb3AoKSB8fCAoIGpRdWVyeS5leHBhbmRvICsgXCJfXCIgKyAoIG5vbmNlKysgKSApO1xuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xuXHRcdHJldHVybiBjYWxsYmFjaztcblx0fVxufSApO1xuXG4vLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHNcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xuXG5cdHZhciBjYWxsYmFja05hbWUsIG92ZXJ3cml0dGVuLCByZXNwb25zZUNvbnRhaW5lcixcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xuXHRcdFx0XCJ1cmxcIiA6XG5cdFx0XHR0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcblx0XHRcdFx0XHQuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICYmXG5cdFx0XHRcdHJqc29ucC50ZXN0KCBzLmRhdGEgKSAmJiBcImRhdGFcIlxuXHRcdCk7XG5cblx0Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzIFwianNvbnBcIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldFxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcblxuXHRcdC8vIEdldCBjYWxsYmFjayBuYW1lLCByZW1lbWJlcmluZyBwcmVleGlzdGluZyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggaXRcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBqUXVlcnkuaXNGdW5jdGlvbiggcy5qc29ucENhbGxiYWNrICkgP1xuXHRcdFx0cy5qc29ucENhbGxiYWNrKCkgOlxuXHRcdFx0cy5qc29ucENhbGxiYWNrO1xuXG5cdFx0Ly8gSW5zZXJ0IGNhbGxiYWNrIGludG8gdXJsIG9yIGZvcm0gZGF0YVxuXHRcdGlmICgganNvblByb3AgKSB7XG5cdFx0XHRzWyBqc29uUHJvcCBdID0gc1sganNvblByb3AgXS5yZXBsYWNlKCByanNvbnAsIFwiJDFcIiArIGNhbGxiYWNrTmFtZSApO1xuXHRcdH0gZWxzZSBpZiAoIHMuanNvbnAgIT09IGZhbHNlICkge1xuXHRcdFx0cy51cmwgKz0gKCBycXVlcnkudGVzdCggcy51cmwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuanNvbnAgKyBcIj1cIiArIGNhbGxiYWNrTmFtZTtcblx0XHR9XG5cblx0XHQvLyBVc2UgZGF0YSBjb252ZXJ0ZXIgdG8gcmV0cmlldmUganNvbiBhZnRlciBzY3JpcHQgZXhlY3V0aW9uXG5cdFx0cy5jb252ZXJ0ZXJzWyBcInNjcmlwdCBqc29uXCIgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCAhcmVzcG9uc2VDb250YWluZXIgKSB7XG5cdFx0XHRcdGpRdWVyeS5lcnJvciggY2FsbGJhY2tOYW1lICsgXCIgd2FzIG5vdCBjYWxsZWRcIiApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3BvbnNlQ29udGFpbmVyWyAwIF07XG5cdFx0fTtcblxuXHRcdC8vIGZvcmNlIGpzb24gZGF0YVR5cGVcblx0XHRzLmRhdGFUeXBlc1sgMCBdID0gXCJqc29uXCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrXG5cdFx0b3ZlcndyaXR0ZW4gPSB3aW5kb3dbIGNhbGxiYWNrTmFtZSBdO1xuXHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gYXJndW1lbnRzO1xuXHRcdH07XG5cblx0XHQvLyBDbGVhbi11cCBmdW5jdGlvbiAoZmlyZXMgYWZ0ZXIgY29udmVydGVycylcblx0XHRqcVhIUi5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBJZiBwcmV2aW91cyB2YWx1ZSBkaWRuJ3QgZXhpc3QgLSByZW1vdmUgaXRcblx0XHRcdGlmICggb3ZlcndyaXR0ZW4gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0alF1ZXJ5KCB3aW5kb3cgKS5yZW1vdmVQcm9wKCBjYWxsYmFja05hbWUgKTtcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHJlc3RvcmUgcHJlZXhpc3RpbmcgdmFsdWVcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBvdmVyd3JpdHRlbjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2F2ZSBiYWNrIGFzIGZyZWVcblx0XHRcdGlmICggc1sgY2FsbGJhY2tOYW1lIF0gKSB7XG5cblx0XHRcdFx0Ly8gbWFrZSBzdXJlIHRoYXQgcmUtdXNpbmcgdGhlIG9wdGlvbnMgZG9lc24ndCBzY3JldyB0aGluZ3MgYXJvdW5kXG5cdFx0XHRcdHMuanNvbnBDYWxsYmFjayA9IG9yaWdpbmFsU2V0dGluZ3MuanNvbnBDYWxsYmFjaztcblxuXHRcdFx0XHQvLyBzYXZlIHRoZSBjYWxsYmFjayBuYW1lIGZvciBmdXR1cmUgdXNlXG5cdFx0XHRcdG9sZENhbGxiYWNrcy5wdXNoKCBjYWxsYmFja05hbWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3BvbnNlXG5cdFx0XHRpZiAoIHJlc3BvbnNlQ29udGFpbmVyICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBvdmVyd3JpdHRlbiApICkge1xuXHRcdFx0XHRvdmVyd3JpdHRlbiggcmVzcG9uc2VDb250YWluZXJbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IG92ZXJ3cml0dGVuID0gdW5kZWZpbmVkO1xuXHRcdH0gKTtcblxuXHRcdC8vIERlbGVnYXRlIHRvIHNjcmlwdFxuXHRcdHJldHVybiBcInNjcmlwdFwiO1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA4K1xuLy8gSW4gU2FmYXJpIDggZG9jdW1lbnRzIGNyZWF0ZWQgdmlhIGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudFxuLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuXG4vLyBCZWNhdXNlIG9mIHRoYXQsIHRoaXMgc2VjdXJpdHkgbWVhc3VyZSBoYXMgdG8gYmUgZGlzYWJsZWQgaW4gU2FmYXJpIDguXG4vLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM3MzM3XG5zdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICggZnVuY3Rpb24oKSB7XG5cdGlmICggIWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblx0dmFyIGRvYyA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApO1xuXHRkb2MuYm9keS5pbm5lckhUTUwgPSBcIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCI7XG5cdHJldHVybiBkb2MuYm9keS5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMjtcbn0gKSgpO1xuXG5cbi8vIGRhdGE6IHN0cmluZyBvZiBodG1sXG4vLyBjb250ZXh0IChvcHRpb25hbCk6IElmIHNwZWNpZmllZCwgdGhlIGZyYWdtZW50IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGlzIGNvbnRleHQsXG4vLyBkZWZhdWx0cyB0byBkb2N1bWVudFxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xualF1ZXJ5LnBhcnNlSFRNTCA9IGZ1bmN0aW9uKCBkYXRhLCBjb250ZXh0LCBrZWVwU2NyaXB0cyApIHtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cblx0Ly8gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24gc3RvcHMgc2NyaXB0cyBvciBpbmxpbmUgZXZlbnQgaGFuZGxlcnMgZnJvbVxuXHQvLyBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseVxuXHRjb250ZXh0ID0gY29udGV4dCB8fCAoIHN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ID9cblx0XHRkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKSA6XG5cdFx0ZG9jdW1lbnQgKTtcblxuXHR2YXIgcGFyc2VkID0gcnNpbmdsZVRhZy5leGVjKCBkYXRhICksXG5cdFx0c2NyaXB0cyA9ICFrZWVwU2NyaXB0cyAmJiBbXTtcblxuXHQvLyBTaW5nbGUgdGFnXG5cdGlmICggcGFyc2VkICkge1xuXHRcdHJldHVybiBbIGNvbnRleHQuY3JlYXRlRWxlbWVudCggcGFyc2VkWyAxIF0gKSBdO1xuXHR9XG5cblx0cGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNjcmlwdHMgKTtcblxuXHRpZiAoIHNjcmlwdHMgJiYgc2NyaXB0cy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5KCBzY3JpcHRzICkucmVtb3ZlKCk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgcGFyc2VkLmNoaWxkTm9kZXMgKTtcbn07XG5cblxuLy8gS2VlcCBhIGNvcHkgb2YgdGhlIG9sZCBsb2FkIG1ldGhvZFxudmFyIF9sb2FkID0galF1ZXJ5LmZuLmxvYWQ7XG5cbi8qKlxuICogTG9hZCBhIHVybCBpbnRvIGEgcGFnZVxuICovXG5qUXVlcnkuZm4ubG9hZCA9IGZ1bmN0aW9uKCB1cmwsIHBhcmFtcywgY2FsbGJhY2sgKSB7XG5cdGlmICggdHlwZW9mIHVybCAhPT0gXCJzdHJpbmdcIiAmJiBfbG9hZCApIHtcblx0XHRyZXR1cm4gX2xvYWQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHR9XG5cblx0dmFyIHNlbGVjdG9yLCB0eXBlLCByZXNwb25zZSxcblx0XHRzZWxmID0gdGhpcyxcblx0XHRvZmYgPSB1cmwuaW5kZXhPZiggXCIgXCIgKTtcblxuXHRpZiAoIG9mZiA+IC0xICkge1xuXHRcdHNlbGVjdG9yID0galF1ZXJ5LnRyaW0oIHVybC5zbGljZSggb2ZmLCB1cmwubGVuZ3RoICkgKTtcblx0XHR1cmwgPSB1cmwuc2xpY2UoIDAsIG9mZiApO1xuXHR9XG5cblx0Ly8gSWYgaXQncyBhIGZ1bmN0aW9uXG5cdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xuXG5cdFx0Ly8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2tcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XG5cblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHR0eXBlID0gXCJQT1NUXCI7XG5cdH1cblxuXHQvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlmeSwgbWFrZSB0aGUgcmVxdWVzdFxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXG5cdFx0XHQvLyBNYWtlIHZhbHVlIG9mIHRoaXMgZmllbGQgZXhwbGljaXQgc2luY2Vcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XG5cblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XG5cblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xuXG5cdFx0XHRcdC8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdlxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XG5cblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXG5cdFx0Ly8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImpxWEhSXCIsIFwic3RhdHVzXCIsIFwiZXJyb3JcIlxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoIHNlbGYsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cblxuXG5cbi8vIEF0dGFjaCBhIGJ1bmNoIG9mIGZ1bmN0aW9ucyBmb3IgaGFuZGxpbmcgY29tbW9uIEFKQVggZXZlbnRzXG5qUXVlcnkuZWFjaCggW1xuXHRcImFqYXhTdGFydFwiLFxuXHRcImFqYXhTdG9wXCIsXG5cdFwiYWpheENvbXBsZXRlXCIsXG5cdFwiYWpheEVycm9yXCIsXG5cdFwiYWpheFN1Y2Nlc3NcIixcblx0XCJhamF4U2VuZFwiXG5dLCBmdW5jdGlvbiggaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5leHByLmZpbHRlcnMuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG5cdH0gKS5sZW5ndGg7XG59O1xuXG5cblxuXG5cbi8qKlxuICogR2V0cyBhIHdpbmRvdyBmcm9tIGFuIGVsZW1lbnRcbiAqL1xuZnVuY3Rpb24gZ2V0V2luZG93KCBlbGVtICkge1xuXHRyZXR1cm4galF1ZXJ5LmlzV2luZG93KCBlbGVtICkgP1xuXHRcdGVsZW0gOlxuXHRcdGVsZW0ubm9kZVR5cGUgPT09IDkgP1xuXHRcdFx0ZWxlbS5kZWZhdWx0VmlldyB8fCBlbGVtLnBhcmVudFdpbmRvdyA6XG5cdFx0XHRmYWxzZTtcbn1cblxualF1ZXJ5Lm9mZnNldCA9IHtcblx0c2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHtcblx0XHR2YXIgY3VyUG9zaXRpb24sIGN1ckxlZnQsIGN1ckNTU1RvcCwgY3VyVG9wLCBjdXJPZmZzZXQsIGN1ckNTU0xlZnQsIGNhbGN1bGF0ZVBvc2l0aW9uLFxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcblx0XHRcdGN1ckVsZW0gPSBqUXVlcnkoIGVsZW0gKSxcblx0XHRcdHByb3BzID0ge307XG5cblx0XHQvLyBzZXQgcG9zaXRpb24gZmlyc3QsIGluLWNhc2UgdG9wL2xlZnQgYXJlIHNldCBldmVuIG9uIHN0YXRpYyBlbGVtXG5cdFx0aWYgKCBwb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG5cdFx0fVxuXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcblx0XHRjdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCBcInRvcFwiICk7XG5cdFx0Y3VyQ1NTTGVmdCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwibGVmdFwiICk7XG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXG5cdFx0XHRqUXVlcnkuaW5BcnJheSggXCJhdXRvXCIsIFsgY3VyQ1NTVG9wLCBjdXJDU1NMZWZ0IF0gKSA+IC0xO1xuXG5cdFx0Ly8gbmVlZCB0byBiZSBhYmxlIHRvIGNhbGN1bGF0ZSBwb3NpdGlvbiBpZiBlaXRoZXIgdG9wIG9yIGxlZnRcblx0XHQvLyBpcyBhdXRvIGFuZCBwb3NpdGlvbiBpcyBlaXRoZXIgYWJzb2x1dGUgb3IgZml4ZWRcblx0XHRpZiAoIGNhbGN1bGF0ZVBvc2l0aW9uICkge1xuXHRcdFx0Y3VyUG9zaXRpb24gPSBjdXJFbGVtLnBvc2l0aW9uKCk7XG5cdFx0XHRjdXJUb3AgPSBjdXJQb3NpdGlvbi50b3A7XG5cdFx0XHRjdXJMZWZ0ID0gY3VyUG9zaXRpb24ubGVmdDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7XG5cblx0XHRcdC8vIFVzZSBqUXVlcnkuZXh0ZW5kIGhlcmUgdG8gYWxsb3cgbW9kaWZpY2F0aW9uIG9mIGNvb3JkaW5hdGVzIGFyZ3VtZW50IChnaC0xODQ4KVxuXHRcdFx0b3B0aW9ucyA9IG9wdGlvbnMuY2FsbCggZWxlbSwgaSwgalF1ZXJ5LmV4dGVuZCgge30sIGN1ck9mZnNldCApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHRpb25zLnRvcCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMudG9wID0gKCBvcHRpb25zLnRvcCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDtcblx0XHR9XG5cdFx0aWYgKCBvcHRpb25zLmxlZnQgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLmxlZnQgPSAoIG9wdGlvbnMubGVmdCAtIGN1ck9mZnNldC5sZWZ0ICkgKyBjdXJMZWZ0O1xuXHRcdH1cblxuXHRcdGlmICggXCJ1c2luZ1wiIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRvcHRpb25zLnVzaW5nLmNhbGwoIGVsZW0sIHByb3BzICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1ckVsZW0uY3NzKCBwcm9wcyApO1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRvZmZzZXQ6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiBvcHRpb25zID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHR0aGlzIDpcblx0XHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0XHRqUXVlcnkub2Zmc2V0LnNldE9mZnNldCggdGhpcywgb3B0aW9ucywgaSApO1xuXHRcdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0dmFyIGRvY0VsZW0sIHdpbixcblx0XHRcdGJveCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH0sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0ZG9jID0gZWxlbSAmJiBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cblx0XHRpZiAoICFkb2MgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0ZG9jRWxlbSA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHQvLyBNYWtlIHN1cmUgaXQncyBub3QgYSBkaXNjb25uZWN0ZWQgRE9NIG5vZGVcblx0XHRpZiAoICFqUXVlcnkuY29udGFpbnMoIGRvY0VsZW0sIGVsZW0gKSApIHtcblx0XHRcdHJldHVybiBib3g7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZG9uJ3QgaGF2ZSBnQkNSLCBqdXN0IHVzZSAwLDAgcmF0aGVyIHRoYW4gZXJyb3Jcblx0XHQvLyBCbGFja0JlcnJ5IDUsIGlPUyAzIChvcmlnaW5hbCBpUGhvbmUpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRib3ggPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRcdH1cblx0XHR3aW4gPSBnZXRXaW5kb3coIGRvYyApO1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IGJveC50b3AgICsgKCB3aW4ucGFnZVlPZmZzZXQgfHwgZG9jRWxlbS5zY3JvbGxUb3AgKSAgLSAoIGRvY0VsZW0uY2xpZW50VG9wICB8fCAwICksXG5cdFx0XHRsZWZ0OiBib3gubGVmdCArICggd2luLnBhZ2VYT2Zmc2V0IHx8IGRvY0VsZW0uc2Nyb2xsTGVmdCApIC0gKCBkb2NFbGVtLmNsaWVudExlZnQgfHwgMCApXG5cdFx0fTtcblx0fSxcblxuXHRwb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCAhdGhpc1sgMCBdICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH0sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0Ly8gRml4ZWQgZWxlbWVudHMgYXJlIG9mZnNldCBmcm9tIHdpbmRvdyAocGFyZW50T2Zmc2V0ID0ge3RvcDowLCBsZWZ0OiAwfSxcblx0XHQvLyBiZWNhdXNlIGl0IGlzIGl0cyBvbmx5IG9mZnNldCBwYXJlbnRcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XG5cblx0XHRcdC8vIHdlIGFzc3VtZSB0aGF0IGdldEJvdW5kaW5nQ2xpZW50UmVjdCBpcyBhdmFpbGFibGUgd2hlbiBjb21wdXRlZCBwb3NpdGlvbiBpcyBmaXhlZFxuXHRcdFx0b2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBHZXQgKnJlYWwqIG9mZnNldFBhcmVudFxuXHRcdFx0b2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQoKTtcblxuXHRcdFx0Ly8gR2V0IGNvcnJlY3Qgb2Zmc2V0c1xuXHRcdFx0b2Zmc2V0ID0gdGhpcy5vZmZzZXQoKTtcblx0XHRcdGlmICggIWpRdWVyeS5ub2RlTmFtZSggb2Zmc2V0UGFyZW50WyAwIF0sIFwiaHRtbFwiICkgKSB7XG5cdFx0XHRcdHBhcmVudE9mZnNldCA9IG9mZnNldFBhcmVudC5vZmZzZXQoKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIG9mZnNldFBhcmVudCBib3JkZXJzXG5cdFx0XHQvLyBTdWJ0cmFjdCBvZmZzZXRQYXJlbnQgc2Nyb2xsIHBvc2l0aW9uc1xuXHRcdFx0cGFyZW50T2Zmc2V0LnRvcCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnRbIDAgXSwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICkgLVxuXHRcdFx0XHRvZmZzZXRQYXJlbnQuc2Nyb2xsVG9wKCk7XG5cdFx0XHRwYXJlbnRPZmZzZXQubGVmdCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnRbIDAgXSwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApIC1cblx0XHRcdFx0b2Zmc2V0UGFyZW50LnNjcm9sbExlZnQoKTtcblx0XHR9XG5cblx0XHQvLyBTdWJ0cmFjdCBwYXJlbnQgb2Zmc2V0cyBhbmQgZWxlbWVudCBtYXJnaW5zXG5cdFx0Ly8gbm90ZTogd2hlbiBhbiBlbGVtZW50IGhhcyBtYXJnaW46IGF1dG8gdGhlIG9mZnNldExlZnQgYW5kIG1hcmdpbkxlZnRcblx0XHQvLyBhcmUgdGhlIHNhbWUgaW4gU2FmYXJpIGNhdXNpbmcgb2Zmc2V0LmxlZnQgdG8gaW5jb3JyZWN0bHkgYmUgMFxuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6ICBvZmZzZXQudG9wICAtIHBhcmVudE9mZnNldC50b3AgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpblRvcFwiLCB0cnVlICksXG5cdFx0XHRsZWZ0OiBvZmZzZXQubGVmdCAtIHBhcmVudE9mZnNldC5sZWZ0IC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5MZWZ0XCIsIHRydWUgKVxuXHRcdH07XG5cdH0sXG5cblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50O1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiAoICFqUXVlcnkubm9kZU5hbWUoIG9mZnNldFBhcmVudCwgXCJodG1sXCIgKSAmJlxuXHRcdFx0XHRqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkgKSB7XG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiBcInBhZ2VYT2Zmc2V0XCIsIHNjcm9sbFRvcDogXCJwYWdlWU9mZnNldFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIHByb3AgKSB7XG5cdHZhciB0b3AgPSAvWS8udGVzdCggcHJvcCApO1xuXG5cdGpRdWVyeS5mblsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdmFsICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHtcblx0XHRcdHZhciB3aW4gPSBnZXRXaW5kb3coIGVsZW0gKTtcblxuXHRcdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHdpbiA/ICggcHJvcCBpbiB3aW4gKSA/IHdpblsgcHJvcCBdIDpcblx0XHRcdFx0XHR3aW4uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBtZXRob2QgXSA6XG5cdFx0XHRcdFx0ZWxlbVsgbWV0aG9kIF07XG5cdFx0XHR9XG5cblx0XHRcdGlmICggd2luICkge1xuXHRcdFx0XHR3aW4uc2Nyb2xsVG8oXG5cdFx0XHRcdFx0IXRvcCA/IHZhbCA6IGpRdWVyeSggd2luICkuc2Nyb2xsTGVmdCgpLFxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IGpRdWVyeSggd2luICkuc2Nyb2xsVG9wKClcblx0XHRcdFx0KTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbVsgbWV0aG9kIF0gPSB2YWw7XG5cdFx0XHR9XG5cdFx0fSwgbWV0aG9kLCB2YWwsIGFyZ3VtZW50cy5sZW5ndGgsIG51bGwgKTtcblx0fTtcbn0gKTtcblxuLy8gU3VwcG9ydDogU2FmYXJpPDctOCssIENocm9tZTwzNy00NCtcbi8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcbi8vIGdldENvbXB1dGVkU3R5bGUgcmV0dXJucyBwZXJjZW50IHdoZW4gc3BlY2lmaWVkIGZvciB0b3AvbGVmdC9ib3R0b20vcmlnaHRcbi8vIHJhdGhlciB0aGFuIG1ha2UgdGhlIGNzcyBtb2R1bGUgZGVwZW5kIG9uIHRoZSBvZmZzZXQgbW9kdWxlLCB3ZSBqdXN0IGNoZWNrIGZvciBpdCBoZXJlXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggaSwgcHJvcCApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcm9wIF0gPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucGl4ZWxQb3NpdGlvbixcblx0XHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0XHRjb21wdXRlZCA9IGN1ckNTUyggZWxlbSwgcHJvcCApO1xuXG5cdFx0XHRcdC8vIGlmIGN1ckNTUyByZXR1cm5zIHBlcmNlbnRhZ2UsIGZhbGxiYWNrIHRvIG9mZnNldFxuXHRcdFx0XHRyZXR1cm4gcm51bW5vbnB4LnRlc3QoIGNvbXB1dGVkICkgP1xuXHRcdFx0XHRcdGpRdWVyeSggZWxlbSApLnBvc2l0aW9uKClbIHByb3AgXSArIFwicHhcIiA6XG5cdFx0XHRcdFx0Y29tcHV0ZWQ7XG5cdFx0XHR9XG5cdFx0fVxuXHQpO1xufSApO1xuXG5cbi8vIENyZWF0ZSBpbm5lckhlaWdodCwgaW5uZXJXaWR0aCwgaGVpZ2h0LCB3aWR0aCwgb3V0ZXJIZWlnaHQgYW5kIG91dGVyV2lkdGggbWV0aG9kc1xualF1ZXJ5LmVhY2goIHsgSGVpZ2h0OiBcImhlaWdodFwiLCBXaWR0aDogXCJ3aWR0aFwiIH0sIGZ1bmN0aW9uKCBuYW1lLCB0eXBlICkge1xuXHRqUXVlcnkuZWFjaCggeyBwYWRkaW5nOiBcImlubmVyXCIgKyBuYW1lLCBjb250ZW50OiB0eXBlLCBcIlwiOiBcIm91dGVyXCIgKyBuYW1lIH0sXG5cdGZ1bmN0aW9uKCBkZWZhdWx0RXh0cmEsIGZ1bmNOYW1lICkge1xuXG5cdFx0Ly8gbWFyZ2luIGlzIG9ubHkgZm9yIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoXG5cdFx0alF1ZXJ5LmZuWyBmdW5jTmFtZSBdID0gZnVuY3Rpb24oIG1hcmdpbiwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgY2hhaW5hYmxlID0gYXJndW1lbnRzLmxlbmd0aCAmJiAoIGRlZmF1bHRFeHRyYSB8fCB0eXBlb2YgbWFyZ2luICE9PSBcImJvb2xlYW5cIiApLFxuXHRcdFx0XHRleHRyYSA9IGRlZmF1bHRFeHRyYSB8fCAoIG1hcmdpbiA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gdHJ1ZSA/IFwibWFyZ2luXCIgOiBcImJvcmRlclwiICk7XG5cblx0XHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIGRvYztcblxuXHRcdFx0XHRpZiAoIGpRdWVyeS5pc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gQXMgb2YgNS84LzIwMTIgdGhpcyB3aWxsIHlpZWxkIGluY29ycmVjdCByZXN1bHRzIGZvciBNb2JpbGUgU2FmYXJpLCBidXQgdGhlcmVcblx0XHRcdFx0XHQvLyBpc24ndCBhIHdob2xlIGxvdCB3ZSBjYW4gZG8uIFNlZSBwdWxsIHJlcXVlc3QgYXQgdGhpcyBVUkwgZm9yIGRpc2N1c3Npb246XG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvcHVsbC83NjRcblx0XHRcdFx0XHRyZXR1cm4gZWxlbS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbIFwiY2xpZW50XCIgKyBuYW1lIF07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBHZXQgZG9jdW1lbnQgd2lkdGggb3IgaGVpZ2h0XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRkb2MgPSBlbGVtLmRvY3VtZW50RWxlbWVudDtcblxuXHRcdFx0XHRcdC8vIEVpdGhlciBzY3JvbGxbV2lkdGgvSGVpZ2h0XSBvciBvZmZzZXRbV2lkdGgvSGVpZ2h0XSBvciBjbGllbnRbV2lkdGgvSGVpZ2h0XSxcblx0XHRcdFx0XHQvLyB3aGljaGV2ZXIgaXMgZ3JlYXRlc3Rcblx0XHRcdFx0XHQvLyB1bmZvcnR1bmF0ZWx5LCB0aGlzIGNhdXNlcyBidWcgIzM4MzggaW4gSUU2Lzggb25seSxcblx0XHRcdFx0XHQvLyBidXQgdGhlcmUgaXMgY3VycmVudGx5IG5vIGdvb2QsIHNtYWxsIHdheSB0byBmaXggaXQuXG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlLCBudWxsICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH1cbn0gKTtcblxuLy8gVGhlIG51bWJlciBvZiBlbGVtZW50cyBjb250YWluZWQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXRcbmpRdWVyeS5mbi5zaXplID0gZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzLmxlbmd0aDtcbn07XG5cbmpRdWVyeS5mbi5hbmRTZWxmID0galF1ZXJ5LmZuLmFkZEJhY2s7XG5cblxuXG5cbi8vIFJlZ2lzdGVyIGFzIGEgbmFtZWQgQU1EIG1vZHVsZSwgc2luY2UgalF1ZXJ5IGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aCBvdGhlclxuLy8gZmlsZXMgdGhhdCBtYXkgdXNlIGRlZmluZSwgYnV0IG5vdCB2aWEgYSBwcm9wZXIgY29uY2F0ZW5hdGlvbiBzY3JpcHQgdGhhdFxuLy8gdW5kZXJzdGFuZHMgYW5vbnltb3VzIEFNRCBtb2R1bGVzLiBBIG5hbWVkIEFNRCBpcyBzYWZlc3QgYW5kIG1vc3Qgcm9idXN0XG4vLyB3YXkgdG8gcmVnaXN0ZXIuIExvd2VyY2FzZSBqcXVlcnkgaXMgdXNlZCBiZWNhdXNlIEFNRCBtb2R1bGUgbmFtZXMgYXJlXG4vLyBkZXJpdmVkIGZyb20gZmlsZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBsb3dlcmNhc2Vcbi8vIGZpbGUgbmFtZS4gRG8gdGhpcyBhZnRlciBjcmVhdGluZyB0aGUgZ2xvYmFsIHNvIHRoYXQgaWYgYW4gQU1EIG1vZHVsZSB3YW50c1xuLy8gdG8gY2FsbCBub0NvbmZsaWN0IHRvIGhpZGUgdGhpcyB2ZXJzaW9uIG9mIGpRdWVyeSwgaXQgd2lsbCB3b3JrLlxuXG4vLyBOb3RlIHRoYXQgZm9yIG1heGltdW0gcG9ydGFiaWxpdHksIGxpYnJhcmllcyB0aGF0IGFyZSBub3QgalF1ZXJ5IHNob3VsZFxuLy8gZGVjbGFyZSB0aGVtc2VsdmVzIGFzIGFub255bW91cyBtb2R1bGVzLCBhbmQgYXZvaWQgc2V0dGluZyBhIGdsb2JhbCBpZiBhblxuLy8gQU1EIGxvYWRlciBpcyBwcmVzZW50LiBqUXVlcnkgaXMgYSBzcGVjaWFsIGNhc2UuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcmJ1cmtlL3JlcXVpcmVqcy93aWtpL1VwZGF0aW5nLWV4aXN0aW5nLWxpYnJhcmllcyN3aWtpLWFub25cblxuaWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblx0ZGVmaW5lKCBcImpxdWVyeVwiLCBbXSwgZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGpRdWVyeTtcblx0fSApO1xufVxuXG5cblxudmFyXG5cblx0Ly8gTWFwIG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF9qUXVlcnkgPSB3aW5kb3cualF1ZXJ5LFxuXG5cdC8vIE1hcCBvdmVyIHRoZSAkIGluIGNhc2Ugb2Ygb3ZlcndyaXRlXG5cdF8kID0gd2luZG93LiQ7XG5cbmpRdWVyeS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oIGRlZXAgKSB7XG5cdGlmICggd2luZG93LiQgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cuJCA9IF8kO1xuXHR9XG5cblx0aWYgKCBkZWVwICYmIHdpbmRvdy5qUXVlcnkgPT09IGpRdWVyeSApIHtcblx0XHR3aW5kb3cualF1ZXJ5ID0gX2pRdWVyeTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnk7XG59O1xuXG4vLyBFeHBvc2UgalF1ZXJ5IGFuZCAkIGlkZW50aWZpZXJzLCBldmVuIGluXG4vLyBBTUQgKCM3MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNTU3KVxuLy8gYW5kIENvbW1vbkpTIGZvciBicm93c2VyIGVtdWxhdG9ycyAoIzEzNTY2KVxuaWYgKCAhbm9HbG9iYWwgKSB7XG5cdHdpbmRvdy5qUXVlcnkgPSB3aW5kb3cuJCA9IGpRdWVyeTtcbn1cblxucmV0dXJuIGpRdWVyeTtcbn0pKTtcbiIsIi8qIVxuICogalF1ZXJ5IE1pZ3JhdGUgLSB2MS4yLjEgLSAyMDEzLTA1LTA4XG4gKiBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS1taWdyYXRlXG4gKiBDb3B5cmlnaHQgMjAwNSwgMjAxMyBqUXVlcnkgRm91bmRhdGlvbiwgSW5jLiBhbmQgb3RoZXIgY29udHJpYnV0b3JzOyBMaWNlbnNlZCBNSVRcbiAqL1xuKGZ1bmN0aW9uKCBqUXVlcnksIHdpbmRvdywgdW5kZWZpbmVkICkge1xuLy8gU2VlIGh0dHA6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzM1XG4vLyBcInVzZSBzdHJpY3RcIjtcblxuXG52YXIgd2FybmVkQWJvdXQgPSB7fTtcblxuLy8gTGlzdCBvZiB3YXJuaW5ncyBhbHJlYWR5IGdpdmVuOyBwdWJsaWMgcmVhZCBvbmx5XG5qUXVlcnkubWlncmF0ZVdhcm5pbmdzID0gW107XG5cbi8vIFNldCB0byB0cnVlIHRvIHByZXZlbnQgY29uc29sZSBvdXRwdXQ7IG1pZ3JhdGVXYXJuaW5ncyBzdGlsbCBtYWludGFpbmVkXG4vLyBqUXVlcnkubWlncmF0ZU11dGUgPSBmYWxzZTtcblxuLy8gU2hvdyBhIG1lc3NhZ2Ugb24gdGhlIGNvbnNvbGUgc28gZGV2cyBrbm93IHdlJ3JlIGFjdGl2ZVxuaWYgKCAhalF1ZXJ5Lm1pZ3JhdGVNdXRlICYmIHdpbmRvdy5jb25zb2xlICYmIHdpbmRvdy5jb25zb2xlLmxvZyApIHtcblx0d2luZG93LmNvbnNvbGUubG9nKFwiSlFNSUdSQVRFOiBMb2dnaW5nIGlzIGFjdGl2ZVwiKTtcbn1cblxuLy8gU2V0IHRvIGZhbHNlIHRvIGRpc2FibGUgdHJhY2VzIHRoYXQgYXBwZWFyIHdpdGggd2FybmluZ3NcbmlmICggalF1ZXJ5Lm1pZ3JhdGVUcmFjZSA9PT0gdW5kZWZpbmVkICkge1xuXHRqUXVlcnkubWlncmF0ZVRyYWNlID0gdHJ1ZTtcbn1cblxuLy8gRm9yZ2V0IGFueSB3YXJuaW5ncyB3ZSd2ZSBhbHJlYWR5IGdpdmVuOyBwdWJsaWNcbmpRdWVyeS5taWdyYXRlUmVzZXQgPSBmdW5jdGlvbigpIHtcblx0d2FybmVkQWJvdXQgPSB7fTtcblx0alF1ZXJ5Lm1pZ3JhdGVXYXJuaW5ncy5sZW5ndGggPSAwO1xufTtcblxuZnVuY3Rpb24gbWlncmF0ZVdhcm4oIG1zZykge1xuXHR2YXIgY29uc29sZSA9IHdpbmRvdy5jb25zb2xlO1xuXHRpZiAoICF3YXJuZWRBYm91dFsgbXNnIF0gKSB7XG5cdFx0d2FybmVkQWJvdXRbIG1zZyBdID0gdHJ1ZTtcblx0XHRqUXVlcnkubWlncmF0ZVdhcm5pbmdzLnB1c2goIG1zZyApO1xuXHRcdGlmICggY29uc29sZSAmJiBjb25zb2xlLndhcm4gJiYgIWpRdWVyeS5taWdyYXRlTXV0ZSApIHtcblx0XHRcdGNvbnNvbGUud2FybiggXCJKUU1JR1JBVEU6IFwiICsgbXNnICk7XG5cdFx0XHRpZiAoIGpRdWVyeS5taWdyYXRlVHJhY2UgJiYgY29uc29sZS50cmFjZSApIHtcblx0XHRcdFx0Y29uc29sZS50cmFjZSgpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBtaWdyYXRlV2FyblByb3AoIG9iaiwgcHJvcCwgdmFsdWUsIG1zZyApIHtcblx0aWYgKCBPYmplY3QuZGVmaW5lUHJvcGVydHkgKSB7XG5cdFx0Ly8gT24gRVM1IGJyb3dzZXJzIChub24tb2xkSUUpLCB3YXJuIGlmIHRoZSBjb2RlIHRyaWVzIHRvIGdldCBwcm9wO1xuXHRcdC8vIGFsbG93IHByb3BlcnR5IHRvIGJlIG92ZXJ3cml0dGVuIGluIGNhc2Ugc29tZSBvdGhlciBwbHVnaW4gd2FudHMgaXRcblx0XHR0cnkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBvYmosIHByb3AsIHtcblx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdG1pZ3JhdGVXYXJuKCBtc2cgKTtcblx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHNldDogZnVuY3Rpb24oIG5ld1ZhbHVlICkge1xuXHRcdFx0XHRcdG1pZ3JhdGVXYXJuKCBtc2cgKTtcblx0XHRcdFx0XHR2YWx1ZSA9IG5ld1ZhbHVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybjtcblx0XHR9IGNhdGNoKCBlcnIgKSB7XG5cdFx0XHQvLyBJRTggaXMgYSBkb3BlIGFib3V0IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgY2FuJ3Qgd2FybiB0aGVyZVxuXHRcdH1cblx0fVxuXG5cdC8vIE5vbi1FUzUgKG9yIGJyb2tlbikgYnJvd3NlcjsganVzdCBzZXQgdGhlIHByb3BlcnR5XG5cdGpRdWVyeS5fZGVmaW5lUHJvcGVydHlCcm9rZW4gPSB0cnVlO1xuXHRvYmpbIHByb3AgXSA9IHZhbHVlO1xufVxuXG5pZiAoIGRvY3VtZW50LmNvbXBhdE1vZGUgPT09IFwiQmFja0NvbXBhdFwiICkge1xuXHQvLyBqUXVlcnkgaGFzIG5ldmVyIHN1cHBvcnRlZCBvciB0ZXN0ZWQgUXVpcmtzIE1vZGVcblx0bWlncmF0ZVdhcm4oIFwialF1ZXJ5IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggUXVpcmtzIE1vZGVcIiApO1xufVxuXG5cbnZhciBhdHRyRm4gPSBqUXVlcnkoIFwiPGlucHV0Lz5cIiwgeyBzaXplOiAxIH0gKS5hdHRyKFwic2l6ZVwiKSAmJiBqUXVlcnkuYXR0ckZuLFxuXHRvbGRBdHRyID0galF1ZXJ5LmF0dHIsXG5cdHZhbHVlQXR0ckdldCA9IGpRdWVyeS5hdHRySG9va3MudmFsdWUgJiYgalF1ZXJ5LmF0dHJIb29rcy52YWx1ZS5nZXQgfHxcblx0XHRmdW5jdGlvbigpIHsgcmV0dXJuIG51bGw7IH0sXG5cdHZhbHVlQXR0clNldCA9IGpRdWVyeS5hdHRySG9va3MudmFsdWUgJiYgalF1ZXJ5LmF0dHJIb29rcy52YWx1ZS5zZXQgfHxcblx0XHRmdW5jdGlvbigpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcblx0cm5vVHlwZSA9IC9eKD86aW5wdXR8YnV0dG9uKSQvaSxcblx0cm5vQXR0ck5vZGVUeXBlID0gL15bMjM4XSQvLFxuXHRyYm9vbGVhbiA9IC9eKD86YXV0b2ZvY3VzfGF1dG9wbGF5fGFzeW5jfGNoZWNrZWR8Y29udHJvbHN8ZGVmZXJ8ZGlzYWJsZWR8aGlkZGVufGxvb3B8bXVsdGlwbGV8b3BlbnxyZWFkb25seXxyZXF1aXJlZHxzY29wZWR8c2VsZWN0ZWQpJC9pLFxuXHRydXNlRGVmYXVsdCA9IC9eKD86Y2hlY2tlZHxzZWxlY3RlZCkkL2k7XG5cbi8vIGpRdWVyeS5hdHRyRm5cbm1pZ3JhdGVXYXJuUHJvcCggalF1ZXJ5LCBcImF0dHJGblwiLCBhdHRyRm4gfHwge30sIFwialF1ZXJ5LmF0dHJGbiBpcyBkZXByZWNhdGVkXCIgKTtcblxualF1ZXJ5LmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIHBhc3MgKSB7XG5cdHZhciBsb3dlck5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCksXG5cdFx0blR5cGUgPSBlbGVtICYmIGVsZW0ubm9kZVR5cGU7XG5cblx0aWYgKCBwYXNzICkge1xuXHRcdC8vIFNpbmNlIHBhc3MgaXMgdXNlZCBpbnRlcm5hbGx5LCB3ZSBvbmx5IHdhcm4gZm9yIG5ldyBqUXVlcnlcblx0XHQvLyB2ZXJzaW9ucyB3aGVyZSB0aGVyZSBpc24ndCBhIHBhc3MgYXJnIGluIHRoZSBmb3JtYWwgcGFyYW1zXG5cdFx0aWYgKCBvbGRBdHRyLmxlbmd0aCA8IDQgKSB7XG5cdFx0XHRtaWdyYXRlV2FybihcImpRdWVyeS5mbi5hdHRyKCBwcm9wcywgcGFzcyApIGlzIGRlcHJlY2F0ZWRcIik7XG5cdFx0fVxuXHRcdGlmICggZWxlbSAmJiAhcm5vQXR0ck5vZGVUeXBlLnRlc3QoIG5UeXBlICkgJiZcblx0XHRcdChhdHRyRm4gPyBuYW1lIGluIGF0dHJGbiA6IGpRdWVyeS5pc0Z1bmN0aW9uKGpRdWVyeS5mbltuYW1lXSkpICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeSggZWxlbSApWyBuYW1lIF0oIHZhbHVlICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gV2FybiBpZiB1c2VyIHRyaWVzIHRvIHNldCBgdHlwZWAsIHNpbmNlIGl0IGJyZWFrcyBvbiBJRSA2LzcvODsgYnkgY2hlY2tpbmdcblx0Ly8gZm9yIGRpc2Nvbm5lY3RlZCBlbGVtZW50cyB3ZSBkb24ndCB3YXJuIG9uICQoIFwiPGJ1dHRvbj5cIiwgeyB0eXBlOiBcImJ1dHRvblwiIH0gKS5cblx0aWYgKCBuYW1lID09PSBcInR5cGVcIiAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHJub1R5cGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRtaWdyYXRlV2FybihcIkNhbid0IGNoYW5nZSB0aGUgJ3R5cGUnIG9mIGFuIGlucHV0IG9yIGJ1dHRvbiBpbiBJRSA2LzcvOFwiKTtcblx0fVxuXG5cdC8vIFJlc3RvcmUgYm9vbEhvb2sgZm9yIGJvb2xlYW4gcHJvcGVydHkvYXR0cmlidXRlIHN5bmNocm9uaXphdGlvblxuXHRpZiAoICFqUXVlcnkuYXR0ckhvb2tzWyBsb3dlck5hbWUgXSAmJiByYm9vbGVhbi50ZXN0KCBsb3dlck5hbWUgKSApIHtcblx0XHRqUXVlcnkuYXR0ckhvb2tzWyBsb3dlck5hbWUgXSA9IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0XHRcdC8vIEFsaWduIGJvb2xlYW4gYXR0cmlidXRlcyB3aXRoIGNvcnJlc3BvbmRpbmcgcHJvcGVydGllc1xuXHRcdFx0XHQvLyBGYWxsIGJhY2sgdG8gYXR0cmlidXRlIHByZXNlbmNlIHdoZXJlIHNvbWUgYm9vbGVhbnMgYXJlIG5vdCBzdXBwb3J0ZWRcblx0XHRcdFx0dmFyIGF0dHJOb2RlLFxuXHRcdFx0XHRcdHByb3BlcnR5ID0galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0cmV0dXJuIHByb3BlcnR5ID09PSB0cnVlIHx8IHR5cGVvZiBwcm9wZXJ0eSAhPT0gXCJib29sZWFuXCIgJiZcblx0XHRcdFx0XHQoIGF0dHJOb2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpICkgJiYgYXR0ck5vZGUubm9kZVZhbHVlICE9PSBmYWxzZSA/XG5cblx0XHRcdFx0XHRuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHRcdHVuZGVmaW5lZDtcblx0XHRcdH0sXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgbmFtZSApIHtcblx0XHRcdFx0dmFyIHByb3BOYW1lO1xuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHQvLyBSZW1vdmUgYm9vbGVhbiBhdHRyaWJ1dGVzIHdoZW4gc2V0IHRvIGZhbHNlXG5cdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHQvLyB2YWx1ZSBpcyB0cnVlIHNpbmNlIHdlIGtub3cgYXQgdGhpcyBwb2ludCBpdCdzIHR5cGUgYm9vbGVhbiBhbmQgbm90IGZhbHNlXG5cdFx0XHRcdFx0Ly8gU2V0IGJvb2xlYW4gYXR0cmlidXRlcyB0byB0aGUgc2FtZSBuYW1lIGFuZCBzZXQgdGhlIERPTSBwcm9wZXJ0eVxuXHRcdFx0XHRcdHByb3BOYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xuXHRcdFx0XHRcdGlmICggcHJvcE5hbWUgaW4gZWxlbSApIHtcblx0XHRcdFx0XHRcdC8vIE9ubHkgc2V0IHRoZSBJREwgc3BlY2lmaWNhbGx5IGlmIGl0IGFscmVhZHkgZXhpc3RzIG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0XHRlbGVtWyBwcm9wTmFtZSBdID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgbmFtZS50b0xvd2VyQ2FzZSgpICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdC8vIFdhcm4gb25seSBmb3IgYXR0cmlidXRlcyB0aGF0IGNhbiByZW1haW4gZGlzdGluY3QgZnJvbSB0aGVpciBwcm9wZXJ0aWVzIHBvc3QtMS45XG5cdFx0aWYgKCBydXNlRGVmYXVsdC50ZXN0KCBsb3dlck5hbWUgKSApIHtcblx0XHRcdG1pZ3JhdGVXYXJuKCBcImpRdWVyeS5mbi5hdHRyKCdcIiArIGxvd2VyTmFtZSArIFwiJykgbWF5IHVzZSBwcm9wZXJ0eSBpbnN0ZWFkIG9mIGF0dHJpYnV0ZVwiICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG9sZEF0dHIuY2FsbCggalF1ZXJ5LCBlbGVtLCBuYW1lLCB2YWx1ZSApO1xufTtcblxuLy8gYXR0ckhvb2tzOiB2YWx1ZVxualF1ZXJ5LmF0dHJIb29rcy52YWx1ZSA9IHtcblx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHR2YXIgbm9kZU5hbWUgPSAoIGVsZW0ubm9kZU5hbWUgfHwgXCJcIiApLnRvTG93ZXJDYXNlKCk7XG5cdFx0aWYgKCBub2RlTmFtZSA9PT0gXCJidXR0b25cIiApIHtcblx0XHRcdHJldHVybiB2YWx1ZUF0dHJHZXQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0XHRpZiAoIG5vZGVOYW1lICE9PSBcImlucHV0XCIgJiYgbm9kZU5hbWUgIT09IFwib3B0aW9uXCIgKSB7XG5cdFx0XHRtaWdyYXRlV2FybihcImpRdWVyeS5mbi5hdHRyKCd2YWx1ZScpIG5vIGxvbmdlciBnZXRzIHByb3BlcnRpZXNcIik7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lIGluIGVsZW0gP1xuXHRcdFx0ZWxlbS52YWx1ZSA6XG5cdFx0XHRudWxsO1xuXHR9LFxuXHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHR2YXIgbm9kZU5hbWUgPSAoIGVsZW0ubm9kZU5hbWUgfHwgXCJcIiApLnRvTG93ZXJDYXNlKCk7XG5cdFx0aWYgKCBub2RlTmFtZSA9PT0gXCJidXR0b25cIiApIHtcblx0XHRcdHJldHVybiB2YWx1ZUF0dHJTZXQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0XHRpZiAoIG5vZGVOYW1lICE9PSBcImlucHV0XCIgJiYgbm9kZU5hbWUgIT09IFwib3B0aW9uXCIgKSB7XG5cdFx0XHRtaWdyYXRlV2FybihcImpRdWVyeS5mbi5hdHRyKCd2YWx1ZScsIHZhbCkgbm8gbG9uZ2VyIHNldHMgcHJvcGVydGllc1wiKTtcblx0XHR9XG5cdFx0Ly8gRG9lcyBub3QgcmV0dXJuIHNvIHRoYXQgc2V0QXR0cmlidXRlIGlzIGFsc28gdXNlZFxuXHRcdGVsZW0udmFsdWUgPSB2YWx1ZTtcblx0fVxufTtcblxuXG52YXIgbWF0Y2hlZCwgYnJvd3Nlcixcblx0b2xkSW5pdCA9IGpRdWVyeS5mbi5pbml0LFxuXHRvbGRQYXJzZUpTT04gPSBqUXVlcnkucGFyc2VKU09OLFxuXHQvLyBOb3RlOiBYU1MgY2hlY2sgaXMgZG9uZSBiZWxvdyBhZnRlciBzdHJpbmcgaXMgdHJpbW1lZFxuXHRycXVpY2tFeHByID0gL14oW148XSopKDxbXFx3XFxXXSs+KShbXj5dKikkLztcblxuLy8gJChodG1sKSBcImxvb2tzIGxpa2UgaHRtbFwiIHJ1bGUgY2hhbmdlXG5qUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcm9vdGpRdWVyeSApIHtcblx0dmFyIG1hdGNoO1xuXG5cdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICYmXG5cdFx0XHQobWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIGpRdWVyeS50cmltKCBzZWxlY3RvciApICkpICYmIG1hdGNoWyAwIF0gKSB7XG5cdFx0Ly8gVGhpcyBpcyBhbiBIVE1MIHN0cmluZyBhY2NvcmRpbmcgdG8gdGhlIFwib2xkXCIgcnVsZXM7IGlzIGl0IHN0aWxsP1xuXHRcdGlmICggc2VsZWN0b3IuY2hhckF0KCAwICkgIT09IFwiPFwiICkge1xuXHRcdFx0bWlncmF0ZVdhcm4oXCIkKGh0bWwpIEhUTUwgc3RyaW5ncyBtdXN0IHN0YXJ0IHdpdGggJzwnIGNoYXJhY3RlclwiKTtcblx0XHR9XG5cdFx0aWYgKCBtYXRjaFsgMyBdICkge1xuXHRcdFx0bWlncmF0ZVdhcm4oXCIkKGh0bWwpIEhUTUwgdGV4dCBhZnRlciBsYXN0IHRhZyBpcyBpZ25vcmVkXCIpO1xuXHRcdH1cblx0XHQvLyBDb25zaXN0ZW50bHkgcmVqZWN0IGFueSBIVE1MLWxpa2Ugc3RyaW5nIHN0YXJ0aW5nIHdpdGggYSBoYXNoICgjOTUyMSlcblx0XHQvLyBOb3RlIHRoYXQgdGhpcyBtYXkgYnJlYWsgalF1ZXJ5IDEuNi54IGNvZGUgdGhhdCBvdGhlcndpc2Ugd291bGQgd29yay5cblx0XHRpZiAoIG1hdGNoWyAwIF0uY2hhckF0KCAwICkgPT09IFwiI1wiICkge1xuXHRcdFx0bWlncmF0ZVdhcm4oXCJIVE1MIHN0cmluZyBjYW5ub3Qgc3RhcnQgd2l0aCBhICcjJyBjaGFyYWN0ZXJcIik7XG5cdFx0XHRqUXVlcnkuZXJyb3IoXCJKUU1JR1JBVEU6IEludmFsaWQgc2VsZWN0b3Igc3RyaW5nIChYU1MpXCIpO1xuXHRcdH1cblx0XHQvLyBOb3cgcHJvY2VzcyB1c2luZyBsb29zZSBydWxlczsgbGV0IHByZS0xLjggcGxheSB0b29cblx0XHRpZiAoIGNvbnRleHQgJiYgY29udGV4dC5jb250ZXh0ICkge1xuXHRcdFx0Ly8galF1ZXJ5IG9iamVjdCBhcyBjb250ZXh0OyBwYXJzZUhUTUwgZXhwZWN0cyBhIERPTSBvYmplY3Rcblx0XHRcdGNvbnRleHQgPSBjb250ZXh0LmNvbnRleHQ7XG5cdFx0fVxuXHRcdGlmICggalF1ZXJ5LnBhcnNlSFRNTCApIHtcblx0XHRcdHJldHVybiBvbGRJbml0LmNhbGwoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoIG1hdGNoWyAyIF0sIGNvbnRleHQsIHRydWUgKSxcblx0XHRcdFx0XHRjb250ZXh0LCByb290alF1ZXJ5ICk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBvbGRJbml0LmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcbn07XG5qUXVlcnkuZm4uaW5pdC5wcm90b3R5cGUgPSBqUXVlcnkuZm47XG5cbi8vIExldCAkLnBhcnNlSlNPTihmYWxzeV92YWx1ZSkgcmV0dXJuIG51bGxcbmpRdWVyeS5wYXJzZUpTT04gPSBmdW5jdGlvbigganNvbiApIHtcblx0aWYgKCAhanNvbiAmJiBqc29uICE9PSBudWxsICkge1xuXHRcdG1pZ3JhdGVXYXJuKFwialF1ZXJ5LnBhcnNlSlNPTiByZXF1aXJlcyBhIHZhbGlkIEpTT04gc3RyaW5nXCIpO1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cdHJldHVybiBvbGRQYXJzZUpTT04uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xufTtcblxualF1ZXJ5LnVhTWF0Y2ggPSBmdW5jdGlvbiggdWEgKSB7XG5cdHVhID0gdWEudG9Mb3dlckNhc2UoKTtcblxuXHR2YXIgbWF0Y2ggPSAvKGNocm9tZSlbIFxcL10oW1xcdy5dKykvLmV4ZWMoIHVhICkgfHxcblx0XHQvKHdlYmtpdClbIFxcL10oW1xcdy5dKykvLmV4ZWMoIHVhICkgfHxcblx0XHQvKG9wZXJhKSg/Oi4qdmVyc2lvbnwpWyBcXC9dKFtcXHcuXSspLy5leGVjKCB1YSApIHx8XG5cdFx0Lyhtc2llKSAoW1xcdy5dKykvLmV4ZWMoIHVhICkgfHxcblx0XHR1YS5pbmRleE9mKFwiY29tcGF0aWJsZVwiKSA8IDAgJiYgLyhtb3ppbGxhKSg/Oi4qPyBydjooW1xcdy5dKyl8KS8uZXhlYyggdWEgKSB8fFxuXHRcdFtdO1xuXG5cdHJldHVybiB7XG5cdFx0YnJvd3NlcjogbWF0Y2hbIDEgXSB8fCBcIlwiLFxuXHRcdHZlcnNpb246IG1hdGNoWyAyIF0gfHwgXCIwXCJcblx0fTtcbn07XG5cbi8vIERvbid0IGNsb2JiZXIgYW55IGV4aXN0aW5nIGpRdWVyeS5icm93c2VyIGluIGNhc2UgaXQncyBkaWZmZXJlbnRcbmlmICggIWpRdWVyeS5icm93c2VyICkge1xuXHRtYXRjaGVkID0galF1ZXJ5LnVhTWF0Y2goIG5hdmlnYXRvci51c2VyQWdlbnQgKTtcblx0YnJvd3NlciA9IHt9O1xuXG5cdGlmICggbWF0Y2hlZC5icm93c2VyICkge1xuXHRcdGJyb3dzZXJbIG1hdGNoZWQuYnJvd3NlciBdID0gdHJ1ZTtcblx0XHRicm93c2VyLnZlcnNpb24gPSBtYXRjaGVkLnZlcnNpb247XG5cdH1cblxuXHQvLyBDaHJvbWUgaXMgV2Via2l0LCBidXQgV2Via2l0IGlzIGFsc28gU2FmYXJpLlxuXHRpZiAoIGJyb3dzZXIuY2hyb21lICkge1xuXHRcdGJyb3dzZXIud2Via2l0ID0gdHJ1ZTtcblx0fSBlbHNlIGlmICggYnJvd3Nlci53ZWJraXQgKSB7XG5cdFx0YnJvd3Nlci5zYWZhcmkgPSB0cnVlO1xuXHR9XG5cblx0alF1ZXJ5LmJyb3dzZXIgPSBicm93c2VyO1xufVxuXG4vLyBXYXJuIGlmIHRoZSBjb2RlIHRyaWVzIHRvIGdldCBqUXVlcnkuYnJvd3NlclxubWlncmF0ZVdhcm5Qcm9wKCBqUXVlcnksIFwiYnJvd3NlclwiLCBqUXVlcnkuYnJvd3NlciwgXCJqUXVlcnkuYnJvd3NlciBpcyBkZXByZWNhdGVkXCIgKTtcblxualF1ZXJ5LnN1YiA9IGZ1bmN0aW9uKCkge1xuXHRmdW5jdGlvbiBqUXVlcnlTdWIoIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXHRcdHJldHVybiBuZXcgalF1ZXJ5U3ViLmZuLmluaXQoIHNlbGVjdG9yLCBjb250ZXh0ICk7XG5cdH1cblx0alF1ZXJ5LmV4dGVuZCggdHJ1ZSwgalF1ZXJ5U3ViLCB0aGlzICk7XG5cdGpRdWVyeVN1Yi5zdXBlcmNsYXNzID0gdGhpcztcblx0alF1ZXJ5U3ViLmZuID0galF1ZXJ5U3ViLnByb3RvdHlwZSA9IHRoaXMoKTtcblx0alF1ZXJ5U3ViLmZuLmNvbnN0cnVjdG9yID0galF1ZXJ5U3ViO1xuXHRqUXVlcnlTdWIuc3ViID0gdGhpcy5zdWI7XG5cdGpRdWVyeVN1Yi5mbi5pbml0ID0gZnVuY3Rpb24gaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKSB7XG5cdFx0aWYgKCBjb250ZXh0ICYmIGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgJiYgIShjb250ZXh0IGluc3RhbmNlb2YgalF1ZXJ5U3ViKSApIHtcblx0XHRcdGNvbnRleHQgPSBqUXVlcnlTdWIoIGNvbnRleHQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5LmZuLmluaXQuY2FsbCggdGhpcywgc2VsZWN0b3IsIGNvbnRleHQsIHJvb3RqUXVlcnlTdWIgKTtcblx0fTtcblx0alF1ZXJ5U3ViLmZuLmluaXQucHJvdG90eXBlID0galF1ZXJ5U3ViLmZuO1xuXHR2YXIgcm9vdGpRdWVyeVN1YiA9IGpRdWVyeVN1Yihkb2N1bWVudCk7XG5cdG1pZ3JhdGVXYXJuKCBcImpRdWVyeS5zdWIoKSBpcyBkZXByZWNhdGVkXCIgKTtcblx0cmV0dXJuIGpRdWVyeVN1Yjtcbn07XG5cblxuLy8gRW5zdXJlIHRoYXQgJC5hamF4IGdldHMgdGhlIG5ldyBwYXJzZUpTT04gZGVmaW5lZCBpbiBjb3JlLmpzXG5qUXVlcnkuYWpheFNldHVwKHtcblx0Y29udmVydGVyczoge1xuXHRcdFwidGV4dCBqc29uXCI6IGpRdWVyeS5wYXJzZUpTT05cblx0fVxufSk7XG5cblxudmFyIG9sZEZuRGF0YSA9IGpRdWVyeS5mbi5kYXRhO1xuXG5qUXVlcnkuZm4uZGF0YSA9IGZ1bmN0aW9uKCBuYW1lICkge1xuXHR2YXIgcmV0LCBldnQsXG5cdFx0ZWxlbSA9IHRoaXNbMF07XG5cblx0Ly8gSGFuZGxlcyAxLjcgd2hpY2ggaGFzIHRoaXMgYmVoYXZpb3IgYW5kIDEuOCB3aGljaCBkb2Vzbid0XG5cdGlmICggZWxlbSAmJiBuYW1lID09PSBcImV2ZW50c1wiICYmIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgKSB7XG5cdFx0cmV0ID0galF1ZXJ5LmRhdGEoIGVsZW0sIG5hbWUgKTtcblx0XHRldnQgPSBqUXVlcnkuX2RhdGEoIGVsZW0sIG5hbWUgKTtcblx0XHRpZiAoICggcmV0ID09PSB1bmRlZmluZWQgfHwgcmV0ID09PSBldnQgKSAmJiBldnQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdG1pZ3JhdGVXYXJuKFwiVXNlIG9mIGpRdWVyeS5mbi5kYXRhKCdldmVudHMnKSBpcyBkZXByZWNhdGVkXCIpO1xuXHRcdFx0cmV0dXJuIGV2dDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG9sZEZuRGF0YS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG59O1xuXG5cbnZhciByc2NyaXB0VHlwZSA9IC9cXC8oamF2YXxlY21hKXNjcmlwdC9pLFxuXHRvbGRTZWxmID0galF1ZXJ5LmZuLmFuZFNlbGYgfHwgalF1ZXJ5LmZuLmFkZEJhY2s7XG5cbmpRdWVyeS5mbi5hbmRTZWxmID0gZnVuY3Rpb24oKSB7XG5cdG1pZ3JhdGVXYXJuKFwialF1ZXJ5LmZuLmFuZFNlbGYoKSByZXBsYWNlZCBieSBqUXVlcnkuZm4uYWRkQmFjaygpXCIpO1xuXHRyZXR1cm4gb2xkU2VsZi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG59O1xuXG4vLyBTaW5jZSBqUXVlcnkuY2xlYW4gaXMgdXNlZCBpbnRlcm5hbGx5IG9uIG9sZGVyIHZlcnNpb25zLCB3ZSBvbmx5IHNoaW0gaWYgaXQncyBtaXNzaW5nXG5pZiAoICFqUXVlcnkuY2xlYW4gKSB7XG5cdGpRdWVyeS5jbGVhbiA9IGZ1bmN0aW9uKCBlbGVtcywgY29udGV4dCwgZnJhZ21lbnQsIHNjcmlwdHMgKSB7XG5cdFx0Ly8gU2V0IGNvbnRleHQgcGVyIDEuOCBsb2dpY1xuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXHRcdGNvbnRleHQgPSAhY29udGV4dC5ub2RlVHlwZSAmJiBjb250ZXh0WzBdIHx8IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0O1xuXG5cdFx0bWlncmF0ZVdhcm4oXCJqUXVlcnkuY2xlYW4oKSBpcyBkZXByZWNhdGVkXCIpO1xuXG5cdFx0dmFyIGksIGVsZW0sIGhhbmRsZVNjcmlwdCwganNUYWdzLFxuXHRcdFx0cmV0ID0gW107XG5cblx0XHRqUXVlcnkubWVyZ2UoIHJldCwgalF1ZXJ5LmJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0ICkuY2hpbGROb2RlcyApO1xuXG5cdFx0Ly8gQ29tcGxleCBsb2dpYyBsaWZ0ZWQgZGlyZWN0bHkgZnJvbSBqUXVlcnkgMS44XG5cdFx0aWYgKCBmcmFnbWVudCApIHtcblx0XHRcdC8vIFNwZWNpYWwgaGFuZGxpbmcgb2YgZWFjaCBzY3JpcHQgZWxlbWVudFxuXHRcdFx0aGFuZGxlU2NyaXB0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdC8vIENoZWNrIGlmIHdlIGNvbnNpZGVyIGl0IGV4ZWN1dGFibGVcblx0XHRcdFx0aWYgKCAhZWxlbS50eXBlIHx8IHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSApICkge1xuXHRcdFx0XHRcdC8vIERldGFjaCB0aGUgc2NyaXB0IGFuZCBzdG9yZSBpdCBpbiB0aGUgc2NyaXB0cyBhcnJheSAoaWYgcHJvdmlkZWQpIG9yIHRoZSBmcmFnbWVudFxuXHRcdFx0XHRcdC8vIFJldHVybiB0cnV0aHkgdG8gaW5kaWNhdGUgdGhhdCBpdCBoYXMgYmVlbiBoYW5kbGVkXG5cdFx0XHRcdFx0cmV0dXJuIHNjcmlwdHMgP1xuXHRcdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtLnBhcmVudE5vZGUgPyBlbGVtLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIGVsZW0gKSA6IGVsZW0gKSA6XG5cdFx0XHRcdFx0XHRmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRmb3IgKCBpID0gMDsgKGVsZW0gPSByZXRbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0Ly8gQ2hlY2sgaWYgd2UncmUgZG9uZSBhZnRlciBoYW5kbGluZyBhbiBleGVjdXRhYmxlIHNjcmlwdFxuXHRcdFx0XHRpZiAoICEoIGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJzY3JpcHRcIiApICYmIGhhbmRsZVNjcmlwdCggZWxlbSApICkgKSB7XG5cdFx0XHRcdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50IGFuZCBoYW5kbGUgZW1iZWRkZWQgc2NyaXB0c1xuXHRcdFx0XHRcdGZyYWdtZW50LmFwcGVuZENoaWxkKCBlbGVtICk7XG5cdFx0XHRcdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdFx0XHRcdC8vIGhhbmRsZVNjcmlwdCBhbHRlcnMgdGhlIERPTSwgc28gdXNlIGpRdWVyeS5tZXJnZSB0byBlbnN1cmUgc25hcHNob3QgaXRlcmF0aW9uXG5cdFx0XHRcdFx0XHRqc1RhZ3MgPSBqUXVlcnkuZ3JlcCggalF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKSApLCBoYW5kbGVTY3JpcHQgKTtcblxuXHRcdFx0XHRcdFx0Ly8gU3BsaWNlIHRoZSBzY3JpcHRzIGludG8gcmV0IGFmdGVyIHRoZWlyIGZvcm1lciBhbmNlc3RvciBhbmQgYWR2YW5jZSBvdXIgaW5kZXggYmV5b25kIHRoZW1cblx0XHRcdFx0XHRcdHJldC5zcGxpY2UuYXBwbHkoIHJldCwgW2kgKyAxLCAwXS5jb25jYXQoIGpzVGFncyApICk7XG5cdFx0XHRcdFx0XHRpICs9IGpzVGFncy5sZW5ndGg7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHJldDtcblx0fTtcbn1cblxudmFyIGV2ZW50QWRkID0galF1ZXJ5LmV2ZW50LmFkZCxcblx0ZXZlbnRSZW1vdmUgPSBqUXVlcnkuZXZlbnQucmVtb3ZlLFxuXHRldmVudFRyaWdnZXIgPSBqUXVlcnkuZXZlbnQudHJpZ2dlcixcblx0b2xkVG9nZ2xlID0galF1ZXJ5LmZuLnRvZ2dsZSxcblx0b2xkTGl2ZSA9IGpRdWVyeS5mbi5saXZlLFxuXHRvbGREaWUgPSBqUXVlcnkuZm4uZGllLFxuXHRhamF4RXZlbnRzID0gXCJhamF4U3RhcnR8YWpheFN0b3B8YWpheFNlbmR8YWpheENvbXBsZXRlfGFqYXhFcnJvcnxhamF4U3VjY2Vzc1wiLFxuXHRyYWpheEV2ZW50ID0gbmV3IFJlZ0V4cCggXCJcXFxcYig/OlwiICsgYWpheEV2ZW50cyArIFwiKVxcXFxiXCIgKSxcblx0cmhvdmVySGFjayA9IC8oPzpefFxccylob3ZlcihcXC5cXFMrfClcXGIvLFxuXHRob3ZlckhhY2sgPSBmdW5jdGlvbiggZXZlbnRzICkge1xuXHRcdGlmICggdHlwZW9mKCBldmVudHMgKSAhPT0gXCJzdHJpbmdcIiB8fCBqUXVlcnkuZXZlbnQuc3BlY2lhbC5ob3ZlciApIHtcblx0XHRcdHJldHVybiBldmVudHM7XG5cdFx0fVxuXHRcdGlmICggcmhvdmVySGFjay50ZXN0KCBldmVudHMgKSApIHtcblx0XHRcdG1pZ3JhdGVXYXJuKFwiJ2hvdmVyJyBwc2V1ZG8tZXZlbnQgaXMgZGVwcmVjYXRlZCwgdXNlICdtb3VzZWVudGVyIG1vdXNlbGVhdmUnXCIpO1xuXHRcdH1cblx0XHRyZXR1cm4gZXZlbnRzICYmIGV2ZW50cy5yZXBsYWNlKCByaG92ZXJIYWNrLCBcIm1vdXNlZW50ZXIkMSBtb3VzZWxlYXZlJDFcIiApO1xuXHR9O1xuXG4vLyBFdmVudCBwcm9wcyByZW1vdmVkIGluIDEuOSwgcHV0IHRoZW0gYmFjayBpZiBuZWVkZWQ7IG5vIHByYWN0aWNhbCB3YXkgdG8gd2FybiB0aGVtXG5pZiAoIGpRdWVyeS5ldmVudC5wcm9wcyAmJiBqUXVlcnkuZXZlbnQucHJvcHNbIDAgXSAhPT0gXCJhdHRyQ2hhbmdlXCIgKSB7XG5cdGpRdWVyeS5ldmVudC5wcm9wcy51bnNoaWZ0KCBcImF0dHJDaGFuZ2VcIiwgXCJhdHRyTmFtZVwiLCBcInJlbGF0ZWROb2RlXCIsIFwic3JjRWxlbWVudFwiICk7XG59XG5cbi8vIFVuZG9jdW1lbnRlZCBqUXVlcnkuZXZlbnQuaGFuZGxlIHdhcyBcImRlcHJlY2F0ZWRcIiBpbiBqUXVlcnkgMS43XG5pZiAoIGpRdWVyeS5ldmVudC5kaXNwYXRjaCApIHtcblx0bWlncmF0ZVdhcm5Qcm9wKCBqUXVlcnkuZXZlbnQsIFwiaGFuZGxlXCIsIGpRdWVyeS5ldmVudC5kaXNwYXRjaCwgXCJqUXVlcnkuZXZlbnQuaGFuZGxlIGlzIHVuZG9jdW1lbnRlZCBhbmQgZGVwcmVjYXRlZFwiICk7XG59XG5cbi8vIFN1cHBvcnQgZm9yICdob3ZlcicgcHNldWRvLWV2ZW50IGFuZCBhamF4IGV2ZW50IHdhcm5pbmdzXG5qUXVlcnkuZXZlbnQuYWRkID0gZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBkYXRhLCBzZWxlY3RvciApe1xuXHRpZiAoIGVsZW0gIT09IGRvY3VtZW50ICYmIHJhamF4RXZlbnQudGVzdCggdHlwZXMgKSApIHtcblx0XHRtaWdyYXRlV2FybiggXCJBSkFYIGV2ZW50cyBzaG91bGQgYmUgYXR0YWNoZWQgdG8gZG9jdW1lbnQ6IFwiICsgdHlwZXMgKTtcblx0fVxuXHRldmVudEFkZC5jYWxsKCB0aGlzLCBlbGVtLCBob3ZlckhhY2soIHR5cGVzIHx8IFwiXCIgKSwgaGFuZGxlciwgZGF0YSwgc2VsZWN0b3IgKTtcbn07XG5qUXVlcnkuZXZlbnQucmVtb3ZlID0gZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKXtcblx0ZXZlbnRSZW1vdmUuY2FsbCggdGhpcywgZWxlbSwgaG92ZXJIYWNrKCB0eXBlcyApIHx8IFwiXCIsIGhhbmRsZXIsIHNlbGVjdG9yLCBtYXBwZWRUeXBlcyApO1xufTtcblxualF1ZXJ5LmZuLmVycm9yID0gZnVuY3Rpb24oKSB7XG5cdHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMCk7XG5cdG1pZ3JhdGVXYXJuKFwialF1ZXJ5LmZuLmVycm9yKCkgaXMgZGVwcmVjYXRlZFwiKTtcblx0YXJncy5zcGxpY2UoIDAsIDAsIFwiZXJyb3JcIiApO1xuXHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0cmV0dXJuIHRoaXMuYmluZC5hcHBseSggdGhpcywgYXJncyApO1xuXHR9XG5cdC8vIGVycm9yIGV2ZW50IHNob3VsZCBub3QgYnViYmxlIHRvIHdpbmRvdywgYWx0aG91Z2ggaXQgZG9lcyBwcmUtMS43XG5cdHRoaXMudHJpZ2dlckhhbmRsZXIuYXBwbHkoIHRoaXMsIGFyZ3MgKTtcblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZm4udG9nZ2xlID0gZnVuY3Rpb24oIGZuLCBmbjIgKSB7XG5cblx0Ly8gRG9uJ3QgbWVzcyB3aXRoIGFuaW1hdGlvbiBvciBjc3MgdG9nZ2xlc1xuXHRpZiAoICFqUXVlcnkuaXNGdW5jdGlvbiggZm4gKSB8fCAhalF1ZXJ5LmlzRnVuY3Rpb24oIGZuMiApICkge1xuXHRcdHJldHVybiBvbGRUb2dnbGUuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHR9XG5cdG1pZ3JhdGVXYXJuKFwialF1ZXJ5LmZuLnRvZ2dsZShoYW5kbGVyLCBoYW5kbGVyLi4uKSBpcyBkZXByZWNhdGVkXCIpO1xuXG5cdC8vIFNhdmUgcmVmZXJlbmNlIHRvIGFyZ3VtZW50cyBmb3IgYWNjZXNzIGluIGNsb3N1cmVcblx0dmFyIGFyZ3MgPSBhcmd1bWVudHMsXG5cdFx0Z3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKyxcblx0XHRpID0gMCxcblx0XHR0b2dnbGVyID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0Ly8gRmlndXJlIG91dCB3aGljaCBmdW5jdGlvbiB0byBleGVjdXRlXG5cdFx0XHR2YXIgbGFzdFRvZ2dsZSA9ICggalF1ZXJ5Ll9kYXRhKCB0aGlzLCBcImxhc3RUb2dnbGVcIiArIGZuLmd1aWQgKSB8fCAwICkgJSBpO1xuXHRcdFx0alF1ZXJ5Ll9kYXRhKCB0aGlzLCBcImxhc3RUb2dnbGVcIiArIGZuLmd1aWQsIGxhc3RUb2dnbGUgKyAxICk7XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IGNsaWNrcyBzdG9wXG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0XHQvLyBhbmQgZXhlY3V0ZSB0aGUgZnVuY3Rpb25cblx0XHRcdHJldHVybiBhcmdzWyBsYXN0VG9nZ2xlIF0uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIHx8IGZhbHNlO1xuXHRcdH07XG5cblx0Ly8gbGluayBhbGwgdGhlIGZ1bmN0aW9ucywgc28gYW55IG9mIHRoZW0gY2FuIHVuYmluZCB0aGlzIGNsaWNrIGhhbmRsZXJcblx0dG9nZ2xlci5ndWlkID0gZ3VpZDtcblx0d2hpbGUgKCBpIDwgYXJncy5sZW5ndGggKSB7XG5cdFx0YXJnc1sgaSsrIF0uZ3VpZCA9IGd1aWQ7XG5cdH1cblxuXHRyZXR1cm4gdGhpcy5jbGljayggdG9nZ2xlciApO1xufTtcblxualF1ZXJ5LmZuLmxpdmUgPSBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRtaWdyYXRlV2FybihcImpRdWVyeS5mbi5saXZlKCkgaXMgZGVwcmVjYXRlZFwiKTtcblx0aWYgKCBvbGRMaXZlICkge1xuXHRcdHJldHVybiBvbGRMaXZlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0fVxuXHRqUXVlcnkoIHRoaXMuY29udGV4dCApLm9uKCB0eXBlcywgdGhpcy5zZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZm4uZGllID0gZnVuY3Rpb24oIHR5cGVzLCBmbiApIHtcblx0bWlncmF0ZVdhcm4oXCJqUXVlcnkuZm4uZGllKCkgaXMgZGVwcmVjYXRlZFwiKTtcblx0aWYgKCBvbGREaWUgKSB7XG5cdFx0cmV0dXJuIG9sZERpZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdH1cblx0alF1ZXJ5KCB0aGlzLmNvbnRleHQgKS5vZmYoIHR5cGVzLCB0aGlzLnNlbGVjdG9yIHx8IFwiKipcIiwgZm4gKTtcblx0cmV0dXJuIHRoaXM7XG59O1xuXG4vLyBUdXJuIGdsb2JhbCBldmVudHMgaW50byBkb2N1bWVudC10cmlnZ2VyZWQgZXZlbnRzXG5qUXVlcnkuZXZlbnQudHJpZ2dlciA9IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICApe1xuXHRpZiAoICFlbGVtICYmICFyYWpheEV2ZW50LnRlc3QoIGV2ZW50ICkgKSB7XG5cdFx0bWlncmF0ZVdhcm4oIFwiR2xvYmFsIGV2ZW50cyBhcmUgdW5kb2N1bWVudGVkIGFuZCBkZXByZWNhdGVkXCIgKTtcblx0fVxuXHRyZXR1cm4gZXZlbnRUcmlnZ2VyLmNhbGwoIHRoaXMsICBldmVudCwgZGF0YSwgZWxlbSB8fCBkb2N1bWVudCwgb25seUhhbmRsZXJzICApO1xufTtcbmpRdWVyeS5lYWNoKCBhamF4RXZlbnRzLnNwbGl0KFwifFwiKSxcblx0ZnVuY3Rpb24oIF8sIG5hbWUgKSB7XG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIG5hbWUgXSA9IHtcblx0XHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xuXG5cdFx0XHRcdC8vIFRoZSBkb2N1bWVudCBuZWVkcyBubyBzaGltbWluZzsgbXVzdCBiZSAhPT0gZm9yIG9sZElFXG5cdFx0XHRcdGlmICggZWxlbSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZG9jdW1lbnQsIG5hbWUgKyBcIi5cIiArIGpRdWVyeS5ndWlkLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBuYW1lLCBudWxsLCBlbGVtLCB0cnVlICk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0alF1ZXJ5Ll9kYXRhKCB0aGlzLCBuYW1lLCBqUXVlcnkuZ3VpZCsrICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fSxcblx0XHRcdHRlYXJkb3duOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzICE9PSBkb2N1bWVudCApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBkb2N1bWVudCwgbmFtZSArIFwiLlwiICsgalF1ZXJ5Ll9kYXRhKCB0aGlzLCBuYW1lICkgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuKTtcblxuXG59KSggalF1ZXJ5LCB3aW5kb3cgKTtcbiIsIlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBPYmplY3QuY3JlYXRlJiYoT2JqZWN0LmNyZWF0ZT1mdW5jdGlvbihmKXtmdW5jdGlvbiBnKCl7fWcucHJvdG90eXBlPWY7cmV0dXJuIG5ldyBnfSk7XG4oZnVuY3Rpb24oZixnLGspe3ZhciBsPXtpbml0OmZ1bmN0aW9uKGEsYil7dGhpcy4kZWxlbT1mKGIpO3RoaXMub3B0aW9ucz1mLmV4dGVuZCh7fSxmLmZuLm93bENhcm91c2VsLm9wdGlvbnMsdGhpcy4kZWxlbS5kYXRhKCksYSk7dGhpcy51c2VyT3B0aW9ucz1hO3RoaXMubG9hZENvbnRlbnQoKX0sbG9hZENvbnRlbnQ6ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3ZhciBkLGU9XCJcIjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5vcHRpb25zLmpzb25TdWNjZXNzKWIub3B0aW9ucy5qc29uU3VjY2Vzcy5hcHBseSh0aGlzLFthXSk7ZWxzZXtmb3IoZCBpbiBhLm93bClhLm93bC5oYXNPd25Qcm9wZXJ0eShkKSYmKGUrPWEub3dsW2RdLml0ZW0pO2IuJGVsZW0uaHRtbChlKX1iLmxvZ0luKCl9dmFyIGI9dGhpcyxlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLm9wdGlvbnMuYmVmb3JlSW5pdCYmYi5vcHRpb25zLmJlZm9yZUluaXQuYXBwbHkodGhpcyxbYi4kZWxlbV0pO1wic3RyaW5nXCI9PT10eXBlb2YgYi5vcHRpb25zLmpzb25QYXRoP1xuKGU9Yi5vcHRpb25zLmpzb25QYXRoLGYuZ2V0SlNPTihlLGEpKTpiLmxvZ0luKCl9LGxvZ0luOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbS5kYXRhKFwib3dsLW9yaWdpbmFsU3R5bGVzXCIsdGhpcy4kZWxlbS5hdHRyKFwic3R5bGVcIikpO3RoaXMuJGVsZW0uZGF0YShcIm93bC1vcmlnaW5hbENsYXNzZXNcIix0aGlzLiRlbGVtLmF0dHIoXCJjbGFzc1wiKSk7dGhpcy4kZWxlbS5jc3Moe29wYWNpdHk6MH0pO3RoaXMub3JpZ25hbEl0ZW1zPXRoaXMub3B0aW9ucy5pdGVtczt0aGlzLmNoZWNrQnJvd3NlcigpO3RoaXMud3JhcHBlcldpZHRoPTA7dGhpcy5jaGVja1Zpc2libGU9bnVsbDt0aGlzLnNldFZhcnMoKX0sc2V0VmFyczpmdW5jdGlvbigpe2lmKDA9PT10aGlzLiRlbGVtLmNoaWxkcmVuKCkubGVuZ3RoKXJldHVybiExO3RoaXMuYmFzZUNsYXNzKCk7dGhpcy5ldmVudFR5cGVzKCk7dGhpcy4kdXNlckl0ZW1zPXRoaXMuJGVsZW0uY2hpbGRyZW4oKTt0aGlzLml0ZW1zQW1vdW50PXRoaXMuJHVzZXJJdGVtcy5sZW5ndGg7XG50aGlzLndyYXBJdGVtcygpO3RoaXMuJG93bEl0ZW1zPXRoaXMuJGVsZW0uZmluZChcIi5vd2wtaXRlbVwiKTt0aGlzLiRvd2xXcmFwcGVyPXRoaXMuJGVsZW0uZmluZChcIi5vd2wtd3JhcHBlclwiKTt0aGlzLnBsYXlEaXJlY3Rpb249XCJuZXh0XCI7dGhpcy5wcmV2SXRlbT0wO3RoaXMucHJldkFycj1bMF07dGhpcy5jdXJyZW50SXRlbT0wO3RoaXMuY3VzdG9tRXZlbnRzKCk7dGhpcy5vblN0YXJ0dXAoKX0sb25TdGFydHVwOmZ1bmN0aW9uKCl7dGhpcy51cGRhdGVJdGVtcygpO3RoaXMuY2FsY3VsYXRlQWxsKCk7dGhpcy5idWlsZENvbnRyb2xzKCk7dGhpcy51cGRhdGVDb250cm9scygpO3RoaXMucmVzcG9uc2UoKTt0aGlzLm1vdmVFdmVudHMoKTt0aGlzLnN0b3BPbkhvdmVyKCk7dGhpcy5vd2xTdGF0dXMoKTshMSE9PXRoaXMub3B0aW9ucy50cmFuc2l0aW9uU3R5bGUmJnRoaXMudHJhbnNpdGlvblR5cGVzKHRoaXMub3B0aW9ucy50cmFuc2l0aW9uU3R5bGUpOyEwPT09dGhpcy5vcHRpb25zLmF1dG9QbGF5JiZcbih0aGlzLm9wdGlvbnMuYXV0b1BsYXk9NUUzKTt0aGlzLnBsYXkoKTt0aGlzLiRlbGVtLmZpbmQoXCIub3dsLXdyYXBwZXJcIikuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIik7dGhpcy4kZWxlbS5pcyhcIjp2aXNpYmxlXCIpP3RoaXMuJGVsZW0uY3NzKFwib3BhY2l0eVwiLDEpOnRoaXMud2F0Y2hWaXNpYmlsaXR5KCk7dGhpcy5vbnN0YXJ0dXA9ITE7dGhpcy5lYWNoTW92ZVVwZGF0ZSgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0aGlzLm9wdGlvbnMuYWZ0ZXJJbml0JiZ0aGlzLm9wdGlvbnMuYWZ0ZXJJbml0LmFwcGx5KHRoaXMsW3RoaXMuJGVsZW1dKX0sZWFjaE1vdmVVcGRhdGU6ZnVuY3Rpb24oKXshMD09PXRoaXMub3B0aW9ucy5sYXp5TG9hZCYmdGhpcy5sYXp5TG9hZCgpOyEwPT09dGhpcy5vcHRpb25zLmF1dG9IZWlnaHQmJnRoaXMuYXV0b0hlaWdodCgpO3RoaXMub25WaXNpYmxlSXRlbXMoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdGhpcy5vcHRpb25zLmFmdGVyQWN0aW9uJiZ0aGlzLm9wdGlvbnMuYWZ0ZXJBY3Rpb24uYXBwbHkodGhpcyxcblt0aGlzLiRlbGVtXSl9LHVwZGF0ZVZhcnM6ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdGhpcy5vcHRpb25zLmJlZm9yZVVwZGF0ZSYmdGhpcy5vcHRpb25zLmJlZm9yZVVwZGF0ZS5hcHBseSh0aGlzLFt0aGlzLiRlbGVtXSk7dGhpcy53YXRjaFZpc2liaWxpdHkoKTt0aGlzLnVwZGF0ZUl0ZW1zKCk7dGhpcy5jYWxjdWxhdGVBbGwoKTt0aGlzLnVwZGF0ZVBvc2l0aW9uKCk7dGhpcy51cGRhdGVDb250cm9scygpO3RoaXMuZWFjaE1vdmVVcGRhdGUoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdGhpcy5vcHRpb25zLmFmdGVyVXBkYXRlJiZ0aGlzLm9wdGlvbnMuYWZ0ZXJVcGRhdGUuYXBwbHkodGhpcyxbdGhpcy4kZWxlbV0pfSxyZWxvYWQ6ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2cuc2V0VGltZW91dChmdW5jdGlvbigpe2EudXBkYXRlVmFycygpfSwwKX0sd2F0Y2hWaXNpYmlsaXR5OmZ1bmN0aW9uKCl7dmFyIGE9dGhpcztpZighMT09PWEuJGVsZW0uaXMoXCI6dmlzaWJsZVwiKSlhLiRlbGVtLmNzcyh7b3BhY2l0eTowfSksXG5nLmNsZWFySW50ZXJ2YWwoYS5hdXRvUGxheUludGVydmFsKSxnLmNsZWFySW50ZXJ2YWwoYS5jaGVja1Zpc2libGUpO2Vsc2UgcmV0dXJuITE7YS5jaGVja1Zpc2libGU9Zy5zZXRJbnRlcnZhbChmdW5jdGlvbigpe2EuJGVsZW0uaXMoXCI6dmlzaWJsZVwiKSYmKGEucmVsb2FkKCksYS4kZWxlbS5hbmltYXRlKHtvcGFjaXR5OjF9LDIwMCksZy5jbGVhckludGVydmFsKGEuY2hlY2tWaXNpYmxlKSl9LDUwMCl9LHdyYXBJdGVtczpmdW5jdGlvbigpe3RoaXMuJHVzZXJJdGVtcy53cmFwQWxsKCc8ZGl2IGNsYXNzPVwib3dsLXdyYXBwZXJcIj4nKS53cmFwKCc8ZGl2IGNsYXNzPVwib3dsLWl0ZW1cIj48L2Rpdj4nKTt0aGlzLiRlbGVtLmZpbmQoXCIub3dsLXdyYXBwZXJcIikud3JhcCgnPGRpdiBjbGFzcz1cIm93bC13cmFwcGVyLW91dGVyXCI+Jyk7dGhpcy53cmFwcGVyT3V0ZXI9dGhpcy4kZWxlbS5maW5kKFwiLm93bC13cmFwcGVyLW91dGVyXCIpO3RoaXMuJGVsZW0uY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIil9LFxuYmFzZUNsYXNzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy4kZWxlbS5oYXNDbGFzcyh0aGlzLm9wdGlvbnMuYmFzZUNsYXNzKSxiPXRoaXMuJGVsZW0uaGFzQ2xhc3ModGhpcy5vcHRpb25zLnRoZW1lKTthfHx0aGlzLiRlbGVtLmFkZENsYXNzKHRoaXMub3B0aW9ucy5iYXNlQ2xhc3MpO2J8fHRoaXMuJGVsZW0uYWRkQ2xhc3ModGhpcy5vcHRpb25zLnRoZW1lKX0sdXBkYXRlSXRlbXM6ZnVuY3Rpb24oKXt2YXIgYSxiO2lmKCExPT09dGhpcy5vcHRpb25zLnJlc3BvbnNpdmUpcmV0dXJuITE7aWYoITA9PT10aGlzLm9wdGlvbnMuc2luZ2xlSXRlbSlyZXR1cm4gdGhpcy5vcHRpb25zLml0ZW1zPXRoaXMub3JpZ25hbEl0ZW1zPTEsdGhpcy5vcHRpb25zLml0ZW1zQ3VzdG9tPSExLHRoaXMub3B0aW9ucy5pdGVtc0Rlc2t0b3A9ITEsdGhpcy5vcHRpb25zLml0ZW1zRGVza3RvcFNtYWxsPSExLHRoaXMub3B0aW9ucy5pdGVtc1RhYmxldD0hMSx0aGlzLm9wdGlvbnMuaXRlbXNUYWJsZXRTbWFsbD1cbiExLHRoaXMub3B0aW9ucy5pdGVtc01vYmlsZT0hMTthPWYodGhpcy5vcHRpb25zLnJlc3BvbnNpdmVCYXNlV2lkdGgpLndpZHRoKCk7YT4odGhpcy5vcHRpb25zLml0ZW1zRGVza3RvcFswXXx8dGhpcy5vcmlnbmFsSXRlbXMpJiYodGhpcy5vcHRpb25zLml0ZW1zPXRoaXMub3JpZ25hbEl0ZW1zKTtpZighMSE9PXRoaXMub3B0aW9ucy5pdGVtc0N1c3RvbSlmb3IodGhpcy5vcHRpb25zLml0ZW1zQ3VzdG9tLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYVswXS1iWzBdfSksYj0wO2I8dGhpcy5vcHRpb25zLml0ZW1zQ3VzdG9tLmxlbmd0aDtiKz0xKXRoaXMub3B0aW9ucy5pdGVtc0N1c3RvbVtiXVswXTw9YSYmKHRoaXMub3B0aW9ucy5pdGVtcz10aGlzLm9wdGlvbnMuaXRlbXNDdXN0b21bYl1bMV0pO2Vsc2UgYTw9dGhpcy5vcHRpb25zLml0ZW1zRGVza3RvcFswXSYmITEhPT10aGlzLm9wdGlvbnMuaXRlbXNEZXNrdG9wJiYodGhpcy5vcHRpb25zLml0ZW1zPXRoaXMub3B0aW9ucy5pdGVtc0Rlc2t0b3BbMV0pLFxuYTw9dGhpcy5vcHRpb25zLml0ZW1zRGVza3RvcFNtYWxsWzBdJiYhMSE9PXRoaXMub3B0aW9ucy5pdGVtc0Rlc2t0b3BTbWFsbCYmKHRoaXMub3B0aW9ucy5pdGVtcz10aGlzLm9wdGlvbnMuaXRlbXNEZXNrdG9wU21hbGxbMV0pLGE8PXRoaXMub3B0aW9ucy5pdGVtc1RhYmxldFswXSYmITEhPT10aGlzLm9wdGlvbnMuaXRlbXNUYWJsZXQmJih0aGlzLm9wdGlvbnMuaXRlbXM9dGhpcy5vcHRpb25zLml0ZW1zVGFibGV0WzFdKSxhPD10aGlzLm9wdGlvbnMuaXRlbXNUYWJsZXRTbWFsbFswXSYmITEhPT10aGlzLm9wdGlvbnMuaXRlbXNUYWJsZXRTbWFsbCYmKHRoaXMub3B0aW9ucy5pdGVtcz10aGlzLm9wdGlvbnMuaXRlbXNUYWJsZXRTbWFsbFsxXSksYTw9dGhpcy5vcHRpb25zLml0ZW1zTW9iaWxlWzBdJiYhMSE9PXRoaXMub3B0aW9ucy5pdGVtc01vYmlsZSYmKHRoaXMub3B0aW9ucy5pdGVtcz10aGlzLm9wdGlvbnMuaXRlbXNNb2JpbGVbMV0pO3RoaXMub3B0aW9ucy5pdGVtcz50aGlzLml0ZW1zQW1vdW50JiZcbiEwPT09dGhpcy5vcHRpb25zLml0ZW1zU2NhbGVVcCYmKHRoaXMub3B0aW9ucy5pdGVtcz10aGlzLml0ZW1zQW1vdW50KX0scmVzcG9uc2U6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGIsZTtpZighMCE9PWEub3B0aW9ucy5yZXNwb25zaXZlKXJldHVybiExO2U9ZihnKS53aWR0aCgpO2EucmVzaXplcj1mdW5jdGlvbigpe2YoZykud2lkdGgoKSE9PWUmJighMSE9PWEub3B0aW9ucy5hdXRvUGxheSYmZy5jbGVhckludGVydmFsKGEuYXV0b1BsYXlJbnRlcnZhbCksZy5jbGVhclRpbWVvdXQoYiksYj1nLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlPWYoZykud2lkdGgoKTthLnVwZGF0ZVZhcnMoKX0sYS5vcHRpb25zLnJlc3BvbnNpdmVSZWZyZXNoUmF0ZSkpfTtmKGcpLnJlc2l6ZShhLnJlc2l6ZXIpfSx1cGRhdGVQb3NpdGlvbjpmdW5jdGlvbigpe3RoaXMuanVtcFRvKHRoaXMuY3VycmVudEl0ZW0pOyExIT09dGhpcy5vcHRpb25zLmF1dG9QbGF5JiZ0aGlzLmNoZWNrQXAoKX0sYXBwZW5kSXRlbXNTaXplczpmdW5jdGlvbigpe3ZhciBhPVxudGhpcyxiPTAsZT1hLml0ZW1zQW1vdW50LWEub3B0aW9ucy5pdGVtczthLiRvd2xJdGVtcy5lYWNoKGZ1bmN0aW9uKGMpe3ZhciBkPWYodGhpcyk7ZC5jc3Moe3dpZHRoOmEuaXRlbVdpZHRofSkuZGF0YShcIm93bC1pdGVtXCIsTnVtYmVyKGMpKTtpZigwPT09YyVhLm9wdGlvbnMuaXRlbXN8fGM9PT1lKWM+ZXx8KGIrPTEpO2QuZGF0YShcIm93bC1yb3VuZFBhZ2VzXCIsYil9KX0sYXBwZW5kV3JhcHBlclNpemVzOmZ1bmN0aW9uKCl7dGhpcy4kb3dsV3JhcHBlci5jc3Moe3dpZHRoOnRoaXMuJG93bEl0ZW1zLmxlbmd0aCp0aGlzLml0ZW1XaWR0aCoyLGxlZnQ6MH0pO3RoaXMuYXBwZW5kSXRlbXNTaXplcygpfSxjYWxjdWxhdGVBbGw6ZnVuY3Rpb24oKXt0aGlzLmNhbGN1bGF0ZVdpZHRoKCk7dGhpcy5hcHBlbmRXcmFwcGVyU2l6ZXMoKTt0aGlzLmxvb3BzKCk7dGhpcy5tYXgoKX0sY2FsY3VsYXRlV2lkdGg6ZnVuY3Rpb24oKXt0aGlzLml0ZW1XaWR0aD1NYXRoLnJvdW5kKHRoaXMuJGVsZW0ud2lkdGgoKS9cbnRoaXMub3B0aW9ucy5pdGVtcyl9LG1heDpmdW5jdGlvbigpe3ZhciBhPS0xKih0aGlzLml0ZW1zQW1vdW50KnRoaXMuaXRlbVdpZHRoLXRoaXMub3B0aW9ucy5pdGVtcyp0aGlzLml0ZW1XaWR0aCk7dGhpcy5vcHRpb25zLml0ZW1zPnRoaXMuaXRlbXNBbW91bnQ/dGhpcy5tYXhpbXVtUGl4ZWxzPWE9dGhpcy5tYXhpbXVtSXRlbT0wOih0aGlzLm1heGltdW1JdGVtPXRoaXMuaXRlbXNBbW91bnQtdGhpcy5vcHRpb25zLml0ZW1zLHRoaXMubWF4aW11bVBpeGVscz1hKTtyZXR1cm4gYX0sbWluOmZ1bmN0aW9uKCl7cmV0dXJuIDB9LGxvb3BzOmZ1bmN0aW9uKCl7dmFyIGE9MCxiPTAsZSxjO3RoaXMucG9zaXRpb25zSW5BcnJheT1bMF07dGhpcy5wYWdlc0luQXJyYXk9W107Zm9yKGU9MDtlPHRoaXMuaXRlbXNBbW91bnQ7ZSs9MSliKz10aGlzLml0ZW1XaWR0aCx0aGlzLnBvc2l0aW9uc0luQXJyYXkucHVzaCgtYiksITA9PT10aGlzLm9wdGlvbnMuc2Nyb2xsUGVyUGFnZSYmKGM9Zih0aGlzLiRvd2xJdGVtc1tlXSksXG5jPWMuZGF0YShcIm93bC1yb3VuZFBhZ2VzXCIpLGMhPT1hJiYodGhpcy5wYWdlc0luQXJyYXlbYV09dGhpcy5wb3NpdGlvbnNJbkFycmF5W2VdLGE9YykpfSxidWlsZENvbnRyb2xzOmZ1bmN0aW9uKCl7aWYoITA9PT10aGlzLm9wdGlvbnMubmF2aWdhdGlvbnx8ITA9PT10aGlzLm9wdGlvbnMucGFnaW5hdGlvbil0aGlzLm93bENvbnRyb2xzPWYoJzxkaXYgY2xhc3M9XCJvd2wtY29udHJvbHNcIi8+JykudG9nZ2xlQ2xhc3MoXCJjbGlja2FibGVcIiwhdGhpcy5icm93c2VyLmlzVG91Y2gpLmFwcGVuZFRvKHRoaXMuJGVsZW0pOyEwPT09dGhpcy5vcHRpb25zLnBhZ2luYXRpb24mJnRoaXMuYnVpbGRQYWdpbmF0aW9uKCk7ITA9PT10aGlzLm9wdGlvbnMubmF2aWdhdGlvbiYmdGhpcy5idWlsZEJ1dHRvbnMoKX0sYnVpbGRCdXR0b25zOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWYoJzxkaXYgY2xhc3M9XCJvd2wtYnV0dG9uc1wiLz4nKTthLm93bENvbnRyb2xzLmFwcGVuZChiKTthLmJ1dHRvblByZXY9XG5mKFwiPGRpdi8+XCIse1wiY2xhc3NcIjpcIm93bC1wcmV2XCIsaHRtbDphLm9wdGlvbnMubmF2aWdhdGlvblRleHRbMF18fFwiXCJ9KTthLmJ1dHRvbk5leHQ9ZihcIjxkaXYvPlwiLHtcImNsYXNzXCI6XCJvd2wtbmV4dFwiLGh0bWw6YS5vcHRpb25zLm5hdmlnYXRpb25UZXh0WzFdfHxcIlwifSk7Yi5hcHBlbmQoYS5idXR0b25QcmV2KS5hcHBlbmQoYS5idXR0b25OZXh0KTtiLm9uKFwidG91Y2hzdGFydC5vd2xDb250cm9scyBtb3VzZWRvd24ub3dsQ29udHJvbHNcIiwnZGl2W2NsYXNzXj1cIm93bFwiXScsZnVuY3Rpb24oYSl7YS5wcmV2ZW50RGVmYXVsdCgpfSk7Yi5vbihcInRvdWNoZW5kLm93bENvbnRyb2xzIG1vdXNldXAub3dsQ29udHJvbHNcIiwnZGl2W2NsYXNzXj1cIm93bFwiXScsZnVuY3Rpb24oYil7Yi5wcmV2ZW50RGVmYXVsdCgpO2YodGhpcykuaGFzQ2xhc3MoXCJvd2wtbmV4dFwiKT9hLm5leHQoKTphLnByZXYoKX0pfSxidWlsZFBhZ2luYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EucGFnaW5hdGlvbldyYXBwZXI9XG5mKCc8ZGl2IGNsYXNzPVwib3dsLXBhZ2luYXRpb25cIi8+Jyk7YS5vd2xDb250cm9scy5hcHBlbmQoYS5wYWdpbmF0aW9uV3JhcHBlcik7YS5wYWdpbmF0aW9uV3JhcHBlci5vbihcInRvdWNoZW5kLm93bENvbnRyb2xzIG1vdXNldXAub3dsQ29udHJvbHNcIixcIi5vd2wtcGFnZVwiLGZ1bmN0aW9uKGIpe2IucHJldmVudERlZmF1bHQoKTtOdW1iZXIoZih0aGlzKS5kYXRhKFwib3dsLXBhZ2VcIikpIT09YS5jdXJyZW50SXRlbSYmYS5nb1RvKE51bWJlcihmKHRoaXMpLmRhdGEoXCJvd2wtcGFnZVwiKSksITApfSl9LHVwZGF0ZVBhZ2luYXRpb246ZnVuY3Rpb24oKXt2YXIgYSxiLGUsYyxkLGc7aWYoITE9PT10aGlzLm9wdGlvbnMucGFnaW5hdGlvbilyZXR1cm4hMTt0aGlzLnBhZ2luYXRpb25XcmFwcGVyLmh0bWwoXCJcIik7YT0wO2I9dGhpcy5pdGVtc0Ftb3VudC10aGlzLml0ZW1zQW1vdW50JXRoaXMub3B0aW9ucy5pdGVtcztmb3IoYz0wO2M8dGhpcy5pdGVtc0Ftb3VudDtjKz0xKTA9PT1jJXRoaXMub3B0aW9ucy5pdGVtcyYmXG4oYSs9MSxiPT09YyYmKGU9dGhpcy5pdGVtc0Ftb3VudC10aGlzLm9wdGlvbnMuaXRlbXMpLGQ9ZihcIjxkaXYvPlwiLHtcImNsYXNzXCI6XCJvd2wtcGFnZVwifSksZz1mKFwiPHNwYW4+PC9zcGFuPlwiLHt0ZXh0OiEwPT09dGhpcy5vcHRpb25zLnBhZ2luYXRpb25OdW1iZXJzP2E6XCJcIixcImNsYXNzXCI6ITA9PT10aGlzLm9wdGlvbnMucGFnaW5hdGlvbk51bWJlcnM/XCJvd2wtbnVtYmVyc1wiOlwiXCJ9KSxkLmFwcGVuZChnKSxkLmRhdGEoXCJvd2wtcGFnZVwiLGI9PT1jP2U6YyksZC5kYXRhKFwib3dsLXJvdW5kUGFnZXNcIixhKSx0aGlzLnBhZ2luYXRpb25XcmFwcGVyLmFwcGVuZChkKSk7dGhpcy5jaGVja1BhZ2luYXRpb24oKX0sY2hlY2tQYWdpbmF0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcztpZighMT09PWEub3B0aW9ucy5wYWdpbmF0aW9uKXJldHVybiExO2EucGFnaW5hdGlvbldyYXBwZXIuZmluZChcIi5vd2wtcGFnZVwiKS5lYWNoKGZ1bmN0aW9uKCl7Zih0aGlzKS5kYXRhKFwib3dsLXJvdW5kUGFnZXNcIik9PT1cbmYoYS4kb3dsSXRlbXNbYS5jdXJyZW50SXRlbV0pLmRhdGEoXCJvd2wtcm91bmRQYWdlc1wiKSYmKGEucGFnaW5hdGlvbldyYXBwZXIuZmluZChcIi5vd2wtcGFnZVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKSxmKHRoaXMpLmFkZENsYXNzKFwiYWN0aXZlXCIpKX0pfSxjaGVja05hdmlnYXRpb246ZnVuY3Rpb24oKXtpZighMT09PXRoaXMub3B0aW9ucy5uYXZpZ2F0aW9uKXJldHVybiExOyExPT09dGhpcy5vcHRpb25zLnJld2luZE5hdiYmKDA9PT10aGlzLmN1cnJlbnRJdGVtJiYwPT09dGhpcy5tYXhpbXVtSXRlbT8odGhpcy5idXR0b25QcmV2LmFkZENsYXNzKFwiZGlzYWJsZWRcIiksdGhpcy5idXR0b25OZXh0LmFkZENsYXNzKFwiZGlzYWJsZWRcIikpOjA9PT10aGlzLmN1cnJlbnRJdGVtJiYwIT09dGhpcy5tYXhpbXVtSXRlbT8odGhpcy5idXR0b25QcmV2LmFkZENsYXNzKFwiZGlzYWJsZWRcIiksdGhpcy5idXR0b25OZXh0LnJlbW92ZUNsYXNzKFwiZGlzYWJsZWRcIikpOnRoaXMuY3VycmVudEl0ZW09PT1cbnRoaXMubWF4aW11bUl0ZW0/KHRoaXMuYnV0dG9uUHJldi5yZW1vdmVDbGFzcyhcImRpc2FibGVkXCIpLHRoaXMuYnV0dG9uTmV4dC5hZGRDbGFzcyhcImRpc2FibGVkXCIpKTowIT09dGhpcy5jdXJyZW50SXRlbSYmdGhpcy5jdXJyZW50SXRlbSE9PXRoaXMubWF4aW11bUl0ZW0mJih0aGlzLmJ1dHRvblByZXYucmVtb3ZlQ2xhc3MoXCJkaXNhYmxlZFwiKSx0aGlzLmJ1dHRvbk5leHQucmVtb3ZlQ2xhc3MoXCJkaXNhYmxlZFwiKSkpfSx1cGRhdGVDb250cm9sczpmdW5jdGlvbigpe3RoaXMudXBkYXRlUGFnaW5hdGlvbigpO3RoaXMuY2hlY2tOYXZpZ2F0aW9uKCk7dGhpcy5vd2xDb250cm9scyYmKHRoaXMub3B0aW9ucy5pdGVtcz49dGhpcy5pdGVtc0Ftb3VudD90aGlzLm93bENvbnRyb2xzLmhpZGUoKTp0aGlzLm93bENvbnRyb2xzLnNob3coKSl9LGRlc3Ryb3lDb250cm9sczpmdW5jdGlvbigpe3RoaXMub3dsQ29udHJvbHMmJnRoaXMub3dsQ29udHJvbHMucmVtb3ZlKCl9LG5leHQ6ZnVuY3Rpb24oYSl7aWYodGhpcy5pc1RyYW5zaXRpb24pcmV0dXJuITE7XG50aGlzLmN1cnJlbnRJdGVtKz0hMD09PXRoaXMub3B0aW9ucy5zY3JvbGxQZXJQYWdlP3RoaXMub3B0aW9ucy5pdGVtczoxO2lmKHRoaXMuY3VycmVudEl0ZW0+dGhpcy5tYXhpbXVtSXRlbSsoITA9PT10aGlzLm9wdGlvbnMuc2Nyb2xsUGVyUGFnZT90aGlzLm9wdGlvbnMuaXRlbXMtMTowKSlpZighMD09PXRoaXMub3B0aW9ucy5yZXdpbmROYXYpdGhpcy5jdXJyZW50SXRlbT0wLGE9XCJyZXdpbmRcIjtlbHNlIHJldHVybiB0aGlzLmN1cnJlbnRJdGVtPXRoaXMubWF4aW11bUl0ZW0sITE7dGhpcy5nb1RvKHRoaXMuY3VycmVudEl0ZW0sYSl9LHByZXY6ZnVuY3Rpb24oYSl7aWYodGhpcy5pc1RyYW5zaXRpb24pcmV0dXJuITE7dGhpcy5jdXJyZW50SXRlbT0hMD09PXRoaXMub3B0aW9ucy5zY3JvbGxQZXJQYWdlJiYwPHRoaXMuY3VycmVudEl0ZW0mJnRoaXMuY3VycmVudEl0ZW08dGhpcy5vcHRpb25zLml0ZW1zPzA6dGhpcy5jdXJyZW50SXRlbS0oITA9PT10aGlzLm9wdGlvbnMuc2Nyb2xsUGVyUGFnZT9cbnRoaXMub3B0aW9ucy5pdGVtczoxKTtpZigwPnRoaXMuY3VycmVudEl0ZW0paWYoITA9PT10aGlzLm9wdGlvbnMucmV3aW5kTmF2KXRoaXMuY3VycmVudEl0ZW09dGhpcy5tYXhpbXVtSXRlbSxhPVwicmV3aW5kXCI7ZWxzZSByZXR1cm4gdGhpcy5jdXJyZW50SXRlbT0wLCExO3RoaXMuZ29Ubyh0aGlzLmN1cnJlbnRJdGVtLGEpfSxnb1RvOmZ1bmN0aW9uKGEsYixlKXt2YXIgYz10aGlzO2lmKGMuaXNUcmFuc2l0aW9uKXJldHVybiExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLm9wdGlvbnMuYmVmb3JlTW92ZSYmYy5vcHRpb25zLmJlZm9yZU1vdmUuYXBwbHkodGhpcyxbYy4kZWxlbV0pO2E+PWMubWF4aW11bUl0ZW0/YT1jLm1heGltdW1JdGVtOjA+PWEmJihhPTApO2MuY3VycmVudEl0ZW09Yy5vd2wuY3VycmVudEl0ZW09YTtpZighMSE9PWMub3B0aW9ucy50cmFuc2l0aW9uU3R5bGUmJlwiZHJhZ1wiIT09ZSYmMT09PWMub3B0aW9ucy5pdGVtcyYmITA9PT1jLmJyb3dzZXIuc3VwcG9ydDNkKXJldHVybiBjLnN3YXBTcGVlZCgwKSxcbiEwPT09Yy5icm93c2VyLnN1cHBvcnQzZD9jLnRyYW5zaXRpb24zZChjLnBvc2l0aW9uc0luQXJyYXlbYV0pOmMuY3NzMnNsaWRlKGMucG9zaXRpb25zSW5BcnJheVthXSwxKSxjLmFmdGVyR28oKSxjLnNpbmdsZUl0ZW1UcmFuc2l0aW9uKCksITE7YT1jLnBvc2l0aW9uc0luQXJyYXlbYV07ITA9PT1jLmJyb3dzZXIuc3VwcG9ydDNkPyhjLmlzQ3NzM0ZpbmlzaD0hMSwhMD09PWI/KGMuc3dhcFNwZWVkKFwicGFnaW5hdGlvblNwZWVkXCIpLGcuc2V0VGltZW91dChmdW5jdGlvbigpe2MuaXNDc3MzRmluaXNoPSEwfSxjLm9wdGlvbnMucGFnaW5hdGlvblNwZWVkKSk6XCJyZXdpbmRcIj09PWI/KGMuc3dhcFNwZWVkKGMub3B0aW9ucy5yZXdpbmRTcGVlZCksZy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5pc0NzczNGaW5pc2g9ITB9LGMub3B0aW9ucy5yZXdpbmRTcGVlZCkpOihjLnN3YXBTcGVlZChcInNsaWRlU3BlZWRcIiksZy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5pc0NzczNGaW5pc2g9ITB9LFxuYy5vcHRpb25zLnNsaWRlU3BlZWQpKSxjLnRyYW5zaXRpb24zZChhKSk6ITA9PT1iP2MuY3NzMnNsaWRlKGEsYy5vcHRpb25zLnBhZ2luYXRpb25TcGVlZCk6XCJyZXdpbmRcIj09PWI/Yy5jc3Myc2xpZGUoYSxjLm9wdGlvbnMucmV3aW5kU3BlZWQpOmMuY3NzMnNsaWRlKGEsYy5vcHRpb25zLnNsaWRlU3BlZWQpO2MuYWZ0ZXJHbygpfSxqdW1wVG86ZnVuY3Rpb24oYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIHRoaXMub3B0aW9ucy5iZWZvcmVNb3ZlJiZ0aGlzLm9wdGlvbnMuYmVmb3JlTW92ZS5hcHBseSh0aGlzLFt0aGlzLiRlbGVtXSk7YT49dGhpcy5tYXhpbXVtSXRlbXx8LTE9PT1hP2E9dGhpcy5tYXhpbXVtSXRlbTowPj1hJiYoYT0wKTt0aGlzLnN3YXBTcGVlZCgwKTshMD09PXRoaXMuYnJvd3Nlci5zdXBwb3J0M2Q/dGhpcy50cmFuc2l0aW9uM2QodGhpcy5wb3NpdGlvbnNJbkFycmF5W2FdKTp0aGlzLmNzczJzbGlkZSh0aGlzLnBvc2l0aW9uc0luQXJyYXlbYV0sMSk7dGhpcy5jdXJyZW50SXRlbT1cbnRoaXMub3dsLmN1cnJlbnRJdGVtPWE7dGhpcy5hZnRlckdvKCl9LGFmdGVyR286ZnVuY3Rpb24oKXt0aGlzLnByZXZBcnIucHVzaCh0aGlzLmN1cnJlbnRJdGVtKTt0aGlzLnByZXZJdGVtPXRoaXMub3dsLnByZXZJdGVtPXRoaXMucHJldkFyclt0aGlzLnByZXZBcnIubGVuZ3RoLTJdO3RoaXMucHJldkFyci5zaGlmdCgwKTt0aGlzLnByZXZJdGVtIT09dGhpcy5jdXJyZW50SXRlbSYmKHRoaXMuY2hlY2tQYWdpbmF0aW9uKCksdGhpcy5jaGVja05hdmlnYXRpb24oKSx0aGlzLmVhY2hNb3ZlVXBkYXRlKCksITEhPT10aGlzLm9wdGlvbnMuYXV0b1BsYXkmJnRoaXMuY2hlY2tBcCgpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgdGhpcy5vcHRpb25zLmFmdGVyTW92ZSYmdGhpcy5wcmV2SXRlbSE9PXRoaXMuY3VycmVudEl0ZW0mJnRoaXMub3B0aW9ucy5hZnRlck1vdmUuYXBwbHkodGhpcyxbdGhpcy4kZWxlbV0pfSxzdG9wOmZ1bmN0aW9uKCl7dGhpcy5hcFN0YXR1cz1cInN0b3BcIjtnLmNsZWFySW50ZXJ2YWwodGhpcy5hdXRvUGxheUludGVydmFsKX0sXG5jaGVja0FwOmZ1bmN0aW9uKCl7XCJzdG9wXCIhPT10aGlzLmFwU3RhdHVzJiZ0aGlzLnBsYXkoKX0scGxheTpmdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5hcFN0YXR1cz1cInBsYXlcIjtpZighMT09PWEub3B0aW9ucy5hdXRvUGxheSlyZXR1cm4hMTtnLmNsZWFySW50ZXJ2YWwoYS5hdXRvUGxheUludGVydmFsKTthLmF1dG9QbGF5SW50ZXJ2YWw9Zy5zZXRJbnRlcnZhbChmdW5jdGlvbigpe2EubmV4dCghMCl9LGEub3B0aW9ucy5hdXRvUGxheSl9LHN3YXBTcGVlZDpmdW5jdGlvbihhKXtcInNsaWRlU3BlZWRcIj09PWE/dGhpcy4kb3dsV3JhcHBlci5jc3ModGhpcy5hZGRDc3NTcGVlZCh0aGlzLm9wdGlvbnMuc2xpZGVTcGVlZCkpOlwicGFnaW5hdGlvblNwZWVkXCI9PT1hP3RoaXMuJG93bFdyYXBwZXIuY3NzKHRoaXMuYWRkQ3NzU3BlZWQodGhpcy5vcHRpb25zLnBhZ2luYXRpb25TcGVlZCkpOlwic3RyaW5nXCIhPT10eXBlb2YgYSYmdGhpcy4kb3dsV3JhcHBlci5jc3ModGhpcy5hZGRDc3NTcGVlZChhKSl9LFxuYWRkQ3NzU3BlZWQ6ZnVuY3Rpb24oYSl7cmV0dXJue1wiLXdlYmtpdC10cmFuc2l0aW9uXCI6XCJhbGwgXCIrYStcIm1zIGVhc2VcIixcIi1tb3otdHJhbnNpdGlvblwiOlwiYWxsIFwiK2ErXCJtcyBlYXNlXCIsXCItby10cmFuc2l0aW9uXCI6XCJhbGwgXCIrYStcIm1zIGVhc2VcIix0cmFuc2l0aW9uOlwiYWxsIFwiK2ErXCJtcyBlYXNlXCJ9fSxyZW1vdmVUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJue1wiLXdlYmtpdC10cmFuc2l0aW9uXCI6XCJcIixcIi1tb3otdHJhbnNpdGlvblwiOlwiXCIsXCItby10cmFuc2l0aW9uXCI6XCJcIix0cmFuc2l0aW9uOlwiXCJ9fSxkb1RyYW5zbGF0ZTpmdW5jdGlvbihhKXtyZXR1cm57XCItd2Via2l0LXRyYW5zZm9ybVwiOlwidHJhbnNsYXRlM2QoXCIrYStcInB4LCAwcHgsIDBweClcIixcIi1tb3otdHJhbnNmb3JtXCI6XCJ0cmFuc2xhdGUzZChcIithK1wicHgsIDBweCwgMHB4KVwiLFwiLW8tdHJhbnNmb3JtXCI6XCJ0cmFuc2xhdGUzZChcIithK1wicHgsIDBweCwgMHB4KVwiLFwiLW1zLXRyYW5zZm9ybVwiOlwidHJhbnNsYXRlM2QoXCIrXG5hK1wicHgsIDBweCwgMHB4KVwiLHRyYW5zZm9ybTpcInRyYW5zbGF0ZTNkKFwiK2ErXCJweCwgMHB4LDBweClcIn19LHRyYW5zaXRpb24zZDpmdW5jdGlvbihhKXt0aGlzLiRvd2xXcmFwcGVyLmNzcyh0aGlzLmRvVHJhbnNsYXRlKGEpKX0sY3NzMm1vdmU6ZnVuY3Rpb24oYSl7dGhpcy4kb3dsV3JhcHBlci5jc3Moe2xlZnQ6YX0pfSxjc3Myc2xpZGU6ZnVuY3Rpb24oYSxiKXt2YXIgZT10aGlzO2UuaXNDc3NGaW5pc2g9ITE7ZS4kb3dsV3JhcHBlci5zdG9wKCEwLCEwKS5hbmltYXRlKHtsZWZ0OmF9LHtkdXJhdGlvbjpifHxlLm9wdGlvbnMuc2xpZGVTcGVlZCxjb21wbGV0ZTpmdW5jdGlvbigpe2UuaXNDc3NGaW5pc2g9ITB9fSl9LGNoZWNrQnJvd3NlcjpmdW5jdGlvbigpe3ZhciBhPWsuY3JlYXRlRWxlbWVudChcImRpdlwiKTthLnN0eWxlLmNzc1RleHQ9XCIgIC1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpOyAtbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpOyAtby10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMHB4LCAwcHgsIDBweCk7IC13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpOyB0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMHB4LCAwcHgsIDBweClcIjtcbmE9YS5zdHlsZS5jc3NUZXh0Lm1hdGNoKC90cmFuc2xhdGUzZFxcKDBweCwgMHB4LCAwcHhcXCkvZyk7dGhpcy5icm93c2VyPXtzdXBwb3J0M2Q6bnVsbCE9PWEmJjE9PT1hLmxlbmd0aCxpc1RvdWNoOlwib250b3VjaHN0YXJ0XCJpbiBnfHxnLm5hdmlnYXRvci5tc01heFRvdWNoUG9pbnRzfX0sbW92ZUV2ZW50czpmdW5jdGlvbigpe2lmKCExIT09dGhpcy5vcHRpb25zLm1vdXNlRHJhZ3x8ITEhPT10aGlzLm9wdGlvbnMudG91Y2hEcmFnKXRoaXMuZ2VzdHVyZXMoKSx0aGlzLmRpc2FibGVkRXZlbnRzKCl9LGV2ZW50VHlwZXM6ZnVuY3Rpb24oKXt2YXIgYT1bXCJzXCIsXCJlXCIsXCJ4XCJdO3RoaXMuZXZfdHlwZXM9e307ITA9PT10aGlzLm9wdGlvbnMubW91c2VEcmFnJiYhMD09PXRoaXMub3B0aW9ucy50b3VjaERyYWc/YT1bXCJ0b3VjaHN0YXJ0Lm93bCBtb3VzZWRvd24ub3dsXCIsXCJ0b3VjaG1vdmUub3dsIG1vdXNlbW92ZS5vd2xcIixcInRvdWNoZW5kLm93bCB0b3VjaGNhbmNlbC5vd2wgbW91c2V1cC5vd2xcIl06XG4hMT09PXRoaXMub3B0aW9ucy5tb3VzZURyYWcmJiEwPT09dGhpcy5vcHRpb25zLnRvdWNoRHJhZz9hPVtcInRvdWNoc3RhcnQub3dsXCIsXCJ0b3VjaG1vdmUub3dsXCIsXCJ0b3VjaGVuZC5vd2wgdG91Y2hjYW5jZWwub3dsXCJdOiEwPT09dGhpcy5vcHRpb25zLm1vdXNlRHJhZyYmITE9PT10aGlzLm9wdGlvbnMudG91Y2hEcmFnJiYoYT1bXCJtb3VzZWRvd24ub3dsXCIsXCJtb3VzZW1vdmUub3dsXCIsXCJtb3VzZXVwLm93bFwiXSk7dGhpcy5ldl90eXBlcy5zdGFydD1hWzBdO3RoaXMuZXZfdHlwZXMubW92ZT1hWzFdO3RoaXMuZXZfdHlwZXMuZW5kPWFbMl19LGRpc2FibGVkRXZlbnRzOmZ1bmN0aW9uKCl7dGhpcy4kZWxlbS5vbihcImRyYWdzdGFydC5vd2xcIixmdW5jdGlvbihhKXthLnByZXZlbnREZWZhdWx0KCl9KTt0aGlzLiRlbGVtLm9uKFwibW91c2Vkb3duLmRpc2FibGVUZXh0U2VsZWN0XCIsZnVuY3Rpb24oYSl7cmV0dXJuIGYoYS50YXJnZXQpLmlzKFwiaW5wdXQsIHRleHRhcmVhLCBzZWxlY3QsIG9wdGlvblwiKX0pfSxcbmdlc3R1cmVzOmZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXtpZih2b2lkIDAhPT1hLnRvdWNoZXMpcmV0dXJue3g6YS50b3VjaGVzWzBdLnBhZ2VYLHk6YS50b3VjaGVzWzBdLnBhZ2VZfTtpZih2b2lkIDA9PT1hLnRvdWNoZXMpe2lmKHZvaWQgMCE9PWEucGFnZVgpcmV0dXJue3g6YS5wYWdlWCx5OmEucGFnZVl9O2lmKHZvaWQgMD09PWEucGFnZVgpcmV0dXJue3g6YS5jbGllbnRYLHk6YS5jbGllbnRZfX19ZnVuY3Rpb24gYihhKXtcIm9uXCI9PT1hPyhmKGspLm9uKGQuZXZfdHlwZXMubW92ZSxlKSxmKGspLm9uKGQuZXZfdHlwZXMuZW5kLGMpKTpcIm9mZlwiPT09YSYmKGYoaykub2ZmKGQuZXZfdHlwZXMubW92ZSksZihrKS5vZmYoZC5ldl90eXBlcy5lbmQpKX1mdW5jdGlvbiBlKGIpe2I9Yi5vcmlnaW5hbEV2ZW50fHxifHxnLmV2ZW50O2QubmV3UG9zWD1hKGIpLngtaC5vZmZzZXRYO2QubmV3UG9zWT1hKGIpLnktaC5vZmZzZXRZO2QubmV3UmVsYXRpdmVYPWQubmV3UG9zWC1oLnJlbGF0aXZlUG9zO1xuXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub3B0aW9ucy5zdGFydERyYWdnaW5nJiYhMCE9PWguZHJhZ2dpbmcmJjAhPT1kLm5ld1JlbGF0aXZlWCYmKGguZHJhZ2dpbmc9ITAsZC5vcHRpb25zLnN0YXJ0RHJhZ2dpbmcuYXBwbHkoZCxbZC4kZWxlbV0pKTsoODxkLm5ld1JlbGF0aXZlWHx8LTg+ZC5uZXdSZWxhdGl2ZVgpJiYhMD09PWQuYnJvd3Nlci5pc1RvdWNoJiYodm9pZCAwIT09Yi5wcmV2ZW50RGVmYXVsdD9iLnByZXZlbnREZWZhdWx0KCk6Yi5yZXR1cm5WYWx1ZT0hMSxoLnNsaWRpbmc9ITApOygxMDxkLm5ld1Bvc1l8fC0xMD5kLm5ld1Bvc1kpJiYhMT09PWguc2xpZGluZyYmZihrKS5vZmYoXCJ0b3VjaG1vdmUub3dsXCIpO2QubmV3UG9zWD1NYXRoLm1heChNYXRoLm1pbihkLm5ld1Bvc1gsZC5uZXdSZWxhdGl2ZVgvNSksZC5tYXhpbXVtUGl4ZWxzK2QubmV3UmVsYXRpdmVYLzUpOyEwPT09ZC5icm93c2VyLnN1cHBvcnQzZD9kLnRyYW5zaXRpb24zZChkLm5ld1Bvc1gpOmQuY3NzMm1vdmUoZC5uZXdQb3NYKX1cbmZ1bmN0aW9uIGMoYSl7YT1hLm9yaWdpbmFsRXZlbnR8fGF8fGcuZXZlbnQ7dmFyIGM7YS50YXJnZXQ9YS50YXJnZXR8fGEuc3JjRWxlbWVudDtoLmRyYWdnaW5nPSExOyEwIT09ZC5icm93c2VyLmlzVG91Y2gmJmQuJG93bFdyYXBwZXIucmVtb3ZlQ2xhc3MoXCJncmFiYmluZ1wiKTtkLmRyYWdEaXJlY3Rpb249MD5kLm5ld1JlbGF0aXZlWD9kLm93bC5kcmFnRGlyZWN0aW9uPVwibGVmdFwiOmQub3dsLmRyYWdEaXJlY3Rpb249XCJyaWdodFwiOzAhPT1kLm5ld1JlbGF0aXZlWCYmKGM9ZC5nZXROZXdQb3NpdGlvbigpLGQuZ29UbyhjLCExLFwiZHJhZ1wiKSxoLnRhcmdldEVsZW1lbnQ9PT1hLnRhcmdldCYmITAhPT1kLmJyb3dzZXIuaXNUb3VjaCYmKGYoYS50YXJnZXQpLm9uKFwiY2xpY2suZGlzYWJsZVwiLGZ1bmN0aW9uKGEpe2Euc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7YS5zdG9wUHJvcGFnYXRpb24oKTthLnByZXZlbnREZWZhdWx0KCk7ZihhLnRhcmdldCkub2ZmKFwiY2xpY2suZGlzYWJsZVwiKX0pLFxuYT1mLl9kYXRhKGEudGFyZ2V0LFwiZXZlbnRzXCIpLmNsaWNrLGM9YS5wb3AoKSxhLnNwbGljZSgwLDAsYykpKTtiKFwib2ZmXCIpfXZhciBkPXRoaXMsaD17b2Zmc2V0WDowLG9mZnNldFk6MCxiYXNlRWxXaWR0aDowLHJlbGF0aXZlUG9zOjAscG9zaXRpb246bnVsbCxtaW5Td2lwZTpudWxsLG1heFN3aXBlOm51bGwsc2xpZGluZzpudWxsLGRhcmdnaW5nOm51bGwsdGFyZ2V0RWxlbWVudDpudWxsfTtkLmlzQ3NzRmluaXNoPSEwO2QuJGVsZW0ub24oZC5ldl90eXBlcy5zdGFydCxcIi5vd2wtd3JhcHBlclwiLGZ1bmN0aW9uKGMpe2M9Yy5vcmlnaW5hbEV2ZW50fHxjfHxnLmV2ZW50O3ZhciBlO2lmKDM9PT1jLndoaWNoKXJldHVybiExO2lmKCEoZC5pdGVtc0Ftb3VudDw9ZC5vcHRpb25zLml0ZW1zKSl7aWYoITE9PT1kLmlzQ3NzRmluaXNoJiYhZC5vcHRpb25zLmRyYWdCZWZvcmVBbmltRmluaXNofHwhMT09PWQuaXNDc3MzRmluaXNoJiYhZC5vcHRpb25zLmRyYWdCZWZvcmVBbmltRmluaXNoKXJldHVybiExO1xuITEhPT1kLm9wdGlvbnMuYXV0b1BsYXkmJmcuY2xlYXJJbnRlcnZhbChkLmF1dG9QbGF5SW50ZXJ2YWwpOyEwPT09ZC5icm93c2VyLmlzVG91Y2h8fGQuJG93bFdyYXBwZXIuaGFzQ2xhc3MoXCJncmFiYmluZ1wiKXx8ZC4kb3dsV3JhcHBlci5hZGRDbGFzcyhcImdyYWJiaW5nXCIpO2QubmV3UG9zWD0wO2QubmV3UmVsYXRpdmVYPTA7Zih0aGlzKS5jc3MoZC5yZW1vdmVUcmFuc2l0aW9uKCkpO2U9Zih0aGlzKS5wb3NpdGlvbigpO2gucmVsYXRpdmVQb3M9ZS5sZWZ0O2gub2Zmc2V0WD1hKGMpLngtZS5sZWZ0O2gub2Zmc2V0WT1hKGMpLnktZS50b3A7YihcIm9uXCIpO2guc2xpZGluZz0hMTtoLnRhcmdldEVsZW1lbnQ9Yy50YXJnZXR8fGMuc3JjRWxlbWVudH19KX0sZ2V0TmV3UG9zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNsb3Nlc3RJdGVtKCk7YT50aGlzLm1heGltdW1JdGVtP2E9dGhpcy5jdXJyZW50SXRlbT10aGlzLm1heGltdW1JdGVtOjA8PXRoaXMubmV3UG9zWCYmKHRoaXMuY3VycmVudEl0ZW09XG5hPTApO3JldHVybiBhfSxjbG9zZXN0SXRlbTpmdW5jdGlvbigpe3ZhciBhPXRoaXMsYj0hMD09PWEub3B0aW9ucy5zY3JvbGxQZXJQYWdlP2EucGFnZXNJbkFycmF5OmEucG9zaXRpb25zSW5BcnJheSxlPWEubmV3UG9zWCxjPW51bGw7Zi5lYWNoKGIsZnVuY3Rpb24oZCxnKXtlLWEuaXRlbVdpZHRoLzIwPmJbZCsxXSYmZS1hLml0ZW1XaWR0aC8yMDxnJiZcImxlZnRcIj09PWEubW92ZURpcmVjdGlvbigpPyhjPWcsYS5jdXJyZW50SXRlbT0hMD09PWEub3B0aW9ucy5zY3JvbGxQZXJQYWdlP2YuaW5BcnJheShjLGEucG9zaXRpb25zSW5BcnJheSk6ZCk6ZSthLml0ZW1XaWR0aC8yMDxnJiZlK2EuaXRlbVdpZHRoLzIwPihiW2QrMV18fGJbZF0tYS5pdGVtV2lkdGgpJiZcInJpZ2h0XCI9PT1hLm1vdmVEaXJlY3Rpb24oKSYmKCEwPT09YS5vcHRpb25zLnNjcm9sbFBlclBhZ2U/KGM9YltkKzFdfHxiW2IubGVuZ3RoLTFdLGEuY3VycmVudEl0ZW09Zi5pbkFycmF5KGMsYS5wb3NpdGlvbnNJbkFycmF5KSk6XG4oYz1iW2QrMV0sYS5jdXJyZW50SXRlbT1kKzEpKX0pO3JldHVybiBhLmN1cnJlbnRJdGVtfSxtb3ZlRGlyZWN0aW9uOmZ1bmN0aW9uKCl7dmFyIGE7MD50aGlzLm5ld1JlbGF0aXZlWD8oYT1cInJpZ2h0XCIsdGhpcy5wbGF5RGlyZWN0aW9uPVwibmV4dFwiKTooYT1cImxlZnRcIix0aGlzLnBsYXlEaXJlY3Rpb249XCJwcmV2XCIpO3JldHVybiBhfSxjdXN0b21FdmVudHM6ZnVuY3Rpb24oKXt2YXIgYT10aGlzO2EuJGVsZW0ub24oXCJvd2wubmV4dFwiLGZ1bmN0aW9uKCl7YS5uZXh0KCl9KTthLiRlbGVtLm9uKFwib3dsLnByZXZcIixmdW5jdGlvbigpe2EucHJldigpfSk7YS4kZWxlbS5vbihcIm93bC5wbGF5XCIsZnVuY3Rpb24oYixlKXthLm9wdGlvbnMuYXV0b1BsYXk9ZTthLnBsYXkoKTthLmhvdmVyU3RhdHVzPVwicGxheVwifSk7YS4kZWxlbS5vbihcIm93bC5zdG9wXCIsZnVuY3Rpb24oKXthLnN0b3AoKTthLmhvdmVyU3RhdHVzPVwic3RvcFwifSk7YS4kZWxlbS5vbihcIm93bC5nb1RvXCIsZnVuY3Rpb24oYixlKXthLmdvVG8oZSl9KTtcbmEuJGVsZW0ub24oXCJvd2wuanVtcFRvXCIsZnVuY3Rpb24oYixlKXthLmp1bXBUbyhlKX0pfSxzdG9wT25Ib3ZlcjpmdW5jdGlvbigpe3ZhciBhPXRoaXM7ITA9PT1hLm9wdGlvbnMuc3RvcE9uSG92ZXImJiEwIT09YS5icm93c2VyLmlzVG91Y2gmJiExIT09YS5vcHRpb25zLmF1dG9QbGF5JiYoYS4kZWxlbS5vbihcIm1vdXNlb3ZlclwiLGZ1bmN0aW9uKCl7YS5zdG9wKCl9KSxhLiRlbGVtLm9uKFwibW91c2VvdXRcIixmdW5jdGlvbigpe1wic3RvcFwiIT09YS5ob3ZlclN0YXR1cyYmYS5wbGF5KCl9KSl9LGxhenlMb2FkOmZ1bmN0aW9uKCl7dmFyIGEsYixlLGMsZDtpZighMT09PXRoaXMub3B0aW9ucy5sYXp5TG9hZClyZXR1cm4hMTtmb3IoYT0wO2E8dGhpcy5pdGVtc0Ftb3VudDthKz0xKWI9Zih0aGlzLiRvd2xJdGVtc1thXSksXCJsb2FkZWRcIiE9PWIuZGF0YShcIm93bC1sb2FkZWRcIikmJihlPWIuZGF0YShcIm93bC1pdGVtXCIpLGM9Yi5maW5kKFwiLmxhenlPd2xcIiksXCJzdHJpbmdcIiE9PXR5cGVvZiBjLmRhdGEoXCJzcmNcIik/XG5iLmRhdGEoXCJvd2wtbG9hZGVkXCIsXCJsb2FkZWRcIik6KHZvaWQgMD09PWIuZGF0YShcIm93bC1sb2FkZWRcIikmJihjLmhpZGUoKSxiLmFkZENsYXNzKFwibG9hZGluZ1wiKS5kYXRhKFwib3dsLWxvYWRlZFwiLFwiY2hlY2tlZFwiKSksKGQ9ITA9PT10aGlzLm9wdGlvbnMubGF6eUZvbGxvdz9lPj10aGlzLmN1cnJlbnRJdGVtOiEwKSYmZTx0aGlzLmN1cnJlbnRJdGVtK3RoaXMub3B0aW9ucy5pdGVtcyYmYy5sZW5ndGgmJnRoaXMubGF6eVByZWxvYWQoYixjKSkpfSxsYXp5UHJlbG9hZDpmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGUoKXthLmRhdGEoXCJvd2wtbG9hZGVkXCIsXCJsb2FkZWRcIikucmVtb3ZlQ2xhc3MoXCJsb2FkaW5nXCIpO2IucmVtb3ZlQXR0cihcImRhdGEtc3JjXCIpO1wiZmFkZVwiPT09ZC5vcHRpb25zLmxhenlFZmZlY3Q/Yi5mYWRlSW4oNDAwKTpiLnNob3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vcHRpb25zLmFmdGVyTGF6eUxvYWQmJmQub3B0aW9ucy5hZnRlckxhenlMb2FkLmFwcGx5KHRoaXMsXG5bZC4kZWxlbV0pfWZ1bmN0aW9uIGMoKXtmKz0xO2QuY29tcGxldGVJbWcoYi5nZXQoMCkpfHwhMD09PWs/ZSgpOjEwMD49Zj9nLnNldFRpbWVvdXQoYywxMDApOmUoKX12YXIgZD10aGlzLGY9MCxrO1wiRElWXCI9PT1iLnByb3AoXCJ0YWdOYW1lXCIpPyhiLmNzcyhcImJhY2tncm91bmQtaW1hZ2VcIixcInVybChcIitiLmRhdGEoXCJzcmNcIikrXCIpXCIpLGs9ITApOmJbMF0uc3JjPWIuZGF0YShcInNyY1wiKTtjKCl9LGF1dG9IZWlnaHQ6ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7dmFyIGE9ZihlLiRvd2xJdGVtc1tlLmN1cnJlbnRJdGVtXSkuaGVpZ2h0KCk7ZS53cmFwcGVyT3V0ZXIuY3NzKFwiaGVpZ2h0XCIsYStcInB4XCIpO2Uud3JhcHBlck91dGVyLmhhc0NsYXNzKFwiYXV0b0hlaWdodFwiKXx8Zy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS53cmFwcGVyT3V0ZXIuYWRkQ2xhc3MoXCJhdXRvSGVpZ2h0XCIpfSwwKX1mdW5jdGlvbiBiKCl7ZCs9MTtlLmNvbXBsZXRlSW1nKGMuZ2V0KDApKT9hKCk6MTAwPj1kP2cuc2V0VGltZW91dChiLFxuMTAwKTplLndyYXBwZXJPdXRlci5jc3MoXCJoZWlnaHRcIixcIlwiKX12YXIgZT10aGlzLGM9ZihlLiRvd2xJdGVtc1tlLmN1cnJlbnRJdGVtXSkuZmluZChcImltZ1wiKSxkO3ZvaWQgMCE9PWMuZ2V0KDApPyhkPTAsYigpKTphKCl9LGNvbXBsZXRlSW1nOmZ1bmN0aW9uKGEpe3JldHVybiFhLmNvbXBsZXRlfHxcInVuZGVmaW5lZFwiIT09dHlwZW9mIGEubmF0dXJhbFdpZHRoJiYwPT09YS5uYXR1cmFsV2lkdGg/ITE6ITB9LG9uVmlzaWJsZUl0ZW1zOmZ1bmN0aW9uKCl7dmFyIGE7ITA9PT10aGlzLm9wdGlvbnMuYWRkQ2xhc3NBY3RpdmUmJnRoaXMuJG93bEl0ZW1zLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO3RoaXMudmlzaWJsZUl0ZW1zPVtdO2ZvcihhPXRoaXMuY3VycmVudEl0ZW07YTx0aGlzLmN1cnJlbnRJdGVtK3RoaXMub3B0aW9ucy5pdGVtczthKz0xKXRoaXMudmlzaWJsZUl0ZW1zLnB1c2goYSksITA9PT10aGlzLm9wdGlvbnMuYWRkQ2xhc3NBY3RpdmUmJmYodGhpcy4kb3dsSXRlbXNbYV0pLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xudGhpcy5vd2wudmlzaWJsZUl0ZW1zPXRoaXMudmlzaWJsZUl0ZW1zfSx0cmFuc2l0aW9uVHlwZXM6ZnVuY3Rpb24oYSl7dGhpcy5vdXRDbGFzcz1cIm93bC1cIithK1wiLW91dFwiO3RoaXMuaW5DbGFzcz1cIm93bC1cIithK1wiLWluXCJ9LHNpbmdsZUl0ZW1UcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWEub3V0Q2xhc3MsZT1hLmluQ2xhc3MsYz1hLiRvd2xJdGVtcy5lcShhLmN1cnJlbnRJdGVtKSxkPWEuJG93bEl0ZW1zLmVxKGEucHJldkl0ZW0pLGY9TWF0aC5hYnMoYS5wb3NpdGlvbnNJbkFycmF5W2EuY3VycmVudEl0ZW1dKSthLnBvc2l0aW9uc0luQXJyYXlbYS5wcmV2SXRlbV0sZz1NYXRoLmFicyhhLnBvc2l0aW9uc0luQXJyYXlbYS5jdXJyZW50SXRlbV0pK2EuaXRlbVdpZHRoLzI7YS5pc1RyYW5zaXRpb249ITA7YS4kb3dsV3JhcHBlci5hZGRDbGFzcyhcIm93bC1vcmlnaW5cIikuY3NzKHtcIi13ZWJraXQtdHJhbnNmb3JtLW9yaWdpblwiOmcrXCJweFwiLFwiLW1vei1wZXJzcGVjdGl2ZS1vcmlnaW5cIjpnK1xuXCJweFwiLFwicGVyc3BlY3RpdmUtb3JpZ2luXCI6ZytcInB4XCJ9KTtkLmNzcyh7cG9zaXRpb246XCJyZWxhdGl2ZVwiLGxlZnQ6ZitcInB4XCJ9KS5hZGRDbGFzcyhiKS5vbihcIndlYmtpdEFuaW1hdGlvbkVuZCBvQW5pbWF0aW9uRW5kIE1TQW5pbWF0aW9uRW5kIGFuaW1hdGlvbmVuZFwiLGZ1bmN0aW9uKCl7YS5lbmRQcmV2PSEwO2Qub2ZmKFwid2Via2l0QW5pbWF0aW9uRW5kIG9BbmltYXRpb25FbmQgTVNBbmltYXRpb25FbmQgYW5pbWF0aW9uZW5kXCIpO2EuY2xlYXJUcmFuc1N0eWxlKGQsYil9KTtjLmFkZENsYXNzKGUpLm9uKFwid2Via2l0QW5pbWF0aW9uRW5kIG9BbmltYXRpb25FbmQgTVNBbmltYXRpb25FbmQgYW5pbWF0aW9uZW5kXCIsZnVuY3Rpb24oKXthLmVuZEN1cnJlbnQ9ITA7Yy5vZmYoXCJ3ZWJraXRBbmltYXRpb25FbmQgb0FuaW1hdGlvbkVuZCBNU0FuaW1hdGlvbkVuZCBhbmltYXRpb25lbmRcIik7YS5jbGVhclRyYW5zU3R5bGUoYyxlKX0pfSxjbGVhclRyYW5zU3R5bGU6ZnVuY3Rpb24oYSxcbmIpe2EuY3NzKHtwb3NpdGlvbjpcIlwiLGxlZnQ6XCJcIn0pLnJlbW92ZUNsYXNzKGIpO3RoaXMuZW5kUHJldiYmdGhpcy5lbmRDdXJyZW50JiYodGhpcy4kb3dsV3JhcHBlci5yZW1vdmVDbGFzcyhcIm93bC1vcmlnaW5cIiksdGhpcy5pc1RyYW5zaXRpb249dGhpcy5lbmRDdXJyZW50PXRoaXMuZW5kUHJldj0hMSl9LG93bFN0YXR1czpmdW5jdGlvbigpe3RoaXMub3dsPXt1c2VyT3B0aW9uczp0aGlzLnVzZXJPcHRpb25zLGJhc2VFbGVtZW50OnRoaXMuJGVsZW0sdXNlckl0ZW1zOnRoaXMuJHVzZXJJdGVtcyxvd2xJdGVtczp0aGlzLiRvd2xJdGVtcyxjdXJyZW50SXRlbTp0aGlzLmN1cnJlbnRJdGVtLHByZXZJdGVtOnRoaXMucHJldkl0ZW0sdmlzaWJsZUl0ZW1zOnRoaXMudmlzaWJsZUl0ZW1zLGlzVG91Y2g6dGhpcy5icm93c2VyLmlzVG91Y2gsYnJvd3Nlcjp0aGlzLmJyb3dzZXIsZHJhZ0RpcmVjdGlvbjp0aGlzLmRyYWdEaXJlY3Rpb259fSxjbGVhckV2ZW50czpmdW5jdGlvbigpe3RoaXMuJGVsZW0ub2ZmKFwiLm93bCBvd2wgbW91c2Vkb3duLmRpc2FibGVUZXh0U2VsZWN0XCIpO1xuZihrKS5vZmYoXCIub3dsIG93bFwiKTtmKGcpLm9mZihcInJlc2l6ZVwiLHRoaXMucmVzaXplcil9LHVuV3JhcDpmdW5jdGlvbigpezAhPT10aGlzLiRlbGVtLmNoaWxkcmVuKCkubGVuZ3RoJiYodGhpcy4kb3dsV3JhcHBlci51bndyYXAoKSx0aGlzLiR1c2VySXRlbXMudW53cmFwKCkudW53cmFwKCksdGhpcy5vd2xDb250cm9scyYmdGhpcy5vd2xDb250cm9scy5yZW1vdmUoKSk7dGhpcy5jbGVhckV2ZW50cygpO3RoaXMuJGVsZW0uYXR0cihcInN0eWxlXCIsdGhpcy4kZWxlbS5kYXRhKFwib3dsLW9yaWdpbmFsU3R5bGVzXCIpfHxcIlwiKS5hdHRyKFwiY2xhc3NcIix0aGlzLiRlbGVtLmRhdGEoXCJvd2wtb3JpZ2luYWxDbGFzc2VzXCIpKX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuc3RvcCgpO2cuY2xlYXJJbnRlcnZhbCh0aGlzLmNoZWNrVmlzaWJsZSk7dGhpcy51bldyYXAoKTt0aGlzLiRlbGVtLnJlbW92ZURhdGEoKX0scmVpbml0OmZ1bmN0aW9uKGEpe2E9Zi5leHRlbmQoe30sdGhpcy51c2VyT3B0aW9ucyxcbmEpO3RoaXMudW5XcmFwKCk7dGhpcy5pbml0KGEsdGhpcy4kZWxlbSl9LGFkZEl0ZW06ZnVuY3Rpb24oYSxiKXt2YXIgZTtpZighYSlyZXR1cm4hMTtpZigwPT09dGhpcy4kZWxlbS5jaGlsZHJlbigpLmxlbmd0aClyZXR1cm4gdGhpcy4kZWxlbS5hcHBlbmQoYSksdGhpcy5zZXRWYXJzKCksITE7dGhpcy51bldyYXAoKTtlPXZvaWQgMD09PWJ8fC0xPT09Yj8tMTpiO2U+PXRoaXMuJHVzZXJJdGVtcy5sZW5ndGh8fC0xPT09ZT90aGlzLiR1c2VySXRlbXMuZXEoLTEpLmFmdGVyKGEpOnRoaXMuJHVzZXJJdGVtcy5lcShlKS5iZWZvcmUoYSk7dGhpcy5zZXRWYXJzKCl9LHJlbW92ZUl0ZW06ZnVuY3Rpb24oYSl7aWYoMD09PXRoaXMuJGVsZW0uY2hpbGRyZW4oKS5sZW5ndGgpcmV0dXJuITE7YT12b2lkIDA9PT1hfHwtMT09PWE/LTE6YTt0aGlzLnVuV3JhcCgpO3RoaXMuJHVzZXJJdGVtcy5lcShhKS5yZW1vdmUoKTt0aGlzLnNldFZhcnMoKX19O2YuZm4ub3dsQ2Fyb3VzZWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2lmKCEwPT09XG5mKHRoaXMpLmRhdGEoXCJvd2wtaW5pdFwiKSlyZXR1cm4hMTtmKHRoaXMpLmRhdGEoXCJvd2wtaW5pdFwiLCEwKTt2YXIgYj1PYmplY3QuY3JlYXRlKGwpO2IuaW5pdChhLHRoaXMpO2YuZGF0YSh0aGlzLFwib3dsQ2Fyb3VzZWxcIixiKX0pfTtmLmZuLm93bENhcm91c2VsLm9wdGlvbnM9e2l0ZW1zOjUsaXRlbXNDdXN0b206ITEsaXRlbXNEZXNrdG9wOlsxMTk5LDRdLGl0ZW1zRGVza3RvcFNtYWxsOls5NzksM10saXRlbXNUYWJsZXQ6Wzc2OCwyXSxpdGVtc1RhYmxldFNtYWxsOiExLGl0ZW1zTW9iaWxlOls0NzksMV0sc2luZ2xlSXRlbTohMSxpdGVtc1NjYWxlVXA6ITEsc2xpZGVTcGVlZDoyMDAscGFnaW5hdGlvblNwZWVkOjgwMCxyZXdpbmRTcGVlZDoxRTMsYXV0b1BsYXk6ITEsc3RvcE9uSG92ZXI6ITEsbmF2aWdhdGlvbjohMSxuYXZpZ2F0aW9uVGV4dDpbXCJwcmV2XCIsXCJuZXh0XCJdLHJld2luZE5hdjohMCxzY3JvbGxQZXJQYWdlOiExLHBhZ2luYXRpb246ITAscGFnaW5hdGlvbk51bWJlcnM6ITEsXG5yZXNwb25zaXZlOiEwLHJlc3BvbnNpdmVSZWZyZXNoUmF0ZToyMDAscmVzcG9uc2l2ZUJhc2VXaWR0aDpnLGJhc2VDbGFzczpcIm93bC1jYXJvdXNlbFwiLHRoZW1lOlwib3dsLXRoZW1lXCIsbGF6eUxvYWQ6ITEsbGF6eUZvbGxvdzohMCxsYXp5RWZmZWN0OlwiZmFkZVwiLGF1dG9IZWlnaHQ6ITEsanNvblBhdGg6ITEsanNvblN1Y2Nlc3M6ITEsZHJhZ0JlZm9yZUFuaW1GaW5pc2g6ITAsbW91c2VEcmFnOiEwLHRvdWNoRHJhZzohMCxhZGRDbGFzc0FjdGl2ZTohMSx0cmFuc2l0aW9uU3R5bGU6ITEsYmVmb3JlVXBkYXRlOiExLGFmdGVyVXBkYXRlOiExLGJlZm9yZUluaXQ6ITEsYWZ0ZXJJbml0OiExLGJlZm9yZU1vdmU6ITEsYWZ0ZXJNb3ZlOiExLGFmdGVyQWN0aW9uOiExLHN0YXJ0RHJhZ2dpbmc6ITEsYWZ0ZXJMYXp5TG9hZDohMX19KShqUXVlcnksd2luZG93LGRvY3VtZW50KTsiLCIvKiFcbiAqIEJvb3RzdHJhcCB2My4zLjYgKGh0dHA6Ly9nZXRib290c3RyYXAuY29tKVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqL1xuXG5pZiAodHlwZW9mIGpRdWVyeSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdCb290c3RyYXBcXCdzIEphdmFTY3JpcHQgcmVxdWlyZXMgalF1ZXJ5Jylcbn1cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcbiAgdmFyIHZlcnNpb24gPSAkLmZuLmpxdWVyeS5zcGxpdCgnICcpWzBdLnNwbGl0KCcuJylcbiAgaWYgKCh2ZXJzaW9uWzBdIDwgMiAmJiB2ZXJzaW9uWzFdIDwgOSkgfHwgKHZlcnNpb25bMF0gPT0gMSAmJiB2ZXJzaW9uWzFdID09IDkgJiYgdmVyc2lvblsyXSA8IDEpIHx8ICh2ZXJzaW9uWzBdID4gMikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Jvb3RzdHJhcFxcJ3MgSmF2YVNjcmlwdCByZXF1aXJlcyBqUXVlcnkgdmVyc2lvbiAxLjkuMSBvciBoaWdoZXIsIGJ1dCBsb3dlciB0aGFuIHZlcnNpb24gMycpXG4gIH1cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHRyYW5zaXRpb24uanMgdjMuMy42XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0cmFuc2l0aW9uc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE1IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENTUyBUUkFOU0lUSU9OIFNVUFBPUlQgKFNob3V0b3V0OiBodHRwOi8vd3d3Lm1vZGVybml6ci5jb20vKVxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kKCkge1xuICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Jvb3RzdHJhcCcpXG5cbiAgICB2YXIgdHJhbnNFbmRFdmVudE5hbWVzID0ge1xuICAgICAgV2Via2l0VHJhbnNpdGlvbiA6ICd3ZWJraXRUcmFuc2l0aW9uRW5kJyxcbiAgICAgIE1velRyYW5zaXRpb24gICAgOiAndHJhbnNpdGlvbmVuZCcsXG4gICAgICBPVHJhbnNpdGlvbiAgICAgIDogJ29UcmFuc2l0aW9uRW5kIG90cmFuc2l0aW9uZW5kJyxcbiAgICAgIHRyYW5zaXRpb24gICAgICAgOiAndHJhbnNpdGlvbmVuZCdcbiAgICB9XG5cbiAgICBmb3IgKHZhciBuYW1lIGluIHRyYW5zRW5kRXZlbnROYW1lcykge1xuICAgICAgaWYgKGVsLnN0eWxlW25hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHsgZW5kOiB0cmFuc0VuZEV2ZW50TmFtZXNbbmFtZV0gfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZSAvLyBleHBsaWNpdCBmb3IgaWU4ICggIC5fLilcbiAgfVxuXG4gIC8vIGh0dHA6Ly9ibG9nLmFsZXhtYWNjYXcuY29tL2Nzcy10cmFuc2l0aW9uc1xuICAkLmZuLmVtdWxhdGVUcmFuc2l0aW9uRW5kID0gZnVuY3Rpb24gKGR1cmF0aW9uKSB7XG4gICAgdmFyIGNhbGxlZCA9IGZhbHNlXG4gICAgdmFyICRlbCA9IHRoaXNcbiAgICAkKHRoaXMpLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24gKCkgeyBjYWxsZWQgPSB0cnVlIH0pXG4gICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gKCkgeyBpZiAoIWNhbGxlZCkgJCgkZWwpLnRyaWdnZXIoJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kKSB9XG4gICAgc2V0VGltZW91dChjYWxsYmFjaywgZHVyYXRpb24pXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gICQoZnVuY3Rpb24gKCkge1xuICAgICQuc3VwcG9ydC50cmFuc2l0aW9uID0gdHJhbnNpdGlvbkVuZCgpXG5cbiAgICBpZiAoISQuc3VwcG9ydC50cmFuc2l0aW9uKSByZXR1cm5cblxuICAgICQuZXZlbnQuc3BlY2lhbC5ic1RyYW5zaXRpb25FbmQgPSB7XG4gICAgICBiaW5kVHlwZTogJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kLFxuICAgICAgZGVsZWdhdGVUeXBlOiAkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsXG4gICAgICBoYW5kbGU6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmICgkKGUudGFyZ2V0KS5pcyh0aGlzKSkgcmV0dXJuIGUuaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKVxuICAgICAgfVxuICAgIH1cbiAgfSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogYWxlcnQuanMgdjMuMy42XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNhbGVydHNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBBTEVSVCBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgZGlzbWlzcyA9ICdbZGF0YS1kaXNtaXNzPVwiYWxlcnRcIl0nXG4gIHZhciBBbGVydCAgID0gZnVuY3Rpb24gKGVsKSB7XG4gICAgJChlbCkub24oJ2NsaWNrJywgZGlzbWlzcywgdGhpcy5jbG9zZSlcbiAgfVxuXG4gIEFsZXJ0LlZFUlNJT04gPSAnMy4zLjYnXG5cbiAgQWxlcnQuVFJBTlNJVElPTl9EVVJBVElPTiA9IDE1MFxuXG4gIEFsZXJ0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyICR0aGlzICAgID0gJCh0aGlzKVxuICAgIHZhciBzZWxlY3RvciA9ICR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JylcblxuICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgIHNlbGVjdG9yID0gJHRoaXMuYXR0cignaHJlZicpXG4gICAgICBzZWxlY3RvciA9IHNlbGVjdG9yICYmIHNlbGVjdG9yLnJlcGxhY2UoLy4qKD89I1teXFxzXSokKS8sICcnKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgfVxuXG4gICAgdmFyICRwYXJlbnQgPSAkKHNlbGVjdG9yKVxuXG4gICAgaWYgKGUpIGUucHJldmVudERlZmF1bHQoKVxuXG4gICAgaWYgKCEkcGFyZW50Lmxlbmd0aCkge1xuICAgICAgJHBhcmVudCA9ICR0aGlzLmNsb3Nlc3QoJy5hbGVydCcpXG4gICAgfVxuXG4gICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdjbG9zZS5icy5hbGVydCcpKVxuXG4gICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgJHBhcmVudC5yZW1vdmVDbGFzcygnaW4nKVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlRWxlbWVudCgpIHtcbiAgICAgIC8vIGRldGFjaCBmcm9tIHBhcmVudCwgZmlyZSBldmVudCB0aGVuIGNsZWFuIHVwIGRhdGFcbiAgICAgICRwYXJlbnQuZGV0YWNoKCkudHJpZ2dlcignY2xvc2VkLmJzLmFsZXJ0JykucmVtb3ZlKClcbiAgICB9XG5cbiAgICAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiAkcGFyZW50Lmhhc0NsYXNzKCdmYWRlJykgP1xuICAgICAgJHBhcmVudFxuICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCByZW1vdmVFbGVtZW50KVxuICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoQWxlcnQuVFJBTlNJVElPTl9EVVJBVElPTikgOlxuICAgICAgcmVtb3ZlRWxlbWVudCgpXG4gIH1cblxuXG4gIC8vIEFMRVJUIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgID0gJHRoaXMuZGF0YSgnYnMuYWxlcnQnKVxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLmFsZXJ0JywgKGRhdGEgPSBuZXcgQWxlcnQodGhpcykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi5hbGVydFxuXG4gICQuZm4uYWxlcnQgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5hbGVydC5Db25zdHJ1Y3RvciA9IEFsZXJ0XG5cblxuICAvLyBBTEVSVCBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PVxuXG4gICQuZm4uYWxlcnQubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmFsZXJ0ID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gQUxFUlQgREFUQS1BUElcbiAgLy8gPT09PT09PT09PT09PT1cblxuICAkKGRvY3VtZW50KS5vbignY2xpY2suYnMuYWxlcnQuZGF0YS1hcGknLCBkaXNtaXNzLCBBbGVydC5wcm90b3R5cGUuY2xvc2UpXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IGJ1dHRvbi5qcyB2My4zLjZcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI2J1dHRvbnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBCVVRUT04gUFVCTElDIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIEJ1dHRvbiA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy4kZWxlbWVudCAgPSAkKGVsZW1lbnQpXG4gICAgdGhpcy5vcHRpb25zICAgPSAkLmV4dGVuZCh7fSwgQnV0dG9uLkRFRkFVTFRTLCBvcHRpb25zKVxuICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2VcbiAgfVxuXG4gIEJ1dHRvbi5WRVJTSU9OICA9ICczLjMuNidcblxuICBCdXR0b24uREVGQVVMVFMgPSB7XG4gICAgbG9hZGluZ1RleHQ6ICdsb2FkaW5nLi4uJ1xuICB9XG5cbiAgQnV0dG9uLnByb3RvdHlwZS5zZXRTdGF0ZSA9IGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgIHZhciBkICAgID0gJ2Rpc2FibGVkJ1xuICAgIHZhciAkZWwgID0gdGhpcy4kZWxlbWVudFxuICAgIHZhciB2YWwgID0gJGVsLmlzKCdpbnB1dCcpID8gJ3ZhbCcgOiAnaHRtbCdcbiAgICB2YXIgZGF0YSA9ICRlbC5kYXRhKClcblxuICAgIHN0YXRlICs9ICdUZXh0J1xuXG4gICAgaWYgKGRhdGEucmVzZXRUZXh0ID09IG51bGwpICRlbC5kYXRhKCdyZXNldFRleHQnLCAkZWxbdmFsXSgpKVxuXG4gICAgLy8gcHVzaCB0byBldmVudCBsb29wIHRvIGFsbG93IGZvcm1zIHRvIHN1Ym1pdFxuICAgIHNldFRpbWVvdXQoJC5wcm94eShmdW5jdGlvbiAoKSB7XG4gICAgICAkZWxbdmFsXShkYXRhW3N0YXRlXSA9PSBudWxsID8gdGhpcy5vcHRpb25zW3N0YXRlXSA6IGRhdGFbc3RhdGVdKVxuXG4gICAgICBpZiAoc3RhdGUgPT0gJ2xvYWRpbmdUZXh0Jykge1xuICAgICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWVcbiAgICAgICAgJGVsLmFkZENsYXNzKGQpLmF0dHIoZCwgZClcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5pc0xvYWRpbmcpIHtcbiAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZVxuICAgICAgICAkZWwucmVtb3ZlQ2xhc3MoZCkucmVtb3ZlQXR0cihkKVxuICAgICAgfVxuICAgIH0sIHRoaXMpLCAwKVxuICB9XG5cbiAgQnV0dG9uLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGNoYW5nZWQgPSB0cnVlXG4gICAgdmFyICRwYXJlbnQgPSB0aGlzLiRlbGVtZW50LmNsb3Nlc3QoJ1tkYXRhLXRvZ2dsZT1cImJ1dHRvbnNcIl0nKVxuXG4gICAgaWYgKCRwYXJlbnQubGVuZ3RoKSB7XG4gICAgICB2YXIgJGlucHV0ID0gdGhpcy4kZWxlbWVudC5maW5kKCdpbnB1dCcpXG4gICAgICBpZiAoJGlucHV0LnByb3AoJ3R5cGUnKSA9PSAncmFkaW8nKSB7XG4gICAgICAgIGlmICgkaW5wdXQucHJvcCgnY2hlY2tlZCcpKSBjaGFuZ2VkID0gZmFsc2VcbiAgICAgICAgJHBhcmVudC5maW5kKCcuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB9IGVsc2UgaWYgKCRpbnB1dC5wcm9wKCd0eXBlJykgPT0gJ2NoZWNrYm94Jykge1xuICAgICAgICBpZiAoKCRpbnB1dC5wcm9wKCdjaGVja2VkJykpICE9PSB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdhY3RpdmUnKSkgY2hhbmdlZCA9IGZhbHNlXG4gICAgICAgIHRoaXMuJGVsZW1lbnQudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB9XG4gICAgICAkaW5wdXQucHJvcCgnY2hlY2tlZCcsIHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2FjdGl2ZScpKVxuICAgICAgaWYgKGNoYW5nZWQpICRpbnB1dC50cmlnZ2VyKCdjaGFuZ2UnKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLiRlbGVtZW50LmF0dHIoJ2FyaWEtcHJlc3NlZCcsICF0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdhY3RpdmUnKSlcbiAgICAgIHRoaXMuJGVsZW1lbnQudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgfVxuICB9XG5cblxuICAvLyBCVVRUT04gUExVR0lOIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLmJ1dHRvbicpXG4gICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uXG5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuYnV0dG9uJywgKGRhdGEgPSBuZXcgQnV0dG9uKHRoaXMsIG9wdGlvbnMpKSlcblxuICAgICAgaWYgKG9wdGlvbiA9PSAndG9nZ2xlJykgZGF0YS50b2dnbGUoKVxuICAgICAgZWxzZSBpZiAob3B0aW9uKSBkYXRhLnNldFN0YXRlKG9wdGlvbilcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uYnV0dG9uXG5cbiAgJC5mbi5idXR0b24gICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5idXR0b24uQ29uc3RydWN0b3IgPSBCdXR0b25cblxuXG4gIC8vIEJVVFRPTiBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLmJ1dHRvbi5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYnV0dG9uID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gQlVUVE9OIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09PVxuXG4gICQoZG9jdW1lbnQpXG4gICAgLm9uKCdjbGljay5icy5idXR0b24uZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlXj1cImJ1dHRvblwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgJGJ0biA9ICQoZS50YXJnZXQpXG4gICAgICBpZiAoISRidG4uaGFzQ2xhc3MoJ2J0bicpKSAkYnRuID0gJGJ0bi5jbG9zZXN0KCcuYnRuJylcbiAgICAgIFBsdWdpbi5jYWxsKCRidG4sICd0b2dnbGUnKVxuICAgICAgaWYgKCEoJChlLnRhcmdldCkuaXMoJ2lucHV0W3R5cGU9XCJyYWRpb1wiXScpIHx8ICQoZS50YXJnZXQpLmlzKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nKSkpIGUucHJldmVudERlZmF1bHQoKVxuICAgIH0pXG4gICAgLm9uKCdmb2N1cy5icy5idXR0b24uZGF0YS1hcGkgYmx1ci5icy5idXR0b24uZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlXj1cImJ1dHRvblwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAkKGUudGFyZ2V0KS5jbG9zZXN0KCcuYnRuJykudG9nZ2xlQ2xhc3MoJ2ZvY3VzJywgL15mb2N1cyhpbik/JC8udGVzdChlLnR5cGUpKVxuICAgIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IGNhcm91c2VsLmpzIHYzLjMuNlxuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jY2Fyb3VzZWxcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBDQVJPVVNFTCBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMuJGVsZW1lbnQgICAgPSAkKGVsZW1lbnQpXG4gICAgdGhpcy4kaW5kaWNhdG9ycyA9IHRoaXMuJGVsZW1lbnQuZmluZCgnLmNhcm91c2VsLWluZGljYXRvcnMnKVxuICAgIHRoaXMub3B0aW9ucyAgICAgPSBvcHRpb25zXG4gICAgdGhpcy5wYXVzZWQgICAgICA9IG51bGxcbiAgICB0aGlzLnNsaWRpbmcgICAgID0gbnVsbFxuICAgIHRoaXMuaW50ZXJ2YWwgICAgPSBudWxsXG4gICAgdGhpcy4kYWN0aXZlICAgICA9IG51bGxcbiAgICB0aGlzLiRpdGVtcyAgICAgID0gbnVsbFxuXG4gICAgdGhpcy5vcHRpb25zLmtleWJvYXJkICYmIHRoaXMuJGVsZW1lbnQub24oJ2tleWRvd24uYnMuY2Fyb3VzZWwnLCAkLnByb3h5KHRoaXMua2V5ZG93biwgdGhpcykpXG5cbiAgICB0aGlzLm9wdGlvbnMucGF1c2UgPT0gJ2hvdmVyJyAmJiAhKCdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgJiYgdGhpcy4kZWxlbWVudFxuICAgICAgLm9uKCdtb3VzZWVudGVyLmJzLmNhcm91c2VsJywgJC5wcm94eSh0aGlzLnBhdXNlLCB0aGlzKSlcbiAgICAgIC5vbignbW91c2VsZWF2ZS5icy5jYXJvdXNlbCcsICQucHJveHkodGhpcy5jeWNsZSwgdGhpcykpXG4gIH1cblxuICBDYXJvdXNlbC5WRVJTSU9OICA9ICczLjMuNidcblxuICBDYXJvdXNlbC5UUkFOU0lUSU9OX0RVUkFUSU9OID0gNjAwXG5cbiAgQ2Fyb3VzZWwuREVGQVVMVFMgPSB7XG4gICAgaW50ZXJ2YWw6IDUwMDAsXG4gICAgcGF1c2U6ICdob3ZlcicsXG4gICAgd3JhcDogdHJ1ZSxcbiAgICBrZXlib2FyZDogdHJ1ZVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLmtleWRvd24gPSBmdW5jdGlvbiAoZSkge1xuICAgIGlmICgvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGUudGFyZ2V0LnRhZ05hbWUpKSByZXR1cm5cbiAgICBzd2l0Y2ggKGUud2hpY2gpIHtcbiAgICAgIGNhc2UgMzc6IHRoaXMucHJldigpOyBicmVha1xuICAgICAgY2FzZSAzOTogdGhpcy5uZXh0KCk7IGJyZWFrXG4gICAgICBkZWZhdWx0OiByZXR1cm5cbiAgICB9XG5cbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5jeWNsZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgZSB8fCAodGhpcy5wYXVzZWQgPSBmYWxzZSlcblxuICAgIHRoaXMuaW50ZXJ2YWwgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKVxuXG4gICAgdGhpcy5vcHRpb25zLmludGVydmFsXG4gICAgICAmJiAhdGhpcy5wYXVzZWRcbiAgICAgICYmICh0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoJC5wcm94eSh0aGlzLm5leHQsIHRoaXMpLCB0aGlzLm9wdGlvbnMuaW50ZXJ2YWwpKVxuXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5nZXRJdGVtSW5kZXggPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgIHRoaXMuJGl0ZW1zID0gaXRlbS5wYXJlbnQoKS5jaGlsZHJlbignLml0ZW0nKVxuICAgIHJldHVybiB0aGlzLiRpdGVtcy5pbmRleChpdGVtIHx8IHRoaXMuJGFjdGl2ZSlcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5nZXRJdGVtRm9yRGlyZWN0aW9uID0gZnVuY3Rpb24gKGRpcmVjdGlvbiwgYWN0aXZlKSB7XG4gICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5nZXRJdGVtSW5kZXgoYWN0aXZlKVxuICAgIHZhciB3aWxsV3JhcCA9IChkaXJlY3Rpb24gPT0gJ3ByZXYnICYmIGFjdGl2ZUluZGV4ID09PSAwKVxuICAgICAgICAgICAgICAgIHx8IChkaXJlY3Rpb24gPT0gJ25leHQnICYmIGFjdGl2ZUluZGV4ID09ICh0aGlzLiRpdGVtcy5sZW5ndGggLSAxKSlcbiAgICBpZiAod2lsbFdyYXAgJiYgIXRoaXMub3B0aW9ucy53cmFwKSByZXR1cm4gYWN0aXZlXG4gICAgdmFyIGRlbHRhID0gZGlyZWN0aW9uID09ICdwcmV2JyA/IC0xIDogMVxuICAgIHZhciBpdGVtSW5kZXggPSAoYWN0aXZlSW5kZXggKyBkZWx0YSkgJSB0aGlzLiRpdGVtcy5sZW5ndGhcbiAgICByZXR1cm4gdGhpcy4kaXRlbXMuZXEoaXRlbUluZGV4KVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLnRvID0gZnVuY3Rpb24gKHBvcykge1xuICAgIHZhciB0aGF0ICAgICAgICA9IHRoaXNcbiAgICB2YXIgYWN0aXZlSW5kZXggPSB0aGlzLmdldEl0ZW1JbmRleCh0aGlzLiRhY3RpdmUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5pdGVtLmFjdGl2ZScpKVxuXG4gICAgaWYgKHBvcyA+ICh0aGlzLiRpdGVtcy5sZW5ndGggLSAxKSB8fCBwb3MgPCAwKSByZXR1cm5cblxuICAgIGlmICh0aGlzLnNsaWRpbmcpICAgICAgIHJldHVybiB0aGlzLiRlbGVtZW50Lm9uZSgnc2xpZC5icy5jYXJvdXNlbCcsIGZ1bmN0aW9uICgpIHsgdGhhdC50byhwb3MpIH0pIC8vIHllcywgXCJzbGlkXCJcbiAgICBpZiAoYWN0aXZlSW5kZXggPT0gcG9zKSByZXR1cm4gdGhpcy5wYXVzZSgpLmN5Y2xlKClcblxuICAgIHJldHVybiB0aGlzLnNsaWRlKHBvcyA+IGFjdGl2ZUluZGV4ID8gJ25leHQnIDogJ3ByZXYnLCB0aGlzLiRpdGVtcy5lcShwb3MpKVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24gKGUpIHtcbiAgICBlIHx8ICh0aGlzLnBhdXNlZCA9IHRydWUpXG5cbiAgICBpZiAodGhpcy4kZWxlbWVudC5maW5kKCcubmV4dCwgLnByZXYnKS5sZW5ndGggJiYgJC5zdXBwb3J0LnRyYW5zaXRpb24pIHtcbiAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcigkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQpXG4gICAgICB0aGlzLmN5Y2xlKHRydWUpXG4gICAgfVxuXG4gICAgdGhpcy5pbnRlcnZhbCA9IGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbClcblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBDYXJvdXNlbC5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5zbGlkaW5nKSByZXR1cm5cbiAgICByZXR1cm4gdGhpcy5zbGlkZSgnbmV4dCcpXG4gIH1cblxuICBDYXJvdXNlbC5wcm90b3R5cGUucHJldiA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5zbGlkaW5nKSByZXR1cm5cbiAgICByZXR1cm4gdGhpcy5zbGlkZSgncHJldicpXG4gIH1cblxuICBDYXJvdXNlbC5wcm90b3R5cGUuc2xpZGUgPSBmdW5jdGlvbiAodHlwZSwgbmV4dCkge1xuICAgIHZhciAkYWN0aXZlICAgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5pdGVtLmFjdGl2ZScpXG4gICAgdmFyICRuZXh0ICAgICA9IG5leHQgfHwgdGhpcy5nZXRJdGVtRm9yRGlyZWN0aW9uKHR5cGUsICRhY3RpdmUpXG4gICAgdmFyIGlzQ3ljbGluZyA9IHRoaXMuaW50ZXJ2YWxcbiAgICB2YXIgZGlyZWN0aW9uID0gdHlwZSA9PSAnbmV4dCcgPyAnbGVmdCcgOiAncmlnaHQnXG4gICAgdmFyIHRoYXQgICAgICA9IHRoaXNcblxuICAgIGlmICgkbmV4dC5oYXNDbGFzcygnYWN0aXZlJykpIHJldHVybiAodGhpcy5zbGlkaW5nID0gZmFsc2UpXG5cbiAgICB2YXIgcmVsYXRlZFRhcmdldCA9ICRuZXh0WzBdXG4gICAgdmFyIHNsaWRlRXZlbnQgPSAkLkV2ZW50KCdzbGlkZS5icy5jYXJvdXNlbCcsIHtcbiAgICAgIHJlbGF0ZWRUYXJnZXQ6IHJlbGF0ZWRUYXJnZXQsXG4gICAgICBkaXJlY3Rpb246IGRpcmVjdGlvblxuICAgIH0pXG4gICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHNsaWRlRXZlbnQpXG4gICAgaWYgKHNsaWRlRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgdGhpcy5zbGlkaW5nID0gdHJ1ZVxuXG4gICAgaXNDeWNsaW5nICYmIHRoaXMucGF1c2UoKVxuXG4gICAgaWYgKHRoaXMuJGluZGljYXRvcnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLiRpbmRpY2F0b3JzLmZpbmQoJy5hY3RpdmUnKS5yZW1vdmVDbGFzcygnYWN0aXZlJylcbiAgICAgIHZhciAkbmV4dEluZGljYXRvciA9ICQodGhpcy4kaW5kaWNhdG9ycy5jaGlsZHJlbigpW3RoaXMuZ2V0SXRlbUluZGV4KCRuZXh0KV0pXG4gICAgICAkbmV4dEluZGljYXRvciAmJiAkbmV4dEluZGljYXRvci5hZGRDbGFzcygnYWN0aXZlJylcbiAgICB9XG5cbiAgICB2YXIgc2xpZEV2ZW50ID0gJC5FdmVudCgnc2xpZC5icy5jYXJvdXNlbCcsIHsgcmVsYXRlZFRhcmdldDogcmVsYXRlZFRhcmdldCwgZGlyZWN0aW9uOiBkaXJlY3Rpb24gfSkgLy8geWVzLCBcInNsaWRcIlxuICAgIGlmICgkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdzbGlkZScpKSB7XG4gICAgICAkbmV4dC5hZGRDbGFzcyh0eXBlKVxuICAgICAgJG5leHRbMF0ub2Zmc2V0V2lkdGggLy8gZm9yY2UgcmVmbG93XG4gICAgICAkYWN0aXZlLmFkZENsYXNzKGRpcmVjdGlvbilcbiAgICAgICRuZXh0LmFkZENsYXNzKGRpcmVjdGlvbilcbiAgICAgICRhY3RpdmVcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICRuZXh0LnJlbW92ZUNsYXNzKFt0eXBlLCBkaXJlY3Rpb25dLmpvaW4oJyAnKSkuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICAgJGFjdGl2ZS5yZW1vdmVDbGFzcyhbJ2FjdGl2ZScsIGRpcmVjdGlvbl0uam9pbignICcpKVxuICAgICAgICAgIHRoYXQuc2xpZGluZyA9IGZhbHNlXG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGF0LiRlbGVtZW50LnRyaWdnZXIoc2xpZEV2ZW50KVxuICAgICAgICAgIH0sIDApXG4gICAgICAgIH0pXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChDYXJvdXNlbC5UUkFOU0lUSU9OX0RVUkFUSU9OKVxuICAgIH0gZWxzZSB7XG4gICAgICAkYWN0aXZlLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgJG5leHQuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB0aGlzLnNsaWRpbmcgPSBmYWxzZVxuICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHNsaWRFdmVudClcbiAgICB9XG5cbiAgICBpc0N5Y2xpbmcgJiYgdGhpcy5jeWNsZSgpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBDQVJPVVNFTCBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5jYXJvdXNlbCcpXG4gICAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBDYXJvdXNlbC5ERUZBVUxUUywgJHRoaXMuZGF0YSgpLCB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvbilcbiAgICAgIHZhciBhY3Rpb24gID0gdHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJyA/IG9wdGlvbiA6IG9wdGlvbnMuc2xpZGVcblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5jYXJvdXNlbCcsIChkYXRhID0gbmV3IENhcm91c2VsKHRoaXMsIG9wdGlvbnMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdudW1iZXInKSBkYXRhLnRvKG9wdGlvbilcbiAgICAgIGVsc2UgaWYgKGFjdGlvbikgZGF0YVthY3Rpb25dKClcbiAgICAgIGVsc2UgaWYgKG9wdGlvbnMuaW50ZXJ2YWwpIGRhdGEucGF1c2UoKS5jeWNsZSgpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLmNhcm91c2VsXG5cbiAgJC5mbi5jYXJvdXNlbCAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLmNhcm91c2VsLkNvbnN0cnVjdG9yID0gQ2Fyb3VzZWxcblxuXG4gIC8vIENBUk9VU0VMIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5jYXJvdXNlbC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uY2Fyb3VzZWwgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBDQVJPVVNFTCBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PT09PVxuXG4gIHZhciBjbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgIHZhciBocmVmXG4gICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gICAgdmFyICR0YXJnZXQgPSAkKCR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykgfHwgKGhyZWYgPSAkdGhpcy5hdHRyKCdocmVmJykpICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgaWYgKCEkdGFyZ2V0Lmhhc0NsYXNzKCdjYXJvdXNlbCcpKSByZXR1cm5cbiAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkdGFyZ2V0LmRhdGEoKSwgJHRoaXMuZGF0YSgpKVxuICAgIHZhciBzbGlkZUluZGV4ID0gJHRoaXMuYXR0cignZGF0YS1zbGlkZS10bycpXG4gICAgaWYgKHNsaWRlSW5kZXgpIG9wdGlvbnMuaW50ZXJ2YWwgPSBmYWxzZVxuXG4gICAgUGx1Z2luLmNhbGwoJHRhcmdldCwgb3B0aW9ucylcblxuICAgIGlmIChzbGlkZUluZGV4KSB7XG4gICAgICAkdGFyZ2V0LmRhdGEoJ2JzLmNhcm91c2VsJykudG8oc2xpZGVJbmRleClcbiAgICB9XG5cbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgfVxuXG4gICQoZG9jdW1lbnQpXG4gICAgLm9uKCdjbGljay5icy5jYXJvdXNlbC5kYXRhLWFwaScsICdbZGF0YS1zbGlkZV0nLCBjbGlja0hhbmRsZXIpXG4gICAgLm9uKCdjbGljay5icy5jYXJvdXNlbC5kYXRhLWFwaScsICdbZGF0YS1zbGlkZS10b10nLCBjbGlja0hhbmRsZXIpXG5cbiAgJCh3aW5kb3cpLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICQoJ1tkYXRhLXJpZGU9XCJjYXJvdXNlbFwiXScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICRjYXJvdXNlbCA9ICQodGhpcylcbiAgICAgIFBsdWdpbi5jYWxsKCRjYXJvdXNlbCwgJGNhcm91c2VsLmRhdGEoKSlcbiAgICB9KVxuICB9KVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiBjb2xsYXBzZS5qcyB2My4zLjZcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI2NvbGxhcHNlXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTUgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gQ09MTEFQU0UgUFVCTElDIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgQ29sbGFwc2UgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMuJGVsZW1lbnQgICAgICA9ICQoZWxlbWVudClcbiAgICB0aGlzLm9wdGlvbnMgICAgICAgPSAkLmV4dGVuZCh7fSwgQ29sbGFwc2UuREVGQVVMVFMsIG9wdGlvbnMpXG4gICAgdGhpcy4kdHJpZ2dlciAgICAgID0gJCgnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl1baHJlZj1cIiMnICsgZWxlbWVudC5pZCArICdcIl0sJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl1bZGF0YS10YXJnZXQ9XCIjJyArIGVsZW1lbnQuaWQgKyAnXCJdJylcbiAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSBudWxsXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnBhcmVudCkge1xuICAgICAgdGhpcy4kcGFyZW50ID0gdGhpcy5nZXRQYXJlbnQoKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyh0aGlzLiRlbGVtZW50LCB0aGlzLiR0cmlnZ2VyKVxuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMudG9nZ2xlKSB0aGlzLnRvZ2dsZSgpXG4gIH1cblxuICBDb2xsYXBzZS5WRVJTSU9OICA9ICczLjMuNidcblxuICBDb2xsYXBzZS5UUkFOU0lUSU9OX0RVUkFUSU9OID0gMzUwXG5cbiAgQ29sbGFwc2UuREVGQVVMVFMgPSB7XG4gICAgdG9nZ2xlOiB0cnVlXG4gIH1cblxuICBDb2xsYXBzZS5wcm90b3R5cGUuZGltZW5zaW9uID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBoYXNXaWR0aCA9IHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ3dpZHRoJylcbiAgICByZXR1cm4gaGFzV2lkdGggPyAnd2lkdGgnIDogJ2hlaWdodCdcbiAgfVxuXG4gIENvbGxhcHNlLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLnRyYW5zaXRpb25pbmcgfHwgdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnaW4nKSkgcmV0dXJuXG5cbiAgICB2YXIgYWN0aXZlc0RhdGFcbiAgICB2YXIgYWN0aXZlcyA9IHRoaXMuJHBhcmVudCAmJiB0aGlzLiRwYXJlbnQuY2hpbGRyZW4oJy5wYW5lbCcpLmNoaWxkcmVuKCcuaW4sIC5jb2xsYXBzaW5nJylcblxuICAgIGlmIChhY3RpdmVzICYmIGFjdGl2ZXMubGVuZ3RoKSB7XG4gICAgICBhY3RpdmVzRGF0YSA9IGFjdGl2ZXMuZGF0YSgnYnMuY29sbGFwc2UnKVxuICAgICAgaWYgKGFjdGl2ZXNEYXRhICYmIGFjdGl2ZXNEYXRhLnRyYW5zaXRpb25pbmcpIHJldHVyblxuICAgIH1cblxuICAgIHZhciBzdGFydEV2ZW50ID0gJC5FdmVudCgnc2hvdy5icy5jb2xsYXBzZScpXG4gICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHN0YXJ0RXZlbnQpXG4gICAgaWYgKHN0YXJ0RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgaWYgKGFjdGl2ZXMgJiYgYWN0aXZlcy5sZW5ndGgpIHtcbiAgICAgIFBsdWdpbi5jYWxsKGFjdGl2ZXMsICdoaWRlJylcbiAgICAgIGFjdGl2ZXNEYXRhIHx8IGFjdGl2ZXMuZGF0YSgnYnMuY29sbGFwc2UnLCBudWxsKVxuICAgIH1cblxuICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLmRpbWVuc2lvbigpXG5cbiAgICB0aGlzLiRlbGVtZW50XG4gICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlJylcbiAgICAgIC5hZGRDbGFzcygnY29sbGFwc2luZycpW2RpbWVuc2lvbl0oMClcbiAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSlcblxuICAgIHRoaXMuJHRyaWdnZXJcbiAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2VkJylcbiAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSlcblxuICAgIHRoaXMudHJhbnNpdGlvbmluZyA9IDFcblxuICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzaW5nJylcbiAgICAgICAgLmFkZENsYXNzKCdjb2xsYXBzZSBpbicpW2RpbWVuc2lvbl0oJycpXG4gICAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAwXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC50cmlnZ2VyKCdzaG93bi5icy5jb2xsYXBzZScpXG4gICAgfVxuXG4gICAgaWYgKCEkLnN1cHBvcnQudHJhbnNpdGlvbikgcmV0dXJuIGNvbXBsZXRlLmNhbGwodGhpcylcblxuICAgIHZhciBzY3JvbGxTaXplID0gJC5jYW1lbENhc2UoWydzY3JvbGwnLCBkaW1lbnNpb25dLmpvaW4oJy0nKSlcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsICQucHJveHkoY29tcGxldGUsIHRoaXMpKVxuICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKENvbGxhcHNlLlRSQU5TSVRJT05fRFVSQVRJT04pW2RpbWVuc2lvbl0odGhpcy4kZWxlbWVudFswXVtzY3JvbGxTaXplXSlcbiAgfVxuXG4gIENvbGxhcHNlLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLnRyYW5zaXRpb25pbmcgfHwgIXRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2luJykpIHJldHVyblxuXG4gICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KCdoaWRlLmJzLmNvbGxhcHNlJylcbiAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc3RhcnRFdmVudClcbiAgICBpZiAoc3RhcnRFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICB2YXIgZGltZW5zaW9uID0gdGhpcy5kaW1lbnNpb24oKVxuXG4gICAgdGhpcy4kZWxlbWVudFtkaW1lbnNpb25dKHRoaXMuJGVsZW1lbnRbZGltZW5zaW9uXSgpKVswXS5vZmZzZXRIZWlnaHRcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIC5hZGRDbGFzcygnY29sbGFwc2luZycpXG4gICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlIGluJylcbiAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpXG5cbiAgICB0aGlzLiR0cmlnZ2VyXG4gICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNlZCcpXG4gICAgICAuYXR0cignYXJpYS1leHBhbmRlZCcsIGZhbHNlKVxuXG4gICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMVxuXG4gICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMFxuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNpbmcnKVxuICAgICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNlJylcbiAgICAgICAgLnRyaWdnZXIoJ2hpZGRlbi5icy5jb2xsYXBzZScpXG4gICAgfVxuXG4gICAgaWYgKCEkLnN1cHBvcnQudHJhbnNpdGlvbikgcmV0dXJuIGNvbXBsZXRlLmNhbGwodGhpcylcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIFtkaW1lbnNpb25dKDApXG4gICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCAkLnByb3h5KGNvbXBsZXRlLCB0aGlzKSlcbiAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChDb2xsYXBzZS5UUkFOU0lUSU9OX0RVUkFUSU9OKVxuICB9XG5cbiAgQ29sbGFwc2UucHJvdG90eXBlLnRvZ2dsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzW3RoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2luJykgPyAnaGlkZScgOiAnc2hvdyddKClcbiAgfVxuXG4gIENvbGxhcHNlLnByb3RvdHlwZS5nZXRQYXJlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICQodGhpcy5vcHRpb25zLnBhcmVudClcbiAgICAgIC5maW5kKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXBhcmVudD1cIicgKyB0aGlzLm9wdGlvbnMucGFyZW50ICsgJ1wiXScpXG4gICAgICAuZWFjaCgkLnByb3h5KGZ1bmN0aW9uIChpLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciAkZWxlbWVudCA9ICQoZWxlbWVudClcbiAgICAgICAgdGhpcy5hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MoZ2V0VGFyZ2V0RnJvbVRyaWdnZXIoJGVsZW1lbnQpLCAkZWxlbWVudClcbiAgICAgIH0sIHRoaXMpKVxuICAgICAgLmVuZCgpXG4gIH1cblxuICBDb2xsYXBzZS5wcm90b3R5cGUuYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzID0gZnVuY3Rpb24gKCRlbGVtZW50LCAkdHJpZ2dlcikge1xuICAgIHZhciBpc09wZW4gPSAkZWxlbWVudC5oYXNDbGFzcygnaW4nKVxuXG4gICAgJGVsZW1lbnQuYXR0cignYXJpYS1leHBhbmRlZCcsIGlzT3BlbilcbiAgICAkdHJpZ2dlclxuICAgICAgLnRvZ2dsZUNsYXNzKCdjb2xsYXBzZWQnLCAhaXNPcGVuKVxuICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBpc09wZW4pXG4gIH1cblxuICBmdW5jdGlvbiBnZXRUYXJnZXRGcm9tVHJpZ2dlcigkdHJpZ2dlcikge1xuICAgIHZhciBocmVmXG4gICAgdmFyIHRhcmdldCA9ICR0cmlnZ2VyLmF0dHIoJ2RhdGEtdGFyZ2V0JylcbiAgICAgIHx8IChocmVmID0gJHRyaWdnZXIuYXR0cignaHJlZicpKSAmJiBocmVmLnJlcGxhY2UoLy4qKD89I1teXFxzXSskKS8sICcnKSAvLyBzdHJpcCBmb3IgaWU3XG5cbiAgICByZXR1cm4gJCh0YXJnZXQpXG4gIH1cblxuXG4gIC8vIENPTExBUFNFIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLmNvbGxhcHNlJylcbiAgICAgIHZhciBvcHRpb25zID0gJC5leHRlbmQoe30sIENvbGxhcHNlLkRFRkFVTFRTLCAkdGhpcy5kYXRhKCksIHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uKVxuXG4gICAgICBpZiAoIWRhdGEgJiYgb3B0aW9ucy50b2dnbGUgJiYgL3Nob3d8aGlkZS8udGVzdChvcHRpb24pKSBvcHRpb25zLnRvZ2dsZSA9IGZhbHNlXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLmNvbGxhcHNlJywgKGRhdGEgPSBuZXcgQ29sbGFwc2UodGhpcywgb3B0aW9ucykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXSgpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLmNvbGxhcHNlXG5cbiAgJC5mbi5jb2xsYXBzZSAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLmNvbGxhcHNlLkNvbnN0cnVjdG9yID0gQ29sbGFwc2VcblxuXG4gIC8vIENPTExBUFNFIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5jb2xsYXBzZS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uY29sbGFwc2UgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBDT0xMQVBTRSBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PT09PVxuXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljay5icy5jb2xsYXBzZS5kYXRhLWFwaScsICdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG5cbiAgICBpZiAoISR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykpIGUucHJldmVudERlZmF1bHQoKVxuXG4gICAgdmFyICR0YXJnZXQgPSBnZXRUYXJnZXRGcm9tVHJpZ2dlcigkdGhpcylcbiAgICB2YXIgZGF0YSAgICA9ICR0YXJnZXQuZGF0YSgnYnMuY29sbGFwc2UnKVxuICAgIHZhciBvcHRpb24gID0gZGF0YSA/ICd0b2dnbGUnIDogJHRoaXMuZGF0YSgpXG5cbiAgICBQbHVnaW4uY2FsbCgkdGFyZ2V0LCBvcHRpb24pXG4gIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IGRyb3Bkb3duLmpzIHYzLjMuNlxuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jZHJvcGRvd25zXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTUgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gRFJPUERPV04gQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIGJhY2tkcm9wID0gJy5kcm9wZG93bi1iYWNrZHJvcCdcbiAgdmFyIHRvZ2dsZSAgID0gJ1tkYXRhLXRvZ2dsZT1cImRyb3Bkb3duXCJdJ1xuICB2YXIgRHJvcGRvd24gPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICQoZWxlbWVudCkub24oJ2NsaWNrLmJzLmRyb3Bkb3duJywgdGhpcy50b2dnbGUpXG4gIH1cblxuICBEcm9wZG93bi5WRVJTSU9OID0gJzMuMy42J1xuXG4gIGZ1bmN0aW9uIGdldFBhcmVudCgkdGhpcykge1xuICAgIHZhciBzZWxlY3RvciA9ICR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JylcblxuICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgIHNlbGVjdG9yID0gJHRoaXMuYXR0cignaHJlZicpXG4gICAgICBzZWxlY3RvciA9IHNlbGVjdG9yICYmIC8jW0EtWmEtel0vLnRlc3Qoc2VsZWN0b3IpICYmIHNlbGVjdG9yLnJlcGxhY2UoLy4qKD89I1teXFxzXSokKS8sICcnKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgfVxuXG4gICAgdmFyICRwYXJlbnQgPSBzZWxlY3RvciAmJiAkKHNlbGVjdG9yKVxuXG4gICAgcmV0dXJuICRwYXJlbnQgJiYgJHBhcmVudC5sZW5ndGggPyAkcGFyZW50IDogJHRoaXMucGFyZW50KClcbiAgfVxuXG4gIGZ1bmN0aW9uIGNsZWFyTWVudXMoZSkge1xuICAgIGlmIChlICYmIGUud2hpY2ggPT09IDMpIHJldHVyblxuICAgICQoYmFja2Ryb3ApLnJlbW92ZSgpXG4gICAgJCh0b2dnbGUpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzICAgICAgICAgPSAkKHRoaXMpXG4gICAgICB2YXIgJHBhcmVudCAgICAgICA9IGdldFBhcmVudCgkdGhpcylcbiAgICAgIHZhciByZWxhdGVkVGFyZ2V0ID0geyByZWxhdGVkVGFyZ2V0OiB0aGlzIH1cblxuICAgICAgaWYgKCEkcGFyZW50Lmhhc0NsYXNzKCdvcGVuJykpIHJldHVyblxuXG4gICAgICBpZiAoZSAmJiBlLnR5cGUgPT0gJ2NsaWNrJyAmJiAvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KGUudGFyZ2V0LnRhZ05hbWUpICYmICQuY29udGFpbnMoJHBhcmVudFswXSwgZS50YXJnZXQpKSByZXR1cm5cblxuICAgICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdoaWRlLmJzLmRyb3Bkb3duJywgcmVsYXRlZFRhcmdldCkpXG5cbiAgICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgICAgJHRoaXMuYXR0cignYXJpYS1leHBhbmRlZCcsICdmYWxzZScpXG4gICAgICAkcGFyZW50LnJlbW92ZUNsYXNzKCdvcGVuJykudHJpZ2dlcigkLkV2ZW50KCdoaWRkZW4uYnMuZHJvcGRvd24nLCByZWxhdGVkVGFyZ2V0KSlcbiAgICB9KVxuICB9XG5cbiAgRHJvcGRvd24ucHJvdG90eXBlLnRvZ2dsZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyICR0aGlzID0gJCh0aGlzKVxuXG4gICAgaWYgKCR0aGlzLmlzKCcuZGlzYWJsZWQsIDpkaXNhYmxlZCcpKSByZXR1cm5cblxuICAgIHZhciAkcGFyZW50ICA9IGdldFBhcmVudCgkdGhpcylcbiAgICB2YXIgaXNBY3RpdmUgPSAkcGFyZW50Lmhhc0NsYXNzKCdvcGVuJylcblxuICAgIGNsZWFyTWVudXMoKVxuXG4gICAgaWYgKCFpc0FjdGl2ZSkge1xuICAgICAgaWYgKCdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiAhJHBhcmVudC5jbG9zZXN0KCcubmF2YmFyLW5hdicpLmxlbmd0aCkge1xuICAgICAgICAvLyBpZiBtb2JpbGUgd2UgdXNlIGEgYmFja2Ryb3AgYmVjYXVzZSBjbGljayBldmVudHMgZG9uJ3QgZGVsZWdhdGVcbiAgICAgICAgJChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSlcbiAgICAgICAgICAuYWRkQ2xhc3MoJ2Ryb3Bkb3duLWJhY2tkcm9wJylcbiAgICAgICAgICAuaW5zZXJ0QWZ0ZXIoJCh0aGlzKSlcbiAgICAgICAgICAub24oJ2NsaWNrJywgY2xlYXJNZW51cylcbiAgICAgIH1cblxuICAgICAgdmFyIHJlbGF0ZWRUYXJnZXQgPSB7IHJlbGF0ZWRUYXJnZXQ6IHRoaXMgfVxuICAgICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdzaG93LmJzLmRyb3Bkb3duJywgcmVsYXRlZFRhcmdldCkpXG5cbiAgICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgICAgJHRoaXNcbiAgICAgICAgLnRyaWdnZXIoJ2ZvY3VzJylcbiAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCAndHJ1ZScpXG5cbiAgICAgICRwYXJlbnRcbiAgICAgICAgLnRvZ2dsZUNsYXNzKCdvcGVuJylcbiAgICAgICAgLnRyaWdnZXIoJC5FdmVudCgnc2hvd24uYnMuZHJvcGRvd24nLCByZWxhdGVkVGFyZ2V0KSlcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIERyb3Bkb3duLnByb3RvdHlwZS5rZXlkb3duID0gZnVuY3Rpb24gKGUpIHtcbiAgICBpZiAoIS8oMzh8NDB8Mjd8MzIpLy50ZXN0KGUud2hpY2gpIHx8IC9pbnB1dHx0ZXh0YXJlYS9pLnRlc3QoZS50YXJnZXQudGFnTmFtZSkpIHJldHVyblxuXG4gICAgdmFyICR0aGlzID0gJCh0aGlzKVxuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuXG4gICAgaWYgKCR0aGlzLmlzKCcuZGlzYWJsZWQsIDpkaXNhYmxlZCcpKSByZXR1cm5cblxuICAgIHZhciAkcGFyZW50ICA9IGdldFBhcmVudCgkdGhpcylcbiAgICB2YXIgaXNBY3RpdmUgPSAkcGFyZW50Lmhhc0NsYXNzKCdvcGVuJylcblxuICAgIGlmICghaXNBY3RpdmUgJiYgZS53aGljaCAhPSAyNyB8fCBpc0FjdGl2ZSAmJiBlLndoaWNoID09IDI3KSB7XG4gICAgICBpZiAoZS53aGljaCA9PSAyNykgJHBhcmVudC5maW5kKHRvZ2dsZSkudHJpZ2dlcignZm9jdXMnKVxuICAgICAgcmV0dXJuICR0aGlzLnRyaWdnZXIoJ2NsaWNrJylcbiAgICB9XG5cbiAgICB2YXIgZGVzYyA9ICcgbGk6bm90KC5kaXNhYmxlZCk6dmlzaWJsZSBhJ1xuICAgIHZhciAkaXRlbXMgPSAkcGFyZW50LmZpbmQoJy5kcm9wZG93bi1tZW51JyArIGRlc2MpXG5cbiAgICBpZiAoISRpdGVtcy5sZW5ndGgpIHJldHVyblxuXG4gICAgdmFyIGluZGV4ID0gJGl0ZW1zLmluZGV4KGUudGFyZ2V0KVxuXG4gICAgaWYgKGUud2hpY2ggPT0gMzggJiYgaW5kZXggPiAwKSAgICAgICAgICAgICAgICAgaW5kZXgtLSAgICAgICAgIC8vIHVwXG4gICAgaWYgKGUud2hpY2ggPT0gNDAgJiYgaW5kZXggPCAkaXRlbXMubGVuZ3RoIC0gMSkgaW5kZXgrKyAgICAgICAgIC8vIGRvd25cbiAgICBpZiAoIX5pbmRleCkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IDBcblxuICAgICRpdGVtcy5lcShpbmRleCkudHJpZ2dlcignZm9jdXMnKVxuICB9XG5cblxuICAvLyBEUk9QRE9XTiBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICA9ICR0aGlzLmRhdGEoJ2JzLmRyb3Bkb3duJylcblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5kcm9wZG93bicsIChkYXRhID0gbmV3IERyb3Bkb3duKHRoaXMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0uY2FsbCgkdGhpcylcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uZHJvcGRvd25cblxuICAkLmZuLmRyb3Bkb3duICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4uZHJvcGRvd24uQ29uc3RydWN0b3IgPSBEcm9wZG93blxuXG5cbiAgLy8gRFJPUERPV04gTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLmRyb3Bkb3duLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5kcm9wZG93biA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIEFQUExZIFRPIFNUQU5EQVJEIERST1BET1dOIEVMRU1FTlRTXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgJChkb2N1bWVudClcbiAgICAub24oJ2NsaWNrLmJzLmRyb3Bkb3duLmRhdGEtYXBpJywgY2xlYXJNZW51cylcbiAgICAub24oJ2NsaWNrLmJzLmRyb3Bkb3duLmRhdGEtYXBpJywgJy5kcm9wZG93biBmb3JtJywgZnVuY3Rpb24gKGUpIHsgZS5zdG9wUHJvcGFnYXRpb24oKSB9KVxuICAgIC5vbignY2xpY2suYnMuZHJvcGRvd24uZGF0YS1hcGknLCB0b2dnbGUsIERyb3Bkb3duLnByb3RvdHlwZS50b2dnbGUpXG4gICAgLm9uKCdrZXlkb3duLmJzLmRyb3Bkb3duLmRhdGEtYXBpJywgdG9nZ2xlLCBEcm9wZG93bi5wcm90b3R5cGUua2V5ZG93bilcbiAgICAub24oJ2tleWRvd24uYnMuZHJvcGRvd24uZGF0YS1hcGknLCAnLmRyb3Bkb3duLW1lbnUnLCBEcm9wZG93bi5wcm90b3R5cGUua2V5ZG93bilcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogbW9kYWwuanMgdjMuMy42XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNtb2RhbHNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBNT0RBTCBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgTW9kYWwgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyAgICAgICAgICAgICA9IG9wdGlvbnNcbiAgICB0aGlzLiRib2R5ICAgICAgICAgICAgICAgPSAkKGRvY3VtZW50LmJvZHkpXG4gICAgdGhpcy4kZWxlbWVudCAgICAgICAgICAgID0gJChlbGVtZW50KVxuICAgIHRoaXMuJGRpYWxvZyAgICAgICAgICAgICA9IHRoaXMuJGVsZW1lbnQuZmluZCgnLm1vZGFsLWRpYWxvZycpXG4gICAgdGhpcy4kYmFja2Ryb3AgICAgICAgICAgID0gbnVsbFxuICAgIHRoaXMuaXNTaG93biAgICAgICAgICAgICA9IG51bGxcbiAgICB0aGlzLm9yaWdpbmFsQm9keVBhZCAgICAgPSBudWxsXG4gICAgdGhpcy5zY3JvbGxiYXJXaWR0aCAgICAgID0gMFxuICAgIHRoaXMuaWdub3JlQmFja2Ryb3BDbGljayA9IGZhbHNlXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnJlbW90ZSkge1xuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAuZmluZCgnLm1vZGFsLWNvbnRlbnQnKVxuICAgICAgICAubG9hZCh0aGlzLm9wdGlvbnMucmVtb3RlLCAkLnByb3h5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoJ2xvYWRlZC5icy5tb2RhbCcpXG4gICAgICAgIH0sIHRoaXMpKVxuICAgIH1cbiAgfVxuXG4gIE1vZGFsLlZFUlNJT04gID0gJzMuMy42J1xuXG4gIE1vZGFsLlRSQU5TSVRJT05fRFVSQVRJT04gPSAzMDBcbiAgTW9kYWwuQkFDS0RST1BfVFJBTlNJVElPTl9EVVJBVElPTiA9IDE1MFxuXG4gIE1vZGFsLkRFRkFVTFRTID0ge1xuICAgIGJhY2tkcm9wOiB0cnVlLFxuICAgIGtleWJvYXJkOiB0cnVlLFxuICAgIHNob3c6IHRydWVcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoX3JlbGF0ZWRUYXJnZXQpIHtcbiAgICByZXR1cm4gdGhpcy5pc1Nob3duID8gdGhpcy5oaWRlKCkgOiB0aGlzLnNob3coX3JlbGF0ZWRUYXJnZXQpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uIChfcmVsYXRlZFRhcmdldCkge1xuICAgIHZhciB0aGF0ID0gdGhpc1xuICAgIHZhciBlICAgID0gJC5FdmVudCgnc2hvdy5icy5tb2RhbCcsIHsgcmVsYXRlZFRhcmdldDogX3JlbGF0ZWRUYXJnZXQgfSlcblxuICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihlKVxuXG4gICAgaWYgKHRoaXMuaXNTaG93biB8fCBlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgIHRoaXMuaXNTaG93biA9IHRydWVcblxuICAgIHRoaXMuY2hlY2tTY3JvbGxiYXIoKVxuICAgIHRoaXMuc2V0U2Nyb2xsYmFyKClcbiAgICB0aGlzLiRib2R5LmFkZENsYXNzKCdtb2RhbC1vcGVuJylcblxuICAgIHRoaXMuZXNjYXBlKClcbiAgICB0aGlzLnJlc2l6ZSgpXG5cbiAgICB0aGlzLiRlbGVtZW50Lm9uKCdjbGljay5kaXNtaXNzLmJzLm1vZGFsJywgJ1tkYXRhLWRpc21pc3M9XCJtb2RhbFwiXScsICQucHJveHkodGhpcy5oaWRlLCB0aGlzKSlcblxuICAgIHRoaXMuJGRpYWxvZy5vbignbW91c2Vkb3duLmRpc21pc3MuYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGF0LiRlbGVtZW50Lm9uZSgnbW91c2V1cC5kaXNtaXNzLmJzLm1vZGFsJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKCQoZS50YXJnZXQpLmlzKHRoYXQuJGVsZW1lbnQpKSB0aGF0Lmlnbm9yZUJhY2tkcm9wQ2xpY2sgPSB0cnVlXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICB0aGlzLmJhY2tkcm9wKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB0cmFuc2l0aW9uID0gJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhhdC4kZWxlbWVudC5oYXNDbGFzcygnZmFkZScpXG5cbiAgICAgIGlmICghdGhhdC4kZWxlbWVudC5wYXJlbnQoKS5sZW5ndGgpIHtcbiAgICAgICAgdGhhdC4kZWxlbWVudC5hcHBlbmRUbyh0aGF0LiRib2R5KSAvLyBkb24ndCBtb3ZlIG1vZGFscyBkb20gcG9zaXRpb25cbiAgICAgIH1cblxuICAgICAgdGhhdC4kZWxlbWVudFxuICAgICAgICAuc2hvdygpXG4gICAgICAgIC5zY3JvbGxUb3AoMClcblxuICAgICAgdGhhdC5hZGp1c3REaWFsb2coKVxuXG4gICAgICBpZiAodHJhbnNpdGlvbikge1xuICAgICAgICB0aGF0LiRlbGVtZW50WzBdLm9mZnNldFdpZHRoIC8vIGZvcmNlIHJlZmxvd1xuICAgICAgfVxuXG4gICAgICB0aGF0LiRlbGVtZW50LmFkZENsYXNzKCdpbicpXG5cbiAgICAgIHRoYXQuZW5mb3JjZUZvY3VzKClcblxuICAgICAgdmFyIGUgPSAkLkV2ZW50KCdzaG93bi5icy5tb2RhbCcsIHsgcmVsYXRlZFRhcmdldDogX3JlbGF0ZWRUYXJnZXQgfSlcblxuICAgICAgdHJhbnNpdGlvbiA/XG4gICAgICAgIHRoYXQuJGRpYWxvZyAvLyB3YWl0IGZvciBtb2RhbCB0byBzbGlkZSBpblxuICAgICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoYXQuJGVsZW1lbnQudHJpZ2dlcignZm9jdXMnKS50cmlnZ2VyKGUpXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoTW9kYWwuVFJBTlNJVElPTl9EVVJBVElPTikgOlxuICAgICAgICB0aGF0LiRlbGVtZW50LnRyaWdnZXIoJ2ZvY3VzJykudHJpZ2dlcihlKVxuICAgIH0pXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKGUpIGUucHJldmVudERlZmF1bHQoKVxuXG4gICAgZSA9ICQuRXZlbnQoJ2hpZGUuYnMubW9kYWwnKVxuXG4gICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKGUpXG5cbiAgICBpZiAoIXRoaXMuaXNTaG93biB8fCBlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgIHRoaXMuaXNTaG93biA9IGZhbHNlXG5cbiAgICB0aGlzLmVzY2FwZSgpXG4gICAgdGhpcy5yZXNpemUoKVxuXG4gICAgJChkb2N1bWVudCkub2ZmKCdmb2N1c2luLmJzLm1vZGFsJylcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIC5yZW1vdmVDbGFzcygnaW4nKVxuICAgICAgLm9mZignY2xpY2suZGlzbWlzcy5icy5tb2RhbCcpXG4gICAgICAub2ZmKCdtb3VzZXVwLmRpc21pc3MuYnMubW9kYWwnKVxuXG4gICAgdGhpcy4kZGlhbG9nLm9mZignbW91c2Vkb3duLmRpc21pc3MuYnMubW9kYWwnKVxuXG4gICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgJC5wcm94eSh0aGlzLmhpZGVNb2RhbCwgdGhpcykpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChNb2RhbC5UUkFOU0lUSU9OX0RVUkFUSU9OKSA6XG4gICAgICB0aGlzLmhpZGVNb2RhbCgpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuZW5mb3JjZUZvY3VzID0gZnVuY3Rpb24gKCkge1xuICAgICQoZG9jdW1lbnQpXG4gICAgICAub2ZmKCdmb2N1c2luLmJzLm1vZGFsJykgLy8gZ3VhcmQgYWdhaW5zdCBpbmZpbml0ZSBmb2N1cyBsb29wXG4gICAgICAub24oJ2ZvY3VzaW4uYnMubW9kYWwnLCAkLnByb3h5KGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmICh0aGlzLiRlbGVtZW50WzBdICE9PSBlLnRhcmdldCAmJiAhdGhpcy4kZWxlbWVudC5oYXMoZS50YXJnZXQpLmxlbmd0aCkge1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcignZm9jdXMnKVxuICAgICAgICB9XG4gICAgICB9LCB0aGlzKSlcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5lc2NhcGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuaXNTaG93biAmJiB0aGlzLm9wdGlvbnMua2V5Ym9hcmQpIHtcbiAgICAgIHRoaXMuJGVsZW1lbnQub24oJ2tleWRvd24uZGlzbWlzcy5icy5tb2RhbCcsICQucHJveHkoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS53aGljaCA9PSAyNyAmJiB0aGlzLmhpZGUoKVxuICAgICAgfSwgdGhpcykpXG4gICAgfSBlbHNlIGlmICghdGhpcy5pc1Nob3duKSB7XG4gICAgICB0aGlzLiRlbGVtZW50Lm9mZigna2V5ZG93bi5kaXNtaXNzLmJzLm1vZGFsJylcbiAgICB9XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUucmVzaXplID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLmlzU2hvd24pIHtcbiAgICAgICQod2luZG93KS5vbigncmVzaXplLmJzLm1vZGFsJywgJC5wcm94eSh0aGlzLmhhbmRsZVVwZGF0ZSwgdGhpcykpXG4gICAgfSBlbHNlIHtcbiAgICAgICQod2luZG93KS5vZmYoJ3Jlc2l6ZS5icy5tb2RhbCcpXG4gICAgfVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmhpZGVNb2RhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXNcbiAgICB0aGlzLiRlbGVtZW50LmhpZGUoKVxuICAgIHRoaXMuYmFja2Ryb3AoZnVuY3Rpb24gKCkge1xuICAgICAgdGhhdC4kYm9keS5yZW1vdmVDbGFzcygnbW9kYWwtb3BlbicpXG4gICAgICB0aGF0LnJlc2V0QWRqdXN0bWVudHMoKVxuICAgICAgdGhhdC5yZXNldFNjcm9sbGJhcigpXG4gICAgICB0aGF0LiRlbGVtZW50LnRyaWdnZXIoJ2hpZGRlbi5icy5tb2RhbCcpXG4gICAgfSlcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5yZW1vdmVCYWNrZHJvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLiRiYWNrZHJvcCAmJiB0aGlzLiRiYWNrZHJvcC5yZW1vdmUoKVxuICAgIHRoaXMuJGJhY2tkcm9wID0gbnVsbFxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmJhY2tkcm9wID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzXG4gICAgdmFyIGFuaW1hdGUgPSB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdmYWRlJykgPyAnZmFkZScgOiAnJ1xuXG4gICAgaWYgKHRoaXMuaXNTaG93biAmJiB0aGlzLm9wdGlvbnMuYmFja2Ryb3ApIHtcbiAgICAgIHZhciBkb0FuaW1hdGUgPSAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiBhbmltYXRlXG5cbiAgICAgIHRoaXMuJGJhY2tkcm9wID0gJChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSlcbiAgICAgICAgLmFkZENsYXNzKCdtb2RhbC1iYWNrZHJvcCAnICsgYW5pbWF0ZSlcbiAgICAgICAgLmFwcGVuZFRvKHRoaXMuJGJvZHkpXG5cbiAgICAgIHRoaXMuJGVsZW1lbnQub24oJ2NsaWNrLmRpc21pc3MuYnMubW9kYWwnLCAkLnByb3h5KGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmICh0aGlzLmlnbm9yZUJhY2tkcm9wQ2xpY2spIHtcbiAgICAgICAgICB0aGlzLmlnbm9yZUJhY2tkcm9wQ2xpY2sgPSBmYWxzZVxuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIGlmIChlLnRhcmdldCAhPT0gZS5jdXJyZW50VGFyZ2V0KSByZXR1cm5cbiAgICAgICAgdGhpcy5vcHRpb25zLmJhY2tkcm9wID09ICdzdGF0aWMnXG4gICAgICAgICAgPyB0aGlzLiRlbGVtZW50WzBdLmZvY3VzKClcbiAgICAgICAgICA6IHRoaXMuaGlkZSgpXG4gICAgICB9LCB0aGlzKSlcblxuICAgICAgaWYgKGRvQW5pbWF0ZSkgdGhpcy4kYmFja2Ryb3BbMF0ub2Zmc2V0V2lkdGggLy8gZm9yY2UgcmVmbG93XG5cbiAgICAgIHRoaXMuJGJhY2tkcm9wLmFkZENsYXNzKCdpbicpXG5cbiAgICAgIGlmICghY2FsbGJhY2spIHJldHVyblxuXG4gICAgICBkb0FuaW1hdGUgP1xuICAgICAgICB0aGlzLiRiYWNrZHJvcFxuICAgICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGNhbGxiYWNrKVxuICAgICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChNb2RhbC5CQUNLRFJPUF9UUkFOU0lUSU9OX0RVUkFUSU9OKSA6XG4gICAgICAgIGNhbGxiYWNrKClcblxuICAgIH0gZWxzZSBpZiAoIXRoaXMuaXNTaG93biAmJiB0aGlzLiRiYWNrZHJvcCkge1xuICAgICAgdGhpcy4kYmFja2Ryb3AucmVtb3ZlQ2xhc3MoJ2luJylcblxuICAgICAgdmFyIGNhbGxiYWNrUmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGF0LnJlbW92ZUJhY2tkcm9wKClcbiAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKVxuICAgICAgfVxuICAgICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgICAgdGhpcy4kYmFja2Ryb3BcbiAgICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCBjYWxsYmFja1JlbW92ZSlcbiAgICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoTW9kYWwuQkFDS0RST1BfVFJBTlNJVElPTl9EVVJBVElPTikgOlxuICAgICAgICBjYWxsYmFja1JlbW92ZSgpXG5cbiAgICB9IGVsc2UgaWYgKGNhbGxiYWNrKSB7XG4gICAgICBjYWxsYmFjaygpXG4gICAgfVxuICB9XG5cbiAgLy8gdGhlc2UgZm9sbG93aW5nIG1ldGhvZHMgYXJlIHVzZWQgdG8gaGFuZGxlIG92ZXJmbG93aW5nIG1vZGFsc1xuXG4gIE1vZGFsLnByb3RvdHlwZS5oYW5kbGVVcGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5hZGp1c3REaWFsb2coKVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmFkanVzdERpYWxvZyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbW9kYWxJc092ZXJmbG93aW5nID0gdGhpcy4kZWxlbWVudFswXS5zY3JvbGxIZWlnaHQgPiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0XG5cbiAgICB0aGlzLiRlbGVtZW50LmNzcyh7XG4gICAgICBwYWRkaW5nTGVmdDogICF0aGlzLmJvZHlJc092ZXJmbG93aW5nICYmIG1vZGFsSXNPdmVyZmxvd2luZyA/IHRoaXMuc2Nyb2xsYmFyV2lkdGggOiAnJyxcbiAgICAgIHBhZGRpbmdSaWdodDogdGhpcy5ib2R5SXNPdmVyZmxvd2luZyAmJiAhbW9kYWxJc092ZXJmbG93aW5nID8gdGhpcy5zY3JvbGxiYXJXaWR0aCA6ICcnXG4gICAgfSlcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5yZXNldEFkanVzdG1lbnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuJGVsZW1lbnQuY3NzKHtcbiAgICAgIHBhZGRpbmdMZWZ0OiAnJyxcbiAgICAgIHBhZGRpbmdSaWdodDogJydcbiAgICB9KVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmNoZWNrU2Nyb2xsYmFyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBmdWxsV2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aFxuICAgIGlmICghZnVsbFdpbmRvd1dpZHRoKSB7IC8vIHdvcmthcm91bmQgZm9yIG1pc3Npbmcgd2luZG93LmlubmVyV2lkdGggaW4gSUU4XG4gICAgICB2YXIgZG9jdW1lbnRFbGVtZW50UmVjdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgZnVsbFdpbmRvd1dpZHRoID0gZG9jdW1lbnRFbGVtZW50UmVjdC5yaWdodCAtIE1hdGguYWJzKGRvY3VtZW50RWxlbWVudFJlY3QubGVmdClcbiAgICB9XG4gICAgdGhpcy5ib2R5SXNPdmVyZmxvd2luZyA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggPCBmdWxsV2luZG93V2lkdGhcbiAgICB0aGlzLnNjcm9sbGJhcldpZHRoID0gdGhpcy5tZWFzdXJlU2Nyb2xsYmFyKClcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5zZXRTY3JvbGxiYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGJvZHlQYWQgPSBwYXJzZUludCgodGhpcy4kYm9keS5jc3MoJ3BhZGRpbmctcmlnaHQnKSB8fCAwKSwgMTApXG4gICAgdGhpcy5vcmlnaW5hbEJvZHlQYWQgPSBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCB8fCAnJ1xuICAgIGlmICh0aGlzLmJvZHlJc092ZXJmbG93aW5nKSB0aGlzLiRib2R5LmNzcygncGFkZGluZy1yaWdodCcsIGJvZHlQYWQgKyB0aGlzLnNjcm9sbGJhcldpZHRoKVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLnJlc2V0U2Nyb2xsYmFyID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuJGJvZHkuY3NzKCdwYWRkaW5nLXJpZ2h0JywgdGhpcy5vcmlnaW5hbEJvZHlQYWQpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUubWVhc3VyZVNjcm9sbGJhciA9IGZ1bmN0aW9uICgpIHsgLy8gdGh4IHdhbHNoXG4gICAgdmFyIHNjcm9sbERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgc2Nyb2xsRGl2LmNsYXNzTmFtZSA9ICdtb2RhbC1zY3JvbGxiYXItbWVhc3VyZSdcbiAgICB0aGlzLiRib2R5LmFwcGVuZChzY3JvbGxEaXYpXG4gICAgdmFyIHNjcm9sbGJhcldpZHRoID0gc2Nyb2xsRGl2Lm9mZnNldFdpZHRoIC0gc2Nyb2xsRGl2LmNsaWVudFdpZHRoXG4gICAgdGhpcy4kYm9keVswXS5yZW1vdmVDaGlsZChzY3JvbGxEaXYpXG4gICAgcmV0dXJuIHNjcm9sbGJhcldpZHRoXG4gIH1cblxuXG4gIC8vIE1PREFMIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbiwgX3JlbGF0ZWRUYXJnZXQpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5tb2RhbCcpXG4gICAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBNb2RhbC5ERUZBVUxUUywgJHRoaXMuZGF0YSgpLCB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvbilcblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5tb2RhbCcsIChkYXRhID0gbmV3IE1vZGFsKHRoaXMsIG9wdGlvbnMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0oX3JlbGF0ZWRUYXJnZXQpXG4gICAgICBlbHNlIGlmIChvcHRpb25zLnNob3cpIGRhdGEuc2hvdyhfcmVsYXRlZFRhcmdldClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4ubW9kYWxcblxuICAkLmZuLm1vZGFsICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4ubW9kYWwuQ29uc3RydWN0b3IgPSBNb2RhbFxuXG5cbiAgLy8gTU9EQUwgTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT1cblxuICAkLmZuLm1vZGFsLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5tb2RhbCA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIE1PREFMIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09XG5cbiAgJChkb2N1bWVudCkub24oJ2NsaWNrLmJzLm1vZGFsLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZT1cIm1vZGFsXCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICB2YXIgaHJlZiAgICA9ICR0aGlzLmF0dHIoJ2hyZWYnKVxuICAgIHZhciAkdGFyZ2V0ID0gJCgkdGhpcy5hdHRyKCdkYXRhLXRhcmdldCcpIHx8IChocmVmICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpKSkgLy8gc3RyaXAgZm9yIGllN1xuICAgIHZhciBvcHRpb24gID0gJHRhcmdldC5kYXRhKCdicy5tb2RhbCcpID8gJ3RvZ2dsZScgOiAkLmV4dGVuZCh7IHJlbW90ZTogIS8jLy50ZXN0KGhyZWYpICYmIGhyZWYgfSwgJHRhcmdldC5kYXRhKCksICR0aGlzLmRhdGEoKSlcblxuICAgIGlmICgkdGhpcy5pcygnYScpKSBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICR0YXJnZXQub25lKCdzaG93LmJzLm1vZGFsJywgZnVuY3Rpb24gKHNob3dFdmVudCkge1xuICAgICAgaWYgKHNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuIC8vIG9ubHkgcmVnaXN0ZXIgZm9jdXMgcmVzdG9yZXIgaWYgbW9kYWwgd2lsbCBhY3R1YWxseSBnZXQgc2hvd25cbiAgICAgICR0YXJnZXQub25lKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICR0aGlzLmlzKCc6dmlzaWJsZScpICYmICR0aGlzLnRyaWdnZXIoJ2ZvY3VzJylcbiAgICAgIH0pXG4gICAgfSlcbiAgICBQbHVnaW4uY2FsbCgkdGFyZ2V0LCBvcHRpb24sIHRoaXMpXG4gIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHRvb2x0aXAuanMgdjMuMy42XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0b29sdGlwXG4gKiBJbnNwaXJlZCBieSB0aGUgb3JpZ2luYWwgalF1ZXJ5LnRpcHN5IGJ5IEphc29uIEZyYW1lXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTUgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gVE9PTFRJUCBQVUJMSUMgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIFRvb2x0aXAgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMudHlwZSAgICAgICA9IG51bGxcbiAgICB0aGlzLm9wdGlvbnMgICAgPSBudWxsXG4gICAgdGhpcy5lbmFibGVkICAgID0gbnVsbFxuICAgIHRoaXMudGltZW91dCAgICA9IG51bGxcbiAgICB0aGlzLmhvdmVyU3RhdGUgPSBudWxsXG4gICAgdGhpcy4kZWxlbWVudCAgID0gbnVsbFxuICAgIHRoaXMuaW5TdGF0ZSAgICA9IG51bGxcblxuICAgIHRoaXMuaW5pdCgndG9vbHRpcCcsIGVsZW1lbnQsIG9wdGlvbnMpXG4gIH1cblxuICBUb29sdGlwLlZFUlNJT04gID0gJzMuMy42J1xuXG4gIFRvb2x0aXAuVFJBTlNJVElPTl9EVVJBVElPTiA9IDE1MFxuXG4gIFRvb2x0aXAuREVGQVVMVFMgPSB7XG4gICAgYW5pbWF0aW9uOiB0cnVlLFxuICAgIHBsYWNlbWVudDogJ3RvcCcsXG4gICAgc2VsZWN0b3I6IGZhbHNlLFxuICAgIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cInRvb2x0aXBcIiByb2xlPVwidG9vbHRpcFwiPjxkaXYgY2xhc3M9XCJ0b29sdGlwLWFycm93XCI+PC9kaXY+PGRpdiBjbGFzcz1cInRvb2x0aXAtaW5uZXJcIj48L2Rpdj48L2Rpdj4nLFxuICAgIHRyaWdnZXI6ICdob3ZlciBmb2N1cycsXG4gICAgdGl0bGU6ICcnLFxuICAgIGRlbGF5OiAwLFxuICAgIGh0bWw6IGZhbHNlLFxuICAgIGNvbnRhaW5lcjogZmFsc2UsXG4gICAgdmlld3BvcnQ6IHtcbiAgICAgIHNlbGVjdG9yOiAnYm9keScsXG4gICAgICBwYWRkaW5nOiAwXG4gICAgfVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICh0eXBlLCBlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5lbmFibGVkICAgPSB0cnVlXG4gICAgdGhpcy50eXBlICAgICAgPSB0eXBlXG4gICAgdGhpcy4kZWxlbWVudCAgPSAkKGVsZW1lbnQpXG4gICAgdGhpcy5vcHRpb25zICAgPSB0aGlzLmdldE9wdGlvbnMob3B0aW9ucylcbiAgICB0aGlzLiR2aWV3cG9ydCA9IHRoaXMub3B0aW9ucy52aWV3cG9ydCAmJiAkKCQuaXNGdW5jdGlvbih0aGlzLm9wdGlvbnMudmlld3BvcnQpID8gdGhpcy5vcHRpb25zLnZpZXdwb3J0LmNhbGwodGhpcywgdGhpcy4kZWxlbWVudCkgOiAodGhpcy5vcHRpb25zLnZpZXdwb3J0LnNlbGVjdG9yIHx8IHRoaXMub3B0aW9ucy52aWV3cG9ydCkpXG4gICAgdGhpcy5pblN0YXRlICAgPSB7IGNsaWNrOiBmYWxzZSwgaG92ZXI6IGZhbHNlLCBmb2N1czogZmFsc2UgfVxuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnRbMF0gaW5zdGFuY2VvZiBkb2N1bWVudC5jb25zdHJ1Y3RvciAmJiAhdGhpcy5vcHRpb25zLnNlbGVjdG9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BzZWxlY3RvcmAgb3B0aW9uIG11c3QgYmUgc3BlY2lmaWVkIHdoZW4gaW5pdGlhbGl6aW5nICcgKyB0aGlzLnR5cGUgKyAnIG9uIHRoZSB3aW5kb3cuZG9jdW1lbnQgb2JqZWN0IScpXG4gICAgfVxuXG4gICAgdmFyIHRyaWdnZXJzID0gdGhpcy5vcHRpb25zLnRyaWdnZXIuc3BsaXQoJyAnKVxuXG4gICAgZm9yICh2YXIgaSA9IHRyaWdnZXJzLmxlbmd0aDsgaS0tOykge1xuICAgICAgdmFyIHRyaWdnZXIgPSB0cmlnZ2Vyc1tpXVxuXG4gICAgICBpZiAodHJpZ2dlciA9PSAnY2xpY2snKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQub24oJ2NsaWNrLicgKyB0aGlzLnR5cGUsIHRoaXMub3B0aW9ucy5zZWxlY3RvciwgJC5wcm94eSh0aGlzLnRvZ2dsZSwgdGhpcykpXG4gICAgICB9IGVsc2UgaWYgKHRyaWdnZXIgIT0gJ21hbnVhbCcpIHtcbiAgICAgICAgdmFyIGV2ZW50SW4gID0gdHJpZ2dlciA9PSAnaG92ZXInID8gJ21vdXNlZW50ZXInIDogJ2ZvY3VzaW4nXG4gICAgICAgIHZhciBldmVudE91dCA9IHRyaWdnZXIgPT0gJ2hvdmVyJyA/ICdtb3VzZWxlYXZlJyA6ICdmb2N1c291dCdcblxuICAgICAgICB0aGlzLiRlbGVtZW50Lm9uKGV2ZW50SW4gICsgJy4nICsgdGhpcy50eXBlLCB0aGlzLm9wdGlvbnMuc2VsZWN0b3IsICQucHJveHkodGhpcy5lbnRlciwgdGhpcykpXG4gICAgICAgIHRoaXMuJGVsZW1lbnQub24oZXZlbnRPdXQgKyAnLicgKyB0aGlzLnR5cGUsIHRoaXMub3B0aW9ucy5zZWxlY3RvciwgJC5wcm94eSh0aGlzLmxlYXZlLCB0aGlzKSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLm9wdGlvbnMuc2VsZWN0b3IgP1xuICAgICAgKHRoaXMuX29wdGlvbnMgPSAkLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zLCB7IHRyaWdnZXI6ICdtYW51YWwnLCBzZWxlY3RvcjogJycgfSkpIDpcbiAgICAgIHRoaXMuZml4VGl0bGUoKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0RGVmYXVsdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFRvb2x0aXAuREVGQVVMVFNcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldE9wdGlvbnMgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgdGhpcy5nZXREZWZhdWx0cygpLCB0aGlzLiRlbGVtZW50LmRhdGEoKSwgb3B0aW9ucylcblxuICAgIGlmIChvcHRpb25zLmRlbGF5ICYmIHR5cGVvZiBvcHRpb25zLmRlbGF5ID09ICdudW1iZXInKSB7XG4gICAgICBvcHRpb25zLmRlbGF5ID0ge1xuICAgICAgICBzaG93OiBvcHRpb25zLmRlbGF5LFxuICAgICAgICBoaWRlOiBvcHRpb25zLmRlbGF5XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG9wdGlvbnNcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldERlbGVnYXRlT3B0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb3B0aW9ucyAgPSB7fVxuICAgIHZhciBkZWZhdWx0cyA9IHRoaXMuZ2V0RGVmYXVsdHMoKVxuXG4gICAgdGhpcy5fb3B0aW9ucyAmJiAkLmVhY2godGhpcy5fb3B0aW9ucywgZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgIGlmIChkZWZhdWx0c1trZXldICE9IHZhbHVlKSBvcHRpb25zW2tleV0gPSB2YWx1ZVxuICAgIH0pXG5cbiAgICByZXR1cm4gb3B0aW9uc1xuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZW50ZXIgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgdmFyIHNlbGYgPSBvYmogaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yID9cbiAgICAgIG9iaiA6ICQob2JqLmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2JzLicgKyB0aGlzLnR5cGUpXG5cbiAgICBpZiAoIXNlbGYpIHtcbiAgICAgIHNlbGYgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihvYmouY3VycmVudFRhcmdldCwgdGhpcy5nZXREZWxlZ2F0ZU9wdGlvbnMoKSlcbiAgICAgICQob2JqLmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2JzLicgKyB0aGlzLnR5cGUsIHNlbGYpXG4gICAgfVxuXG4gICAgaWYgKG9iaiBpbnN0YW5jZW9mICQuRXZlbnQpIHtcbiAgICAgIHNlbGYuaW5TdGF0ZVtvYmoudHlwZSA9PSAnZm9jdXNpbicgPyAnZm9jdXMnIDogJ2hvdmVyJ10gPSB0cnVlXG4gICAgfVxuXG4gICAgaWYgKHNlbGYudGlwKCkuaGFzQ2xhc3MoJ2luJykgfHwgc2VsZi5ob3ZlclN0YXRlID09ICdpbicpIHtcbiAgICAgIHNlbGYuaG92ZXJTdGF0ZSA9ICdpbidcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGNsZWFyVGltZW91dChzZWxmLnRpbWVvdXQpXG5cbiAgICBzZWxmLmhvdmVyU3RhdGUgPSAnaW4nXG5cbiAgICBpZiAoIXNlbGYub3B0aW9ucy5kZWxheSB8fCAhc2VsZi5vcHRpb25zLmRlbGF5LnNob3cpIHJldHVybiBzZWxmLnNob3coKVxuXG4gICAgc2VsZi50aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoc2VsZi5ob3ZlclN0YXRlID09ICdpbicpIHNlbGYuc2hvdygpXG4gICAgfSwgc2VsZi5vcHRpb25zLmRlbGF5LnNob3cpXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5pc0luU3RhdGVUcnVlID0gZnVuY3Rpb24gKCkge1xuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLmluU3RhdGUpIHtcbiAgICAgIGlmICh0aGlzLmluU3RhdGVba2V5XSkgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmxlYXZlID0gZnVuY3Rpb24gKG9iaikge1xuICAgIHZhciBzZWxmID0gb2JqIGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3RvciA/XG4gICAgICBvYmogOiAkKG9iai5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlKVxuXG4gICAgaWYgKCFzZWxmKSB7XG4gICAgICBzZWxmID0gbmV3IHRoaXMuY29uc3RydWN0b3Iob2JqLmN1cnJlbnRUYXJnZXQsIHRoaXMuZ2V0RGVsZWdhdGVPcHRpb25zKCkpXG4gICAgICAkKG9iai5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlLCBzZWxmKVxuICAgIH1cblxuICAgIGlmIChvYmogaW5zdGFuY2VvZiAkLkV2ZW50KSB7XG4gICAgICBzZWxmLmluU3RhdGVbb2JqLnR5cGUgPT0gJ2ZvY3Vzb3V0JyA/ICdmb2N1cycgOiAnaG92ZXInXSA9IGZhbHNlXG4gICAgfVxuXG4gICAgaWYgKHNlbGYuaXNJblN0YXRlVHJ1ZSgpKSByZXR1cm5cblxuICAgIGNsZWFyVGltZW91dChzZWxmLnRpbWVvdXQpXG5cbiAgICBzZWxmLmhvdmVyU3RhdGUgPSAnb3V0J1xuXG4gICAgaWYgKCFzZWxmLm9wdGlvbnMuZGVsYXkgfHwgIXNlbGYub3B0aW9ucy5kZWxheS5oaWRlKSByZXR1cm4gc2VsZi5oaWRlKClcblxuICAgIHNlbGYudGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHNlbGYuaG92ZXJTdGF0ZSA9PSAnb3V0Jykgc2VsZi5oaWRlKClcbiAgICB9LCBzZWxmLm9wdGlvbnMuZGVsYXkuaGlkZSlcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGUgPSAkLkV2ZW50KCdzaG93LmJzLicgKyB0aGlzLnR5cGUpXG5cbiAgICBpZiAodGhpcy5oYXNDb250ZW50KCkgJiYgdGhpcy5lbmFibGVkKSB7XG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoZSlcblxuICAgICAgdmFyIGluRG9tID0gJC5jb250YWlucyh0aGlzLiRlbGVtZW50WzBdLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCB0aGlzLiRlbGVtZW50WzBdKVxuICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkgfHwgIWluRG9tKSByZXR1cm5cbiAgICAgIHZhciB0aGF0ID0gdGhpc1xuXG4gICAgICB2YXIgJHRpcCA9IHRoaXMudGlwKClcblxuICAgICAgdmFyIHRpcElkID0gdGhpcy5nZXRVSUQodGhpcy50eXBlKVxuXG4gICAgICB0aGlzLnNldENvbnRlbnQoKVxuICAgICAgJHRpcC5hdHRyKCdpZCcsIHRpcElkKVxuICAgICAgdGhpcy4kZWxlbWVudC5hdHRyKCdhcmlhLWRlc2NyaWJlZGJ5JywgdGlwSWQpXG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYW5pbWF0aW9uKSAkdGlwLmFkZENsYXNzKCdmYWRlJylcblxuICAgICAgdmFyIHBsYWNlbWVudCA9IHR5cGVvZiB0aGlzLm9wdGlvbnMucGxhY2VtZW50ID09ICdmdW5jdGlvbicgP1xuICAgICAgICB0aGlzLm9wdGlvbnMucGxhY2VtZW50LmNhbGwodGhpcywgJHRpcFswXSwgdGhpcy4kZWxlbWVudFswXSkgOlxuICAgICAgICB0aGlzLm9wdGlvbnMucGxhY2VtZW50XG5cbiAgICAgIHZhciBhdXRvVG9rZW4gPSAvXFxzP2F1dG8/XFxzPy9pXG4gICAgICB2YXIgYXV0b1BsYWNlID0gYXV0b1Rva2VuLnRlc3QocGxhY2VtZW50KVxuICAgICAgaWYgKGF1dG9QbGFjZSkgcGxhY2VtZW50ID0gcGxhY2VtZW50LnJlcGxhY2UoYXV0b1Rva2VuLCAnJykgfHwgJ3RvcCdcblxuICAgICAgJHRpcFxuICAgICAgICAuZGV0YWNoKClcbiAgICAgICAgLmNzcyh7IHRvcDogMCwgbGVmdDogMCwgZGlzcGxheTogJ2Jsb2NrJyB9KVxuICAgICAgICAuYWRkQ2xhc3MocGxhY2VtZW50KVxuICAgICAgICAuZGF0YSgnYnMuJyArIHRoaXMudHlwZSwgdGhpcylcblxuICAgICAgdGhpcy5vcHRpb25zLmNvbnRhaW5lciA/ICR0aXAuYXBwZW5kVG8odGhpcy5vcHRpb25zLmNvbnRhaW5lcikgOiAkdGlwLmluc2VydEFmdGVyKHRoaXMuJGVsZW1lbnQpXG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoJ2luc2VydGVkLmJzLicgKyB0aGlzLnR5cGUpXG5cbiAgICAgIHZhciBwb3MgICAgICAgICAgPSB0aGlzLmdldFBvc2l0aW9uKClcbiAgICAgIHZhciBhY3R1YWxXaWR0aCAgPSAkdGlwWzBdLm9mZnNldFdpZHRoXG4gICAgICB2YXIgYWN0dWFsSGVpZ2h0ID0gJHRpcFswXS5vZmZzZXRIZWlnaHRcblxuICAgICAgaWYgKGF1dG9QbGFjZSkge1xuICAgICAgICB2YXIgb3JnUGxhY2VtZW50ID0gcGxhY2VtZW50XG4gICAgICAgIHZhciB2aWV3cG9ydERpbSA9IHRoaXMuZ2V0UG9zaXRpb24odGhpcy4kdmlld3BvcnQpXG5cbiAgICAgICAgcGxhY2VtZW50ID0gcGxhY2VtZW50ID09ICdib3R0b20nICYmIHBvcy5ib3R0b20gKyBhY3R1YWxIZWlnaHQgPiB2aWV3cG9ydERpbS5ib3R0b20gPyAndG9wJyAgICA6XG4gICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudCA9PSAndG9wJyAgICAmJiBwb3MudG9wICAgIC0gYWN0dWFsSGVpZ2h0IDwgdmlld3BvcnREaW0udG9wICAgID8gJ2JvdHRvbScgOlxuICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQgPT0gJ3JpZ2h0JyAgJiYgcG9zLnJpZ2h0ICArIGFjdHVhbFdpZHRoICA+IHZpZXdwb3J0RGltLndpZHRoICA/ICdsZWZ0JyAgIDpcbiAgICAgICAgICAgICAgICAgICAgcGxhY2VtZW50ID09ICdsZWZ0JyAgICYmIHBvcy5sZWZ0ICAgLSBhY3R1YWxXaWR0aCAgPCB2aWV3cG9ydERpbS5sZWZ0ICAgPyAncmlnaHQnICA6XG4gICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudFxuXG4gICAgICAgICR0aXBcbiAgICAgICAgICAucmVtb3ZlQ2xhc3Mob3JnUGxhY2VtZW50KVxuICAgICAgICAgIC5hZGRDbGFzcyhwbGFjZW1lbnQpXG4gICAgICB9XG5cbiAgICAgIHZhciBjYWxjdWxhdGVkT2Zmc2V0ID0gdGhpcy5nZXRDYWxjdWxhdGVkT2Zmc2V0KHBsYWNlbWVudCwgcG9zLCBhY3R1YWxXaWR0aCwgYWN0dWFsSGVpZ2h0KVxuXG4gICAgICB0aGlzLmFwcGx5UGxhY2VtZW50KGNhbGN1bGF0ZWRPZmZzZXQsIHBsYWNlbWVudClcblxuICAgICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcHJldkhvdmVyU3RhdGUgPSB0aGF0LmhvdmVyU3RhdGVcbiAgICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKCdzaG93bi5icy4nICsgdGhhdC50eXBlKVxuICAgICAgICB0aGF0LmhvdmVyU3RhdGUgPSBudWxsXG5cbiAgICAgICAgaWYgKHByZXZIb3ZlclN0YXRlID09ICdvdXQnKSB0aGF0LmxlYXZlKHRoYXQpXG4gICAgICB9XG5cbiAgICAgICQuc3VwcG9ydC50cmFuc2l0aW9uICYmIHRoaXMuJHRpcC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgICAgJHRpcFxuICAgICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGNvbXBsZXRlKVxuICAgICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChUb29sdGlwLlRSQU5TSVRJT05fRFVSQVRJT04pIDpcbiAgICAgICAgY29tcGxldGUoKVxuICAgIH1cbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmFwcGx5UGxhY2VtZW50ID0gZnVuY3Rpb24gKG9mZnNldCwgcGxhY2VtZW50KSB7XG4gICAgdmFyICR0aXAgICA9IHRoaXMudGlwKClcbiAgICB2YXIgd2lkdGggID0gJHRpcFswXS5vZmZzZXRXaWR0aFxuICAgIHZhciBoZWlnaHQgPSAkdGlwWzBdLm9mZnNldEhlaWdodFxuXG4gICAgLy8gbWFudWFsbHkgcmVhZCBtYXJnaW5zIGJlY2F1c2UgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGluY2x1ZGVzIGRpZmZlcmVuY2VcbiAgICB2YXIgbWFyZ2luVG9wID0gcGFyc2VJbnQoJHRpcC5jc3MoJ21hcmdpbi10b3AnKSwgMTApXG4gICAgdmFyIG1hcmdpbkxlZnQgPSBwYXJzZUludCgkdGlwLmNzcygnbWFyZ2luLWxlZnQnKSwgMTApXG5cbiAgICAvLyB3ZSBtdXN0IGNoZWNrIGZvciBOYU4gZm9yIGllIDgvOVxuICAgIGlmIChpc05hTihtYXJnaW5Ub3ApKSAgbWFyZ2luVG9wICA9IDBcbiAgICBpZiAoaXNOYU4obWFyZ2luTGVmdCkpIG1hcmdpbkxlZnQgPSAwXG5cbiAgICBvZmZzZXQudG9wICArPSBtYXJnaW5Ub3BcbiAgICBvZmZzZXQubGVmdCArPSBtYXJnaW5MZWZ0XG5cbiAgICAvLyAkLmZuLm9mZnNldCBkb2Vzbid0IHJvdW5kIHBpeGVsIHZhbHVlc1xuICAgIC8vIHNvIHdlIHVzZSBzZXRPZmZzZXQgZGlyZWN0bHkgd2l0aCBvdXIgb3duIGZ1bmN0aW9uIEItMFxuICAgICQub2Zmc2V0LnNldE9mZnNldCgkdGlwWzBdLCAkLmV4dGVuZCh7XG4gICAgICB1c2luZzogZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICAgICR0aXAuY3NzKHtcbiAgICAgICAgICB0b3A6IE1hdGgucm91bmQocHJvcHMudG9wKSxcbiAgICAgICAgICBsZWZ0OiBNYXRoLnJvdW5kKHByb3BzLmxlZnQpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSwgb2Zmc2V0KSwgMClcblxuICAgICR0aXAuYWRkQ2xhc3MoJ2luJylcblxuICAgIC8vIGNoZWNrIHRvIHNlZSBpZiBwbGFjaW5nIHRpcCBpbiBuZXcgb2Zmc2V0IGNhdXNlZCB0aGUgdGlwIHRvIHJlc2l6ZSBpdHNlbGZcbiAgICB2YXIgYWN0dWFsV2lkdGggID0gJHRpcFswXS5vZmZzZXRXaWR0aFxuICAgIHZhciBhY3R1YWxIZWlnaHQgPSAkdGlwWzBdLm9mZnNldEhlaWdodFxuXG4gICAgaWYgKHBsYWNlbWVudCA9PSAndG9wJyAmJiBhY3R1YWxIZWlnaHQgIT0gaGVpZ2h0KSB7XG4gICAgICBvZmZzZXQudG9wID0gb2Zmc2V0LnRvcCArIGhlaWdodCAtIGFjdHVhbEhlaWdodFxuICAgIH1cblxuICAgIHZhciBkZWx0YSA9IHRoaXMuZ2V0Vmlld3BvcnRBZGp1c3RlZERlbHRhKHBsYWNlbWVudCwgb2Zmc2V0LCBhY3R1YWxXaWR0aCwgYWN0dWFsSGVpZ2h0KVxuXG4gICAgaWYgKGRlbHRhLmxlZnQpIG9mZnNldC5sZWZ0ICs9IGRlbHRhLmxlZnRcbiAgICBlbHNlIG9mZnNldC50b3AgKz0gZGVsdGEudG9wXG5cbiAgICB2YXIgaXNWZXJ0aWNhbCAgICAgICAgICA9IC90b3B8Ym90dG9tLy50ZXN0KHBsYWNlbWVudClcbiAgICB2YXIgYXJyb3dEZWx0YSAgICAgICAgICA9IGlzVmVydGljYWwgPyBkZWx0YS5sZWZ0ICogMiAtIHdpZHRoICsgYWN0dWFsV2lkdGggOiBkZWx0YS50b3AgKiAyIC0gaGVpZ2h0ICsgYWN0dWFsSGVpZ2h0XG4gICAgdmFyIGFycm93T2Zmc2V0UG9zaXRpb24gPSBpc1ZlcnRpY2FsID8gJ29mZnNldFdpZHRoJyA6ICdvZmZzZXRIZWlnaHQnXG5cbiAgICAkdGlwLm9mZnNldChvZmZzZXQpXG4gICAgdGhpcy5yZXBsYWNlQXJyb3coYXJyb3dEZWx0YSwgJHRpcFswXVthcnJvd09mZnNldFBvc2l0aW9uXSwgaXNWZXJ0aWNhbClcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnJlcGxhY2VBcnJvdyA9IGZ1bmN0aW9uIChkZWx0YSwgZGltZW5zaW9uLCBpc1ZlcnRpY2FsKSB7XG4gICAgdGhpcy5hcnJvdygpXG4gICAgICAuY3NzKGlzVmVydGljYWwgPyAnbGVmdCcgOiAndG9wJywgNTAgKiAoMSAtIGRlbHRhIC8gZGltZW5zaW9uKSArICclJylcbiAgICAgIC5jc3MoaXNWZXJ0aWNhbCA/ICd0b3AnIDogJ2xlZnQnLCAnJylcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnNldENvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICR0aXAgID0gdGhpcy50aXAoKVxuICAgIHZhciB0aXRsZSA9IHRoaXMuZ2V0VGl0bGUoKVxuXG4gICAgJHRpcC5maW5kKCcudG9vbHRpcC1pbm5lcicpW3RoaXMub3B0aW9ucy5odG1sID8gJ2h0bWwnIDogJ3RleHQnXSh0aXRsZSlcbiAgICAkdGlwLnJlbW92ZUNsYXNzKCdmYWRlIGluIHRvcCBib3R0b20gbGVmdCByaWdodCcpXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzXG4gICAgdmFyICR0aXAgPSAkKHRoaXMuJHRpcClcbiAgICB2YXIgZSAgICA9ICQuRXZlbnQoJ2hpZGUuYnMuJyArIHRoaXMudHlwZSlcblxuICAgIGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuICAgICAgaWYgKHRoYXQuaG92ZXJTdGF0ZSAhPSAnaW4nKSAkdGlwLmRldGFjaCgpXG4gICAgICB0aGF0LiRlbGVtZW50XG4gICAgICAgIC5yZW1vdmVBdHRyKCdhcmlhLWRlc2NyaWJlZGJ5JylcbiAgICAgICAgLnRyaWdnZXIoJ2hpZGRlbi5icy4nICsgdGhhdC50eXBlKVxuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKVxuICAgIH1cblxuICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihlKVxuXG4gICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgJHRpcC5yZW1vdmVDbGFzcygnaW4nKVxuXG4gICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgJHRpcC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgICR0aXBcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgY29tcGxldGUpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZChUb29sdGlwLlRSQU5TSVRJT05fRFVSQVRJT04pIDpcbiAgICAgIGNvbXBsZXRlKClcblxuICAgIHRoaXMuaG92ZXJTdGF0ZSA9IG51bGxcblxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5maXhUaXRsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgJGUgPSB0aGlzLiRlbGVtZW50XG4gICAgaWYgKCRlLmF0dHIoJ3RpdGxlJykgfHwgdHlwZW9mICRlLmF0dHIoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKSAhPSAnc3RyaW5nJykge1xuICAgICAgJGUuYXR0cignZGF0YS1vcmlnaW5hbC10aXRsZScsICRlLmF0dHIoJ3RpdGxlJykgfHwgJycpLmF0dHIoJ3RpdGxlJywgJycpXG4gICAgfVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuaGFzQ29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRUaXRsZSgpXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5nZXRQb3NpdGlvbiA9IGZ1bmN0aW9uICgkZWxlbWVudCkge1xuICAgICRlbGVtZW50ICAgPSAkZWxlbWVudCB8fCB0aGlzLiRlbGVtZW50XG5cbiAgICB2YXIgZWwgICAgID0gJGVsZW1lbnRbMF1cbiAgICB2YXIgaXNCb2R5ID0gZWwudGFnTmFtZSA9PSAnQk9EWSdcblxuICAgIHZhciBlbFJlY3QgICAgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIGlmIChlbFJlY3Qud2lkdGggPT0gbnVsbCkge1xuICAgICAgLy8gd2lkdGggYW5kIGhlaWdodCBhcmUgbWlzc2luZyBpbiBJRTgsIHNvIGNvbXB1dGUgdGhlbSBtYW51YWxseTsgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9pc3N1ZXMvMTQwOTNcbiAgICAgIGVsUmVjdCA9ICQuZXh0ZW5kKHt9LCBlbFJlY3QsIHsgd2lkdGg6IGVsUmVjdC5yaWdodCAtIGVsUmVjdC5sZWZ0LCBoZWlnaHQ6IGVsUmVjdC5ib3R0b20gLSBlbFJlY3QudG9wIH0pXG4gICAgfVxuICAgIHZhciBlbE9mZnNldCAgPSBpc0JvZHkgPyB7IHRvcDogMCwgbGVmdDogMCB9IDogJGVsZW1lbnQub2Zmc2V0KClcbiAgICB2YXIgc2Nyb2xsICAgID0geyBzY3JvbGw6IGlzQm9keSA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgOiAkZWxlbWVudC5zY3JvbGxUb3AoKSB9XG4gICAgdmFyIG91dGVyRGltcyA9IGlzQm9keSA/IHsgd2lkdGg6ICQod2luZG93KS53aWR0aCgpLCBoZWlnaHQ6ICQod2luZG93KS5oZWlnaHQoKSB9IDogbnVsbFxuXG4gICAgcmV0dXJuICQuZXh0ZW5kKHt9LCBlbFJlY3QsIHNjcm9sbCwgb3V0ZXJEaW1zLCBlbE9mZnNldClcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldENhbGN1bGF0ZWRPZmZzZXQgPSBmdW5jdGlvbiAocGxhY2VtZW50LCBwb3MsIGFjdHVhbFdpZHRoLCBhY3R1YWxIZWlnaHQpIHtcbiAgICByZXR1cm4gcGxhY2VtZW50ID09ICdib3R0b20nID8geyB0b3A6IHBvcy50b3AgKyBwb3MuaGVpZ2h0LCAgIGxlZnQ6IHBvcy5sZWZ0ICsgcG9zLndpZHRoIC8gMiAtIGFjdHVhbFdpZHRoIC8gMiB9IDpcbiAgICAgICAgICAgcGxhY2VtZW50ID09ICd0b3AnICAgID8geyB0b3A6IHBvcy50b3AgLSBhY3R1YWxIZWlnaHQsIGxlZnQ6IHBvcy5sZWZ0ICsgcG9zLndpZHRoIC8gMiAtIGFjdHVhbFdpZHRoIC8gMiB9IDpcbiAgICAgICAgICAgcGxhY2VtZW50ID09ICdsZWZ0JyAgID8geyB0b3A6IHBvcy50b3AgKyBwb3MuaGVpZ2h0IC8gMiAtIGFjdHVhbEhlaWdodCAvIDIsIGxlZnQ6IHBvcy5sZWZ0IC0gYWN0dWFsV2lkdGggfSA6XG4gICAgICAgIC8qIHBsYWNlbWVudCA9PSAncmlnaHQnICovIHsgdG9wOiBwb3MudG9wICsgcG9zLmhlaWdodCAvIDIgLSBhY3R1YWxIZWlnaHQgLyAyLCBsZWZ0OiBwb3MubGVmdCArIHBvcy53aWR0aCB9XG5cbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldFZpZXdwb3J0QWRqdXN0ZWREZWx0YSA9IGZ1bmN0aW9uIChwbGFjZW1lbnQsIHBvcywgYWN0dWFsV2lkdGgsIGFjdHVhbEhlaWdodCkge1xuICAgIHZhciBkZWx0YSA9IHsgdG9wOiAwLCBsZWZ0OiAwIH1cbiAgICBpZiAoIXRoaXMuJHZpZXdwb3J0KSByZXR1cm4gZGVsdGFcblxuICAgIHZhciB2aWV3cG9ydFBhZGRpbmcgPSB0aGlzLm9wdGlvbnMudmlld3BvcnQgJiYgdGhpcy5vcHRpb25zLnZpZXdwb3J0LnBhZGRpbmcgfHwgMFxuICAgIHZhciB2aWV3cG9ydERpbWVuc2lvbnMgPSB0aGlzLmdldFBvc2l0aW9uKHRoaXMuJHZpZXdwb3J0KVxuXG4gICAgaWYgKC9yaWdodHxsZWZ0Ly50ZXN0KHBsYWNlbWVudCkpIHtcbiAgICAgIHZhciB0b3BFZGdlT2Zmc2V0ICAgID0gcG9zLnRvcCAtIHZpZXdwb3J0UGFkZGluZyAtIHZpZXdwb3J0RGltZW5zaW9ucy5zY3JvbGxcbiAgICAgIHZhciBib3R0b21FZGdlT2Zmc2V0ID0gcG9zLnRvcCArIHZpZXdwb3J0UGFkZGluZyAtIHZpZXdwb3J0RGltZW5zaW9ucy5zY3JvbGwgKyBhY3R1YWxIZWlnaHRcbiAgICAgIGlmICh0b3BFZGdlT2Zmc2V0IDwgdmlld3BvcnREaW1lbnNpb25zLnRvcCkgeyAvLyB0b3Agb3ZlcmZsb3dcbiAgICAgICAgZGVsdGEudG9wID0gdmlld3BvcnREaW1lbnNpb25zLnRvcCAtIHRvcEVkZ2VPZmZzZXRcbiAgICAgIH0gZWxzZSBpZiAoYm90dG9tRWRnZU9mZnNldCA+IHZpZXdwb3J0RGltZW5zaW9ucy50b3AgKyB2aWV3cG9ydERpbWVuc2lvbnMuaGVpZ2h0KSB7IC8vIGJvdHRvbSBvdmVyZmxvd1xuICAgICAgICBkZWx0YS50b3AgPSB2aWV3cG9ydERpbWVuc2lvbnMudG9wICsgdmlld3BvcnREaW1lbnNpb25zLmhlaWdodCAtIGJvdHRvbUVkZ2VPZmZzZXRcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxlZnRFZGdlT2Zmc2V0ICA9IHBvcy5sZWZ0IC0gdmlld3BvcnRQYWRkaW5nXG4gICAgICB2YXIgcmlnaHRFZGdlT2Zmc2V0ID0gcG9zLmxlZnQgKyB2aWV3cG9ydFBhZGRpbmcgKyBhY3R1YWxXaWR0aFxuICAgICAgaWYgKGxlZnRFZGdlT2Zmc2V0IDwgdmlld3BvcnREaW1lbnNpb25zLmxlZnQpIHsgLy8gbGVmdCBvdmVyZmxvd1xuICAgICAgICBkZWx0YS5sZWZ0ID0gdmlld3BvcnREaW1lbnNpb25zLmxlZnQgLSBsZWZ0RWRnZU9mZnNldFxuICAgICAgfSBlbHNlIGlmIChyaWdodEVkZ2VPZmZzZXQgPiB2aWV3cG9ydERpbWVuc2lvbnMucmlnaHQpIHsgLy8gcmlnaHQgb3ZlcmZsb3dcbiAgICAgICAgZGVsdGEubGVmdCA9IHZpZXdwb3J0RGltZW5zaW9ucy5sZWZ0ICsgdmlld3BvcnREaW1lbnNpb25zLndpZHRoIC0gcmlnaHRFZGdlT2Zmc2V0XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRlbHRhXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5nZXRUaXRsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGl0bGVcbiAgICB2YXIgJGUgPSB0aGlzLiRlbGVtZW50XG4gICAgdmFyIG8gID0gdGhpcy5vcHRpb25zXG5cbiAgICB0aXRsZSA9ICRlLmF0dHIoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKVxuICAgICAgfHwgKHR5cGVvZiBvLnRpdGxlID09ICdmdW5jdGlvbicgPyBvLnRpdGxlLmNhbGwoJGVbMF0pIDogIG8udGl0bGUpXG5cbiAgICByZXR1cm4gdGl0bGVcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldFVJRCA9IGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBkbyBwcmVmaXggKz0gfn4oTWF0aC5yYW5kb20oKSAqIDEwMDAwMDApXG4gICAgd2hpbGUgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByZWZpeCkpXG4gICAgcmV0dXJuIHByZWZpeFxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUudGlwID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICghdGhpcy4kdGlwKSB7XG4gICAgICB0aGlzLiR0aXAgPSAkKHRoaXMub3B0aW9ucy50ZW1wbGF0ZSlcbiAgICAgIGlmICh0aGlzLiR0aXAubGVuZ3RoICE9IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMudHlwZSArICcgYHRlbXBsYXRlYCBvcHRpb24gbXVzdCBjb25zaXN0IG9mIGV4YWN0bHkgMSB0b3AtbGV2ZWwgZWxlbWVudCEnKVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy4kdGlwXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5hcnJvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gKHRoaXMuJGFycm93ID0gdGhpcy4kYXJyb3cgfHwgdGhpcy50aXAoKS5maW5kKCcudG9vbHRpcC1hcnJvdycpKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZW5hYmxlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZW5hYmxlZCA9IHRydWVcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2VcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnRvZ2dsZUVuYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gIXRoaXMuZW5hYmxlZFxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBpZiAoZSkge1xuICAgICAgc2VsZiA9ICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlKVxuICAgICAgaWYgKCFzZWxmKSB7XG4gICAgICAgIHNlbGYgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihlLmN1cnJlbnRUYXJnZXQsIHRoaXMuZ2V0RGVsZWdhdGVPcHRpb25zKCkpXG4gICAgICAgICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlLCBzZWxmKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChlKSB7XG4gICAgICBzZWxmLmluU3RhdGUuY2xpY2sgPSAhc2VsZi5pblN0YXRlLmNsaWNrXG4gICAgICBpZiAoc2VsZi5pc0luU3RhdGVUcnVlKCkpIHNlbGYuZW50ZXIoc2VsZilcbiAgICAgIGVsc2Ugc2VsZi5sZWF2ZShzZWxmKVxuICAgIH0gZWxzZSB7XG4gICAgICBzZWxmLnRpcCgpLmhhc0NsYXNzKCdpbicpID8gc2VsZi5sZWF2ZShzZWxmKSA6IHNlbGYuZW50ZXIoc2VsZilcbiAgICB9XG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpc1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXQpXG4gICAgdGhpcy5oaWRlKGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoYXQuJGVsZW1lbnQub2ZmKCcuJyArIHRoYXQudHlwZSkucmVtb3ZlRGF0YSgnYnMuJyArIHRoYXQudHlwZSlcbiAgICAgIGlmICh0aGF0LiR0aXApIHtcbiAgICAgICAgdGhhdC4kdGlwLmRldGFjaCgpXG4gICAgICB9XG4gICAgICB0aGF0LiR0aXAgPSBudWxsXG4gICAgICB0aGF0LiRhcnJvdyA9IG51bGxcbiAgICAgIHRoYXQuJHZpZXdwb3J0ID0gbnVsbFxuICAgIH0pXG4gIH1cblxuXG4gIC8vIFRPT0xUSVAgUExVR0lOIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy50b29sdGlwJylcbiAgICAgIHZhciBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb25cblxuICAgICAgaWYgKCFkYXRhICYmIC9kZXN0cm95fGhpZGUvLnRlc3Qob3B0aW9uKSkgcmV0dXJuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLnRvb2x0aXAnLCAoZGF0YSA9IG5ldyBUb29sdGlwKHRoaXMsIG9wdGlvbnMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0oKVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi50b29sdGlwXG5cbiAgJC5mbi50b29sdGlwICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4udG9vbHRpcC5Db25zdHJ1Y3RvciA9IFRvb2x0aXBcblxuXG4gIC8vIFRPT0xUSVAgTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT09PVxuXG4gICQuZm4udG9vbHRpcC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4udG9vbHRpcCA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogcG9wb3Zlci5qcyB2My4zLjZcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI3BvcG92ZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTUgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gUE9QT1ZFUiBQVUJMSUMgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIFBvcG92ZXIgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMuaW5pdCgncG9wb3ZlcicsIGVsZW1lbnQsIG9wdGlvbnMpXG4gIH1cblxuICBpZiAoISQuZm4udG9vbHRpcCkgdGhyb3cgbmV3IEVycm9yKCdQb3BvdmVyIHJlcXVpcmVzIHRvb2x0aXAuanMnKVxuXG4gIFBvcG92ZXIuVkVSU0lPTiAgPSAnMy4zLjYnXG5cbiAgUG9wb3Zlci5ERUZBVUxUUyA9ICQuZXh0ZW5kKHt9LCAkLmZuLnRvb2x0aXAuQ29uc3RydWN0b3IuREVGQVVMVFMsIHtcbiAgICBwbGFjZW1lbnQ6ICdyaWdodCcsXG4gICAgdHJpZ2dlcjogJ2NsaWNrJyxcbiAgICBjb250ZW50OiAnJyxcbiAgICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJwb3BvdmVyXCIgcm9sZT1cInRvb2x0aXBcIj48ZGl2IGNsYXNzPVwiYXJyb3dcIj48L2Rpdj48aDMgY2xhc3M9XCJwb3BvdmVyLXRpdGxlXCI+PC9oMz48ZGl2IGNsYXNzPVwicG9wb3Zlci1jb250ZW50XCI+PC9kaXY+PC9kaXY+J1xuICB9KVxuXG5cbiAgLy8gTk9URTogUE9QT1ZFUiBFWFRFTkRTIHRvb2x0aXAuanNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBQb3BvdmVyLnByb3RvdHlwZSA9ICQuZXh0ZW5kKHt9LCAkLmZuLnRvb2x0aXAuQ29uc3RydWN0b3IucHJvdG90eXBlKVxuXG4gIFBvcG92ZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gUG9wb3ZlclxuXG4gIFBvcG92ZXIucHJvdG90eXBlLmdldERlZmF1bHRzID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBQb3BvdmVyLkRFRkFVTFRTXG4gIH1cblxuICBQb3BvdmVyLnByb3RvdHlwZS5zZXRDb250ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciAkdGlwICAgID0gdGhpcy50aXAoKVxuICAgIHZhciB0aXRsZSAgID0gdGhpcy5nZXRUaXRsZSgpXG4gICAgdmFyIGNvbnRlbnQgPSB0aGlzLmdldENvbnRlbnQoKVxuXG4gICAgJHRpcC5maW5kKCcucG9wb3Zlci10aXRsZScpW3RoaXMub3B0aW9ucy5odG1sID8gJ2h0bWwnIDogJ3RleHQnXSh0aXRsZSlcbiAgICAkdGlwLmZpbmQoJy5wb3BvdmVyLWNvbnRlbnQnKS5jaGlsZHJlbigpLmRldGFjaCgpLmVuZCgpWyAvLyB3ZSB1c2UgYXBwZW5kIGZvciBodG1sIG9iamVjdHMgdG8gbWFpbnRhaW4ganMgZXZlbnRzXG4gICAgICB0aGlzLm9wdGlvbnMuaHRtbCA/ICh0eXBlb2YgY29udGVudCA9PSAnc3RyaW5nJyA/ICdodG1sJyA6ICdhcHBlbmQnKSA6ICd0ZXh0J1xuICAgIF0oY29udGVudClcblxuICAgICR0aXAucmVtb3ZlQ2xhc3MoJ2ZhZGUgdG9wIGJvdHRvbSBsZWZ0IHJpZ2h0IGluJylcblxuICAgIC8vIElFOCBkb2Vzbid0IGFjY2VwdCBoaWRpbmcgdmlhIHRoZSBgOmVtcHR5YCBwc2V1ZG8gc2VsZWN0b3IsIHdlIGhhdmUgdG8gZG9cbiAgICAvLyB0aGlzIG1hbnVhbGx5IGJ5IGNoZWNraW5nIHRoZSBjb250ZW50cy5cbiAgICBpZiAoISR0aXAuZmluZCgnLnBvcG92ZXItdGl0bGUnKS5odG1sKCkpICR0aXAuZmluZCgnLnBvcG92ZXItdGl0bGUnKS5oaWRlKClcbiAgfVxuXG4gIFBvcG92ZXIucHJvdG90eXBlLmhhc0NvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VGl0bGUoKSB8fCB0aGlzLmdldENvbnRlbnQoKVxuICB9XG5cbiAgUG9wb3Zlci5wcm90b3R5cGUuZ2V0Q29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgJGUgPSB0aGlzLiRlbGVtZW50XG4gICAgdmFyIG8gID0gdGhpcy5vcHRpb25zXG5cbiAgICByZXR1cm4gJGUuYXR0cignZGF0YS1jb250ZW50JylcbiAgICAgIHx8ICh0eXBlb2Ygby5jb250ZW50ID09ICdmdW5jdGlvbicgP1xuICAgICAgICAgICAgby5jb250ZW50LmNhbGwoJGVbMF0pIDpcbiAgICAgICAgICAgIG8uY29udGVudClcbiAgfVxuXG4gIFBvcG92ZXIucHJvdG90eXBlLmFycm93ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAodGhpcy4kYXJyb3cgPSB0aGlzLiRhcnJvdyB8fCB0aGlzLnRpcCgpLmZpbmQoJy5hcnJvdycpKVxuICB9XG5cblxuICAvLyBQT1BPVkVSIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICAgID0gJHRoaXMuZGF0YSgnYnMucG9wb3ZlcicpXG4gICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uXG5cbiAgICAgIGlmICghZGF0YSAmJiAvZGVzdHJveXxoaWRlLy50ZXN0KG9wdGlvbikpIHJldHVyblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5wb3BvdmVyJywgKGRhdGEgPSBuZXcgUG9wb3Zlcih0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4ucG9wb3ZlclxuXG4gICQuZm4ucG9wb3ZlciAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLnBvcG92ZXIuQ29uc3RydWN0b3IgPSBQb3BvdmVyXG5cblxuICAvLyBQT1BPVkVSIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLnBvcG92ZXIubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLnBvcG92ZXIgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHNjcm9sbHNweS5qcyB2My4zLjZcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI3Njcm9sbHNweVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE1IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIFNDUk9MTFNQWSBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gU2Nyb2xsU3B5KGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLiRib2R5ICAgICAgICAgID0gJChkb2N1bWVudC5ib2R5KVxuICAgIHRoaXMuJHNjcm9sbEVsZW1lbnQgPSAkKGVsZW1lbnQpLmlzKGRvY3VtZW50LmJvZHkpID8gJCh3aW5kb3cpIDogJChlbGVtZW50KVxuICAgIHRoaXMub3B0aW9ucyAgICAgICAgPSAkLmV4dGVuZCh7fSwgU2Nyb2xsU3B5LkRFRkFVTFRTLCBvcHRpb25zKVxuICAgIHRoaXMuc2VsZWN0b3IgICAgICAgPSAodGhpcy5vcHRpb25zLnRhcmdldCB8fCAnJykgKyAnIC5uYXYgbGkgPiBhJ1xuICAgIHRoaXMub2Zmc2V0cyAgICAgICAgPSBbXVxuICAgIHRoaXMudGFyZ2V0cyAgICAgICAgPSBbXVxuICAgIHRoaXMuYWN0aXZlVGFyZ2V0ICAgPSBudWxsXG4gICAgdGhpcy5zY3JvbGxIZWlnaHQgICA9IDBcblxuICAgIHRoaXMuJHNjcm9sbEVsZW1lbnQub24oJ3Njcm9sbC5icy5zY3JvbGxzcHknLCAkLnByb3h5KHRoaXMucHJvY2VzcywgdGhpcykpXG4gICAgdGhpcy5yZWZyZXNoKClcbiAgICB0aGlzLnByb2Nlc3MoKVxuICB9XG5cbiAgU2Nyb2xsU3B5LlZFUlNJT04gID0gJzMuMy42J1xuXG4gIFNjcm9sbFNweS5ERUZBVUxUUyA9IHtcbiAgICBvZmZzZXQ6IDEwXG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLmdldFNjcm9sbEhlaWdodCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy4kc2Nyb2xsRWxlbWVudFswXS5zY3JvbGxIZWlnaHQgfHwgTWF0aC5tYXgodGhpcy4kYm9keVswXS5zY3JvbGxIZWlnaHQsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQpXG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRoYXQgICAgICAgICAgPSB0aGlzXG4gICAgdmFyIG9mZnNldE1ldGhvZCAgPSAnb2Zmc2V0J1xuICAgIHZhciBvZmZzZXRCYXNlICAgID0gMFxuXG4gICAgdGhpcy5vZmZzZXRzICAgICAgPSBbXVxuICAgIHRoaXMudGFyZ2V0cyAgICAgID0gW11cbiAgICB0aGlzLnNjcm9sbEhlaWdodCA9IHRoaXMuZ2V0U2Nyb2xsSGVpZ2h0KClcblxuICAgIGlmICghJC5pc1dpbmRvdyh0aGlzLiRzY3JvbGxFbGVtZW50WzBdKSkge1xuICAgICAgb2Zmc2V0TWV0aG9kID0gJ3Bvc2l0aW9uJ1xuICAgICAgb2Zmc2V0QmFzZSAgID0gdGhpcy4kc2Nyb2xsRWxlbWVudC5zY3JvbGxUb3AoKVxuICAgIH1cblxuICAgIHRoaXMuJGJvZHlcbiAgICAgIC5maW5kKHRoaXMuc2VsZWN0b3IpXG4gICAgICAubWFwKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRlbCAgID0gJCh0aGlzKVxuICAgICAgICB2YXIgaHJlZiAgPSAkZWwuZGF0YSgndGFyZ2V0JykgfHwgJGVsLmF0dHIoJ2hyZWYnKVxuICAgICAgICB2YXIgJGhyZWYgPSAvXiMuLy50ZXN0KGhyZWYpICYmICQoaHJlZilcblxuICAgICAgICByZXR1cm4gKCRocmVmXG4gICAgICAgICAgJiYgJGhyZWYubGVuZ3RoXG4gICAgICAgICAgJiYgJGhyZWYuaXMoJzp2aXNpYmxlJylcbiAgICAgICAgICAmJiBbWyRocmVmW29mZnNldE1ldGhvZF0oKS50b3AgKyBvZmZzZXRCYXNlLCBocmVmXV0pIHx8IG51bGxcbiAgICAgIH0pXG4gICAgICAuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYVswXSAtIGJbMF0gfSlcbiAgICAgIC5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhhdC5vZmZzZXRzLnB1c2godGhpc1swXSlcbiAgICAgICAgdGhhdC50YXJnZXRzLnB1c2godGhpc1sxXSlcbiAgICAgIH0pXG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLnByb2Nlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNjcm9sbFRvcCAgICA9IHRoaXMuJHNjcm9sbEVsZW1lbnQuc2Nyb2xsVG9wKCkgKyB0aGlzLm9wdGlvbnMub2Zmc2V0XG4gICAgdmFyIHNjcm9sbEhlaWdodCA9IHRoaXMuZ2V0U2Nyb2xsSGVpZ2h0KClcbiAgICB2YXIgbWF4U2Nyb2xsICAgID0gdGhpcy5vcHRpb25zLm9mZnNldCArIHNjcm9sbEhlaWdodCAtIHRoaXMuJHNjcm9sbEVsZW1lbnQuaGVpZ2h0KClcbiAgICB2YXIgb2Zmc2V0cyAgICAgID0gdGhpcy5vZmZzZXRzXG4gICAgdmFyIHRhcmdldHMgICAgICA9IHRoaXMudGFyZ2V0c1xuICAgIHZhciBhY3RpdmVUYXJnZXQgPSB0aGlzLmFjdGl2ZVRhcmdldFxuICAgIHZhciBpXG5cbiAgICBpZiAodGhpcy5zY3JvbGxIZWlnaHQgIT0gc2Nyb2xsSGVpZ2h0KSB7XG4gICAgICB0aGlzLnJlZnJlc2goKVxuICAgIH1cblxuICAgIGlmIChzY3JvbGxUb3AgPj0gbWF4U2Nyb2xsKSB7XG4gICAgICByZXR1cm4gYWN0aXZlVGFyZ2V0ICE9IChpID0gdGFyZ2V0c1t0YXJnZXRzLmxlbmd0aCAtIDFdKSAmJiB0aGlzLmFjdGl2YXRlKGkpXG4gICAgfVxuXG4gICAgaWYgKGFjdGl2ZVRhcmdldCAmJiBzY3JvbGxUb3AgPCBvZmZzZXRzWzBdKSB7XG4gICAgICB0aGlzLmFjdGl2ZVRhcmdldCA9IG51bGxcbiAgICAgIHJldHVybiB0aGlzLmNsZWFyKClcbiAgICB9XG5cbiAgICBmb3IgKGkgPSBvZmZzZXRzLmxlbmd0aDsgaS0tOykge1xuICAgICAgYWN0aXZlVGFyZ2V0ICE9IHRhcmdldHNbaV1cbiAgICAgICAgJiYgc2Nyb2xsVG9wID49IG9mZnNldHNbaV1cbiAgICAgICAgJiYgKG9mZnNldHNbaSArIDFdID09PSB1bmRlZmluZWQgfHwgc2Nyb2xsVG9wIDwgb2Zmc2V0c1tpICsgMV0pXG4gICAgICAgICYmIHRoaXMuYWN0aXZhdGUodGFyZ2V0c1tpXSlcbiAgICB9XG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLmFjdGl2YXRlID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIHRoaXMuYWN0aXZlVGFyZ2V0ID0gdGFyZ2V0XG5cbiAgICB0aGlzLmNsZWFyKClcblxuICAgIHZhciBzZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IgK1xuICAgICAgJ1tkYXRhLXRhcmdldD1cIicgKyB0YXJnZXQgKyAnXCJdLCcgK1xuICAgICAgdGhpcy5zZWxlY3RvciArICdbaHJlZj1cIicgKyB0YXJnZXQgKyAnXCJdJ1xuXG4gICAgdmFyIGFjdGl2ZSA9ICQoc2VsZWN0b3IpXG4gICAgICAucGFyZW50cygnbGknKVxuICAgICAgLmFkZENsYXNzKCdhY3RpdmUnKVxuXG4gICAgaWYgKGFjdGl2ZS5wYXJlbnQoJy5kcm9wZG93bi1tZW51JykubGVuZ3RoKSB7XG4gICAgICBhY3RpdmUgPSBhY3RpdmVcbiAgICAgICAgLmNsb3Nlc3QoJ2xpLmRyb3Bkb3duJylcbiAgICAgICAgLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgIH1cblxuICAgIGFjdGl2ZS50cmlnZ2VyKCdhY3RpdmF0ZS5icy5zY3JvbGxzcHknKVxuICB9XG5cbiAgU2Nyb2xsU3B5LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAkKHRoaXMuc2VsZWN0b3IpXG4gICAgICAucGFyZW50c1VudGlsKHRoaXMub3B0aW9ucy50YXJnZXQsICcuYWN0aXZlJylcbiAgICAgIC5yZW1vdmVDbGFzcygnYWN0aXZlJylcbiAgfVxuXG5cbiAgLy8gU0NST0xMU1BZIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5zY3JvbGxzcHknKVxuICAgICAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvblxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLnNjcm9sbHNweScsIChkYXRhID0gbmV3IFNjcm9sbFNweSh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uc2Nyb2xsc3B5XG5cbiAgJC5mbi5zY3JvbGxzcHkgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5zY3JvbGxzcHkuQ29uc3RydWN0b3IgPSBTY3JvbGxTcHlcblxuXG4gIC8vIFNDUk9MTFNQWSBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLnNjcm9sbHNweS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uc2Nyb2xsc3B5ID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gU0NST0xMU1BZIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09PT09PVxuXG4gICQod2luZG93KS5vbignbG9hZC5icy5zY3JvbGxzcHkuZGF0YS1hcGknLCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnW2RhdGEtc3B5PVwic2Nyb2xsXCJdJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHNweSA9ICQodGhpcylcbiAgICAgIFBsdWdpbi5jYWxsKCRzcHksICRzcHkuZGF0YSgpKVxuICAgIH0pXG4gIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHRhYi5qcyB2My4zLjZcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI3RhYnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNSBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBUQUIgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBUYWIgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgIC8vIGpzY3M6ZGlzYWJsZSByZXF1aXJlRG9sbGFyQmVmb3JlalF1ZXJ5QXNzaWdubWVudFxuICAgIHRoaXMuZWxlbWVudCA9ICQoZWxlbWVudClcbiAgICAvLyBqc2NzOmVuYWJsZSByZXF1aXJlRG9sbGFyQmVmb3JlalF1ZXJ5QXNzaWdubWVudFxuICB9XG5cbiAgVGFiLlZFUlNJT04gPSAnMy4zLjYnXG5cbiAgVGFiLlRSQU5TSVRJT05fRFVSQVRJT04gPSAxNTBcblxuICBUYWIucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICR0aGlzICAgID0gdGhpcy5lbGVtZW50XG4gICAgdmFyICR1bCAgICAgID0gJHRoaXMuY2xvc2VzdCgndWw6bm90KC5kcm9wZG93bi1tZW51KScpXG4gICAgdmFyIHNlbGVjdG9yID0gJHRoaXMuZGF0YSgndGFyZ2V0JylcblxuICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgIHNlbGVjdG9yID0gJHRoaXMuYXR0cignaHJlZicpXG4gICAgICBzZWxlY3RvciA9IHNlbGVjdG9yICYmIHNlbGVjdG9yLnJlcGxhY2UoLy4qKD89I1teXFxzXSokKS8sICcnKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgfVxuXG4gICAgaWYgKCR0aGlzLnBhcmVudCgnbGknKS5oYXNDbGFzcygnYWN0aXZlJykpIHJldHVyblxuXG4gICAgdmFyICRwcmV2aW91cyA9ICR1bC5maW5kKCcuYWN0aXZlOmxhc3QgYScpXG4gICAgdmFyIGhpZGVFdmVudCA9ICQuRXZlbnQoJ2hpZGUuYnMudGFiJywge1xuICAgICAgcmVsYXRlZFRhcmdldDogJHRoaXNbMF1cbiAgICB9KVxuICAgIHZhciBzaG93RXZlbnQgPSAkLkV2ZW50KCdzaG93LmJzLnRhYicsIHtcbiAgICAgIHJlbGF0ZWRUYXJnZXQ6ICRwcmV2aW91c1swXVxuICAgIH0pXG5cbiAgICAkcHJldmlvdXMudHJpZ2dlcihoaWRlRXZlbnQpXG4gICAgJHRoaXMudHJpZ2dlcihzaG93RXZlbnQpXG5cbiAgICBpZiAoc2hvd0V2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpIHx8IGhpZGVFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICB2YXIgJHRhcmdldCA9ICQoc2VsZWN0b3IpXG5cbiAgICB0aGlzLmFjdGl2YXRlKCR0aGlzLmNsb3Nlc3QoJ2xpJyksICR1bClcbiAgICB0aGlzLmFjdGl2YXRlKCR0YXJnZXQsICR0YXJnZXQucGFyZW50KCksIGZ1bmN0aW9uICgpIHtcbiAgICAgICRwcmV2aW91cy50cmlnZ2VyKHtcbiAgICAgICAgdHlwZTogJ2hpZGRlbi5icy50YWInLFxuICAgICAgICByZWxhdGVkVGFyZ2V0OiAkdGhpc1swXVxuICAgICAgfSlcbiAgICAgICR0aGlzLnRyaWdnZXIoe1xuICAgICAgICB0eXBlOiAnc2hvd24uYnMudGFiJyxcbiAgICAgICAgcmVsYXRlZFRhcmdldDogJHByZXZpb3VzWzBdXG4gICAgICB9KVxuICAgIH0pXG4gIH1cblxuICBUYWIucHJvdG90eXBlLmFjdGl2YXRlID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNvbnRhaW5lciwgY2FsbGJhY2spIHtcbiAgICB2YXIgJGFjdGl2ZSAgICA9IGNvbnRhaW5lci5maW5kKCc+IC5hY3RpdmUnKVxuICAgIHZhciB0cmFuc2l0aW9uID0gY2FsbGJhY2tcbiAgICAgICYmICQuc3VwcG9ydC50cmFuc2l0aW9uXG4gICAgICAmJiAoJGFjdGl2ZS5sZW5ndGggJiYgJGFjdGl2ZS5oYXNDbGFzcygnZmFkZScpIHx8ICEhY29udGFpbmVyLmZpbmQoJz4gLmZhZGUnKS5sZW5ndGgpXG5cbiAgICBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgJGFjdGl2ZVxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgIC5maW5kKCc+IC5kcm9wZG93bi1tZW51ID4gLmFjdGl2ZScpXG4gICAgICAgICAgLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgICAuZW5kKClcbiAgICAgICAgLmZpbmQoJ1tkYXRhLXRvZ2dsZT1cInRhYlwiXScpXG4gICAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSlcblxuICAgICAgZWxlbWVudFxuICAgICAgICAuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgIC5maW5kKCdbZGF0YS10b2dnbGU9XCJ0YWJcIl0nKVxuICAgICAgICAgIC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgdHJ1ZSlcblxuICAgICAgaWYgKHRyYW5zaXRpb24pIHtcbiAgICAgICAgZWxlbWVudFswXS5vZmZzZXRXaWR0aCAvLyByZWZsb3cgZm9yIHRyYW5zaXRpb25cbiAgICAgICAgZWxlbWVudC5hZGRDbGFzcygnaW4nKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVDbGFzcygnZmFkZScpXG4gICAgICB9XG5cbiAgICAgIGlmIChlbGVtZW50LnBhcmVudCgnLmRyb3Bkb3duLW1lbnUnKS5sZW5ndGgpIHtcbiAgICAgICAgZWxlbWVudFxuICAgICAgICAgIC5jbG9zZXN0KCdsaS5kcm9wZG93bicpXG4gICAgICAgICAgICAuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICAgLmVuZCgpXG4gICAgICAgICAgLmZpbmQoJ1tkYXRhLXRvZ2dsZT1cInRhYlwiXScpXG4gICAgICAgICAgICAuYXR0cignYXJpYS1leHBhbmRlZCcsIHRydWUpXG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKClcbiAgICB9XG5cbiAgICAkYWN0aXZlLmxlbmd0aCAmJiB0cmFuc2l0aW9uID9cbiAgICAgICRhY3RpdmVcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgbmV4dClcbiAgICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKFRhYi5UUkFOU0lUSU9OX0RVUkFUSU9OKSA6XG4gICAgICBuZXh0KClcblxuICAgICRhY3RpdmUucmVtb3ZlQ2xhc3MoJ2luJylcbiAgfVxuXG5cbiAgLy8gVEFCIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICA9ICR0aGlzLmRhdGEoJ2JzLnRhYicpXG5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMudGFiJywgKGRhdGEgPSBuZXcgVGFiKHRoaXMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0oKVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi50YWJcblxuICAkLmZuLnRhYiAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLnRhYi5Db25zdHJ1Y3RvciA9IFRhYlxuXG5cbiAgLy8gVEFCIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PVxuXG4gICQuZm4udGFiLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi50YWIgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBUQUIgREFUQS1BUElcbiAgLy8gPT09PT09PT09PT09XG5cbiAgdmFyIGNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgUGx1Z2luLmNhbGwoJCh0aGlzKSwgJ3Nob3cnKVxuICB9XG5cbiAgJChkb2N1bWVudClcbiAgICAub24oJ2NsaWNrLmJzLnRhYi5kYXRhLWFwaScsICdbZGF0YS10b2dnbGU9XCJ0YWJcIl0nLCBjbGlja0hhbmRsZXIpXG4gICAgLm9uKCdjbGljay5icy50YWIuZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlPVwicGlsbFwiXScsIGNsaWNrSGFuZGxlcilcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogYWZmaXguanMgdjMuMy42XG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNhZmZpeFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE1IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIEFGRklYIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBBZmZpeCA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIEFmZml4LkRFRkFVTFRTLCBvcHRpb25zKVxuXG4gICAgdGhpcy4kdGFyZ2V0ID0gJCh0aGlzLm9wdGlvbnMudGFyZ2V0KVxuICAgICAgLm9uKCdzY3JvbGwuYnMuYWZmaXguZGF0YS1hcGknLCAkLnByb3h5KHRoaXMuY2hlY2tQb3NpdGlvbiwgdGhpcykpXG4gICAgICAub24oJ2NsaWNrLmJzLmFmZml4LmRhdGEtYXBpJywgICQucHJveHkodGhpcy5jaGVja1Bvc2l0aW9uV2l0aEV2ZW50TG9vcCwgdGhpcykpXG5cbiAgICB0aGlzLiRlbGVtZW50ICAgICA9ICQoZWxlbWVudClcbiAgICB0aGlzLmFmZml4ZWQgICAgICA9IG51bGxcbiAgICB0aGlzLnVucGluICAgICAgICA9IG51bGxcbiAgICB0aGlzLnBpbm5lZE9mZnNldCA9IG51bGxcblxuICAgIHRoaXMuY2hlY2tQb3NpdGlvbigpXG4gIH1cblxuICBBZmZpeC5WRVJTSU9OICA9ICczLjMuNidcblxuICBBZmZpeC5SRVNFVCAgICA9ICdhZmZpeCBhZmZpeC10b3AgYWZmaXgtYm90dG9tJ1xuXG4gIEFmZml4LkRFRkFVTFRTID0ge1xuICAgIG9mZnNldDogMCxcbiAgICB0YXJnZXQ6IHdpbmRvd1xuICB9XG5cbiAgQWZmaXgucHJvdG90eXBlLmdldFN0YXRlID0gZnVuY3Rpb24gKHNjcm9sbEhlaWdodCwgaGVpZ2h0LCBvZmZzZXRUb3AsIG9mZnNldEJvdHRvbSkge1xuICAgIHZhciBzY3JvbGxUb3AgICAgPSB0aGlzLiR0YXJnZXQuc2Nyb2xsVG9wKClcbiAgICB2YXIgcG9zaXRpb24gICAgID0gdGhpcy4kZWxlbWVudC5vZmZzZXQoKVxuICAgIHZhciB0YXJnZXRIZWlnaHQgPSB0aGlzLiR0YXJnZXQuaGVpZ2h0KClcblxuICAgIGlmIChvZmZzZXRUb3AgIT0gbnVsbCAmJiB0aGlzLmFmZml4ZWQgPT0gJ3RvcCcpIHJldHVybiBzY3JvbGxUb3AgPCBvZmZzZXRUb3AgPyAndG9wJyA6IGZhbHNlXG5cbiAgICBpZiAodGhpcy5hZmZpeGVkID09ICdib3R0b20nKSB7XG4gICAgICBpZiAob2Zmc2V0VG9wICE9IG51bGwpIHJldHVybiAoc2Nyb2xsVG9wICsgdGhpcy51bnBpbiA8PSBwb3NpdGlvbi50b3ApID8gZmFsc2UgOiAnYm90dG9tJ1xuICAgICAgcmV0dXJuIChzY3JvbGxUb3AgKyB0YXJnZXRIZWlnaHQgPD0gc2Nyb2xsSGVpZ2h0IC0gb2Zmc2V0Qm90dG9tKSA/IGZhbHNlIDogJ2JvdHRvbSdcbiAgICB9XG5cbiAgICB2YXIgaW5pdGlhbGl6aW5nICAgPSB0aGlzLmFmZml4ZWQgPT0gbnVsbFxuICAgIHZhciBjb2xsaWRlclRvcCAgICA9IGluaXRpYWxpemluZyA/IHNjcm9sbFRvcCA6IHBvc2l0aW9uLnRvcFxuICAgIHZhciBjb2xsaWRlckhlaWdodCA9IGluaXRpYWxpemluZyA/IHRhcmdldEhlaWdodCA6IGhlaWdodFxuXG4gICAgaWYgKG9mZnNldFRvcCAhPSBudWxsICYmIHNjcm9sbFRvcCA8PSBvZmZzZXRUb3ApIHJldHVybiAndG9wJ1xuICAgIGlmIChvZmZzZXRCb3R0b20gIT0gbnVsbCAmJiAoY29sbGlkZXJUb3AgKyBjb2xsaWRlckhlaWdodCA+PSBzY3JvbGxIZWlnaHQgLSBvZmZzZXRCb3R0b20pKSByZXR1cm4gJ2JvdHRvbSdcblxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgQWZmaXgucHJvdG90eXBlLmdldFBpbm5lZE9mZnNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5waW5uZWRPZmZzZXQpIHJldHVybiB0aGlzLnBpbm5lZE9mZnNldFxuICAgIHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3MoQWZmaXguUkVTRVQpLmFkZENsYXNzKCdhZmZpeCcpXG4gICAgdmFyIHNjcm9sbFRvcCA9IHRoaXMuJHRhcmdldC5zY3JvbGxUb3AoKVxuICAgIHZhciBwb3NpdGlvbiAgPSB0aGlzLiRlbGVtZW50Lm9mZnNldCgpXG4gICAgcmV0dXJuICh0aGlzLnBpbm5lZE9mZnNldCA9IHBvc2l0aW9uLnRvcCAtIHNjcm9sbFRvcClcbiAgfVxuXG4gIEFmZml4LnByb3RvdHlwZS5jaGVja1Bvc2l0aW9uV2l0aEV2ZW50TG9vcCA9IGZ1bmN0aW9uICgpIHtcbiAgICBzZXRUaW1lb3V0KCQucHJveHkodGhpcy5jaGVja1Bvc2l0aW9uLCB0aGlzKSwgMSlcbiAgfVxuXG4gIEFmZml4LnByb3RvdHlwZS5jaGVja1Bvc2l0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICghdGhpcy4kZWxlbWVudC5pcygnOnZpc2libGUnKSkgcmV0dXJuXG5cbiAgICB2YXIgaGVpZ2h0ICAgICAgID0gdGhpcy4kZWxlbWVudC5oZWlnaHQoKVxuICAgIHZhciBvZmZzZXQgICAgICAgPSB0aGlzLm9wdGlvbnMub2Zmc2V0XG4gICAgdmFyIG9mZnNldFRvcCAgICA9IG9mZnNldC50b3BcbiAgICB2YXIgb2Zmc2V0Qm90dG9tID0gb2Zmc2V0LmJvdHRvbVxuICAgIHZhciBzY3JvbGxIZWlnaHQgPSBNYXRoLm1heCgkKGRvY3VtZW50KS5oZWlnaHQoKSwgJChkb2N1bWVudC5ib2R5KS5oZWlnaHQoKSlcblxuICAgIGlmICh0eXBlb2Ygb2Zmc2V0ICE9ICdvYmplY3QnKSAgICAgICAgIG9mZnNldEJvdHRvbSA9IG9mZnNldFRvcCA9IG9mZnNldFxuICAgIGlmICh0eXBlb2Ygb2Zmc2V0VG9wID09ICdmdW5jdGlvbicpICAgIG9mZnNldFRvcCAgICA9IG9mZnNldC50b3AodGhpcy4kZWxlbWVudClcbiAgICBpZiAodHlwZW9mIG9mZnNldEJvdHRvbSA9PSAnZnVuY3Rpb24nKSBvZmZzZXRCb3R0b20gPSBvZmZzZXQuYm90dG9tKHRoaXMuJGVsZW1lbnQpXG5cbiAgICB2YXIgYWZmaXggPSB0aGlzLmdldFN0YXRlKHNjcm9sbEhlaWdodCwgaGVpZ2h0LCBvZmZzZXRUb3AsIG9mZnNldEJvdHRvbSlcblxuICAgIGlmICh0aGlzLmFmZml4ZWQgIT0gYWZmaXgpIHtcbiAgICAgIGlmICh0aGlzLnVucGluICE9IG51bGwpIHRoaXMuJGVsZW1lbnQuY3NzKCd0b3AnLCAnJylcblxuICAgICAgdmFyIGFmZml4VHlwZSA9ICdhZmZpeCcgKyAoYWZmaXggPyAnLScgKyBhZmZpeCA6ICcnKVxuICAgICAgdmFyIGUgICAgICAgICA9ICQuRXZlbnQoYWZmaXhUeXBlICsgJy5icy5hZmZpeCcpXG5cbiAgICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihlKVxuXG4gICAgICBpZiAoZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICAgIHRoaXMuYWZmaXhlZCA9IGFmZml4XG4gICAgICB0aGlzLnVucGluID0gYWZmaXggPT0gJ2JvdHRvbScgPyB0aGlzLmdldFBpbm5lZE9mZnNldCgpIDogbnVsbFxuXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5yZW1vdmVDbGFzcyhBZmZpeC5SRVNFVClcbiAgICAgICAgLmFkZENsYXNzKGFmZml4VHlwZSlcbiAgICAgICAgLnRyaWdnZXIoYWZmaXhUeXBlLnJlcGxhY2UoJ2FmZml4JywgJ2FmZml4ZWQnKSArICcuYnMuYWZmaXgnKVxuICAgIH1cblxuICAgIGlmIChhZmZpeCA9PSAnYm90dG9tJykge1xuICAgICAgdGhpcy4kZWxlbWVudC5vZmZzZXQoe1xuICAgICAgICB0b3A6IHNjcm9sbEhlaWdodCAtIGhlaWdodCAtIG9mZnNldEJvdHRvbVxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuXG4gIC8vIEFGRklYIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzICAgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgICA9ICR0aGlzLmRhdGEoJ2JzLmFmZml4JylcbiAgICAgIHZhciBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb25cblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5hZmZpeCcsIChkYXRhID0gbmV3IEFmZml4KHRoaXMsIG9wdGlvbnMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0oKVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi5hZmZpeFxuXG4gICQuZm4uYWZmaXggICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5hZmZpeC5Db25zdHJ1Y3RvciA9IEFmZml4XG5cblxuICAvLyBBRkZJWCBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PVxuXG4gICQuZm4uYWZmaXgubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmFmZml4ID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gQUZGSVggREFUQS1BUElcbiAgLy8gPT09PT09PT09PT09PT1cblxuICAkKHdpbmRvdykub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnW2RhdGEtc3B5PVwiYWZmaXhcIl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkc3B5ID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgPSAkc3B5LmRhdGEoKVxuXG4gICAgICBkYXRhLm9mZnNldCA9IGRhdGEub2Zmc2V0IHx8IHt9XG5cbiAgICAgIGlmIChkYXRhLm9mZnNldEJvdHRvbSAhPSBudWxsKSBkYXRhLm9mZnNldC5ib3R0b20gPSBkYXRhLm9mZnNldEJvdHRvbVxuICAgICAgaWYgKGRhdGEub2Zmc2V0VG9wICAgICE9IG51bGwpIGRhdGEub2Zmc2V0LnRvcCAgICA9IGRhdGEub2Zmc2V0VG9wXG5cbiAgICAgIFBsdWdpbi5jYWxsKCRzcHksIGRhdGEpXG4gICAgfSlcbiAgfSlcblxufShqUXVlcnkpO1xuIiwiLy8gVGhpcyBmaWxlIGlzIGF1dG9nZW5lcmF0ZWQgdmlhIHRoZSBgY29tbW9uanNgIEdydW50IHRhc2suIFlvdSBjYW4gcmVxdWlyZSgpIHRoaXMgZmlsZSBpbiBhIENvbW1vbkpTIGVudmlyb25tZW50LlxucmVxdWlyZSgnLi4vLi4vanMvdHJhbnNpdGlvbi5qcycpXG5yZXF1aXJlKCcuLi8uLi9qcy9hbGVydC5qcycpXG5yZXF1aXJlKCcuLi8uLi9qcy9idXR0b24uanMnKVxucmVxdWlyZSgnLi4vLi4vanMvY2Fyb3VzZWwuanMnKVxucmVxdWlyZSgnLi4vLi4vanMvY29sbGFwc2UuanMnKVxucmVxdWlyZSgnLi4vLi4vanMvZHJvcGRvd24uanMnKVxucmVxdWlyZSgnLi4vLi4vanMvbW9kYWwuanMnKVxucmVxdWlyZSgnLi4vLi4vanMvdG9vbHRpcC5qcycpXG5yZXF1aXJlKCcuLi8uLi9qcy9wb3BvdmVyLmpzJylcbnJlcXVpcmUoJy4uLy4uL2pzL3Njcm9sbHNweS5qcycpXG5yZXF1aXJlKCcuLi8uLi9qcy90YWIuanMnKVxucmVxdWlyZSgnLi4vLi4vanMvYWZmaXguanMnKSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
